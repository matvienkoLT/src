<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="nalt_8hpp" kind="file" language="C++">
    <compoundname>nalt.hpp</compoundname>
    <includes refid="ida_8hpp" local="no">ida.hpp</includes>
    <includes refid="netnode_8hpp" local="no">netnode.hpp</includes>
    <includedby refid="offset_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/offset.hpp</includedby>
    <includedby refid="jumptable_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp</includedby>
    <includedby refid="fixup_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp</includedby>
    <includedby refid="idp_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/idp.hpp</includedby>
    <includedby refid="enum_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/enum.hpp</includedby>
    <includedby refid="bytes_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/bytes.hpp</includedby>
    <incdepgraph>
      <node id="1022">
        <label>sys/stat.h</label>
      </node>
      <node id="1006">
        <label>stdarg.h</label>
      </node>
      <node id="1009">
        <label>assert.h</label>
      </node>
      <node id="1003">
        <label>ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="1004" relation="include">
        </childnode>
        <childnode refid="1024" relation="include">
        </childnode>
      </node>
      <node id="1005">
        <label>stdlib.h</label>
      </node>
      <node id="1017">
        <label>io.h</label>
      </node>
      <node id="1020">
        <label>fcntl.h</label>
      </node>
      <node id="1023">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="1015">
        <label>malloc.h</label>
      </node>
      <node id="1014">
        <label>string</label>
      </node>
      <node id="1019">
        <label>map</label>
      </node>
      <node id="1018">
        <label>direct.h</label>
      </node>
      <node id="1007">
        <label>stddef.h</label>
      </node>
      <node id="1002">
        <label>obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="1003" relation="include">
        </childnode>
        <childnode refid="1025" relation="include">
        </childnode>
      </node>
      <node id="1010">
        <label>limits.h</label>
      </node>
      <node id="1021">
        <label>sys/types.h</label>
      </node>
      <node id="1016">
        <label>string.h</label>
      </node>
      <node id="1013">
        <label>new</label>
      </node>
      <node id="1004">
        <label>pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
        <childnode refid="1011" relation="include">
        </childnode>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
      </node>
      <node id="1012">
        <label>time.h</label>
      </node>
      <node id="1011">
        <label>ctype.h</label>
      </node>
      <node id="1024">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
      </node>
      <node id="1025">
        <label>netnode.hpp</label>
        <link refid="netnode_8hpp"/>
        <childnode refid="1024" relation="include">
        </childnode>
      </node>
      <node id="1008">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1036">
        <label>obj/x64_linux_gcc_32_opt/idasdk/intel.hpp</label>
        <link refid="intel_8hpp_source"/>
      </node>
      <node id="1044">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ua.hpp</label>
        <link refid="ua_8hpp"/>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
      </node>
      <node id="1041">
        <label>obj/x64_linux_gcc_32_opt/idasdk/enum.hpp</label>
        <link refid="enum_8hpp"/>
      </node>
      <node id="1039">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ida_highlighter.hpp</label>
        <link refid="ida__highlighter_8hpp_source"/>
      </node>
      <node id="1045">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idd.hpp</label>
        <link refid="idd_8hpp"/>
        <childnode refid="1031" relation="include">
        </childnode>
      </node>
      <node id="1030">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1032" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1031">
        <label>obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp</label>
        <link refid="dbg_8hpp"/>
      </node>
      <node id="1028">
        <label>obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp</label>
        <link refid="jumptable_8hpp_source"/>
      </node>
      <node id="1043">
        <label>obj/x64_linux_gcc_32_opt/idasdk/struct.hpp</label>
        <link refid="struct_8hpp"/>
      </node>
      <node id="1026">
        <label>obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="1027" relation="include">
        </childnode>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1029" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
      </node>
      <node id="1037">
        <label>obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</label>
        <link refid="graph_8hpp"/>
      </node>
      <node id="1047">
        <label>obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp</label>
        <link refid="gdl_8hpp"/>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
      </node>
      <node id="1040">
        <label>obj/x64_linux_gcc_32_opt/idasdk/tstfeat.hpp</label>
        <link refid="tstfeat_8hpp_source"/>
      </node>
      <node id="1046">
        <label>obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp</label>
        <link refid="funcs_8hpp"/>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
      </node>
      <node id="1038">
        <label>obj/x64_linux_gcc_32_opt/idasdk/expr.hpp</label>
        <link refid="expr_8hpp"/>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
      </node>
      <node id="1029">
        <label>obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp</label>
        <link refid="fixup_8hpp"/>
      </node>
      <node id="1032">
        <label>obj/x64_linux_gcc_32_opt/idasdk/frame.hpp</label>
        <link refid="frame_8hpp"/>
      </node>
      <node id="1042">
        <label>obj/x64_linux_gcc_32_opt/idasdk/bytes.hpp</label>
        <link refid="bytes_8hpp"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
      </node>
      <node id="1027">
        <label>obj/x64_linux_gcc_32_opt/idasdk/offset.hpp</label>
        <link refid="offset_8hpp"/>
      </node>
      <node id="1033">
        <label>obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp</label>
        <link refid="typeinf_8hpp"/>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
      </node>
      <node id="1035">
        <label>obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</label>
        <link refid="hexrays_8hpp_source"/>
      </node>
      <node id="1034">
        <label>obj/x64_linux_gcc_32_opt/idasdk/lumina.hpp</label>
        <link refid="lumina_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structxrefpos__t" prot="public">xrefpos_t</innerclass>
    <innerclass refid="structarray__parameters__t" prot="public">array_parameters_t</innerclass>
    <innerclass refid="structswitch__info__t" prot="public">switch_info_t</innerclass>
    <innerclass refid="structcustom__data__type__ids__t" prot="public">custom_data_type_ids_t</innerclass>
    <innerclass refid="structrefinfo__t" prot="public">refinfo_t</innerclass>
    <innerclass refid="structcustom__refinfo__handler__t" prot="public">custom_refinfo_handler_t</innerclass>
    <innerclass refid="structrefinfo__desc__t" prot="public">refinfo_desc_t</innerclass>
    <innerclass refid="structstrpath__t" prot="public">strpath_t</innerclass>
    <innerclass refid="structenum__const__t" prot="public">enum_const_t</innerclass>
    <innerclass refid="unionopinfo__t" prot="public">opinfo_t</innerclass>
    <innerclass refid="structprintop__t" prot="public">printop_t</innerclass>
      <sectiondef kind="user-defined">
      <header>Get structure ID</header>
      <description><para>Returns the struct id of the struct type at the specified address. Use this function when <ref refid="group___f_f__datafuncs1_1ga76ba97b115e2a491d4e25ebe9911e506" kindref="member">is_struct()</ref>==true </para></description>
      <memberdef kind="function" id="nalt_8hpp_1a6738a6a74c11f4d720dcd45b36af1de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" kindref="member">tid_t</ref> ida_export</type>
        <definition>idaman tid_t ida_export get_strid</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_strid</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="189" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>xrefpos</header>
      <memberdef kind="function" id="nalt_8hpp_1a4563a34b98b26379f4996cb219cc6f5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman ssize_t ida_export get_xrefpos</definition>
        <argsstring>(xrefpos_t *out, ea_t ea)</argsstring>
        <name>get_xrefpos</name>
        <param>
          <type><ref refid="structxrefpos__t" kindref="compound">xrefpos_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a301b0f724a088e56319d2eb4f149fc83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_xrefpos</definition>
        <argsstring>(ea_t ea, const xrefpos_t *in)</argsstring>
        <name>set_xrefpos</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>const <ref refid="structxrefpos__t" kindref="compound">xrefpos_t</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ac9d7c60384acd942a5be6a7b18b516e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi del_xrefpos</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_xrefpos</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="207" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="207" bodyend="207"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Work with additional location flags</header>
      <description><para>See <ref refid="group___a_f_l__" kindref="compound">Additional flags for the location</ref> </para></description>
      <memberdef kind="function" id="nalt_8hpp_1aa8d46aba7721287ea4d1a5f11e6251a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_aflags0</definition>
        <argsstring>(ea_t ea, uint32 flags)</argsstring>
        <name>set_aflags0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="263" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a0131c3a13fca9e9edf93a510eb81204a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 get_aflags0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_aflags0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="264" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a3741041b718fb1a8c9bfa9f201889747" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void del_aflags0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_aflags0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="265" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2d88d7e21e298119c7052903d06c4653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_aflags</definition>
        <argsstring>(ea_t ea, uint32 flags)</argsstring>
        <name>set_aflags</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a8bdf7d87857920bc6b8012e239404a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_abits</definition>
        <argsstring>(ea_t ea, uint32 bits)</argsstring>
        <name>set_abits</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ac6b79eafb145b8327b91bb3a3772b0c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export clr_abits</definition>
        <argsstring>(ea_t ea, uint32 bits)</argsstring>
        <name>clr_abits</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1adcb45ff871b0f9d4385be4bf13a185ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> ida_export</type>
        <definition>idaman uint32 ida_export get_aflags</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_aflags</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa497f92c36254eae1de45c9cfb0734f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export del_aflags</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_aflags</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a3bbc492b3649e8f7f65ffbdb0e2545fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_hidden_item</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_hidden_item</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="272" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="272" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a481fad48a8c0d2cc34cbce1fe46a3dac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hide_item</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>hide_item</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="273" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a61a13ed8319a1ff1861cc0b59093bc6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void unhide_item</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>unhide_item</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="274" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="274" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a499918aee4b072412f8556ffee8b45d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_hidden_border</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_hidden_border</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="276" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="276" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a43f809baacf9b36fc98a7608cb6d3875" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hide_border</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>hide_border</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="277" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1acdc0cc01ac89eacd8e0d5ca695131f30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void unhide_border</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>unhide_border</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="278" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="278" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a08de1e931fdea25048284f3577b7f6cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool uses_modsp</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>uses_modsp</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="280" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="280" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a23830c31605c4945a7d644de9936c1f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_usemodsp</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_usemodsp</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="281" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7e910e05eaf9d821ee8452b137510806" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_usemodsp</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_usemodsp</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="282" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="282" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a87248896d0d39e9c8d0a160d4841c8d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_zstroff</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_zstroff</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="284" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="284" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa2041c2d1f7605e7cc9bea3df47baf14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_zstroff</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_zstroff</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="285" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1af488f988bf9d9d6f67c2e24fed8f6b6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_zstroff</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_zstroff</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="286" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2112b5f6588dc1853f5694899cfaa190" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is__bnot0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is__bnot0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="288" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2f98de0f0f6395064df75c7651ef81e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set__bnot0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set__bnot0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="289" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a79302c9359030bdb74cc18306f3d501b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr__bnot0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr__bnot0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="290" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="290" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1afcbfe1a3daa2a7aa400210200f346f7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is__bnot1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is__bnot1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="292" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="292" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ac618b84b4f2613912ab18ae2ce559f91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set__bnot1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set__bnot1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="293" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="293" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a22ef45852f3c572278d376eebe6650f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr__bnot1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr__bnot1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="294" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a1dcabf4cf5868dae47b016a7bc4da0cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_libitem</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_libitem</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="296" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a3ee0ec3ddbdd556a0e74b30efce4b625" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_libitem</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_libitem</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="297" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a06032c20bffe5c5ffb31a69aead4360b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_libitem</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_libitem</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="298" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a5513e2013e47ce7f60637042c749b052" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_ti</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>has_ti</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="300" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="300" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a68a3c96f776594e1ffe425f03545f1ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_has_ti</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_has_ti</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="301" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a3953e82ebf22b9a7b333f009839e0302" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_has_ti</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_has_ti</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="302" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="302" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a53d6d8bb54ce96607306baaaa201480b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_ti0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>has_ti0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="304" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="304" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a162d7e8666a977769fc38c98b767aac6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_has_ti0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_has_ti0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="305" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a5dd9f0490ec5a029f0b08e8870a783dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_has_ti0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_has_ti0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="306" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ad753be74a7b8b76ecc9bbe5f40170419" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_ti1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>has_ti1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="308" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="308" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7f024b705f5ea26f01d188641def2072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_has_ti1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_has_ti1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="309" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="309" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7a1d2ad51c4dd955deb6b7abc2bbe567" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_has_ti1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_has_ti1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="310" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a54f855855b113304aa39f18dcad30a96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_lname</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>has_lname</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="312" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="312" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a0ba01f1b1fd756ab07e204c22c749bfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_has_lname</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_has_lname</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="313" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="313" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a883e21fe4855a272d70f0484a9dc5704" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_has_lname</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_has_lname</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="314" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="314" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2906caa19fc507aea9152163365ccc74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_tilcmt</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_tilcmt</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="316" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="316" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ab1f505d32e4f07f7dfe9e6b92dee15f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_tilcmt</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_tilcmt</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="317" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="317" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a1054247f953f294ec68a4f7b85003107" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_tilcmt</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_tilcmt</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="318" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a4c6f51bec23a8aa73d9c059bf29ef774" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_usersp</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_usersp</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="320" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2e6732d4bf83be2742c1700f9ebb1f62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_usersp</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_usersp</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="321" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="321" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a8eff5e57be08accd448adc5e5c3e17e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_usersp</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_usersp</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="322" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a6932a1c8750249a7ccbc2599c5c63ffc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_lzero0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_lzero0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="324" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="324" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a71f45156126cd31a48e38d5bced28b42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_lzero0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_lzero0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="325" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a87232a2b46b34c1fc00bced9e37de515" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_lzero0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_lzero0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="326" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="326" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1affa798b5e374fd5dd11effda34561260" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_lzero1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_lzero1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="328" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="328" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a71cdbb2716ed651eb38aa03644e06305" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_lzero1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_lzero1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="329" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="329" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a9ecf36231e23f6f385785de5b184a6e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_lzero1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_lzero1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="330" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="330" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa91997aa1119cd814bce8ceb66c13d96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_colored_item</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_colored_item</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="332" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="332" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1abe07cbedaa1edbb8928134ab6ff348b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_colored_item</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_colored_item</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="333" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="333" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a25e805a9b062c6c710c44411cc3ca9a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_colored_item</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_colored_item</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="334" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="334" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a6972ce806d9d2cacb00f0a6781ed5f07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_terse_struc</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_terse_struc</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="336" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1afb8ba500b5efefd45e4bbe6fe147089e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_terse_struc</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_terse_struc</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="337" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="337" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7a97f8dc10dd667bb64788de8bb2d3a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_terse_struc</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_terse_struc</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="338" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="338" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a857f2a82555271ca0353d8435be364c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is__invsign0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is__invsign0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="340" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="340" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a25e15356f7ac4f116ddcdee6949369ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set__invsign0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set__invsign0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="341" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="341" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aab2a549fe184a8b49ac72244a9048677" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr__invsign0</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr__invsign0</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="342" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="342" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a111130fa0ca243e51d7340c2a1243d70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is__invsign1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is__invsign1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="344" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="344" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a49562093b0870b9a48f3cd8445d45d1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set__invsign1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set__invsign1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="345" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="345" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1adbc62b422ac2dfa34fcf3e24c159c971" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr__invsign1</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr__invsign1</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="346" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="346" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a9ff2cbd9a8de1f153f61f51c0d01bda5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_noret</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_noret</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="348" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="348" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2000b1b7c32178b7af0aba62f8de78e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_noret</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_noret</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="349" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="349" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a6713f3344ee2a298995994b8c8c21afc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_noret</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_noret</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="350" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="350" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a9bb79e82e2a16d507284b7b317ba1886" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_fixed_spd</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_fixed_spd</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="352" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="352" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ae79957d2c2b354e995ee528351b714ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_fixed_spd</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_fixed_spd</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="353" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="353" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a9b35153ac5a1b8b533aa4c315f26ff5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_fixed_spd</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_fixed_spd</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="354" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="354" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa6572b25035d6b83583d622e12553c90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_align_flow</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_align_flow</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="356" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="356" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a58ddc40589489dc2a4f373e0222c32b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_align_flow</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_align_flow</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="357" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="357" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ad4a1b7ddfdaa5647363880cb581be42f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_align_flow</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_align_flow</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="358" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="358" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a3395fdc7f8472240b92f09480d7fb1ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_userti</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_userti</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="360" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="360" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1acbec276bcc95a6e062c7ad62471bd0d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_userti</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_userti</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="361" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="361" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aacbd8932b167c195db61476ba6c9d1f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_userti</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_userti</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="362" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa2664e631185412378c61c3c80badc3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_retfp</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_retfp</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="364" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="364" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2246c6088a90b113e1f4ebea42366d45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_retfp</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_retfp</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="365" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="365" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a9d2221ba6bb7a653a9de9b450f2ba3c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_retfp</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_retfp</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="366" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="366" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1abc833b5f517bea849848bad81f5c143f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_notproc</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_notproc</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="368" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="368" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a791ea6a45d6f9efafee9fec4e4f2c526" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_notproc</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_notproc</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="369" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a43405c386371b7ed687ec2bcc1272a0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_notproc</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_notproc</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="370" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="370" bodyend="370"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Source line numbers</header>
      <description><para>They are sometimes present in object files. </para></description>
      <memberdef kind="function" id="nalt_8hpp_1ae6a5e6924b4420570ad3e8568be9e3e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_source_linnum</definition>
        <argsstring>(ea_t ea, uval_t lnnum)</argsstring>
        <name>set_source_linnum</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>lnnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a3b1b46d98d5b93ed459055aaf10fe017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref> ida_export</type>
        <definition>idaman uval_t ida_export get_source_linnum</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_source_linnum</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ab2178323cc34724e0785f71564f85509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export del_source_linnum</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_source_linnum</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="410" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Absolute segment base address</header>
      <description><para>These functions may be used if necessary. </para></description>
      <memberdef kind="function" id="nalt_8hpp_1a421bbbdcdcc759b47047a74a2c02bc1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t get_absbase</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_absbase</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="416" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="416" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a8a41276555f5b5ab44f7c8ede54c04fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_absbase</definition>
        <argsstring>(ea_t ea, ea_t x)</argsstring>
        <name>set_absbase</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="421" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="421" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ab1586568efa85f98b161197aa9e89723" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void del_absbase</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_absbase</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="426" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="426" bodyend="426"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Purged bytes</header>
      <description><para>Number of bytes purged from the stack when a function is called indirectly get_ind_purged() may be used if necessary. Use <ref refid="frame_8hpp_1a7d7b4155b3c9bb4143f43a1905f62e26" kindref="member">set_purged()</ref> to modify this value (do not use set_ind_purged()) </para></description>
      <memberdef kind="function" id="nalt_8hpp_1a3073f2591b7ac21ff9bd3894b79eab40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t get_ind_purged</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_ind_purged</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="434" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="434" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a53f87b313fe1ef538af9857d5d2e97a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_ind_purged</definition>
        <argsstring>(ea_t ea, ea_t x)</argsstring>
        <name>set_ind_purged</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="439" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="439" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aff2f7c862e075901e2d291ab0ce6cb5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void del_ind_purged</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_ind_purged</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="444" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="444" bodyend="444"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Get type of string</header>
      <description><para>Use higher level function <ref refid="bytes_8hpp_1ac224c2a7cbae88d541f81c7f46ef3a7d" kindref="member">get_opinfo()</ref>. </para></description>
      <memberdef kind="function" id="nalt_8hpp_1af36c5b2538043eaf6d50608361b60817" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 get_str_type</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_str_type</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="450" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="450" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a88b016a52ced61b2575a5c5e2eb158e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_str_type</definition>
        <argsstring>(ea_t ea, uint32 x)</argsstring>
        <name>set_str_type</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="455" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="455" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ac2a76776d0115efbde2628ba02d541d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void del_str_type</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_str_type</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="460" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="460" bodyend="460"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Work with string type codes</header>
      <description><para>See <ref refid="group___s_t_r_t_y_p_e__" kindref="compound">String type codes</ref> </para></description>
      <memberdef kind="function" id="nalt_8hpp_1a7420ec33431457389a7ca1a19b53ffa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> idaapi</type>
        <definition>THREAD_SAFE uchar idaapi get_str_type_code</definition>
        <argsstring>(int32 strtype)</argsstring>
        <name>get_str_type_code</name>
        <param>
          <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
          <declname>strtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="511" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="511" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1acd6754b0ae46a929e0fbea3c2cdbbf5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char</type>
        <definition>THREAD_SAFE char get_str_term1</definition>
        <argsstring>(int32 strtype)</argsstring>
        <name>get_str_term1</name>
        <param>
          <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
          <declname>strtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="512" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="512" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aeead615534398e82f6287aad6bdec79c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char</type>
        <definition>THREAD_SAFE char get_str_term2</definition>
        <argsstring>(int32 strtype)</argsstring>
        <name>get_str_term2</name>
        <param>
          <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
          <declname>strtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="513" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="513" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1acca1effb04b41c6dca8f1e25adddddbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> idaapi</type>
        <definition>THREAD_SAFE uchar idaapi get_str_encoding_idx</definition>
        <argsstring>(int32 strtype)</argsstring>
        <name>get_str_encoding_idx</name>
        <param>
          <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
          <declname>strtype</declname>
        </param>
        <briefdescription>
<para>Get index of the string encoding for this string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="517" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="517" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ad31642bb5e06e7e632f7cd4a96cb0667" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_pascal</definition>
        <argsstring>(int32 strtype)</argsstring>
        <name>is_pascal</name>
        <param>
          <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
          <declname>strtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="519" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="519" bodyend="523"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Alignment value</header>
      <description><para>(should be power of 2) These functions may be used if necessary. </para></description>
      <memberdef kind="function" id="nalt_8hpp_1a2f903645e30aaf2407391a5e03be4681" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 get_alignment</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_alignment</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="533" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="533" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a37a75d5a89c30bd46923c02835b88532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_alignment</definition>
        <argsstring>(ea_t ea, uint32 x)</argsstring>
        <name>set_alignment</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="538" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="538" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7560bb4196faafd72c6ab61a353d2608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void del_alignment</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_alignment</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="543" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="543" bodyend="543"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Instruction/Data background color</header>
      <memberdef kind="function" id="nalt_8hpp_1aff388c7a4fcee26ee6fec936d84e32f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_item_color</definition>
        <argsstring>(ea_t ea, bgcolor_t color)</argsstring>
        <name>set_item_color</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a3df5040891132e50157aee66affdf1de" kindref="member">bgcolor_t</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="549" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a8430fbc1d2e536486afc45dcf412a0ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1a3df5040891132e50157aee66affdf1de" kindref="member">bgcolor_t</ref> ida_export</type>
        <definition>idaman bgcolor_t ida_export get_item_color</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_item_color</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa5bcbcb6fb43decf4cdfac5e371f84b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export del_item_color</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_item_color</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="551" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Array representation</header>
      <memberdef kind="function" id="nalt_8hpp_1ae1763679519ad5db92c3f78f0319a2b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman ssize_t ida_export get_array_parameters</definition>
        <argsstring>(array_parameters_t *out, ea_t ea)</argsstring>
        <name>get_array_parameters</name>
        <param>
          <type><ref refid="structarray__parameters__t" kindref="compound">array_parameters_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7c05527fcada3a194683b91df12f12c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_array_parameters</definition>
        <argsstring>(ea_t ea, const array_parameters_t *in)</argsstring>
        <name>set_array_parameters</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>const <ref refid="structarray__parameters__t" kindref="compound">array_parameters_t</ref> *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1af3f4b4ca56ef5bad6d7c39defb21ee58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi del_array_parameters</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_array_parameters</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="581" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="581" bodyend="581"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Switch info</header>
      <description><para>See <ref refid="structswitch__info__t" kindref="compound">switch_info_t</ref>, <ref refid="xref_8hpp" kindref="compound">xref.hpp</ref> for related functions </para></description>
      <memberdef kind="function" id="nalt_8hpp_1ade742945eb5aeb0a78d6c515f576d72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman ssize_t ida_export get_switch_info</definition>
        <argsstring>(switch_info_t *out, ea_t ea)</argsstring>
        <name>get_switch_info</name>
        <param>
          <type><ref refid="structswitch__info__t" kindref="compound">switch_info_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="809" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7743cfadb3535b9f07182fc33f041ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_switch_info</definition>
        <argsstring>(ea_t ea, const switch_info_t &amp;in)</argsstring>
        <name>set_switch_info</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>const <ref refid="structswitch__info__t" kindref="compound">switch_info_t</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="810" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a9db00bc518061e3f0d5e0950f26506a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export del_switch_info</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_switch_info</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="811" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Switch parent</header>
      <description><para>Address which holds the switch info (<ref refid="structswitch__info__t" kindref="compound">switch_info_t</ref>). Used at the jump targets. </para></description>
      <memberdef kind="function" id="nalt_8hpp_1a5658d45a4b08a5db6202bb35b7be1762" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t get_switch_parent</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_switch_parent</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="817" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="817" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a00079a516f0d9b9f7647a966ba29c5f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_switch_parent</definition>
        <argsstring>(ea_t ea, ea_t x)</argsstring>
        <name>set_switch_parent</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="822" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="822" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2a3dbd67ec05f402020b2e90a083cc73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void del_switch_parent</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_switch_parent</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="827" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="827" bodyend="827"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Custom data types</header>
      <memberdef kind="function" id="nalt_8hpp_1a2b4cc4ec15ff13007c492311c4d5234c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export get_custom_data_type_ids</definition>
        <argsstring>(custom_data_type_ids_t *cdis, ea_t ea)</argsstring>
        <name>get_custom_data_type_ids</name>
        <param>
          <type><ref refid="structcustom__data__type__ids__t" kindref="compound">custom_data_type_ids_t</ref> *</type>
          <declname>cdis</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="838" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a8fdd5195e18086992e206d606a69bd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_custom_data_type_ids</definition>
        <argsstring>(ea_t ea, const custom_data_type_ids_t *cdis)</argsstring>
        <name>set_custom_data_type_ids</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>const <ref refid="structcustom__data__type__ids__t" kindref="compound">custom_data_type_ids_t</ref> *</type>
          <declname>cdis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="839" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ab66fd6a0183429d1891dc5f67b84d604" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi del_custom_data_type_ids</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_custom_data_type_ids</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="840" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="840" bodyend="840"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Get/Set refinfo</header>
      <description><para>n may be 0, 1, 2, <ref refid="group___f_f__op_1ga3177b4c883cc4b74938f6fb7559587c0" kindref="member">OPND_MASK</ref>. <ref refid="group___f_f__op_1gae3ff56ce8ed4030acdca9d9314038dfb" kindref="member">OPND_OUTER</ref> may be used too. Don&apos;t use these functions, see <ref refid="bytes_8hpp_1ac224c2a7cbae88d541f81c7f46ef3a7d" kindref="member">get_opinfo()</ref>, <ref refid="bytes_8hpp_1a0cdce8a38ea5461837c9c26e93034493" kindref="member">set_opinfo()</ref> </para></description>
      <memberdef kind="function" id="nalt_8hpp_1aedc88bffc7ceb0a95375bf35c7dc1277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export set_refinfo_ex</definition>
        <argsstring>(ea_t ea, int n, const refinfo_t *ri)</argsstring>
        <name>set_refinfo_ex</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structrefinfo__t" kindref="compound">refinfo_t</ref> *</type>
          <declname>ri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ab6c8992a71593ac7b47210b5be94353d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export set_refinfo</definition>
        <argsstring>(ea_t ea, int n, reftype_t type, ea_t target=BADADDR, ea_t base=0, adiff_t tdelta=0)</argsstring>
        <name>set_refinfo</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>target</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <param>
          <type>ea_t</type>
          <declname>base</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>adiff_t</type>
          <declname>tdelta</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a574cb51e8a59b152788e2528b48ff1ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export get_refinfo</definition>
        <argsstring>(refinfo_t *ri, ea_t ea, int n)</argsstring>
        <name>get_refinfo</name>
        <param>
          <type><ref refid="structrefinfo__t" kindref="compound">refinfo_t</ref> *</type>
          <declname>ri</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ab6a747d1acc31338bbf0c8ea50da8f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export del_refinfo</definition>
        <argsstring>(ea_t ea, int n)</argsstring>
        <name>del_refinfo</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1116" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Structure paths</header>
      <description><para>Structure paths for unions and structures with unions (strpath) a structure path is an array of id&apos;s. the first id is the id of the structure itself. additional id&apos;s (if any) specify which member of a union we should select the maximal size of array is <ref refid="nalt_8hpp_1a0be69d167c3b2004f3b786540982e174" kindref="member">MAXSTRUCPATH</ref>. strpaths are used to determine how to display structure offsets. </para></description>
      <memberdef kind="function" id="nalt_8hpp_1a00c17239dffb4e8333a794dcb564b059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export write_struc_path</definition>
        <argsstring>(ea_t ea, int idx, const tid_t *path, int plen, adiff_t delta)</argsstring>
        <name>write_struc_path</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" kindref="member">tid_t</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>plen</declname>
        </param>
        <param>
          <type>adiff_t</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a73b0fbd8a1e07f635a70b21d1320c2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export read_struc_path</definition>
        <argsstring>(tid_t *path, adiff_t *delta, ea_t ea, int idx)</argsstring>
        <name>read_struc_path</name>
        <param>
          <type><ref refid="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" kindref="member">tid_t</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>adiff_t *</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a3e94b8151e5c3119725179978a81a86b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void del_struc_path</definition>
        <argsstring>(ea_t ea, int idx, const tid_t *path, int plen)</argsstring>
        <name>del_struc_path</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" kindref="member">tid_t</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>plen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1130" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Types</header>
      <description><para>Work with function/data types These functions may be used if necessary. </para></description>
      <memberdef kind="function" id="nalt_8hpp_1a20773ea1106387abee700d82b8dca11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export get_tinfo</definition>
        <argsstring>(tinfo_t *tif, ea_t ea)</argsstring>
        <name>get_tinfo</name>
        <param>
          <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *</type>
          <declname>tif</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a236e77fdf42007ea4d214e9bb0395b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export set_tinfo</definition>
        <argsstring>(ea_t ea, const tinfo_t *tif)</argsstring>
        <name>set_tinfo</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *</type>
          <declname>tif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a076c400410a839a2f2ec7e52bbc58a41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi del_tinfo</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_tinfo</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1152" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1152" bodyend="1152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operand types</header>
      <description><para>These functions may be used if necessary. </para></description>
      <memberdef kind="function" id="nalt_8hpp_1a418b4bae812a0f898506ab1d5b82b68f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export get_op_tinfo</definition>
        <argsstring>(tinfo_t *tif, ea_t ea, int n)</argsstring>
        <name>get_op_tinfo</name>
        <param>
          <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *</type>
          <declname>tif</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2f7f37aad5f12e47043196b38d0e583e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export set_op_tinfo</definition>
        <argsstring>(ea_t ea, int n, const tinfo_t *tif)</argsstring>
        <name>set_op_tinfo</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *</type>
          <declname>tif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a4efc13aae0b1abc00b383a9b4bea5fac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi del_op_tinfo</definition>
        <argsstring>(ea_t ea, int n)</argsstring>
        <name>del_op_tinfo</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1160" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1160" bodyend="1160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>String encodings</header>
      <description><para>Encoding names can be a codepage names (CP1251, windows-1251), charset name (Shift-JIS, UTF-8), or just codepage number (866, 932). user-accessible encodings are counted from 1 (index 0 is reserved) </para></description>
      <memberdef kind="define" id="nalt_8hpp_1a83a8d5dd893b2e5afad87f65fde4345b" prot="public" static="no">
        <name>BPU_1B</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1322" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1ac6eb74c9f4c60d3f2af0636e950962d0" prot="public" static="no">
        <name>BPU_2B</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1323" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a2437d7e97ba18438380e1f137c47d11b" prot="public" static="no">
        <name>BPU_4B</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1324" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a540e1c42a493e1c5a15e5932adfaf669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export get_encoding_qty</definition>
        <argsstring>()</argsstring>
        <name>get_encoding_qty</name>
        <briefdescription>
<para>Get total number of encodings (counted from 0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ac8d3151717657ef49bb62639fea8c2eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman const char *ida_export</type>
        <definition>idaman const char* ida_export get_encoding_name</definition>
        <argsstring>(int idx)</argsstring>
        <name>get_encoding_name</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get encoding name for specific index (1-based). <simplesect kind="return"><para>NULL if idx is out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7f4b5f7f7b7ebc79aad6b4049ad02356" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export add_encoding</definition>
        <argsstring>(const char *encoding)</argsstring>
        <name>add_encoding</name>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new encoding (e.g. &quot;UTF-8&quot;). <simplesect kind="return"><para>its index (1-based) if it&apos;s already in the list, return its index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ad00cecfd152b0ecec58fd445be60ceb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export del_encoding</definition>
        <argsstring>(int idx)</argsstring>
        <name>del_encoding</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Delete an encoding (1-based) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa12617a926edd6471e8c8acb4e153d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export rename_encoding</definition>
        <argsstring>(int idx, const char *encoding)</argsstring>
        <name>rename_encoding</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encoding</declname>
        </param>
        <briefdescription>
<para>Change name for an encoding (1-based) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ab71908b257795da0cd7c3d4c81c502f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export get_encoding_bpu</definition>
        <argsstring>(int idx)</argsstring>
        <name>get_encoding_bpu</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the amount of bytes per unit (e.g., 2 for UTF-16, 4 for UTF-32) for the encoding with the given index.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the encoding index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes per units (1/2/4); -1 means error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7e740ed2a39f88ff150e7a1a6992d304" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int get_strtype_bpu</definition>
        <argsstring>(int32 strtype)</argsstring>
        <name>get_strtype_bpu</name>
        <param>
          <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
          <declname>strtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1336" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1336" bodyend="1340"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a44ec3d3d1508dff9e0d7ff9b1816a628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export get_default_encoding_idx</definition>
        <argsstring>(int bpu)</argsstring>
        <name>get_default_encoding_idx</name>
        <param>
          <type>int</type>
          <declname>bpu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get default encoding index for a specific string type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bpu</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of bytes per unit (e.g., 1 for ASCII, CP1252, UTF-8..., 2 for UTF-16, 4 for UTF-32) 0 means no specific encoding is set - byte values are displayed without conversion. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a44e893debd4f77f3234b4f84eb8d3f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export set_default_encoding_idx</definition>
        <argsstring>(int bpu, int idx)</argsstring>
        <name>set_default_encoding_idx</name>
        <param>
          <type>int</type>
          <declname>bpu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set default encoding for a string type <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bpu</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of bytes per unit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the encoding index idx can be 0 to disable encoding conversion </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aab748add2e733b98a4d273d770277c54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *idaapi</type>
        <definition>const char* idaapi encoding_from_strtype</definition>
        <argsstring>(int32 strtype)</argsstring>
        <name>encoding_from_strtype</name>
        <param>
          <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
          <declname>strtype</declname>
        </param>
        <briefdescription>
<para>Get encoding name for this strtype. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1358" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1358" bodyend="1364"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a32d9a606152a1b727bed8cea9f833c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export get_outfile_encoding_idx</definition>
        <argsstring>()</argsstring>
        <name>get_outfile_encoding_idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the index of the encoding used when producing files 0 means no that the IDB&apos;s default 1 byte-per-unit encoding is used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a18ad7177e8cf580cec944b71e20b835b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export set_outfile_encoding_idx</definition>
        <argsstring>(int idx)</argsstring>
        <name>set_outfile_encoding_idx</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set encoding to be used when producing files <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the encoding index idx can be 0 to use the IDB&apos;s default 1-byte-per-unit encoding </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1377" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions to work with imports</header>
      <memberdef kind="typedef" id="nalt_8hpp_1a3b3f471daa73162e985eb9c473b11bcf" prot="public" static="no">
        <type>int idaapi</type>
        <definition>typedef int idaapi import_enum_cb_t(ea_t ea, const char *name, uval_t ord, void *param)</definition>
        <argsstring>(ea_t ea, const char *name, uval_t ord, void *param)</argsstring>
        <name>import_enum_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback for enumerating imports. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>import address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>import name (NULL if imported by ordinal) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ord</parametername>
</parameternamelist>
<parameterdescription>
<para>import ordinal (0 for imports by name) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>user parameter passed to <ref refid="nalt_8hpp_1a1cd2c85af3d6d10c72ba923b822600ad" kindref="member">enum_import_names()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>stop enumeration </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1406" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ac8c583eddff36d7944d78a39d1f349d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> ida_export</type>
        <definition>idaman uint ida_export get_import_module_qty</definition>
        <argsstring>()</argsstring>
        <name>get_import_module_qty</name>
        <briefdescription>
<para>Get number of import modules. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a5665df50dbb83c96c8aa55cbd6b9b5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export get_import_module_name</definition>
        <argsstring>(qstring *buf, int mod_index)</argsstring>
        <name>get_import_module_name</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mod_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get import module name. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>bad index </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a1cd2c85af3d6d10c72ba923b822600ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export enum_import_names</definition>
        <argsstring>(int mod_index, import_enum_cb_t *callback, void *param=NULL)</argsstring>
        <name>enum_import_names</name>
        <param>
          <type>int</type>
          <declname>mod_index</declname>
        </param>
        <param>
          <type><ref refid="nalt_8hpp_1a3b3f471daa73162e985eb9c473b11bcf" kindref="member">import_enum_cb_t</ref> *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enumerate imports from specific module. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>finished ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>error </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>callback return value (&lt;=0) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a05ff990d1abdd46d2d008fec62443590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export delete_imports</definition>
        <argsstring>(void)</argsstring>
        <name>delete_imports</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Delete all imported modules information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1419" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Ignore micro</header>
      <description><para>netnode to keep information about various kinds of instructions </para></description>
      <memberdef kind="define" id="nalt_8hpp_1ae85c91eb0e294c71c6ffdb4b6082255c" prot="public" static="no">
        <name>IM_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1436" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1ac5fe59ff5d88c75edadf4bcb79181979" prot="public" static="no">
        <name>IM_PROLOG</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1437" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a99d8a925a4361b4e1c8896006ce79281" prot="public" static="no">
        <name>IM_EPILOG</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1438" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a0295eb16fbe3dab6a2b39622d1d817aa" prot="public" static="no">
        <name>IM_SWITCH</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1439" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="nalt_8hpp_1a0bf51772057dc84f97090897bfdd9c85" prot="public" static="no" mutable="no">
        <type><ref refid="classnetnode" kindref="compound">netnode</ref></type>
        <definition>netnode ignore_micro</definition>
        <argsstring></argsstring>
        <name>ignore_micro</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a053c67cd3a8d783de6100bf74f9015c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void init_ignore_micro</definition>
        <argsstring>(void)</argsstring>
        <name>init_ignore_micro</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1441" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1441" bodyend="1441"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a5002b465360b5b55409c9e7adc662020" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void term_ignore_micro</definition>
        <argsstring>(void)</argsstring>
        <name>term_ignore_micro</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1442" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1442" bodyend="1442"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ac2b6c7900e0f60af55af8fce9ee0b3e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char get_ignore_micro</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_ignore_micro</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1443" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1443" bodyend="1443"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a9647171fbc726e76f1e28f6efb87736b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_ignore_micro</definition>
        <argsstring>(ea_t ea, uchar im_type)</argsstring>
        <name>set_ignore_micro</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>im_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1444" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1444" bodyend="1444"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1af93f1745fbaebef369cc69fdc373bfef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_ignore_micro</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_ignore_micro</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1445" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1445" bodyend="1445"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1adc74f63869dcee6243334dad0861c8cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t next_marked_insn</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>next_marked_insn</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1446" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1446" bodyend="1446"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a4fc451f7f2c20cb1d9fdda236e0ff72f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mark_prolog_insn</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>mark_prolog_insn</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1447" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1447" bodyend="1447"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7bcec3486103be61fce397cc2d7e3b0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mark_epilog_insn</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>mark_epilog_insn</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1448" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1448" bodyend="1448"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a5a35ba908c7e58ce7e87f432a14d0c06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mark_switch_insn</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>mark_switch_insn</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1449" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1449" bodyend="1449"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a049157515284e236f5fe6b2e3d892c03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_prolog_insn</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_prolog_insn</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1450" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1450" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ae640cf5dc687bb7967077058029afea1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_epilog_insn</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_epilog_insn</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1451" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1451" bodyend="1451"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa424da881ec478d25fc15fae4a1ccac7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_switch_insn</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_switch_insn</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1452" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1452" bodyend="1452"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a51a51eb96017ad6fc322ca5005ddfb18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_ignore_micro</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>should_ignore_micro</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1453" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1453" bodyend="1453"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___n_a_l_t___1ga746300da939c02d0a42abdb994e21d0c" prot="public" static="no">
        <name>NALT_ENUM</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-2)</initializer>
        <briefdescription>
<para>reserved for enums, see <ref refid="enum_8hpp" kindref="compound">enum.hpp</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="43" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1gaad9249021d29fc89ad6cc3ec22c7c978" prot="public" static="no">
        <name>NALT_WIDE</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-1)</initializer>
        <briefdescription>
<para>16-bit byte value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="44" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1gaf4a549decee782c8933775a6a30209de" prot="public" static="no">
        <name>NALT_SWITCH</name>
        <initializer>1</initializer>
        <briefdescription>
<para>switch idiom address (used at jump targets) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="45" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1gae41782d7823e3fe8609c41921764cfc8" prot="public" static="no">
        <name>NALT_STRUCT</name>
        <initializer>3</initializer>
        <briefdescription>
<para>struct id </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="47" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1ga5ae6bfe2ac9e471988f50cca7ac95bf5" prot="public" static="no">
        <name>NALT_AFLAGS</name>
        <initializer>8</initializer>
        <briefdescription>
<para>additional flags for an item </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="52" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1ga53b00a7a36064e3890f828e9384f0c3b" prot="public" static="no">
        <name>NALT_LINNUM</name>
        <initializer>9</initializer>
        <briefdescription>
<para>source line number </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="53" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1ga439ce1f4227400a1b599216afc0db123" prot="public" static="no">
        <name>NALT_ABSBASE</name>
        <initializer>10</initializer>
        <briefdescription>
<para>absolute segment location </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="54" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1ga79039d31f33a8f19bad1b12915f9adde" prot="public" static="no">
        <name>NALT_ENUM0</name>
        <initializer>11</initializer>
        <briefdescription>
<para>enum id for the first operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="55" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1ga669c82b107d2e8318fc3dd7179969164" prot="public" static="no">
        <name>NALT_ENUM1</name>
        <initializer>12</initializer>
        <briefdescription>
<para>enum id for the second operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="56" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1gaca9ef4ae40df47542c169f243986015f" prot="public" static="no">
        <name>NALT_PURGE</name>
        <initializer>15</initializer>
        <briefdescription>
<para>number of bytes purged from the stack when a function is called indirectly </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="59" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1ga45122de0ecda6a5bdf1e2b608d0f2998" prot="public" static="no">
        <name>NALT_STRTYPE</name>
        <initializer>16</initializer>
        <briefdescription>
<para>type of string item </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="60" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1gae04d7f77d1f88a745426bb8e8acfb336" prot="public" static="no">
        <name>NALT_ALIGN</name>
        <initializer>17</initializer>
        <briefdescription>
<para>(should by equal to power of 2) </para>        </briefdescription>
        <detaileddescription>
<para>alignment value if the item is <ref refid="group___f_f__databits_1ga61f222cbe3cbe2570892096fc7dc1e8c" kindref="member">FF_ALIGN</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="61" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___1gaf50e02d2bbb5151a6e469dab4449a7bd" prot="public" static="no">
        <name>NALT_COLOR</name>
        <initializer>20</initializer>
        <briefdescription>
<para>instruction/data background color </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="67" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga8e1be4a4674610f6b1928c0bcd235a63" prot="public" static="no">
        <name>NSUP_CMT</name>
        <initializer>0</initializer>
        <briefdescription>
<para>regular comment </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="76" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gab326a2984b1d4cb573c20238fd66a851" prot="public" static="no">
        <name>NSUP_REPCMT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>repeatable comment </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="77" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga61f4005522ba59ec31bd065337eb9e1c" prot="public" static="no">
        <name>NSUP_FOP1</name>
        <initializer>2</initializer>
        <briefdescription>
<para>forced operand 1 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="78" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gad49494e008a0bca3636b1e03c0325923" prot="public" static="no">
        <name>NSUP_FOP2</name>
        <initializer>3</initializer>
        <briefdescription>
<para>forced operand 2 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="79" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gad0eb4db1635170d533492e9282b450c9" prot="public" static="no">
        <name>NSUP_JINFO</name>
        <initializer>4</initializer>
        <briefdescription>
<para>jump table info </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="80" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga5a1f6bfe78caaef81f35455433d2285a" prot="public" static="no">
        <name>NSUP_ARRAY</name>
        <initializer>5</initializer>
        <briefdescription>
<para>array parameters </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="81" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gaebd926aeb44804f227c28ac139d95aef" prot="public" static="no">
        <name>NSUP_OMFGRP</name>
        <initializer>6</initializer>
        <briefdescription>
<para>OMF: group of segments (not used anymore) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="82" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga3f5d69b816f9caf703397a439f1d2e7e" prot="public" static="no">
        <name>NSUP_FOP3</name>
        <initializer>7</initializer>
        <briefdescription>
<para>forced operand 3 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="83" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gaf9f627e147e78073df35fbfeb3aaa024" prot="public" static="no">
        <name>NSUP_SWITCH</name>
        <initializer>8</initializer>
        <briefdescription>
<para>switch information </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="84" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gaf15b41e53fc0f9bb95ffac548d7e159c" prot="public" static="no">
        <name>NSUP_REF0</name>
        <initializer>9</initializer>
        <briefdescription>
<para>complex reference information for operand 1 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="85" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga31557106d55b21e12374688b37b28341" prot="public" static="no">
        <name>NSUP_REF1</name>
        <initializer>10</initializer>
        <briefdescription>
<para>complex reference information for operand 2 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="86" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gace52f64b6ad01cc5193f3bc213b315e3" prot="public" static="no">
        <name>NSUP_REF2</name>
        <initializer>11</initializer>
        <briefdescription>
<para>complex reference information for operand 3 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="87" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gafd7a277bc752d3412d9fd82227b23be5" prot="public" static="no">
        <name>NSUP_OREF0</name>
        <initializer>12</initializer>
        <briefdescription>
<para>outer complex reference information for operand 1 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="88" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gaca6b8cf00bf4aaf8ca6210f335802ea6" prot="public" static="no">
        <name>NSUP_OREF1</name>
        <initializer>13</initializer>
        <briefdescription>
<para>outer complex reference information for operand 2 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="89" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga9f446484754fc0e3e9607d56c8d45081" prot="public" static="no">
        <name>NSUP_OREF2</name>
        <initializer>14</initializer>
        <briefdescription>
<para>outer complex reference information for operand 3 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="90" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gaf3d007e2dfdd5adcb6e4ac242bf756c8" prot="public" static="no">
        <name>NSUP_STROFF0</name>
        <initializer>15</initializer>
        <briefdescription>
<para>stroff: struct path for the first operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="91" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gaaa2c9b79cea4f51978b8c589ff8d77cb" prot="public" static="no">
        <name>NSUP_STROFF1</name>
        <initializer>16</initializer>
        <briefdescription>
<para>stroff: struct path for the second operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="92" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gad2e4197d014ab47e1695dfd46b9faec0" prot="public" static="no">
        <name>NSUP_SEGTRANS</name>
        <initializer>17</initializer>
        <briefdescription>
<para>segment translations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="93" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga3a877e30fdbc08564c0233c1398adb59" prot="public" static="no">
        <name>NSUP_FOP4</name>
        <initializer>18</initializer>
        <briefdescription>
<para>forced operand 4 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="94" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga623705f6e848ee831dc10c7a2a4060d0" prot="public" static="no">
        <name>NSUP_FOP5</name>
        <initializer>19</initializer>
        <briefdescription>
<para>forced operand 5 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="95" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gac8879898b75d6743804c97c92e9c1b92" prot="public" static="no">
        <name>NSUP_FOP6</name>
        <initializer>20</initializer>
        <briefdescription>
<para>forced operand 6 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="96" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gae8d4b8868594baa0236e37f96e7da159" prot="public" static="no">
        <name>NSUP_REF3</name>
        <initializer>21</initializer>
        <briefdescription>
<para>complex reference information for operand 4 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="97" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga1655bfbcfe1e6a9f82b7912e3b74f7d7" prot="public" static="no">
        <name>NSUP_REF4</name>
        <initializer>22</initializer>
        <briefdescription>
<para>complex reference information for operand 5 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="98" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga91ffa0edcd27d3a1775766ee95e58bf9" prot="public" static="no">
        <name>NSUP_REF5</name>
        <initializer>23</initializer>
        <briefdescription>
<para>complex reference information for operand 6 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="99" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga9b5a1cbeae0ea986f60d22e4706b01d4" prot="public" static="no">
        <name>NSUP_OREF3</name>
        <initializer>24</initializer>
        <briefdescription>
<para>outer complex reference information for operand 4 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="100" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga383f3fd0decad24e35d027640fdba2e2" prot="public" static="no">
        <name>NSUP_OREF4</name>
        <initializer>25</initializer>
        <briefdescription>
<para>outer complex reference information for operand 5 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="101" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga68c1bbf2a0f1de68d0251ee2efa9bd9b" prot="public" static="no">
        <name>NSUP_OREF5</name>
        <initializer>26</initializer>
        <briefdescription>
<para>outer complex reference information for operand 6 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="102" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gad4bd2eb59dc6a527038a43ebff467666" prot="public" static="no">
        <name>NSUP_XREFPOS</name>
        <initializer>27</initializer>
        <briefdescription>
<para>saved xref address and type in the xrefs window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="103" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga542ceb10e5a2c841a0ffa3200b2cd77d" prot="public" static="no">
        <name>NSUP_CUSTDT</name>
        <initializer>28</initializer>
        <briefdescription>
<para>custom data type id </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="104" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gac51a56e6aba0db0db2c297a6a9e20100" prot="public" static="no">
        <name>NSUP_GROUPS</name>
        <initializer>29</initializer>
        <briefdescription>
<para>SEG_GRP: pack_dd encoded list of selectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="105" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga90cffe696d6dbd77306e8c1943d3dddd" prot="public" static="no">
        <name>NSUP_ARGEAS</name>
        <initializer>30</initializer>
        <briefdescription>
<para>instructions that initialize call arguments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="106" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga064534083200a2b0018d9d68c1fd025c" prot="public" static="no">
        <name>NSUP_FOP7</name>
        <initializer>31</initializer>
        <briefdescription>
<para>forced operand 7 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="107" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gaa18456c181a79f2c949efc02073d6ddf" prot="public" static="no">
        <name>NSUP_FOP8</name>
        <initializer>32</initializer>
        <briefdescription>
<para>forced operand 8 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="108" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga7c0ecb93452a300d0592559eec6d4be3" prot="public" static="no">
        <name>NSUP_REF6</name>
        <initializer>33</initializer>
        <briefdescription>
<para>complex reference information for operand 7 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="109" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga9140342de9743fdb9b2ad167abaf5b90" prot="public" static="no">
        <name>NSUP_REF7</name>
        <initializer>34</initializer>
        <briefdescription>
<para>complex reference information for operand 8 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="110" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga2e58d70822bd50c2453d7fbc3f29a6ae" prot="public" static="no">
        <name>NSUP_OREF6</name>
        <initializer>35</initializer>
        <briefdescription>
<para>outer complex reference information for operand 7 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="111" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga15be61e20a79f2f870b74edd9223fd2f" prot="public" static="no">
        <name>NSUP_OREF7</name>
        <initializer>36</initializer>
        <briefdescription>
<para>outer complex reference information for operand 8 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="112" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga16f8a0726068f68e446024e0dcca0f6d" prot="public" static="no">
        <name>NSUP_POINTS</name>
        <initializer>0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SP change points blob (see funcs.cpp). values NSUP_POINTS..NSUP_POINTS+0x1000 are reserved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="118" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga4aa0b0bc504afa840cc5accccf346306" prot="public" static="no">
        <name>NSUP_MANUAL</name>
        <initializer>0x2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>manual instruction. values NSUP_MANUAL..NSUP_MANUAL+0x1000 are reserved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="122" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga449ca35b289a4093d9bca3db214ae190" prot="public" static="no">
        <name>NSUP_TYPEINFO</name>
        <initializer>0x3000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>type information. values NSUP_TYPEINFO..NSUP_TYPEINFO+0x1000 are reserved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="126" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gad71b74f8ddbfd877bf6478aaf88edbac" prot="public" static="no">
        <name>NSUP_REGVAR</name>
        <initializer>0x4000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>register variables. values NSUP_REGVAR..NSUP_REGVAR+0x1000 are reserved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="130" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gacfb87227b59ca5c8f48878969db78395" prot="public" static="no">
        <name>NSUP_LLABEL</name>
        <initializer>0x5000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>local labels. values NSUP_LLABEL..NSUP_LLABEL+0x1000 are reserved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="134" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1ga6f6d013e94420a2741560ad055010f7d" prot="public" static="no">
        <name>NSUP_REGARG</name>
        <initializer>0x6000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>register argument type/name descriptions values NSUP_REGARG..NSUP_REGARG+0x1000 are reserved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="138" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gaedc1e13bf413a50e5575bdc2fef9d6dd" prot="public" static="no">
        <name>NSUP_FTAILS</name>
        <initializer>0x7000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>function tails or tail referers values NSUP_FTAILS..NSUP_FTAILS+0x1000 are reserved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="142" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gacfecf8279bb1dccdb486ca73ddb8c06f" prot="public" static="no">
        <name>NSUP_GROUP</name>
        <initializer>0x8000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>graph group information values NSUP_GROUP..NSUP_GROUP+0x1000 are reserved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="146" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_s_u_p___1gae573bfbe8466943a45c0de5b44a07692" prot="public" static="no">
        <name>NSUP_OPTYPES</name>
        <initializer>0x9000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>operand type information. values NSUP_OPTYPES..NSUP_OPTYPES+0x100000 are reserved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="150" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___x_1ga6f1f4bf44382707905545a8156c0c306" prot="public" static="no">
        <name>NALT_CREF_TO</name>
        <initializer>&apos;X&apos;</initializer>
        <briefdescription>
<para>code xref to, idx: target address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="156" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___x_1gaf5727bfd7fab79b3886a6adbe89dbc3b" prot="public" static="no">
        <name>NALT_CREF_FROM</name>
        <initializer>&apos;x&apos;</initializer>
        <briefdescription>
<para>code xref from, idx: source address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="157" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___x_1ga4a378945b2d6a146f04a669692ffd08f" prot="public" static="no">
        <name>NALT_DREF_TO</name>
        <initializer>&apos;D&apos;</initializer>
        <briefdescription>
<para>data xref to, idx: target address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="158" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_a_l_t___x_1gac9310c23093741667a59ce73054806ab" prot="public" static="no">
        <name>NALT_DREF_FROM</name>
        <initializer>&apos;d&apos;</initializer>
        <briefdescription>
<para>data xref from, idx: source address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="159" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n___t_a_g_1ga75eeef67cce3364a9bb1bf66aa653aa9" prot="public" static="no">
        <name>NSUP_GR_INFO</name>
        <initializer>&apos;g&apos;</initializer>
        <briefdescription>
<para>group node info: color, ea, text </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="165" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n___t_a_g_1ga9d8bf809d26dc3f442dfbe6e156ec786" prot="public" static="no">
        <name>NALT_GR_LAYX</name>
        <initializer>&apos;p&apos;</initializer>
        <briefdescription>
<para>group layout ptrs, hash: md5 of &apos;belongs&apos; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="166" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n___t_a_g_1ga688349bb65ab0a7ac14663a540104cff" prot="public" static="no">
        <name>NSUP_GR_LAYT</name>
        <initializer>&apos;l&apos;</initializer>
        <briefdescription>
<para>group layouts, idx: layout pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="167" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a5c8ec1b570d11b1741e7fb5a12f01f16" prot="public" static="no">
        <name>PATCH_TAG</name>
        <initializer>&apos;P&apos;</initializer>
        <briefdescription>
<para>Patch netnode tag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="171" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga4786d206648561cc9454e7e43d59a524" prot="public" static="no">
        <name>AFL_LINNUM</name>
        <initializer>0x00000001L</initializer>
        <briefdescription>
<para>has line number info </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="217" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga410b4a9630ad2c55a6f437e209280328" prot="public" static="no">
        <name>AFL_USERSP</name>
        <initializer>0x00000002L</initializer>
        <briefdescription>
<para>user-defined SP value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="218" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga7537f3337587dbc3577b02b88ed0e64e" prot="public" static="no">
        <name>AFL_PUBNAM</name>
        <initializer>0x00000004L</initializer>
        <briefdescription>
<para>name is public (inter-file linkage) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="219" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga338c215f3df6d07a79900d2639db2609" prot="public" static="no">
        <name>AFL_WEAKNAM</name>
        <initializer>0x00000008L</initializer>
        <briefdescription>
<para>name is weak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="220" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga3f1f542c3dc2c16ce18c8772ad1d160d" prot="public" static="no">
        <name>AFL_HIDDEN</name>
        <initializer>0x00000010L</initializer>
        <briefdescription>
<para>the item is hidden completely </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="221" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaa2263302c0aeb85946d8424e5caa824a" prot="public" static="no">
        <name>AFL_MANUAL</name>
        <initializer>0x00000020L</initializer>
        <briefdescription>
<para>the instruction/data is specified by the user </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="222" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gabc9bbdc144945250637846d342084af0" prot="public" static="no">
        <name>AFL_NOBRD</name>
        <initializer>0x00000040L</initializer>
        <briefdescription>
<para>the code/data border is hidden </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="223" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gae2a9146154dc578eb2d9e75efe0d5d18" prot="public" static="no">
        <name>AFL_ZSTROFF</name>
        <initializer>0x00000080L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>display struct field name at 0 offset when displaying an offset. example: {offset somestruct.field_0} if this flag is clear, then {offset somestruct} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="224" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga73b42e74039bed8ee02194f0b45a781f" prot="public" static="no">
        <name>AFL_BNOT0</name>
        <initializer>0x00000100L</initializer>
        <briefdescription>
<para>the 1st operand is bitwise negated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="229" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gafdaba9711391963192b28d8f4e323b44" prot="public" static="no">
        <name>AFL_BNOT1</name>
        <initializer>0x00000200L</initializer>
        <briefdescription>
<para>the 2nd operand is bitwise negated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="230" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga6b27595f869bbb63773ffc68fbd6c065" prot="public" static="no">
        <name>AFL_LIB</name>
        <initializer>0x00000400L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>item from the standard library. low level flag, is used to set <ref refid="group___f_u_n_c___1ga3ad36171134e3e021961c2849e6abfae" kindref="member">FUNC_LIB</ref> of <ref refid="classfunc__t" kindref="compound">func_t</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="231" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga1df6c65b405c87d08eb1fcf1b45f3929" prot="public" static="no">
        <name>AFL_TI</name>
        <initializer>0x00000800L</initializer>
        <briefdescription>
<para>has typeinfo? (<ref refid="group___n_s_u_p___1ga449ca35b289a4093d9bca3db214ae190" kindref="member">NSUP_TYPEINFO</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="234" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga6e4de0f4733019d33cf0ca15cfbf8e24" prot="public" static="no">
        <name>AFL_TI0</name>
        <initializer>0x00001000L</initializer>
        <briefdescription>
<para>has typeinfo for operand 0? (<ref refid="group___n_s_u_p___1gae573bfbe8466943a45c0de5b44a07692" kindref="member">NSUP_OPTYPES</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="235" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga027a1d463847bc1bff567d0987dded24" prot="public" static="no">
        <name>AFL_TI1</name>
        <initializer>0x00002000L</initializer>
        <briefdescription>
<para>has typeinfo for operand 1? (<ref refid="group___n_s_u_p___1gae573bfbe8466943a45c0de5b44a07692" kindref="member">NSUP_OPTYPES</ref>+1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="236" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaf32befeb3196638d2f99fe7accc3ca7d" prot="public" static="no">
        <name>AFL_LNAME</name>
        <initializer>0x00004000L</initializer>
        <briefdescription>
<para>has local name too (<ref refid="group___f_f__statespecb_1ga4bee89a4355fe06b0cf8f8881475960c" kindref="member">FF_NAME</ref> should be set) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="237" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga5b13a50aacdaf8f4ee9ae39eaec5f6b5" prot="public" static="no">
        <name>AFL_TILCMT</name>
        <initializer>0x00008000L</initializer>
        <briefdescription>
<para>has type comment? (such a comment may be changed by IDA) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="238" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga3a2019bd790be1deee6a498d5c3f3160" prot="public" static="no">
        <name>AFL_LZERO0</name>
        <initializer>0x00010000L</initializer>
        <briefdescription>
<para>toggle leading zeroes for the 1st operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="239" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaa5a47be0fd8447456dac9dd2f85d94d1" prot="public" static="no">
        <name>AFL_LZERO1</name>
        <initializer>0x00020000L</initializer>
        <briefdescription>
<para>toggle leading zeroes for the 2nd operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="240" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga799ed13eb82dcea3078c8b2f8989bc76" prot="public" static="no">
        <name>AFL_COLORED</name>
        <initializer>0x00040000L</initializer>
        <briefdescription>
<para>has user defined instruction color? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="241" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga225a31d8283e2d498fba1f5eb9aafae4" prot="public" static="no">
        <name>AFL_TERSESTR</name>
        <initializer>0x00080000L</initializer>
        <briefdescription>
<para>terse structure variable display? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="242" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga77c4da8aebb646dad32496a889e3c3a3" prot="public" static="no">
        <name>AFL_SIGN0</name>
        <initializer>0x00100000L</initializer>
        <briefdescription>
<para>code: toggle sign of the 1st operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="243" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaa6a948163597e5693b4bce10e0a99816" prot="public" static="no">
        <name>AFL_SIGN1</name>
        <initializer>0x00200000L</initializer>
        <briefdescription>
<para>code: toggle sign of the 2nd operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="244" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga8b6f7b8a78d5e97c3e63c322884cd212" prot="public" static="no">
        <name>AFL_NORET</name>
        <initializer>0x00400000L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>for imported function pointers: doesn&apos;t return. this flag can also be used for any instruction which halts or finishes the program execution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="245" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga7e29226802e2b25c0e7a1013fbbe171b" prot="public" static="no">
        <name>AFL_FIXEDSPD</name>
        <initializer>0x00800000L</initializer>
        <briefdescription>
<para>should not be modified by modules </para>        </briefdescription>
        <detaileddescription>
<para>sp delta value is fixed by analysis. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="248" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gad0e4c541d14600ea0844cb8778b53aeb" prot="public" static="no">
        <name>AFL_ALIGNFLOW</name>
        <initializer>0x01000000L</initializer>
        <briefdescription>
<para>the previous insn was created for alignment purposes only </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="250" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga8186591ad702fad3b4df10e21c47fcc9" prot="public" static="no">
        <name>AFL_USERTI</name>
        <initializer>0x02000000L</initializer>
        <briefdescription>
<para>(comes from the user or type library) </para>        </briefdescription>
        <detaileddescription>
<para>the type information is definitive. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="251" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaa187ca73ac084686f3126b055a68f398" prot="public" static="no">
        <name>AFL_RETFP</name>
        <initializer>0x04000000L</initializer>
        <briefdescription>
<para>function returns a floating point value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="253" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gad2d6a6aab6f239b217448fd6e966f152" prot="public" static="no">
        <name>AFL_USEMODSP</name>
        <initializer>0x08000000L</initializer>
        <briefdescription>
<para>example: pop [rsp+N] </para>        </briefdescription>
        <detaileddescription>
<para>insn modifes SP and uses the modified value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="254" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga2a378a226ff7fd35e3e94a39a2dff295" prot="public" static="no">
        <name>AFL_NOTCODE</name>
        <initializer>0x10000000L</initializer>
        <briefdescription>
<para>autoanalysis should not create code here </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="256" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga77a2e4eb32482fb366f1f02e86d122c8" prot="public" static="no">
        <name>AFL_NOTPROC</name>
        <initializer>0x20000000L</initializer>
        <briefdescription>
<para>autoanalysis should not create proc here </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="257" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a077d2d2c2656ccfeab26c47b02421f48" prot="public" static="no">
        <name>STRWIDTH_1B</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="469" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1af4b2b543db413ca93d6ed9dbec1903de" prot="public" static="no">
        <name>STRWIDTH_2B</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="470" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a2b1741de8bb0e0f71de76e66684a850b" prot="public" static="no">
        <name>STRWIDTH_4B</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="471" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1ae2684356e5964849334d554aa24cb75e" prot="public" static="no">
        <name>STRWIDTH_MASK</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="472" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a692980b48444a1fa66d32f425d34464c" prot="public" static="no">
        <name>STRLYT_TERMCHR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="475" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a5aeb7ed1056e305d21ec23ae1aa464f1" prot="public" static="no">
        <name>STRLYT_PASCAL1</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="476" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a8c1f89fe902f74f6f98a07ce99c5e243" prot="public" static="no">
        <name>STRLYT_PASCAL2</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="477" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a36b63220e2dfc1edcf21587bee226bb7" prot="public" static="no">
        <name>STRLYT_PASCAL4</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="478" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1aaa279d60b3d6eda0531ddf4ffbee6a3a" prot="public" static="no">
        <name>STRLYT_MASK</name>
        <initializer>0xFC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="479" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1ae6839016222a826eec7d129674b940f5" prot="public" static="no">
        <name>STRLYT_SHIFT</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="480" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1gaf1ff4f38af0efd6bb7b710c02c9010ec" prot="public" static="no">
        <name>STRTYPE_TERMCHR</name>
        <initializer>(STRWIDTH_1B|STRLYT_TERMCHR&lt;&lt;STRLYT_SHIFT)</initializer>
        <briefdescription>
<para>C-style string. </para>        </briefdescription>
        <detaileddescription>
<para>&lt; Character-terminated string. The termination characters are kept in the next bytes of string type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="487" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1gabc6c66459538cef0f5079a984ec6340a" prot="public" static="no">
        <name>STRTYPE_C</name>
        <initializer><ref refid="group___s_t_r_t_y_p_e___1gaf1ff4f38af0efd6bb7b710c02c9010ec" kindref="member">STRTYPE_TERMCHR</ref></initializer>
        <briefdescription>
<para>Zero-terminated 16bit chars. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="489" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1ga7d47614ace1b6a3d06c5870ab4074225" prot="public" static="no">
        <name>STRTYPE_C_16</name>
        <initializer>(STRWIDTH_2B|STRLYT_TERMCHR&lt;&lt;STRLYT_SHIFT)</initializer>
        <briefdescription>
<para>Zero-terminated 32bit chars. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="491" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1ga81e419ddac16579bab1536fa8c8d6acd" prot="public" static="no">
        <name>STRTYPE_C_32</name>
        <initializer>(STRWIDTH_4B|STRLYT_TERMCHR&lt;&lt;STRLYT_SHIFT)</initializer>
        <briefdescription>
<para>Pascal-style, one-byte length prefix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="493" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1ga64be15511dbdad6ad9570d51b6d84b7d" prot="public" static="no">
        <name>STRTYPE_PASCAL</name>
        <initializer>(STRWIDTH_1B|STRLYT_PASCAL1&lt;&lt;STRLYT_SHIFT)</initializer>
        <briefdescription>
<para>Pascal-style, 16bit chars, one-byte length prefix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="495" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1ga1a65711d82ab755f82b4f5f1cc7df89e" prot="public" static="no">
        <name>STRTYPE_PASCAL_16</name>
        <initializer>(STRWIDTH_2B|STRLYT_PASCAL1&lt;&lt;STRLYT_SHIFT)</initializer>
        <briefdescription>
<para>Pascal-style, two-byte length prefix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="497" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1gaba8eb129b93d86706580252f850f58a6" prot="public" static="no">
        <name>STRTYPE_LEN2</name>
        <initializer>(STRWIDTH_1B|STRLYT_PASCAL2&lt;&lt;STRLYT_SHIFT)</initializer>
        <briefdescription>
<para>Pascal-style, 16bit chars, two-byte length prefix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="499" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1gadf36fe843bf7cde5151e95988c06f1c5" prot="public" static="no">
        <name>STRTYPE_LEN2_16</name>
        <initializer>(STRWIDTH_2B|STRLYT_PASCAL2&lt;&lt;STRLYT_SHIFT)</initializer>
        <briefdescription>
<para>Pascal-style, four-byte length prefix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="501" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1gae66fe2988272acb7e5a08b4f52159823" prot="public" static="no">
        <name>STRTYPE_LEN4</name>
        <initializer>(STRWIDTH_1B|STRLYT_PASCAL4&lt;&lt;STRLYT_SHIFT)</initializer>
        <briefdescription>
<para>Pascal-style, 16bit chars, four-byte length prefix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="503" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_t_y_p_e___1ga72bee89ae5e4b88aa540d401883f5d8f" prot="public" static="no">
        <name>STRTYPE_LEN4_16</name>
        <initializer>(STRWIDTH_2B|STRLYT_PASCAL4&lt;&lt;STRLYT_SHIFT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="505" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1abd4cf2fbb6de09eae932761501d3e687" prot="public" static="no">
        <name>STRENC_DEFAULT</name>
        <initializer>0x00</initializer>
        <briefdescription>
<para>use default encoding for this type (see <ref refid="nalt_8hpp_1a44ec3d3d1508dff9e0d7ff9b1816a628" kindref="member">get_default_encoding_idx()</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="526" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a34d7c6db7fdc840afc36e81dc2534abb" prot="public" static="no">
        <name>STRENC_NONE</name>
        <initializer>0xFF</initializer>
        <briefdescription>
<para>force no-conversion encoding </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="527" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1ac4080629acf02d7d2420d43591f8378a" prot="public" static="no">
        <name>AP_ALLOWDUPS</name>
        <initializer>0x00000001L</initializer>
        <briefdescription>
<para>use &apos;dup&apos; construct </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="564" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1af83c5319643af4d9ca58520d23dbf35d" prot="public" static="no">
        <name>AP_SIGNED</name>
        <initializer>0x00000002L</initializer>
        <briefdescription>
<para>treats numbers as signed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="565" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a2cb461f5875574bbfbf05a23c632164c" prot="public" static="no">
        <name>AP_INDEX</name>
        <initializer>0x00000004L</initializer>
        <briefdescription>
<para>display array element indexes as comments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="566" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a5843b1191dbcb9e5c5f4ce65ab2233cc" prot="public" static="no">
        <name>AP_ARRAY</name>
        <initializer>0x00000008L</initializer>
        <briefdescription>
<para>create as array (this flag is not stored in database) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="567" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a910acbac8d87c72753da03b316da1d13" prot="public" static="no">
        <name>AP_IDXBASEMASK</name>
        <initializer>0x000000F0L</initializer>
        <briefdescription>
<para>mask for number base of the indexes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="568" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1af369ab49fd2d2939b110afe0d1df5d29" prot="public" static="no">
        <name>AP_IDXDEC</name>
        <initializer>0x00000000L</initializer>
        <briefdescription>
<para>display indexes in decimal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="569" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a38af36ee23f0982830b8d7674abbc849" prot="public" static="no">
        <name>AP_IDXHEX</name>
        <initializer>0x00000010L</initializer>
        <briefdescription>
<para>display indexes in hex </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="570" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a5d5752b82eef02d15131d3599ef2f98e" prot="public" static="no">
        <name>AP_IDXOCT</name>
        <initializer>0x00000020L</initializer>
        <briefdescription>
<para>display indexes in octal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="571" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a1dbfbbf06718c453c25c991d3895feb6" prot="public" static="no">
        <name>AP_IDXBIN</name>
        <initializer>0x00000030L</initializer>
        <briefdescription>
<para>display indexes in binary </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="572" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gae81d0822a39c5126bd928bdab1974734" prot="public" static="no">
        <name>SWI_SPARSE</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>otherwise lowcase present </para>        </briefdescription>
        <detaileddescription>
<para>sparse switch (value table present) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="592" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga4ba1c2e6c577a0c4546528158ac0fb30" prot="public" static="no">
        <name>SWI_V32</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>32-bit values in table </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="594" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gaf15fbbe94eabbce63815a41b56af3509" prot="public" static="no">
        <name>SWI_J32</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>32-bit jump offsets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="595" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gabf8b9130103df3084a267cddaa56d330" prot="public" static="no">
        <name>SWI_VSPLIT</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
<para>value table is split (only for 32-bit values) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="596" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gac7eb607ccb2532aac4b76b962008bae5" prot="public" static="no">
        <name>SWI_RESERVED</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
<para>was: SWI_DEFAULT </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="597" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga08514ce263bc78dde1a9f59f12111ef4" prot="public" static="no">
        <name>SWI_DEF_IN_TBL</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default case is an entry in the jump table. This flag is applicable in 2 cases:<orderedlist>
<listitem><para>The sparse indirect switch (i.e. a switch with a values table) &lt;jump table=&quot;&quot; size&gt;=&quot;&quot;&gt; == </para></listitem></orderedlist>
</para><para>+ 1. The default case entry is the last one in the table (or the first one in the case of an inversed jump table).<orderedlist>
<listitem><para>The switch with insns in the jump table. The default case entry is before the first entry of the table. See also the find_defjump_from_table() helper function. </para></listitem></orderedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="598" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gade6a06a60740d6733cfc689656a853d3" prot="public" static="no">
        <name>SWI_JMP_INV</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
<para>for first entry in values table) </para>        </briefdescription>
        <detaileddescription>
<para>jumptable is inversed. (last entry is </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="607" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="607" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gad5246a790b5bb73b4db415a5fc79952e" prot="public" static="no">
        <name>SWI_SHIFT_MASK</name>
        <initializer>0x00000180</initializer>
        <briefdescription>
<para>use formula (element&lt;&lt;shift) + elbase to find jump targets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="609" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gad0a2b6bfb276e22d63d5ab9e6b93990b" prot="public" static="no">
        <name>SWI_ELBASE</name>
        <initializer>0x00000200</initializer>
        <briefdescription>
<para>segment will be used) </para>        </briefdescription>
        <detaileddescription>
<para>elbase is present (otherwise the base of the switch </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="610" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga907444cebdf9bfefc2bc16180c079f37" prot="public" static="no">
        <name>SWI_JSIZE</name>
        <initializer>0x00000400</initializer>
        <briefdescription>
<para>jump offset expansion bit </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="612" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga38ce789ea9bf758f46f108b7323c3120" prot="public" static="no">
        <name>SWI_VSIZE</name>
        <initializer>0x00000800</initializer>
        <briefdescription>
<para>value table element size expansion bit </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="613" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga383dcd5693b6348d53ac5995f3ee5df9" prot="public" static="no">
        <name>SWI_SEPARATE</name>
        <initializer>0x00001000</initializer>
        <briefdescription>
<para>create an array of individual elements (otherwise separate items) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="614" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga656c35b54dae3628e0cea741ccdaab55" prot="public" static="no">
        <name>SWI_SIGNED</name>
        <initializer>0x00002000</initializer>
        <briefdescription>
<para>jump table entries are signed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="615" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga9c8b1cc7dc7face3d01f48b8e2b78135" prot="public" static="no">
        <name>SWI_CUSTOM</name>
        <initializer>0x00004000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>custom jump table. {create_switch_xrefs} will be called to create code xrefs for the table. Custom jump table must be created by the module (see also <ref refid="group___s_w_i___1gae924695c96e5173af51edcaaf8ba94a9" kindref="member">SWI_STDTBL</ref>) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="616" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gaacefe06f5ae5475f743eae54abeb2f91" prot="public" static="no">
        <name>SWI_INDIRECT</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
<para>(for sparse switches) </para>        </briefdescription>
        <detaileddescription>
<para>value table elements are used as indexes into the jump table </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="621" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga2be9d5f0c1518650d65d96804c658dde" prot="public" static="no">
        <name>SWI_SUBTRACT</name>
        <initializer>0x00020000</initializer>
        <briefdescription>
<para>table values are subtracted from the elbase instead of being added </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="623" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="623" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gaf3fe9f1770f40540a0a16f45a7053066" prot="public" static="no">
        <name>SWI_HXNOLOWCASE</name>
        <initializer>0x00040000</initializer>
        <briefdescription>
<para>lowcase value should not be used by the decompiler (internal flag) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="624" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gae924695c96e5173af51edcaaf8ba94a9" prot="public" static="no">
        <name>SWI_STDTBL</name>
        <initializer>0x00080000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>custom jump table with standard table formatting. ATM IDA doesn&apos;t use SWI_CUSTOM for switches with standard table formatting. So this flag can be considered as obsolete. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="625" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gaca970cc96b47525ed98a5ff7f74fdba1" prot="public" static="no">
        <name>SWI_DEFRET</name>
        <initializer>0x00100000</initializer>
        <briefdescription>
<para>return in the default case (defjump==BADADDR) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="628" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga8366d79f2b0a73c4b3553aba4055017e" prot="public" static="no">
        <name>SWI_SELFREL</name>
        <initializer>0x00200000</initializer>
        <briefdescription>
<para>jump address is relative to the element not to ELBASE </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="629" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1gad2932e86e33c35af42db64775a020c9f" prot="public" static="no">
        <name>SWI_JMPINSN</name>
        <initializer>0x00400000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>jump table entries are insns. For such entries SHIFT has a different meaning. It denotes the number of insns in the entry. For example, 0 - the entry contains the jump to the case, 1 - the entry contains one insn like a &apos;mov&apos; and jump to the end of case, and so on. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="630" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w_i___1ga7709198984718a91115b9d59ba00d128" prot="public" static="no">
        <name>SWI_VERSION</name>
        <initializer>0x00800000</initializer>
        <briefdescription>
<para>the structure contains the VERSION member </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="635" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_f_i_n_f_o___1gafe914182dfe3b36e1efbb3b6af552e38" prot="public" static="no">
        <name>REFINFO_TYPE</name>
        <initializer>0x000F</initializer>
        <briefdescription>
<para>reference type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="890" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="890" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_f_i_n_f_o___1ga173c52e7587909ab4bd29237437ed421" prot="public" static="no">
        <name>REFINFO_RVAOFF</name>
        <initializer>0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>based reference (rva) <ref refid="structrefinfo__t_1a7c866d752cb0b7004616162c07578f40" kindref="member">refinfo_t::base</ref> will be forced to <ref refid="nalt_8hpp_1afca1b6a7bdd1c05fc579580e29e902ed" kindref="member">get_imagebase()</ref> such a reference is displayed with the {a_rva} keyword </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="891" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="891" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_f_i_n_f_o___1ga9d4315e648f31d9467ae7e74c3fe920e" prot="public" static="no">
        <name>REFINFO_PASTEND</name>
        <initializer>0x0020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reference past an item it may point to an nonexistent address do not destroy alignment dirs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="894" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="894" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_f_i_n_f_o___1ga5513a95d893f73d5e0382c7375d09ef8" prot="public" static="no">
        <name>REFINFO_CUSTOM</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a custom reference the kernel will call {notify}(ph.custom_offset, .... that can change all arguments used for calculations. This flag is useful for custom fixups </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="897" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="897" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_f_i_n_f_o___1ga8c47e62ab5aa6e450554aee16e553978" prot="public" static="no">
        <name>REFINFO_NOBASE</name>
        <initializer>0x0080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>don&apos;t create the base xref implies that the base can be any value nb: base xrefs are created only if the offset base points to the middle of a segment </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="901" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_f_i_n_f_o___1ga1827c27c186580584e67479d04c659c9" prot="public" static="no">
        <name>REFINFO_SUBTRACT</name>
        <initializer>0x0100</initializer>
        <briefdescription>
<para>the reference value is subtracted from the base value instead of (as usual) being added to it </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="905" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_f_i_n_f_o___1ga3010e02fb9c255c0cb3bd222efca9889" prot="public" static="no">
        <name>REFINFO_SIGNEDOP</name>
        <initializer>0x0200</initializer>
        <briefdescription>
<para>the operand value is sign-extended (only supported for REF_OFF8/16/32/64) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="906" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="906" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_h_f___1ga0852fd188d493b20fb497f8c92bf2d9e" prot="public" static="no">
        <name>RHF_TGTOPT</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>operand value? </para>        </briefdescription>
        <detaileddescription>
<para>can the target be calculated using </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="952" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="952" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="nalt_8hpp_1a0be69d167c3b2004f3b786540982e174" prot="public" static="no">
        <name>MAXSTRUCPATH</name>
        <initializer>32</initializer>
        <briefdescription>
<para>maximal inclusion depth of unions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1060" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1060" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gaaf2cc2455663412158cc6209360b9cd2" prot="public" static="no">
        <name>RIDX_FILE_FORMAT_NAME</name>
        <initializer>1</initializer>
        <briefdescription>
<para>file format name for loader modules </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1168" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gaa4b4571f7deaa32c4791fcc36046351c" prot="public" static="no">
        <name>RIDX_SELECTORS</name>
        <initializer>2</initializer>
        <briefdescription>
<para>2..63 are for selector_t blob (see init_selectors()) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1169" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gac14e7eb47842728410a374c8049b1426" prot="public" static="no">
        <name>RIDX_GROUPS</name>
        <initializer>64</initializer>
        <briefdescription>
<para>segment group information (see init_groups()) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1170" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga1d455d13ae5c777e202d7fc0f8a8eac1" prot="public" static="no">
        <name>RIDX_H_PATH</name>
        <initializer>65</initializer>
        <briefdescription>
<para>C header path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1171" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gad859685bd0d37a93078dd7c9a95c83be" prot="public" static="no">
        <name>RIDX_C_MACROS</name>
        <initializer>66</initializer>
        <briefdescription>
<para>C predefined macros. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1172" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga38b311bfff26a951c4e64edbf51ecf23" prot="public" static="no">
        <name>RIDX_SMALL_IDC_OLD</name>
        <initializer>67</initializer>
        <briefdescription>
<para>Instant IDC statements (obsolete) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1173" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga082f6eb6908695f66708ae63406a8276" prot="public" static="no">
        <name>RIDX_NOTEPAD</name>
        <initializer>68</initializer>
        <briefdescription>
<para>notepad blob, occupies 1000 indexes (1MB of text) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1174" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gac712ccb630da7912e35b3ecf6ca050d1" prot="public" static="no">
        <name>RIDX_INCLUDE</name>
        <initializer>1100</initializer>
        <briefdescription>
<para>assembler include file name </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1175" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gaa20bfb67a3c58a7002da79647be44176" prot="public" static="no">
        <name>RIDX_SMALL_IDC</name>
        <initializer>1200</initializer>
        <briefdescription>
<para>Instant IDC statements, blob. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1176" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga54d68c9a9c19e7e288aaf710932b4452" prot="public" static="no">
        <name>RIDX_DUALOP_GRAPH</name>
        <initializer>1300</initializer>
        <briefdescription>
<para>Graph text representation options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1177" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gaebd10fc80b2d608eeb20ed675d87414b" prot="public" static="no">
        <name>RIDX_DUALOP_TEXT</name>
        <initializer>1301</initializer>
        <briefdescription>
<para>Text text representation options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1178" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gae868db06549077da82eec992e0fa2732" prot="public" static="no">
        <name>RIDX_MD5</name>
        <initializer>1302</initializer>
        <briefdescription>
<para>MD5 of the input file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1179" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga271dbb08bb5956a5ddf3a1fed120da19" prot="public" static="no">
        <name>RIDX_IDA_VERSION</name>
        <initializer>1303</initializer>
        <briefdescription>
<para>version of ida which created the database </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1180" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gaa0d43fa64fa40b76a42c9da0f3c29910" prot="public" static="no">
        <name>RIDX_STR_ENCODINGS</name>
        <initializer>1305</initializer>
        <briefdescription>
<para>a list of encodings for the program strings </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1182" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga6d85dd85b1f97cb7cef1527cf33a9446" prot="public" static="no">
        <name>RIDX_SRCDBG_PATHS</name>
        <initializer>1306</initializer>
        <briefdescription>
<para>source debug paths, occupies 20 indexes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1183" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gac8439377509a6e8d606d31d84d293c0c" prot="public" static="no">
        <name>RIDX_SELECTED_EXTLANG</name>
        <initializer>1327</initializer>
        <briefdescription>
<para>last selected extlang name (from the execute script box) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1184" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gaf0b0dc1aaf3fe2206de0b4192f6ccf71" prot="public" static="no">
        <name>RIDX_DBG_BINPATHS</name>
        <initializer>1328</initializer>
        <briefdescription>
<para>debug binary paths, occupies 20 indexes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1185" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gaaac8c63e683a8afac591fc8c2267ecfa" prot="public" static="no">
        <name>RIDX_SHA256</name>
        <initializer>1349</initializer>
        <briefdescription>
<para>SHA256 of the input file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1186" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga537ee0b38d6e5e00b790eebcfecef194" prot="public" static="no">
        <name>RIDX_ABINAME</name>
        <initializer>1350</initializer>
        <briefdescription>
<para>ABI name (processor specific) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1187" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga00d8334e8e2f9be654b4258d11c3f71a" prot="public" static="no">
        <name>RIDX_ARCHIVE_PATH</name>
        <initializer>1351</initializer>
        <briefdescription>
<para>archive file path </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1188" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gad725505a6cebc1d365f9c435e62706c1" prot="public" static="no">
        <name>RIDX_PROBLEMS</name>
        <initializer>1352</initializer>
        <briefdescription>
<para>problem lists </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1189" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga40bc404a6fc03534c5d019006bbd6918" prot="public" static="no">
        <name>RIDX_ALT_VERSION</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-1)</initializer>
        <briefdescription>
<para>initial version of database </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1192" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga694fe99c8f062addc73cae28d19e2ad0" prot="public" static="no">
        <name>RIDX_ALT_CTIME</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-2)</initializer>
        <briefdescription>
<para>database creation timestamp </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1193" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga986751cf0b47931b569c9c3cb18c6de8" prot="public" static="no">
        <name>RIDX_ALT_ELAPSED</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-3)</initializer>
        <briefdescription>
<para>seconds database stayed open </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1194" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga5ffe8df366d3a6c195fba8aa19b94732" prot="public" static="no">
        <name>RIDX_ALT_NOPENS</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-4)</initializer>
        <briefdescription>
<para>how many times the database is opened </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1195" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gad768bb14f68a3b07c13d03b08f76c7ca" prot="public" static="no">
        <name>RIDX_ALT_CRC32</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-5)</initializer>
        <briefdescription>
<para>input file crc32 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1196" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gacb68aa46937d6855f0d1885b60fbcd2f" prot="public" static="no">
        <name>RIDX_ALT_IMAGEBASE</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-6)</initializer>
        <briefdescription>
<para>image base </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1197" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga769a9760bab0d0f12b502d7111839cbb" prot="public" static="no">
        <name>RIDX_ALT_IDSNODE</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-7)</initializer>
        <briefdescription>
<para>ids modnode id (for import_module) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1198" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1ga70a3c19d89758c71c38514ee346ebdaf" prot="public" static="no">
        <name>RIDX_ALT_FSIZE</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-8)</initializer>
        <briefdescription>
<para>input file size </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1199" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_i_d_x___1gaaaadf291a8d8ebff1b45337d1e56fcca" prot="public" static="no">
        <name>RIDX_ALT_OUTFILEENC</name>
        <initializer><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(-9)</initializer>
        <briefdescription>
<para>output file encoding index </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1200" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" prot="public" static="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>typedef uchar reftype_t</definition>
        <argsstring></argsstring>
        <name>reftype_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>see <ref refid="group__reftype__" kindref="compound">Types of references</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="843" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="nalt_8hpp_1a33a102fb9123b0d556139bd4a6aa6ef1" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structrefinfo__desc__t" kindref="compound">refinfo_desc_t</ref> &gt;</type>
        <definition>typedef qvector&lt;refinfo_desc_t&gt; refinfo_desc_vec_t</definition>
        <argsstring></argsstring>
        <name>refinfo_desc_vec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1056" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1055" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="nalt_8hpp_1a7a9c029b924959e0fe4f14b3531fb733" prot="public" static="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>typedef uchar type_t</definition>
        <argsstring></argsstring>
        <name>type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1142" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="nalt_8hpp_1a828c7e985f83b1e74eb4ea7b716abfb1" prot="public" static="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>typedef uchar p_list</definition>
        <argsstring></argsstring>
        <name>p_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1143" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__reftype___1ga0af7cb168b7f616fdfa430ea1d6b4ac7" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t V695_REF_OFF8</definition>
        <argsstring></argsstring>
        <name>V695_REF_OFF8</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>reserved </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="856" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1gaae74e842ed8ee99ddb41f72ecbab35af" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t REF_OFF16</definition>
        <argsstring></argsstring>
        <name>REF_OFF16</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>16bit full offset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="857" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="857" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1ga9514307c2327fdf250734a64943e1c67" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t REF_OFF32</definition>
        <argsstring></argsstring>
        <name>REF_OFF32</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>32bit full offset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="858" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1ga8a051a5ffb83801f1ef3be5ad7601d1a" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t REF_LOW8</definition>
        <argsstring></argsstring>
        <name>REF_LOW8</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>low 8bits of 16bit offset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="859" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1ga9826b3a2fb1f480b1a818853819c1b46" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t REF_LOW16</definition>
        <argsstring></argsstring>
        <name>REF_LOW16</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>low 16bits of 32bit offset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="860" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1ga6e761c2d3dbe60df38eea11920fd43d4" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t REF_HIGH8</definition>
        <argsstring></argsstring>
        <name>REF_HIGH8</name>
        <initializer>= 5</initializer>
        <briefdescription>
<para>high 8bits of 16bit offset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="861" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1ga40d752f558717d282a5332180c1e4808" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t REF_HIGH16</definition>
        <argsstring></argsstring>
        <name>REF_HIGH16</name>
        <initializer>= 6</initializer>
        <briefdescription>
<para>high 16bits of 32bit offset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="862" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="862" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1ga49262374b8da752a3b850d552be5aa21" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t V695_REF_VHIGH</definition>
        <argsstring></argsstring>
        <name>V695_REF_VHIGH</name>
        <initializer>= 7</initializer>
        <briefdescription>
<para>obsolete </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="863" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="863" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1gac56e3cc10f9e0ceda8e85898bf9a5598" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t V695_REF_VLOW</definition>
        <argsstring></argsstring>
        <name>V695_REF_VLOW</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>obsolete </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="864" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1ga9b3b8bd451e1e2ca3dd6984b69306ac6" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t REF_OFF64</definition>
        <argsstring></argsstring>
        <name>REF_OFF64</name>
        <initializer>= 9</initializer>
        <briefdescription>
<para>64bit full offset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="865" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1ga67f77788a531e1c925f610704430744a" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t REF_OFF8</definition>
        <argsstring></argsstring>
        <name>REF_OFF8</name>
        <initializer>= 10</initializer>
        <briefdescription>
<para>8bit full offset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="866" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="866" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__reftype___1gaf65fc2b76bf46c6b58d7a41f3db3b266" prot="public" static="no" mutable="no">
        <type>const <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
        <definition>const reftype_t REF_LAST</definition>
        <argsstring></argsstring>
        <name>REF_LAST</name>
        <initializer>= <ref refid="group__reftype___1ga67f77788a531e1c925f610704430744a" kindref="member">REF_OFF8</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="867" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="867" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nalt_8hpp_1a2c3b2bbc4199a99713077189060659b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman nodeidx_t ida_export</type>
        <definition>idaman nodeidx_t ida_export ea2node</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>ea2node</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Get netnode for the specified address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ac8ee78e47bd70bc2d803723370f612b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman ea_t ida_export</type>
        <definition>idaman ea_t ida_export node2ea</definition>
        <argsstring>(nodeidx_t ndx)</argsstring>
        <name>node2ea</name>
        <param>
          <type>nodeidx_t</type>
          <declname>ndx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa89dc0c1903a09fdd8ec0902bfe58395" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnetnode" kindref="compound">netnode</ref></type>
        <definition>netnode getnode</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>getnode</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="177" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a609679298a44fca2169626e4132cb2bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_notcode</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_notcode</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Mark address so that it can not be converted to instruction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a6b8a9b959a89e32b98c99d43bfe17d1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clr_notcode</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>clr_notcode</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Clear not-code mark. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="377" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="377" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a5be10eaab243a96286aa64a0b736075f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_notcode</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_notcode</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Is the address marked as not-code? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="380" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="380" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a48ba87dbce849be89e4a65cb69166f5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_visible_item</definition>
        <argsstring>(ea_t ea, bool visible)</argsstring>
        <name>set_visible_item</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Change visibility of item at given ea. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="385" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="385" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ada33892972cf879fa82a5cda895c0e00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_visible_item</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_visible_item</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Test visibility of item at given ea. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="395" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="395" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a32f3ab02a9df99608113328105c5d8a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_finally_visible_item</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_finally_visible_item</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Is instruction visible? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="400" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="400" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a9a067a2581e5e842ec2866797d38adff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_reftype_target_optional</definition>
        <argsstring>(reftype_t type)</argsstring>
        <name>is_reftype_target_optional</name>
        <param>
          <type><ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Can the target be calculated using operand value? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="872" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1024" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a444b565bd673d5cd77ffedbf33163abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="nalt_8hpp_1aa749dc39c69b710b5fcd35616b8267a9" kindref="member">reftype_t</ref> ida_export</type>
        <definition>idaman reftype_t ida_export get_reftype_by_size</definition>
        <argsstring>(size_t size)</argsstring>
        <name>get_reftype_by_size</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get REF_... constant from size Supported sizes: 1,2,4,8,16 For other sizes returns reftype_t(-1) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="878" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a98fabd08156f6aa66e57474e875a40ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export register_custom_refinfo</definition>
        <argsstring>(const custom_refinfo_handler_t *crh)</argsstring>
        <name>register_custom_refinfo</name>
        <param>
          <type>const <ref refid="structcustom__refinfo__handler__t" kindref="compound">custom_refinfo_handler_t</ref> *</type>
          <declname>crh</declname>
        </param>
        <briefdescription>
<para>Register a new custom refinfo type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="997" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a849ce1ddccc475b35d19177552ff592c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export unregister_custom_refinfo</definition>
        <argsstring>(int crid)</argsstring>
        <name>unregister_custom_refinfo</name>
        <param>
          <type>int</type>
          <declname>crid</declname>
        </param>
        <briefdescription>
<para>Unregister a new custom refinfo type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1002" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7e74ed0d52ca6a4d508b20b08812b95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export find_custom_refinfo</definition>
        <argsstring>(const char *name)</argsstring>
        <name>find_custom_refinfo</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get id of a custom refinfo type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1007" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a2519af588388c1f9c39540aa796ee8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman const <ref refid="structcustom__refinfo__handler__t" kindref="compound">custom_refinfo_handler_t</ref> *ida_export</type>
        <definition>idaman const custom_refinfo_handler_t* ida_export get_custom_refinfo</definition>
        <argsstring>(int crid)</argsstring>
        <name>get_custom_refinfo</name>
        <param>
          <type>int</type>
          <declname>crid</declname>
        </param>
        <briefdescription>
<para>Get definition of a registered custom refinfo type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1012" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a683d0d92b8fcc2c6767c44842c2dfc7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structcustom__refinfo__handler__t" kindref="compound">custom_refinfo_handler_t</ref> *idaapi</type>
        <definition>const custom_refinfo_handler_t* idaapi get_custom_refinfo_handler</definition>
        <argsstring>(const refinfo_t &amp;ri)</argsstring>
        <name>get_custom_refinfo_handler</name>
        <param>
          <type>const <ref refid="structrefinfo__t" kindref="compound">refinfo_t</ref> &amp;</type>
          <declname>ri</declname>
        </param>
        <briefdescription>
<para>Get refinfo handler. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1017" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1017" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa21998b302060bd74a6a80354f86ea97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export get_refinfo_descs</definition>
        <argsstring>(refinfo_desc_vec_t *descs)</argsstring>
        <name>get_refinfo_descs</name>
        <param>
          <type><ref refid="classqvector" kindref="compound">refinfo_desc_vec_t</ref> *</type>
          <declname>descs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1057" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a27eb82cea239e38f17c894ce05ad354a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> idaapi</type>
        <definition>ssize_t idaapi get_input_file_path</definition>
        <argsstring>(char *buf, size_t bufsize)</argsstring>
        <name>get_input_file_path</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
<para>Get full path of the input file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1206" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1206" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1abe336e81f0c2b967d561aa9cdf7db60c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman ssize_t ida_export get_root_filename</definition>
        <argsstring>(char *buf, size_t bufsize)</argsstring>
        <name>get_root_filename</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
<para>Get file name only of the input file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a50543084f245fe52ffde3a6e51de97dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_root_filename</definition>
        <argsstring>(const char *file)</argsstring>
        <name>set_root_filename</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Set full path of the input file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1218" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1218" bodyend="1218"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a140f0833b5a2c617b95a98cd09a17bd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> idaapi</type>
        <definition>uint32 idaapi retrieve_input_file_size</definition>
        <argsstring>(void)</argsstring>
        <name>retrieve_input_file_size</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get size of input file in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1223" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1223" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a805e0c0e84a970c40880c90ecc6a61a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> idaapi</type>
        <definition>uint32 idaapi retrieve_input_file_crc32</definition>
        <argsstring>(void)</argsstring>
        <name>retrieve_input_file_crc32</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get input file crc32 stored in the database. it can be used to check that the input file has not been changed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1229" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1229" bodyend="1229"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1adc82748fc703f6f0afd8892ca9718ad3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi retrieve_input_file_md5</definition>
        <argsstring>(uchar hash[16])</argsstring>
        <name>retrieve_input_file_md5</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>hash</declname>
          <array>[16]</array>
        </param>
        <briefdescription>
<para>Get input file md5. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1233" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1233" bodyend="1233"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ab40638e3f320d38d89cca038175600a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi retrieve_input_file_sha256</definition>
        <argsstring>(uchar hash[32])</argsstring>
        <name>retrieve_input_file_sha256</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>hash</declname>
          <array>[32]</array>
        </param>
        <briefdescription>
<para>Get input file sha256. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1237" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1237" bodyend="1237"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1acce19cd5bc293c20d042b2290e234028" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> idaapi</type>
        <definition>ssize_t idaapi get_asm_inc_file</definition>
        <argsstring>(qstring *buf)</argsstring>
        <name>get_asm_inc_file</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Get name of the include file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1242" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1242" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a009b406a188de0947443be40cd0e3052" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi set_asm_inc_file</definition>
        <argsstring>(const char *file)</argsstring>
        <name>set_asm_inc_file</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Set name of the include file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1246" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1246" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1afca1b6a7bdd1c05fc579580e29e902ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t idaapi</type>
        <definition>ea_t idaapi get_imagebase</definition>
        <argsstring>(void)</argsstring>
        <name>get_imagebase</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get image base address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1251" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1251" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a4b923c55dbae3cd550175a6ea8da955e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi set_imagebase</definition>
        <argsstring>(ea_t base)</argsstring>
        <name>set_imagebase</name>
        <param>
          <type>ea_t</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Set image base address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1255" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1255" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a1a0a2c86041f8c2256e683bf12f8b347" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnetnode" kindref="compound">netnode</ref> idaapi</type>
        <definition>netnode idaapi get_ids_modnode</definition>
        <argsstring>(void)</argsstring>
        <name>get_ids_modnode</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get ids modnode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1260" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1260" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1abb4811c673fc4316cd357d4fb2ee83b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi set_ids_modnode</definition>
        <argsstring>(netnode id)</argsstring>
        <name>set_ids_modnode</name>
        <param>
          <type><ref refid="classnetnode" kindref="compound">netnode</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set ids modnode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1264" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1264" bodyend="1264"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1ad81c3e2220ef4d2f56fd1c520a022b7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
        <definition>ssize_t dbg_get_input_path</definition>
        <argsstring>(char *buf, size_t bufsize)</argsstring>
        <name>dbg_get_input_path</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
<para>Get debugger input file name/path (see <ref refid="group___l_f_l_g___1gad1b6b0482fdf4570ee69aaab85c0d012" kindref="member">LFLG_DBG_NOPATH</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1269" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1269" bodyend="1275"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aa3cdc48ab3b8447f89389c3d6ee79f9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> idaapi</type>
        <definition>ssize_t idaapi get_archive_path</definition>
        <argsstring>(qstring *buf)</argsstring>
        <name>get_archive_path</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Get archive file path from which input file was extracted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1279" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1279" bodyend="1279"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1aaf53ab9994f0b02bf9fe8e91947fdce1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi set_archive_path</definition>
        <argsstring>(const char *file)</argsstring>
        <name>set_archive_path</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Set archive file path from which input file was extracted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1283" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1283" bodyend="1283"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1adebe8e98a49377ce3f39bdb6ad135ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export validate_idb_names2</definition>
        <argsstring>(bool do_repair)</argsstring>
        <name>validate_idb_names2</name>
        <param>
          <type>bool</type>
          <declname>do_repair</declname>
        </param>
        <briefdescription>
<para>Check consistency of name records, return number of bad ones. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a188e2dab1c33fdff8918bd7a682649db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_gotea</definition>
        <argsstring>(ea_t gotea)</argsstring>
        <name>set_gotea</name>
        <param>
          <type>ea_t</type>
          <declname>gotea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1459" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1459" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="nalt_8hpp_1a7a26fb8bf5f5e4aaeaba320ed23e859e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t get_gotea</definition>
        <argsstring>(void)</argsstring>
        <name>get_gotea</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="1468" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="1468" bodyend="1472"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definitions of various information kept in netnodes. </para>    </briefdescription>
    <detaileddescription>
<para>Each address in the program has a corresponding netnode: <ref refid="classnetnode" kindref="compound">netnode(ea)</ref>.</para><para>If we have no information about an address, the corresponding netnode is not created. Otherwise we will create a netnode and save information in it. All variable length information (names, comments, offset information, etc) is stored in the netnode.</para><para>Don&apos;t forget that some information is already stored in the flags (<ref refid="bytes_8hpp" kindref="compound">bytes.hpp</ref>)</para><para><simplesect kind="warning"><para>Many of the functions in this file are very low level (they are marked as low level functions). Use them only if you can&apos;t find higher level function to set/get/del information.</para></simplesect>
You can create your own nodes in IDP module and store information in them. See <ref refid="classnetnode" kindref="compound">netnode</ref>. </para>    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp"/>
  </compounddef>
</doxygen>
