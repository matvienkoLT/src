<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="problems_8hpp" kind="file" language="C++">
    <compoundname>problems.hpp</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" prot="public" static="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>typedef uchar problist_id_t</definition>
        <argsstring></argsstring>
        <name>problist_id_t</name>
        <briefdescription>
<para>see <ref refid="group___p_r__" kindref="compound">Processor feature bits</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="27" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___p_r___1gae47bdf093271b8e1547bb089866b7cc6" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_NOBASE</definition>
        <argsstring></argsstring>
        <name>PR_NOBASE</name>
        <initializer>=  1</initializer>
        <briefdescription>
<para>Can&apos;t find offset base. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="32" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga5b8f59b65f5613ca1d654d7db1f6f776" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_NONAME</definition>
        <argsstring></argsstring>
        <name>PR_NONAME</name>
        <initializer>=  2</initializer>
        <briefdescription>
<para>Can&apos;t find name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="33" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1gae5ea1ecda1e95244c6e03d3dc74091a6" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_NOFOP</definition>
        <argsstring></argsstring>
        <name>PR_NOFOP</name>
        <initializer>=  3</initializer>
        <briefdescription>
<para>Can&apos;t find forced op (not used anymore) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="34" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga5ccfcf272e8a0708ab35f05adfb907e0" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_NOCMT</definition>
        <argsstring></argsstring>
        <name>PR_NOCMT</name>
        <initializer>=  4</initializer>
        <briefdescription>
<para>Can&apos;t find comment (not used anymore) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="35" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga544a6f6c46012a37474d3200db4ff8b3" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_NOXREFS</definition>
        <argsstring></argsstring>
        <name>PR_NOXREFS</name>
        <initializer>=  5</initializer>
        <briefdescription>
<para>Can&apos;t find references. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="36" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga3e9416029c514689836610db503cbb82" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_JUMP</definition>
        <argsstring></argsstring>
        <name>PR_JUMP</name>
        <initializer>=  6</initializer>
        <briefdescription>
<para>Jump by table !!!! ignored. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="37" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga712a7c428f320468a1e94cf2590f934e" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_DISASM</definition>
        <argsstring></argsstring>
        <name>PR_DISASM</name>
        <initializer>=  7</initializer>
        <briefdescription>
<para>Can&apos;t disasm. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="38" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga4eaa93a7a2f353d9084f7423577ad1db" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_HEAD</definition>
        <argsstring></argsstring>
        <name>PR_HEAD</name>
        <initializer>=  8</initializer>
        <briefdescription>
<para>Already head. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="39" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1gad32ba69b3fd0a9e8acb7e9974cc61dcb" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_ILLADDR</definition>
        <argsstring></argsstring>
        <name>PR_ILLADDR</name>
        <initializer>=  9</initializer>
        <briefdescription>
<para>Exec flows beyond limits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="40" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga205ffdd8d5ec23da5f721fdcd30495b2" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_MANYLINES</definition>
        <argsstring></argsstring>
        <name>PR_MANYLINES</name>
        <initializer>= 10</initializer>
        <briefdescription>
<para>Too many lines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="41" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga5d4e0e574b47d9e8cc8c2ae42dcdd491" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_BADSTACK</definition>
        <argsstring></argsstring>
        <name>PR_BADSTACK</name>
        <initializer>= 11</initializer>
        <briefdescription>
<para>Failed to trace the value of the stack pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="42" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1gab9c9410fd6682e3087c9bee2b3d883f9" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_ATTN</definition>
        <argsstring></argsstring>
        <name>PR_ATTN</name>
        <initializer>= 12</initializer>
        <briefdescription>
<para>Attention! Probably erroneous situation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="43" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1gaac4aecc8711d954a5900e18f490b1ed8" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_FINAL</definition>
        <argsstring></argsstring>
        <name>PR_FINAL</name>
        <initializer>= 13</initializer>
        <briefdescription>
<para>Decision to convert to instruction/data is made by IDA. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="44" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga52ab81c82558abfb63f416c96c9cd5c0" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_ROLLED</definition>
        <argsstring></argsstring>
        <name>PR_ROLLED</name>
        <initializer>= 14</initializer>
        <briefdescription>
<para>The decision made by IDA was wrong and rolled back. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="45" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1gad463de62fcff4c16152b8766c76e18a5" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_COLLISION</definition>
        <argsstring></argsstring>
        <name>PR_COLLISION</name>
        <initializer>= 15</initializer>
        <briefdescription>
<para>FLAIR collision: the function with the given name already exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="46" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga5d6bb322c78d734853f8ce5eb5459490" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_DECIMP</definition>
        <argsstring></argsstring>
        <name>PR_DECIMP</name>
        <initializer>= 16</initializer>
        <briefdescription>
<para>FLAIR match indecision: the patterns matched, but not the function(s) being referenced. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="47" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___p_r___1ga02b1e5922eaefcf4043094bd3139c13e" prot="public" static="no" mutable="no">
        <type>const <ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
        <definition>const problist_id_t PR_END</definition>
        <argsstring></argsstring>
        <name>PR_END</name>
        <initializer>= 17</initializer>
        <briefdescription>
<para>Number of problem types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="48" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="problems_8hpp_1a63539fafd2ef44b63239e775b64b5642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman ssize_t ida_export get_problem_desc</definition>
        <argsstring>(qstring *buf, problist_id_t t, ea_t ea)</argsstring>
        <name>get_problem_desc</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the human-friendly description of the problem, if one was provided to remember_problem. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer to store the message into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>problem list type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>linear address. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the message length or -1 if none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="problems_8hpp_1ac35d17c7fd06e3f9619ddf6152fe07de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export remember_problem</definition>
        <argsstring>(problist_id_t type, ea_t ea, const char *msg=NULL)</argsstring>
        <name>remember_problem</name>
        <param>
          <type><ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert an address to a list of problems. Display a message saying about the problem (except of <ref refid="group___p_r___1gab9c9410fd6682e3087c9bee2b3d883f9" kindref="member">PR_ATTN</ref>,<ref refid="group___p_r___1gaac4aecc8711d954a5900e18f490b1ed8" kindref="member">PR_FINAL</ref>) <ref refid="group___p_r___1ga3e9416029c514689836610db503cbb82" kindref="member">PR_JUMP</ref> is temporarily ignored. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>problem list type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>linear address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>a user-friendly message to be displayed instead of the default more generic one associated with the type of problem. Defaults to NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="problems_8hpp_1a6228b34f1387cbbc01599621d546e917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman ea_t ida_export</type>
        <definition>idaman ea_t ida_export get_problem</definition>
        <argsstring>(problist_id_t type, ea_t lowea)</argsstring>
        <name>get_problem</name>
        <param>
          <type><ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>lowea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an address from the specified problem list. The address is not removed from the list. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>problem list type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lowea</parametername>
</parameternamelist>
<parameterdescription>
<para>the returned address will be higher or equal than the specified address </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>linear address or <ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="problems_8hpp_1a0095c68e7ff8de5111a5d470daed35ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export forget_problem</definition>
        <argsstring>(problist_id_t type, ea_t ea)</argsstring>
        <name>forget_problem</name>
        <param>
          <type><ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove an address from a problem list <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>problem list type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>linear address </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="problems_8hpp_1a6451a4d294c156e2126b17ceb00de36c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman const char *ida_export</type>
        <definition>idaman const char* ida_export get_problem_name</definition>
        <argsstring>(problist_id_t type, bool longname=true)</argsstring>
        <name>get_problem_name</name>
        <param>
          <type><ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>longname</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Get problem list description. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="problems_8hpp_1ab4f8df3f7725058ed2714dd50074d074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export is_problem_present</definition>
        <argsstring>(problist_id_t t, ea_t ea)</argsstring>
        <name>is_problem_present</name>
        <param>
          <type><ref refid="problems_8hpp_1a4f3ade0df3244330d5d3f8e68537bf93" kindref="member">problist_id_t</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Check if the specified address is present in the problem list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="problems_8hpp_1ad9d5ed66e0e0104047bc192c3d552027" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool was_ida_decision</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>was_ida_decision</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" line="101" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions that deal with the list of problems. </para>    </briefdescription>
    <detaileddescription>
<para>There are several problem lists. An address may be inserted to any list. The kernel simply maintains these lists, no additional processing is done.</para><para>The problem lists are accessible for the user from the View-&gt;Subviews-&gt;Problems menu item.</para><para>Addresses in the lists are kept sorted. In general IDA just maintains these lists without using them during analysis (except PR_ROLLED). </para>    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/problems.hpp"/>
  </compounddef>
</doxygen>
