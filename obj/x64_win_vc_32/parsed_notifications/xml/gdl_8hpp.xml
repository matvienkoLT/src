<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="gdl_8hpp" kind="file" language="C++">
    <compoundname>gdl.hpp</compoundname>
    <includes local="no">map</includes>
    <includes local="no">set</includes>
    <includes refid="funcs_8hpp" local="no">funcs.hpp</includes>
    <includedby refid="hexrays_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</includedby>
    <includedby refid="graph_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</includedby>
    <incdepgraph>
      <node id="454">
        <label>sys/stat.h</label>
      </node>
      <node id="439">
        <label>stdarg.h</label>
      </node>
      <node id="442">
        <label>assert.h</label>
      </node>
      <node id="436">
        <label>ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
      </node>
      <node id="438">
        <label>stdlib.h</label>
      </node>
      <node id="450">
        <label>io.h</label>
      </node>
      <node id="452">
        <label>fcntl.h</label>
      </node>
      <node id="455">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="448">
        <label>malloc.h</label>
      </node>
      <node id="447">
        <label>string</label>
      </node>
      <node id="430">
        <label>map</label>
      </node>
      <node id="451">
        <label>direct.h</label>
      </node>
      <node id="440">
        <label>stddef.h</label>
      </node>
      <node id="435">
        <label>nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>lines.hpp</label>
        <link refid="lines_8hpp"/>
        <childnode refid="436" relation="include">
        </childnode>
      </node>
      <node id="443">
        <label>limits.h</label>
      </node>
      <node id="453">
        <label>sys/types.h</label>
      </node>
      <node id="449">
        <label>string.h</label>
      </node>
      <node id="429">
        <label>obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp</label>
        <link refid="gdl_8hpp"/>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
      </node>
      <node id="446">
        <label>new</label>
      </node>
      <node id="432">
        <label>funcs.hpp</label>
        <link refid="funcs_8hpp"/>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
      </node>
      <node id="437">
        <label>pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="445">
        <label>time.h</label>
      </node>
      <node id="434">
        <label>bytes.hpp</label>
        <link refid="bytes_8hpp"/>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
      </node>
      <node id="444">
        <label>ctype.h</label>
      </node>
      <node id="433">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
      </node>
      <node id="456">
        <label>netnode.hpp</label>
        <link refid="netnode_8hpp"/>
        <childnode refid="433" relation="include">
        </childnode>
      </node>
      <node id="431">
        <label>set</label>
      </node>
      <node id="441">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="460">
        <label>obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</label>
        <link refid="graph_8hpp"/>
      </node>
      <node id="458">
        <label>obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp</label>
        <link refid="gdl_8hpp"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</label>
        <link refid="hexrays_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classintset__t" prot="public">intset_t</innerclass>
    <innerclass refid="classintmap__t" prot="public">intmap_t</innerclass>
    <innerclass refid="classnode__set__t" prot="public">node_set_t</innerclass>
    <innerclass refid="classnode__iterator" prot="public">node_iterator</innerclass>
    <innerclass refid="classgdl__graph__t" prot="public">gdl_graph_t</innerclass>
    <innerclass refid="classcancellable__graph__t" prot="public">cancellable_graph_t</innerclass>
    <innerclass refid="structqbasic__block__t" prot="public">qbasic_block_t</innerclass>
    <innerclass refid="classqflow__chart__t" prot="public">qflow_chart_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="gdl_8hpp_1ab1d48ed92622028acf7efc8d766751cd" prot="public" static="no">
        <name>DECLARE_HELPER</name>
        <param><defname>decl</defname></param>
        <initializer>decl <ref refid="classnode__iterator" kindref="compound">node_iterator</ref> *ida_export node_iterator_goup(<ref refid="classnode__iterator" kindref="compound">node_iterator</ref> *); \
decl void ida_export create_qflow_chart(<ref refid="classqflow__chart__t" kindref="compound">qflow_chart_t</ref> &amp;);           \
decl bool ida_export append_to_flowchart(<ref refid="classqflow__chart__t" kindref="compound">qflow_chart_t</ref> &amp;, ea_t, ea_t); \
decl <ref refid="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bd" kindref="member">fc_block_type_t</ref> ida_export fc_calc_block_type(const <ref refid="classqflow__chart__t" kindref="compound">qflow_chart_t</ref> &amp;, size_t); \
decl bool ida_export create_multirange_qflow_chart(<ref refid="classqflow__chart__t" kindref="compound">qflow_chart_t</ref> &amp;, const <ref refid="structrangevec__t" kindref="compound">rangevec_t</ref> &amp;);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="45" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__1_1ga62540274d300f2717736ca15a5283fc3" prot="public" static="no">
        <name>CHART_PRINT_NAMES</name>
        <initializer>0x1000</initializer>
        <briefdescription>
<para>print labels for each block? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="204" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__1_1gaf7fd4d296b9ac7d6c999430c36ba5928" prot="public" static="no">
        <name>CHART_GEN_DOT</name>
        <initializer>0x2000</initializer>
        <briefdescription>
<para>generate .dot file (file extension is forced to .dot) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="205" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__1_1ga491a489656cc152f2e33cde871b3dfeb" prot="public" static="no">
        <name>CHART_GEN_GDL</name>
        <initializer>0x4000</initializer>
        <briefdescription>
<para>generate .gdl file (file extension is forced to .gdl) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="206" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__1_1ga824745a58fb5f6df32a410ff1f5e8cb9" prot="public" static="no">
        <name>CHART_WINGRAPH</name>
        <initializer>0x8000</initializer>
        <briefdescription>
<para>call grapher to display the graph </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="207" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1gafb1d213b42a0d904bf524a9cf683c56a" prot="public" static="no">
        <name>CHART_NOLIBFUNCS</name>
        <initializer>0x0400</initializer>
        <briefdescription>
<para>don&apos;t include library functions in the graph </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="256" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1ga66caa3a82049d2bf182dc92098ca693b" prot="public" static="no">
        <name>CHART_REFERENCING</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>references to the addresses in the list </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="257" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1ga95de1317d44f28e9c55ec9e429b60c20" prot="public" static="no">
        <name>CHART_REFERENCED</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>references from the addresses in the list </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="258" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1ga433457956d5baa22e6d811b7ebaf970d" prot="public" static="no">
        <name>CHART_RECURSIVE</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>analyze added blocks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="259" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1gae2b2cbde494562e9cbf76d0ad374b139" prot="public" static="no">
        <name>CHART_FOLLOW_DIRECTION</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>analyze references to added blocks only in the direction of the reference who discovered the current block </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="260" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1ga41cd981527cfeb7f41829b4a36a51763" prot="public" static="no">
        <name>CHART_IGNORE_XTRN</name>
        <initializer>0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="261" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1ga4c722df964302e5f29e31ae9cdaa4ef0" prot="public" static="no">
        <name>CHART_IGNORE_DATA_BSS</name>
        <initializer>0x0020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="262" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1ga02f76a08923996223c388f5e3a43cb6e" prot="public" static="no">
        <name>CHART_IGNORE_LIB_TO</name>
        <initializer>0x0040</initializer>
        <briefdescription>
<para>ignore references to library functions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="263" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1ga2a62e993ab793d4fea0da97941f98234" prot="public" static="no">
        <name>CHART_IGNORE_LIB_FROM</name>
        <initializer>0x0080</initializer>
        <briefdescription>
<para>ignore references from library functions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="264" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1ga627a4fbcf9963ca1d30f3dc6eb2d279a" prot="public" static="no">
        <name>CHART_PRINT_COMMENTS</name>
        <initializer>0x0100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="265" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_a_r_t__2_1ga37b5da807556f156e6bbd53e809c8efb" prot="public" static="no">
        <name>CHART_PRINT_DOTS</name>
        <initializer>0x0200</initializer>
        <briefdescription>
<para>print dots if xrefs exist outside of the range recursion depth </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="266" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c___1ga8d251777f6a222a22b1dc36f5e5aa871" prot="public" static="no">
        <name>FC_PRINT</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>print names (used only by display_flow_chart()) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="312" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c___1gaeb72e2c1657868b5d11e9e04503321c2" prot="public" static="no">
        <name>FC_NOEXT</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do not compute external blocks. Use this to prevent jumps leaving the function from appearing in the flow chart. Unless specified, the targets of those outgoing jumps will be present in the flow chart under the form of one-instruction blocks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="313" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c___1ga1239629ea490a2a4c301d3a9865adfbf" prot="public" static="no">
        <name>FC_PREDS</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>compute predecessor lists </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="317" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c___1ga39827e1bf3e9a26d2bfb7e525108af3e" prot="public" static="no">
        <name>FC_APPND</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>multirange flowchart (set by append_to_flowchart) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="318" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c___1ga6b6e640baba9a46467937ce7399785a0" prot="public" static="no">
        <name>FC_CHKBREAK</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>build_qflow_chart() may be aborted by user </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="319" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bd" prot="public" static="no">
        <name>fc_block_type_t</name>
        <enumvalue id="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bda04b9c1a0967d22c9e8ad7729d996fc02" prot="public">
          <name>fcb_normal</name>
          <briefdescription>
<para>normal block </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bda8d2d0dc32bf5afb00766a6335270ea50" prot="public">
          <name>fcb_indjump</name>
          <briefdescription>
<para>block ends with indirect jump </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bda33910a87f089f074ed59585bb9639bd9" prot="public">
          <name>fcb_ret</name>
          <briefdescription>
<para>return block </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bda53570dd8360539ad7b53a9a1e854b566" prot="public">
          <name>fcb_cndret</name>
          <briefdescription>
<para>conditional return block </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bda4041fe356b6c7b25f50ac7eeb3fb233c" prot="public">
          <name>fcb_noret</name>
          <briefdescription>
<para>noreturn block </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bda51ffb19737bb56c728e861b880f1288c" prot="public">
          <name>fcb_enoret</name>
          <briefdescription>
<para>external noreturn block (does not belong to the function) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bda8e3f6f2e40279a64b2c5f8f56db0372e" prot="public">
          <name>fcb_extern</name>
          <briefdescription>
<para>external normal block </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bda825a4677e8af07db93a84588c908611d" prot="public">
          <name>fcb_error</name>
          <briefdescription>
<para>block passes execution past the function end </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flow chart block types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="33" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="32" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gdl_8hpp_1a9e544d2aa6d2265e46b160acbaad5581" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" kindref="member">intvec_t</ref> &gt;</type>
        <definition>typedef qvector&lt;intvec_t&gt; array_of_intvec_t</definition>
        <argsstring></argsstring>
        <name>array_of_intvec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="73" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gdl_8hpp_1ab40f356357f5fdde55026df205c05752" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classintmap__t" kindref="compound">intmap_t</ref> &gt;</type>
        <definition>typedef qvector&lt;intmap_t&gt; array_of_intmap_t</definition>
        <argsstring></argsstring>
        <name>array_of_intmap_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="84" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gdl_8hpp_1a56c517ea504e19a7a395d4c3fb438e57" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classnode__set__t" kindref="compound">node_set_t</ref> &gt;</type>
        <definition>typedef qvector&lt;node_set_t&gt; array_of_node_set_t</definition>
        <argsstring></argsstring>
        <name>array_of_node_set_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="103" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="gdl_8hpp_1a95c4958df5b9105914c03d03144f32b1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int default_graph_format</definition>
        <argsstring></argsstring>
        <name>default_graph_format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Format to generate when not specified in the flags. (e.g. called from UI). the default is set in ida.cfg. 0 - GDL, 1 - DOT. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="214" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gdl_8hpp_1a5156b6c8b6ec23fd5bddc007292bd8ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export gen_gdl</definition>
        <argsstring>(const gdl_graph_t *g, const char *fname)</argsstring>
        <name>gen_gdl</name>
        <param>
          <type>const <ref refid="classgdl__graph__t" kindref="compound">gdl_graph_t</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>Create GDL file for graph. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdl_8hpp_1a972b37638d9cb8b5aa1111d73c545717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export display_gdl</definition>
        <argsstring>(const char *fname)</argsstring>
        <name>display_gdl</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display GDL file by calling wingraph32. The exact name of the grapher is taken from the configuration file and set up by <ref refid="gdl_8hpp_1a9850e7542b56aa9030a39a6b31b73002" kindref="member">setup_graph_subsystem()</ref>. <simplesect kind="return"><para>error code from os, 0 if ok </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdl_8hpp_1a93196a671ccab264b2295fba6649842e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export gen_flow_graph</definition>
        <argsstring>(const char *filename, const char *title, func_t *pfn, ea_t ea1, ea_t ea2, int gflags)</argsstring>
        <name>gen_flow_graph</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea1</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build and display a flow graph. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>output file name. the file extension is not used. maybe NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>graph title </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pfn</parametername>
</parameternamelist>
<parameterdescription>
<para>function to graph </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea1</parametername>
<parametername>ea2</parametername>
</parameternamelist>
<parameterdescription>
<para>if pfn == NULL, then the address range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gflags</parametername>
</parameternamelist>
<parameterdescription>
<para>combination of <ref refid="group___c_h_a_r_t__1" kindref="compound">Flow graph building flags</ref>. if none of <ref refid="group___c_h_a_r_t__1_1gaf7fd4d296b9ac7d6c999430c36ba5928" kindref="member">CHART_GEN_DOT</ref>, <ref refid="group___c_h_a_r_t__1_1ga491a489656cc152f2e33cde871b3dfeb" kindref="member">CHART_GEN_GDL</ref>, <ref refid="group___c_h_a_r_t__1_1ga824745a58fb5f6df32a410ff1f5e8cb9" kindref="member">CHART_WINGRAPH</ref> is specified, the function will return false </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success. if fails, a warning message is displayed on the screen </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdl_8hpp_1a5a274129caa64ff5ec5916f2fc77a8da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export gen_simple_call_chart</definition>
        <argsstring>(const char *filename, const char *wait, const char *title, int gflags)</argsstring>
        <name>gen_simple_call_chart</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>wait</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build and display a simple function call graph. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>output file name. the file extension is not used. maybe NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>message to display during graph building </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>graph title </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gflags</parametername>
</parameternamelist>
<parameterdescription>
<para>combination of <ref refid="group___c_h_a_r_t__2_1gafb1d213b42a0d904bf524a9cf683c56a" kindref="member">CHART_NOLIBFUNCS</ref> and <ref refid="group___c_h_a_r_t__1" kindref="compound">Flow graph building flags</ref>. if none of <ref refid="group___c_h_a_r_t__1_1gaf7fd4d296b9ac7d6c999430c36ba5928" kindref="member">CHART_GEN_DOT</ref>, <ref refid="group___c_h_a_r_t__1_1ga491a489656cc152f2e33cde871b3dfeb" kindref="member">CHART_GEN_GDL</ref>, <ref refid="group___c_h_a_r_t__1_1ga824745a58fb5f6df32a410ff1f5e8cb9" kindref="member">CHART_WINGRAPH</ref> is specified, the function will return false. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success. if fails, a warning message is displayed on the screen </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdl_8hpp_1aac8b0045428d6613e1ed4b7dac3fb486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export gen_complex_call_chart</definition>
        <argsstring>(const char *filename, const char *wait, const char *title, ea_t ea1, ea_t ea2, int flags, int32 recursion_depth=-1)</argsstring>
        <name>gen_complex_call_chart</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>wait</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea1</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
          <declname>recursion_depth</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build and display a complex xref graph. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>output file name. the file extension is not used. maybe NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>message to display during graph building </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>graph title </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea1</parametername>
<parametername>ea2</parametername>
</parameternamelist>
<parameterdescription>
<para>address range </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>combination of <ref refid="group___c_h_a_r_t__2" kindref="compound">Call chart building flags</ref> and <ref refid="group___c_h_a_r_t__1" kindref="compound">Flow graph building flags</ref>. if none of <ref refid="group___c_h_a_r_t__1_1gaf7fd4d296b9ac7d6c999430c36ba5928" kindref="member">CHART_GEN_DOT</ref>, <ref refid="group___c_h_a_r_t__1_1ga491a489656cc152f2e33cde871b3dfeb" kindref="member">CHART_GEN_GDL</ref>, <ref refid="group___c_h_a_r_t__1_1ga824745a58fb5f6df32a410ff1f5e8cb9" kindref="member">CHART_WINGRAPH</ref> is specified, the function will return false. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recursion_depth</parametername>
</parameternamelist>
<parameterdescription>
<para>optional limit of recursion </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success. if fails, a warning message is displayed on the screen </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdl_8hpp_1a9850e7542b56aa9030a39a6b31b73002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export setup_graph_subsystem</definition>
        <argsstring>(const char *_grapher, bgcolor_t(idaapi *get_graph_color)(int color))</argsstring>
        <name>setup_graph_subsystem</name>
        <param>
          <type>const char *</type>
          <declname>_grapher</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a3df5040891132e50157aee66affdf1de" kindref="member">bgcolor_t</ref>(idaapi *)(int color)</type>
          <declname>get_graph_color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup the user-defined graph colors and graph viewer program. This function is called by the GUI at the beginning, so no need to call it again. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gdl_8hpp_1a35dba071b53b087250ea4cb33d5d86bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_noret_block</definition>
        <argsstring>(fc_block_type_t btype)</argsstring>
        <name>is_noret_block</name>
        <param>
          <type><ref refid="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bd" kindref="member">fc_block_type_t</ref></type>
          <declname>btype</declname>
        </param>
        <briefdescription>
<para>Does this block never return? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="298" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="gdl_8hpp_1ae73c48841b2788030686a50b83ec3d82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_ret_block</definition>
        <argsstring>(fc_block_type_t btype)</argsstring>
        <name>is_ret_block</name>
        <param>
          <type><ref refid="gdl_8hpp_1afa6fb2b53981d849d63273abbb1624bd" kindref="member">fc_block_type_t</ref></type>
          <declname>btype</declname>
        </param>
        <briefdescription>
<para>Does this block return? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="304" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="304" bodyend="307"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Low level graph drawing operations. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp"/>
  </compounddef>
</doxygen>
