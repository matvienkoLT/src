<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group___s_n__" kind="group">
    <compoundname>SN_</compoundname>
    <title>Set name flags</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___s_n___1ga1458a641d26514c3464c986b74d003aa" prot="public" static="no">
        <name>SN_CHECK</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="57" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1gad7882b24fb8463d16e80274851e0e203" prot="public" static="no">
        <name>SN_NOCHECK</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Don&apos;t fail if the name contains invalid characters. If this bit is clear, all invalid chars (those !is_ident_cp()) will be replaced by SUBSTCHAR List of valid characters is defined in ida.cfg </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="58" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1ga0867a80ae5531d5a6f37e9b8ca2078d8" prot="public" static="no">
        <name>SN_PUBLIC</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>if set, make name public </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="63" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1gaa682721856e47459dd83249ce69e84f4" prot="public" static="no">
        <name>SN_NON_PUBLIC</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>if set, make name non-public </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="64" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1ga6a3e06b901908b81c01a9f0062e9b71b" prot="public" static="no">
        <name>SN_WEAK</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>if set, make name weak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="65" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1ga3dc2cae373dd31ec2dc329afbaf0d3e9" prot="public" static="no">
        <name>SN_NON_WEAK</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>if set, make name non-weak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="66" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1ga649469af3f3ed0924be751921e29d60e" prot="public" static="no">
        <name>SN_AUTO</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>if set, make name autogenerated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="67" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1ga5839893e37d57ecdea4964f844ed019d" prot="public" static="no">
        <name>SN_NON_AUTO</name>
        <initializer>0x40</initializer>
        <briefdescription>
<para>if set, make name non-autogenerated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="68" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1ga68ba63b7a7a9a881df414b7bfdce7447" prot="public" static="no">
        <name>SN_NOLIST</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if set, exclude name from the list. if not set, then include the name into the list (however, if other bits are set, the name might be immediately excluded from the list). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="69" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1ga84c416eb3ed6bc386932d8da15bb134b" prot="public" static="no">
        <name>SN_NOWARN</name>
        <initializer>0x100</initializer>
        <briefdescription>
<para>don&apos;t display a warning if failed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="74" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1ga6052ebef5e57c6e905fe9f902188401d" prot="public" static="no">
        <name>SN_LOCAL</name>
        <initializer>0x200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create local name. a function should exist. local names can&apos;t be public or weak. also they are not included into the list of names they can&apos;t have dummy prefixes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="75" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1gabb4de680eb13eaaf581e4082ce7524f3" prot="public" static="no">
        <name>SN_IDBENC</name>
        <initializer>0x400</initializer>
        <briefdescription>
<para>non-ASCII bytes will be decoded accordingly </para>        </briefdescription>
        <detaileddescription>
<para>the name is given in the IDB encoding; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="79" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_n___1gabdc1743c42551da5864b7073b41438f8" prot="public" static="no">
        <name>SN_FORCE</name>
        <initializer>0x800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if the specified name is already present in the database, try variations with a numerical suffix like &quot;_123&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" line="81" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/name.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Passed as &apos;flag&apos; parameter to <ref refid="name_8hpp_1aa75fb1ba89bb22f323472e329eb4a486" kindref="member">set_name(ea_t, const char *, int)</ref> </para>    </detaileddescription>
  </compounddef>
</doxygen>
