<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="pro_8h" kind="file" language="C++">
    <compoundname>pro.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">new</includes>
    <includes local="no">string</includes>
    <includes local="no">malloc.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">io.h</includes>
    <includes local="no">direct.h</includes>
    <includes local="no">map</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes refid="llong_8hpp" local="no">llong.hpp</includes>
    <includedby refid="fpro_8h" local="no">obj/x64_linux_gcc_32_opt/idasdk/fpro.h</includedby>
    <includedby refid="regex_8h" local="no">obj/x64_linux_gcc_32_opt/idasdk/regex.h</includedby>
    <includedby refid="lumina_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/lumina.hpp</includedby>
    <includedby refid="jumptable_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp</includedby>
    <includedby refid="vm_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/vm.hpp</includedby>
    <includedby refid="idtaccess_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/idtaccess.hpp</includedby>
    <includedby refid="hexrays_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</includedby>
    <includedby refid="va_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/va.hpp</includedby>
    <includedby refid="tstfeat_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/tstfeat.hpp</includedby>
    <includedby refid="graph_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</includedby>
    <includedby refid="ida_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/ida.hpp</includedby>
    <includedby refid="btree_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/btree.hpp</includedby>
    <includedby refid="network_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/network.hpp</includedby>
    <includedby refid="ucd_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/ucd.hpp</includedby>
    <includedby refid="testbox_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp</includedby>
    <incdepgraph>
      <node id="1201">
        <label>sys/stat.h</label>
      </node>
      <node id="1185">
        <label>stdarg.h</label>
      </node>
      <node id="1188">
        <label>assert.h</label>
      </node>
      <node id="1184">
        <label>stdlib.h</label>
      </node>
      <node id="1196">
        <label>io.h</label>
      </node>
      <node id="1199">
        <label>fcntl.h</label>
      </node>
      <node id="1202">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="1194">
        <label>malloc.h</label>
      </node>
      <node id="1193">
        <label>string</label>
      </node>
      <node id="1198">
        <label>map</label>
      </node>
      <node id="1197">
        <label>direct.h</label>
      </node>
      <node id="1186">
        <label>stddef.h</label>
      </node>
      <node id="1189">
        <label>limits.h</label>
      </node>
      <node id="1200">
        <label>sys/types.h</label>
      </node>
      <node id="1195">
        <label>string.h</label>
      </node>
      <node id="1192">
        <label>new</label>
      </node>
      <node id="1183">
        <label>obj/x64_linux_gcc_32_opt/idasdk/pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="1184" relation="include">
        </childnode>
        <childnode refid="1185" relation="include">
        </childnode>
        <childnode refid="1186" relation="include">
        </childnode>
        <childnode refid="1187" relation="include">
        </childnode>
        <childnode refid="1188" relation="include">
        </childnode>
        <childnode refid="1189" relation="include">
        </childnode>
        <childnode refid="1190" relation="include">
        </childnode>
        <childnode refid="1191" relation="include">
        </childnode>
        <childnode refid="1192" relation="include">
        </childnode>
        <childnode refid="1193" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1199" relation="include">
        </childnode>
        <childnode refid="1200" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
      </node>
      <node id="1191">
        <label>time.h</label>
      </node>
      <node id="1190">
        <label>ctype.h</label>
      </node>
      <node id="1187">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1219">
        <label>obj/x64_linux_gcc_32_opt/idasdk/commerc.hpp</label>
        <link refid="commerc_8hpp_source"/>
      </node>
      <node id="1236">
        <label>obj/x64_linux_gcc_32_opt/idasdk/auto.hpp</label>
        <link refid="auto_8hpp"/>
      </node>
      <node id="1218">
        <label>obj/x64_linux_gcc_32_opt/idasdk/btree.hpp</label>
        <link refid="btree_8hpp_source"/>
      </node>
      <node id="1223">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1235" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
        <childnode refid="1237" relation="include">
        </childnode>
        <childnode refid="1238" relation="include">
        </childnode>
      </node>
      <node id="1234">
        <label>obj/x64_linux_gcc_32_opt/idasdk/loader.hpp</label>
        <link refid="loader_8hpp"/>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
      </node>
      <node id="1213">
        <label>obj/x64_linux_gcc_32_opt/idasdk/intel.hpp</label>
        <link refid="intel_8hpp_source"/>
      </node>
      <node id="1230">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ua.hpp</label>
        <link refid="ua_8hpp"/>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
      </node>
      <node id="1239">
        <label>obj/x64_linux_gcc_32_opt/idasdk/network.hpp</label>
        <link refid="network_8hpp_source"/>
        <childnode refid="1212" relation="include">
        </childnode>
      </node>
      <node id="1220">
        <label>obj/x64_linux_gcc_32_opt/idasdk/regex.h</label>
        <link refid="regex_8h_source"/>
      </node>
      <node id="1227">
        <label>obj/x64_linux_gcc_32_opt/idasdk/enum.hpp</label>
        <link refid="enum_8hpp"/>
      </node>
      <node id="1216">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ida_highlighter.hpp</label>
        <link refid="ida__highlighter_8hpp_source"/>
      </node>
      <node id="1222">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idtaccess.hpp</label>
        <link refid="idtaccess_8hpp_source"/>
      </node>
      <node id="1231">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idd.hpp</label>
        <link refid="idd_8hpp"/>
        <childnode refid="1209" relation="include">
        </childnode>
      </node>
      <node id="1208">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
      </node>
      <node id="1241">
        <label>obj/x64_linux_gcc_32_opt/idasdk/parseucdr.hpp</label>
        <link refid="parseucdr_8hpp_source"/>
      </node>
      <node id="1209">
        <label>obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp</label>
        <link refid="dbg_8hpp"/>
      </node>
      <node id="1221">
        <label>obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp</label>
        <link refid="jumptable_8hpp_source"/>
      </node>
      <node id="1229">
        <label>obj/x64_linux_gcc_32_opt/idasdk/struct.hpp</label>
        <link refid="struct_8hpp"/>
      </node>
      <node id="1224">
        <label>obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="1225" relation="include">
        </childnode>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1226" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1227" relation="include">
        </childnode>
        <childnode refid="1228" relation="include">
        </childnode>
      </node>
      <node id="1214">
        <label>obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</label>
        <link refid="graph_8hpp"/>
      </node>
      <node id="1238">
        <label>obj/x64_linux_gcc_32_opt/idasdk/lines.hpp</label>
        <link refid="lines_8hpp"/>
        <childnode refid="1230" relation="include">
        </childnode>
        <childnode refid="1228" relation="include">
        </childnode>
      </node>
      <node id="1242">
        <label>obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp</label>
        <link refid="testbox_8hpp_source"/>
      </node>
      <node id="1235">
        <label>obj/x64_linux_gcc_32_opt/idasdk/name.hpp</label>
        <link refid="name_8hpp"/>
        <childnode refid="1211" relation="include">
        </childnode>
      </node>
      <node id="1205">
        <label>obj/x64_linux_gcc_32_opt/idasdk/vm.hpp</label>
        <link refid="vm_8hpp_source"/>
        <childnode refid="1206" relation="include">
        </childnode>
      </node>
      <node id="1233">
        <label>obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp</label>
        <link refid="gdl_8hpp"/>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
      </node>
      <node id="1217">
        <label>obj/x64_linux_gcc_32_opt/idasdk/tstfeat.hpp</label>
        <link refid="tstfeat_8hpp_source"/>
      </node>
      <node id="1240">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ucd.hpp</label>
        <link refid="ucd_8hpp_source"/>
        <childnode refid="1241" relation="include">
        </childnode>
      </node>
      <node id="1232">
        <label>obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp</label>
        <link refid="funcs_8hpp"/>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1233" relation="include">
        </childnode>
      </node>
      <node id="1215">
        <label>obj/x64_linux_gcc_32_opt/idasdk/expr.hpp</label>
        <link refid="expr_8hpp"/>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
      </node>
      <node id="1203">
        <label>obj/x64_linux_gcc_32_opt/idasdk/pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1220" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1223" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
        <childnode refid="1239" relation="include">
        </childnode>
        <childnode refid="1240" relation="include">
        </childnode>
        <childnode refid="1242" relation="include">
        </childnode>
      </node>
      <node id="1226">
        <label>obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp</label>
        <link refid="fixup_8hpp"/>
      </node>
      <node id="1210">
        <label>obj/x64_linux_gcc_32_opt/idasdk/frame.hpp</label>
        <link refid="frame_8hpp"/>
      </node>
      <node id="1237">
        <label>obj/x64_linux_gcc_32_opt/idasdk/segment.hpp</label>
        <link refid="segment_8hpp"/>
        <childnode refid="1225" relation="include">
        </childnode>
        <childnode refid="1226" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
      </node>
      <node id="1204">
        <label>obj/x64_linux_gcc_32_opt/idasdk/fpro.h</label>
        <link refid="fpro_8h"/>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
      </node>
      <node id="1228">
        <label>obj/x64_linux_gcc_32_opt/idasdk/bytes.hpp</label>
        <link refid="bytes_8hpp"/>
        <childnode refid="1229" relation="include">
        </childnode>
        <childnode refid="1230" relation="include">
        </childnode>
        <childnode refid="1232" relation="include">
        </childnode>
      </node>
      <node id="1225">
        <label>obj/x64_linux_gcc_32_opt/idasdk/offset.hpp</label>
        <link refid="offset_8hpp"/>
      </node>
      <node id="1211">
        <label>obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp</label>
        <link refid="typeinf_8hpp"/>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
      </node>
      <node id="1206">
        <label>obj/x64_linux_gcc_32_opt/idasdk/va.hpp</label>
        <link refid="va_8hpp_source"/>
      </node>
      <node id="1207">
        <label>obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</label>
        <link refid="hexrays_8hpp_source"/>
      </node>
      <node id="1212">
        <label>obj/x64_linux_gcc_32_opt/idasdk/lumina.hpp</label>
        <link refid="lumina_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structqstatbuf" prot="public">qstatbuf</innerclass>
    <innerclass refid="structinterr__exc__t" prot="public">interr_exc_t</innerclass>
    <innerclass refid="classqvector" prot="public">qvector</innerclass>
    <innerclass refid="classqstack" prot="public">qstack</innerclass>
    <innerclass refid="classqrefcnt__t" prot="public">qrefcnt_t</innerclass>
    <innerclass refid="classqrefcnt__obj__t" prot="public">qrefcnt_obj_t</innerclass>
    <innerclass refid="classqiterator" prot="public">qiterator</innerclass>
    <innerclass refid="class__qstring" prot="public">_qstring</innerclass>
    <innerclass refid="classbytevec__t" prot="public">bytevec_t</innerclass>
    <innerclass refid="structreloc__info__t" prot="public">reloc_info_t</innerclass>
    <innerclass refid="structrelobj__t" prot="public">relobj_t</innerclass>
    <innerclass refid="classqlist" prot="public">qlist</innerclass>
    <innerclass refid="structqlist_1_1listnode__t" prot="private">qlist::listnode_t</innerclass>
    <innerclass refid="structqlist_1_1datanode__t" prot="private">qlist::datanode_t</innerclass>
    <innerclass refid="structjanitor__t" prot="public">janitor_t</innerclass>
    <innerclass refid="structchannel__redir__t" prot="public">channel_redir_t</innerclass>
    <innerclass refid="structinstant__dbgopts__t" prot="public">instant_dbgopts_t</innerclass>
    <innerclass refid="structlaunch__process__params__t" prot="public">launch_process_params_t</innerclass>
    <innerclass refid="classqmutex__locker__t" prot="public">qmutex_locker_t</innerclass>
    <innernamespace refid="namespaceinterval">interval</innernamespace>
      <sectiondef kind="user-defined">
      <header>VS posix names</header>
      <description><para>Shut up Visual Studio (VS deprecated posix names but there seems to be no good reason for that) </para></description>
      <memberdef kind="define" id="pro_8h_1a9ebf7229784b92a0ebd2b89603e64c11" prot="public" static="no">
        <name>chdir</name>
        <initializer>_chdir</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="577" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a2c12e4b6615ac6838a99d5b6fa619683" prot="public" static="no">
        <name>fileno</name>
        <initializer>_fileno</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="578" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5e8e503c240e5fb2f033c4a27b2e3556" prot="public" static="no">
        <name>getcwd</name>
        <initializer>_getcwd</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="579" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aecee75a7e0b92a4d6418461799e764e4" prot="public" static="no">
        <name>memicmp</name>
        <initializer>_memicmp</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="580" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1af837744613408b57dc3654fbc3bcf900" prot="public" static="no">
        <name>F_OK</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="581" column="12" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ae5acf4043c0903cda7436b108e29e8e6" prot="public" static="no">
        <name>W_OK</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="582" column="12" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a24a7a0ceb1e8f5f44cb1038bb829030d" prot="public" static="no">
        <name>R_OK</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="583" column="12" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Safe buffer append</header>
      <description><para>In the following macros, &apos;buf&apos; must be always less than &apos;end&apos;. When we run up to the end, we put a 0 there and don&apos;t increase buf anymore </para></description>
      <memberdef kind="define" id="pro_8h_1ac7477b73290aeb0def1504965dcc946d" prot="public" static="no">
        <name>APPCHAR</name>
        <param><defname>buf</defname></param>
        <param><defname>end</defname></param>
        <param><defname>chr</defname></param>
        <initializer>do                                        \
  {                                         \
    char __chr = (chr);                     \
    <ref refid="pro_8h_1a88e58e907d114e8c7a53e8ff047a995e" kindref="member">QASSERT</ref>(518, (buf) &lt; (end));            \
    *(buf)++ = __chr;                       \
    if ( (buf) &gt;= (end) )                   \
    {                                       \
      (buf) = (end)-1;                      \
      (buf)[0] = &apos;\0&apos;;                      \
    }                                       \
  } while (0)</initializer>
        <briefdescription>
<para>Append a character to the buffer checking the buffer size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1525" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ac0aa1349f2a5eabdbb8d3094516d285f" prot="public" static="no">
        <name>APPZERO</name>
        <param><defname>buf</defname></param>
        <param><defname>end</defname></param>
        <initializer>do                                        \
  {                                         \
    <ref refid="pro_8h_1a88e58e907d114e8c7a53e8ff047a995e" kindref="member">QASSERT</ref>(519, (buf) &lt; (end));            \
    *(buf) = &apos;\0&apos;;                          \
  } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Put a zero byte at buffer. NB: does not increase buf pointer! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1540" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ad46316d2de9f3fd157e19898717b5721" prot="public" static="no">
        <name>APPEND</name>
        <param><defname>buf</defname></param>
        <param><defname>end</defname></param>
        <param><defname>name</defname></param>
        <initializer>do                                        \
  {                                         \
    <ref refid="pro_8h_1a88e58e907d114e8c7a53e8ff047a995e" kindref="member">QASSERT</ref>(520, (buf) &lt; (end));            \
    const char *__ida_in = (name);          \
    while ( true )                          \
    {                                       \
      if ( (buf) == (end)-1 )               \
      {                                     \
        (buf)[0] = &apos;\0&apos;;                    \
        break;                              \
      }                                     \
      if ( (*(buf) = *__ida_in++) == &apos;\0&apos; ) \
        break;                              \
      (buf)++;                              \
    }                                       \
  } while ( 0 )</initializer>
        <briefdescription>
<para>Append a string to the buffer checking the buffer size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1548" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1548" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>strlen</header>
      <description><para>Get the length of the given string </para></description>
      <memberdef kind="function" id="pro_8h_1a00dce076658b4f69a505913f7d2a8e59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> size_t idaapi</type>
        <definition>THREAD_SAFE size_t idaapi qstrlen</definition>
        <argsstring>(const char *s)</argsstring>
        <name>qstrlen</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2244" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2244" bodyend="2244"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1abefec01aa60d6afe182d63f18861640b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> size_t idaapi</type>
        <definition>THREAD_SAFE size_t idaapi qstrlen</definition>
        <argsstring>(const uchar *s)</argsstring>
        <name>qstrlen</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2245" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2245" bodyend="2245"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a79b730904fb4dba9ab74a25892f591ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> size_t ida_export</type>
        <definition>idaman THREAD_SAFE size_t ida_export qstrlen</definition>
        <argsstring>(const wchar16_t *s)</argsstring>
        <name>qstrlen</name>
        <param>
          <type>const wchar16_t *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2246" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>strcmp</header>
      <description><para>Lexical comparison of strings. <simplesect kind="return"><para>0 if two strings are identical &gt; 0 if &apos;s1&apos; is larger than &apos;s2&apos; &lt; 0 if &apos;s2&apos; is larger than &apos;s1&apos; otherwise return first nonzero comparison between chars in &apos;s1&apos; and &apos;s2&apos; </para></simplesect>
</para></description>
      <memberdef kind="function" id="pro_8h_1ae2cff643df80d2613204b11cec4035af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int idaapi</type>
        <definition>THREAD_SAFE int idaapi qstrcmp</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>qstrcmp</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2256" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2256" bodyend="2256"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a569739a072d9b5b940f101e4e1f4d166" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int idaapi</type>
        <definition>THREAD_SAFE int idaapi qstrcmp</definition>
        <argsstring>(const uchar *s1, const uchar *s2)</argsstring>
        <name>qstrcmp</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2257" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2257" bodyend="2257"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a19cc98a1f07c85f6b4862f18ab2c0f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qstrcmp</definition>
        <argsstring>(const wchar16_t *s1, const wchar16_t *s2)</argsstring>
        <name>qstrcmp</name>
        <param>
          <type>const wchar16_t *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const wchar16_t *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2258" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>strstr</header>
      <description><para>Find a string within another string. <simplesect kind="return"><para>a pointer to the first occurrence of &apos;s2&apos; within &apos;s1&apos;, NULL if s2 is not found in s1 </para></simplesect>
</para></description>
      <memberdef kind="function" id="pro_8h_1a66c8410bc0b1558c750b5fc4a46964a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const char *idaapi</type>
        <definition>THREAD_SAFE const char* idaapi qstrstr</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>qstrstr</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2265" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2265" bodyend="2265"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a706fb19a1f0ce6a30ed9e29229beffd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *idaapi</type>
        <definition>THREAD_SAFE const uchar* idaapi qstrstr</definition>
        <argsstring>(const uchar *s1, const uchar *s2)</argsstring>
        <name>qstrstr</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2266" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2266" bodyend="2266"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>strchr</header>
      <description><para>Find a character within a string. <simplesect kind="return"><para>a pointer to the first occurrence of &apos;c&apos; within &apos;s1&apos;, NULL if c is not found in s1 </para></simplesect>
</para></description>
      <memberdef kind="function" id="pro_8h_1ade96694a61998422b8c531a47bfd6d3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *idaapi</type>
        <definition>THREAD_SAFE char* idaapi qstrchr</definition>
        <argsstring>(char *s1, char c)</argsstring>
        <name>qstrchr</name>
        <param>
          <type>char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2273" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2273" bodyend="2273"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1adb1e6d8407b726b5dbd2a88c4cee0730" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const char *idaapi</type>
        <definition>THREAD_SAFE const char* idaapi qstrchr</definition>
        <argsstring>(const char *s1, char c)</argsstring>
        <name>qstrchr</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2274" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2274" bodyend="2274"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5d7e0bc149c557773eee4a77bea265c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *idaapi</type>
        <definition>THREAD_SAFE uchar* idaapi qstrchr</definition>
        <argsstring>(uchar *s1, uchar c)</argsstring>
        <name>qstrchr</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2275" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2275" bodyend="2275"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1adeca28f5e3482c9d02407d2ef120557f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *idaapi</type>
        <definition>THREAD_SAFE const uchar* idaapi qstrchr</definition>
        <argsstring>(const uchar *s1, uchar c)</argsstring>
        <name>qstrchr</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2276" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2276" bodyend="2276"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab4a98b5e5e583031a601f6c17f503af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const wchar16_t *ida_export</type>
        <definition>idaman THREAD_SAFE const wchar16_t* ida_export qstrchr</definition>
        <argsstring>(const wchar16_t *s1, wchar16_t c)</argsstring>
        <name>qstrchr</name>
        <param>
          <type>const wchar16_t *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>wchar16_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a63b877abecb21ed2e7e8530f3fbf69be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> wchar16_t *idaapi</type>
        <definition>THREAD_SAFE wchar16_t* idaapi qstrchr</definition>
        <argsstring>(wchar16_t *s1, wchar16_t c)</argsstring>
        <name>qstrchr</name>
        <param>
          <type>wchar16_t *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>wchar16_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2278" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2278" bodyend="2279"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>qstrrchr</header>
      <description><para>Find a last occurrence of a character within a string. <simplesect kind="return"><para>a pointer to the last occurrence of &apos;c&apos; within &apos;s1&apos;, NULL if c is not found in s1 </para></simplesect>
</para></description>
      <memberdef kind="function" id="pro_8h_1a4f1eb7d2f97276817b65f4ad216329e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const char *idaapi</type>
        <definition>THREAD_SAFE const char* idaapi qstrrchr</definition>
        <argsstring>(const char *s1, char c)</argsstring>
        <name>qstrrchr</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2286" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2286" bodyend="2286"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa2e110e483796b2e970780232420f525" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *idaapi</type>
        <definition>THREAD_SAFE char* idaapi qstrrchr</definition>
        <argsstring>(char *s1, char c)</argsstring>
        <name>qstrrchr</name>
        <param>
          <type>char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2287" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2287" bodyend="2287"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a9e8771acbbcb22bba37b48c05e9cfde3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *idaapi</type>
        <definition>THREAD_SAFE const uchar* idaapi qstrrchr</definition>
        <argsstring>(const uchar *s1, uchar c)</argsstring>
        <name>qstrrchr</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2288" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2288" bodyend="2288"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aab621b02d27c7ab05526f6106ac6c99f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *idaapi</type>
        <definition>THREAD_SAFE uchar* idaapi qstrrchr</definition>
        <argsstring>(uchar *s1, uchar c)</argsstring>
        <name>qstrrchr</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2289" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2289" bodyend="2289"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aed0a636241f8cb729db5c9232dc333ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const wchar16_t *ida_export</type>
        <definition>idaman THREAD_SAFE const wchar16_t* ida_export qstrrchr</definition>
        <argsstring>(const wchar16_t *s1, wchar16_t c)</argsstring>
        <name>qstrrchr</name>
        <param>
          <type>const wchar16_t *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>wchar16_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a077314d403d3f92316f699cc718cad51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> wchar16_t *idaapi</type>
        <definition>THREAD_SAFE wchar16_t* idaapi qstrrchr</definition>
        <argsstring>(wchar16_t *s1, wchar16_t c)</argsstring>
        <name>qstrrchr</name>
        <param>
          <type>wchar16_t *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>wchar16_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2291" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2291" bodyend="2292"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="pro_8h_1a4f56c6c22937f8cd0caadb330c96ab20" prot="public" static="no">
        <name>IDA_SDK_VERSION</name>
        <initializer>720</initializer>
        <briefdescription>
<para>IDA SDK v7.2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="36" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a32a3539b997bf64e3959184fc918abc6" prot="public" static="no">
        <name>BADMEMSIZE</name>
        <initializer>0x7FFFFFFFul</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="47" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a01f4f3154ae42da937b6ddcb1e4d6170" prot="public" static="no">
        <name>ENUM_SIZE</name>
        <param><defname>t</defname></param>
        <initializer>: t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="53" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ac7bef5d85e3dcd73eef56ad39ffc84a9" prot="public" static="no">
        <name>WIN32_LEAN_AND_MEAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="76" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1abc0338a8945a12d80f620b21637496b5" prot="public" static="no">
        <name>STL_SUPPORT_PRESENT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="99" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a95e1d92b2619a326b2e86600f3d23100" prot="public" static="no">
        <name>EXTERNC</name>
        <initializer>extern &quot;C&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="107" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ae990eacd438069f0807057f73f72a0e2" prot="public" static="no">
        <name>C_INCLUDE</name>
        <initializer>EXTERNC \
   {</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="108" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ae9c64f103d2b6ed1029fd06d99767c20" prot="public" static="no">
        <name>C_INCLUDE_END</name>
        <initializer>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="111" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a2eb6f9e0395b47b8d5e3eeae4fe0c116" prot="public" static="no">
        <name>INLINE</name>
        <initializer>inline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="112" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5189100144828825ca4369c28c1261d1" prot="public" static="no">
        <name>MAXSTR</name>
        <initializer>1024</initializer>
        <briefdescription>
<para>maximum string size </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="127" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a8cf57198a203812ebb59e240105e33d2" prot="public" static="no">
        <name>SMAXSTR</name>
        <initializer><ref refid="pro_8h_1ace98955d3f1fb391cc05aec346116215" kindref="member">QSTRINGIZE</ref>(<ref refid="pro_8h_1a5189100144828825ca4369c28c1261d1" kindref="member">MAXSTR</ref>)</initializer>
        <briefdescription>
<para>get <ref refid="pro_8h_1a5189100144828825ca4369c28c1261d1" kindref="member">MAXSTR</ref> as a string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="130" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1adf374a08f6699901dfe30beebcc4ddcd" prot="public" static="no">
        <name>NT_CDECL</name>
        <initializer>__cdecl</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="134" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ac1e8a42306d8e67cb94ca31c3956ee78" prot="public" static="no">
        <name>DEPRECATED</name>
        <initializer>__declspec(deprecated)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="159" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aa1728270d73c5d1598de1fd691762eb1" prot="public" static="no">
        <name>NORETURN</name>
        <initializer>__declspec(noreturn)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="160" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a36d525cf4d116b2fe4ecc00222b256f1" prot="public" static="no">
        <name>PACKED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="161" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a40594145f35f95459394ef60e51a0b1b" prot="public" static="no">
        <name>AS_STRFTIME</name>
        <param><defname>format_idx</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="162" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a42a5a0f673a39dffe9f920b3a65f4726" prot="public" static="no">
        <name>AS_PRINTF</name>
        <param><defname>format_idx</defname></param>
        <param><defname>varg_idx</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="163" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a8aeb7f590515616a701be71b5a308a1d" prot="public" static="no">
        <name>AS_SCANF</name>
        <param><defname>format_idx</defname></param>
        <param><defname>varg_idx</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="164" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a646972e87fa873eb9da1adf5e8651c18" prot="public" static="no">
        <name>GCC_DIAG_OFF</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="182" column="12" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a449bfc1762077f4e7698b86e187f05a4" prot="public" static="no">
        <name>GCC_DIAG_ON</name>
        <param><defname>x</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="183" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a0fa907600e6cc20f050cc1049b27c599" prot="public" static="no">
        <name>__MF__</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>byte sex of our platform (Most significant byte First). 0: little endian (Intel 80x86). 1: big endian (PowerPC). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="193" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a53cfa902e3d7651fd50be4f941fcb3e0" prot="public" static="no">
        <name>qnotused</name>
        <param><defname>x</defname></param>
        <initializer>(void)x</initializer>
        <briefdescription>
<para>Macro to avoid of message &apos;Parameter x is never used&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="199" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5b677d47f5d6507956ff520db8bf0356" prot="public" static="no">
        <name>QUNUSED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="205" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a2c341d7a89532ce28aff03703ab02d22" prot="public" static="no">
        <name>va_argi</name>
        <param><defname>va</defname></param>
        <param><defname>type</defname></param>
        <initializer>va_arg(va, type)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="212" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a2f0e75e2f3550734177e96d518a16131" prot="public" static="no">
        <name>CONST_CAST</name>
        <param><defname>x</defname></param>
        <initializer>const_cast&lt;x&gt;</initializer>
        <briefdescription>
<para>cast a const to non-const </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="216" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a8a945109e3acf5c6c422e0c53c642570" prot="public" static="no">
        <name>_QSTRINGIZE</name>
        <param><defname>x</defname></param>
        <initializer>#x</initializer>
        <briefdescription>
<para>return x as a string. See <ref refid="pro_8h_1a8cf57198a203812ebb59e240105e33d2" kindref="member">SMAXSTR</ref> for example </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="217" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ace98955d3f1fb391cc05aec346116215" prot="public" static="no">
        <name>QSTRINGIZE</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="pro_8h_1a8a945109e3acf5c6c422e0c53c642570" kindref="member">_QSTRINGIZE</ref>(x)</initializer>
        <briefdescription>
<para>see <ref refid="pro_8h_1a8a945109e3acf5c6c422e0c53c642570" kindref="member">_QSTRINGIZE</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="218" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a6505e7ff3b129d8b17258304886fd133" prot="public" static="no">
        <name>idaapi</name>
        <initializer>__stdcall</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="247" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a176294e75f953787714b9d08ffa89adf" prot="public" static="no">
        <name>ida_export</name>
        <initializer>idaapi</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="248" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a8ddba56b40c4be92718f8059abf51147" prot="public" static="no">
        <name>idaman</name>
        <initializer>EXTERNC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="253" column="16" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a0dcf39ba902e647b34f7d676b8897a2f" prot="public" static="no">
        <name>ida_export_data</name>
        <initializer>__declspec(dllimport)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="259" column="13" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ac356388cde75589399b907f5fa7e0dab" prot="public" static="no">
        <name>ida_module_data</name>
        <initializer>__declspec(dllexport)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="260" column="13" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a4457e1ec12de0b5038adc7283ed5919f" prot="public" static="no">
        <name>ida_local</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="262" column="14" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a8b8a30e03520c28a7ea014d6a12f9065" prot="public" static="no">
        <name>ida_override</name>
        <initializer>override</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="263" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" prot="public" static="no">
        <name>THREAD_SAFE</name>
        <briefdescription>
<para>Functions callable from any thread are marked with this keyword. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="287" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1acbc25345a39784031ea891c317ab6f4e" prot="public" static="no">
        <name>strtoull</name>
        <initializer>_strtoui64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="328" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ab6f1f06ac1df747adddf21e648974728" prot="public" static="no">
        <name>FMT_64</name>
        <initializer>&quot;I64&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="360" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a4b8186daa426b5144112cab6285f48ca" prot="public" static="no">
        <name>FMT_Z</name>
        <initializer>&quot;u&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="365" column="16" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a0cc43805c8eaacc3c4e7161b5dc17ebc" prot="public" static="no">
        <name>FMT_ZS</name>
        <initializer>&quot;d&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="366" column="13" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a2f209400911645e16cc1a5a9d45e7f3a" prot="public" static="no">
        <name>SVAL_MIN</name>
        <initializer>INT_MIN</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="397" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1af2965237514ff3f613cf70edfb419ee9" prot="public" static="no">
        <name>SVAL_MAX</name>
        <initializer>INT_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="398" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1af75c251ecd7e57603fef98d751373470" prot="public" static="no">
        <name>FMT_EA</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="399" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aff05cb78593a3fff27cdcc22040332a7" prot="public" static="no">
        <name>DEFARG</name>
        <param><defname>decl</defname></param>
        <param><defname>val</defname></param>
        <initializer>decl = val</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="415" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" prot="public" static="no">
        <name>BADADDR</name>
        <initializer>ea_t(-1)</initializer>
        <briefdescription>
<para>this value is used for &apos;bad address&apos; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="421" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a893ddf307fae0a3bbca667ee917cddc7" prot="public" static="no">
        <name>BADSEL</name>
        <initializer>sel_t(-1)</initializer>
        <briefdescription>
<para>&apos;bad selector&apos; value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="422" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a42ae75d34f73b9e691bd16aaddb897e5" prot="public" static="no">
        <name>qoff64_t</name>
        <initializer><ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref></initializer>
        <briefdescription>
<para>file offset </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="547" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aad3a54ef5fb260160ec7493483246022" prot="public" static="no">
        <name>for</name>
        <initializer>if(0); else for</initializer>
        <briefdescription>
<para>MSVC &lt;= 1200 is not compliant to the ANSI standard. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="570" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a95be41bd6cf74b2cc935923eef55435d" prot="public" static="no">
        <name>eOk</name>
        <initializer>0</initializer>
        <briefdescription>
<para>no error </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="594" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1acd8d30c9504462b2fb97fef82904481a" prot="public" static="no">
        <name>eOS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>os error, see errno </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="595" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aa4ac43aed136a4c56866f2bf821bd3bb" prot="public" static="no">
        <name>eDiskFull</name>
        <initializer>2</initializer>
        <briefdescription>
<para>disk full </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="596" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="596" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a9a90e43549f41d0c86715d4460fbd8a3" prot="public" static="no">
        <name>eReadError</name>
        <initializer>3</initializer>
        <briefdescription>
<para>read error </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="597" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a7fdd553720aada64a1e707f300f28c7a" prot="public" static="no">
        <name>eFileTooLarge</name>
        <initializer>4</initializer>
        <briefdescription>
<para>file too large </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="598" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a1697942e391d0cfae231ee6b79f13ca1" prot="public" static="no">
        <name>ZZZ</name>
        <initializer>msg(&quot;%s:%d\n&quot;, __FILE__, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="614" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aefaead9521fa4ebbfc7add536c5b6625" prot="public" static="no">
        <name>BPT</name>
        <initializer>__debugbreak()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="626" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a416967a8975b2c270e729ed7076ac1b6" prot="public" static="no">
        <name>__CASSERT_N0__</name>
        <param><defname>l</defname></param>
        <param><defname>c</defname></param>
        <initializer>COMPILE_TIME_ASSERT_ ## l ## _ ## c</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="640" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5c911c4c927f3adbfad92e55a6bc0040" prot="public" static="no">
        <name>__CASSERT_N1__</name>
        <param><defname>l</defname></param>
        <param><defname>c</defname></param>
        <initializer>__CASSERT_N0__(l, c)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="641" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1af05b25df2bfe8ba758585210ba85b627" prot="public" static="no">
        <name>__CASSERT_N2__</name>
        <param><defname>l</defname></param>
        <initializer>dummy_var_ ## __CASSERT_N0__(l)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="642" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="642" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a9d9d6de40a1b45dd13d31e023f33dae8" prot="public" static="no">
        <name>CASSERT</name>
        <param><defname>cnd</defname></param>
        <initializer>typedef char __CASSERT_N1__(__LINE__, __COUNTER__)[(cnd) ? 1 : -1] QUNUSED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="643" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a996cec2e6c48c78338b59fb58062cc39" prot="public" static="no">
        <name>CASSERT0</name>
        <param><defname>cnd</defname></param>
        <initializer>(sizeof(char[1 - 2*!(cnd)]) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="644" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="644" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a89eca4309e9d7a0f6e26f7fb1998ccf7" prot="public" static="no">
        <name>INTERR</name>
        <param><defname>code</defname></param>
        <initializer>do { if ( <ref refid="pro_8h_1a634763e97c3f75cfe9d667a6f434f3ad" kindref="member">under_debugger</ref> ) BPT; <ref refid="pro_8h_1ae72a90f168783073acf8ab0e83711e60" kindref="member">interr</ref>(code); } while(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="653" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a88e58e907d114e8c7a53e8ff047a995e" prot="public" static="no">
        <name>QASSERT</name>
        <param><defname>code</defname></param>
        <param><defname>cond</defname></param>
        <initializer>do if ( !(cond) ) INTERR(code); while (0)</initializer>
        <briefdescription>
<para>run time assertion </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="656" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a45857eeac5251dfa03b208d6c1c3df48" prot="public" static="no">
        <name>QBUFCHECK</name>
        <param><defname>buf</defname></param>
        <param><defname>size</defname></param>
        <param><defname>src</defname></param>
        <initializer>ida_fill_buffer(buf, size, src, __FILE__, __LINE__)</initializer>
        <briefdescription>
<para>run time assertion </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="657" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aac8b2c8201c915bc97ef6334cb116ed2" prot="public" static="no">
        <name>INTERR_EXC_FMT</name>
        <initializer>&quot;Internal <ref refid="kernwin_8hpp_1a6c448838751433bfda04dcdb8d8b1457" kindref="member">error</ref> %d occurred when running a script. Either\n&quot; \
  &quot;  - the script misused the IDA API, or\n&quot;                            \
  &quot;  - there is a logic <ref refid="kernwin_8hpp_1a6c448838751433bfda04dcdb8d8b1457" kindref="member">error</ref> in IDA\n&quot;                                 \
  &quot;Please check the script first.\n&quot;                                    \
  &quot;If it appears correct, send a bug report to &lt;support@hex-rays.com&gt;.\n&quot; \
  &quot;In any case we strongly recommend you to restart IDA as soon as possible.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="660" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="660" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1acadff678b0f53acb94c0bebb952d2cc1" prot="public" static="no">
        <name>qnew</name>
        <param><defname>t</defname></param>
        <initializer>((t*)<ref refid="pro_8h_1a2806c6575b58eb42bb0d2b96f92fc39b" kindref="member">qalloc</ref>(sizeof(t)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a new object in memory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="682" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1af1ad276ec82e503ab036325e112238d7" prot="public" static="no">
        <name>qnewarray</name>
        <param><defname>t</defname></param>
        <param><defname>n</defname></param>
        <initializer>use_qalloc_array</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="684" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ac2db7dc6c4bac9bf358fda4bb89e6fe0" prot="public" static="no">
        <name>qnumber</name>
        <param><defname>array</defname></param>
        <initializer>_countof(array)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="720" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aebf3f15b9cdee349f7345406110e834d" prot="public" static="no">
        <name>qoffsetof</name>
        <initializer>offsetof</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="730" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ad36243a66d6b30f74fd72dd0f78d7264" prot="public" static="no">
        <name>va_copy</name>
        <param><defname>dst</defname></param>
        <param><defname>src</defname></param>
        <initializer>dst = src</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="740" column="13" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1af487c56158e97e4b5a16655ab1c6f878" prot="public" static="no">
        <name>set_vva</name>
        <param><defname>va2</defname></param>
        <param><defname>vp</defname></param>
        <initializer>va_copy(va2, va_arg(vp, va_list))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="745" column="19" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="745" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a16a19b1831112e876b010468ec15916f" prot="public" static="no">
        <name>strnicmp</name>
        <initializer>_strnicmp</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="770" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a4e0be90a3757e352f42612d09a7d1aa5" prot="public" static="no">
        <name>stricmp</name>
        <initializer>_stricmp</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="771" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a3c76c079d1e0dea93d871d02e407150e" prot="public" static="no">
        <name>strcpy</name>
        <initializer>dont_use_strcpy</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1af74a1e4b6b49709fc024d286568c2878" kindref="member">qstrncpy()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="858" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5c50a69fd5090325ab2ec15e20297e52" prot="public" static="no">
        <name>stpcpy</name>
        <initializer>dont_use_stpcpy</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1a50baa551d4fa0f4fcf77543b7a265324" kindref="member">qstpncpy()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="859" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5ad0cad79c46e9a6e2bc4b77ac50e271" prot="public" static="no">
        <name>strncpy</name>
        <initializer>dont_use_strncpy</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1af74a1e4b6b49709fc024d286568c2878" kindref="member">qstrncpy()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="860" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ad140927f9ba5dc16bf8d64b9fb92c187" prot="public" static="no">
        <name>strcat</name>
        <initializer>dont_use_strcat</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1a9e9f9105250f378799190e67245488d9" kindref="member">qstrncat()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="861" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ac0ecd4d94f75ab9d2dd33590287fec50" prot="public" static="no">
        <name>strncat</name>
        <initializer>dont_use_strncat</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1a9e9f9105250f378799190e67245488d9" kindref="member">qstrncat()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="862" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="862" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1abd2e1f38c695f4eead224e19cbf102b0" prot="public" static="no">
        <name>gets</name>
        <initializer>dont_use_gets</initializer>
        <briefdescription>
<para>use qfgets() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="863" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="863" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5998f60c4f4af322b36debdbd11d7917" prot="public" static="no">
        <name>sprintf</name>
        <initializer>dont_use_sprintf</initializer>
        <briefdescription>
<para>use <ref refid="group__qsnprintf_1ga82e5d2c150c3a1d1eed598ea21baf879" kindref="member">qsnprintf()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="864" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aa367b75c5aed883fef5befbdf04835a4" prot="public" static="no">
        <name>snprintf</name>
        <initializer>dont_use_snprintf</initializer>
        <briefdescription>
<para>use <ref refid="group__qsnprintf_1ga82e5d2c150c3a1d1eed598ea21baf879" kindref="member">qsnprintf()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="865" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ab9f68919b34e93893793f16fd6a422ee" prot="public" static="no">
        <name>wsprintfA</name>
        <initializer>dont_use_wsprintf</initializer>
        <briefdescription>
<para>use <ref refid="group__qsnprintf_1ga82e5d2c150c3a1d1eed598ea21baf879" kindref="member">qsnprintf()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="866" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="866" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1acf1a32c487efc5306d57219a57d57b60" prot="public" static="no">
        <name>strcmpi</name>
        <initializer>dont_use_strcmpi</initializer>
        <briefdescription>
<para>use stricmp() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="869" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="869" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ad3a1fdce8f91caabe3b9aaa93cb69044" prot="public" static="no">
        <name>strncmpi</name>
        <initializer>dont_use_strncmpi</initializer>
        <briefdescription>
<para>use strnicmp() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="870" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="870" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aafc8c101dfb6313ab0416a6c5903ce66" prot="public" static="no">
        <name>getenv</name>
        <initializer>dont_use_getenv</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1ab8ba72892569a9b71dd5ea7f94e6819c" kindref="member">qgetenv()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="871" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="871" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a3866aa356c8a01995c08aa99f8e2b216" prot="public" static="no">
        <name>setenv</name>
        <initializer>dont_use_setenv</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1a0c6818cd6e13fd43c76fe4a714f33d00" kindref="member">qsetenv()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="872" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="872" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a7f3501cd06dda68c4b7d86da4a2ebf77" prot="public" static="no">
        <name>putenv</name>
        <initializer>dont_use_putenv</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1a0c6818cd6e13fd43c76fe4a714f33d00" kindref="member">qsetenv()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="873" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a3b81bcb3e80e77a50e6b59d8c9d8a764" prot="public" static="no">
        <name>strtok</name>
        <initializer>dont_use_strrok</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1a014e6f74c7c212304c02edc431279f2c" kindref="member">qstrtok()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="874" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="874" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ab3d902b3b585aeeb61811326cce81cb1" prot="public" static="no">
        <name>strlwr</name>
        <initializer>dont_use_strlwr</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1ad7989b0f91d31eb3c1d6e040d1e95b31" kindref="member">qstrlwr()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="877" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="877" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ad3a5f59416c068c063e1b4e827cae493" prot="public" static="no">
        <name>strupr</name>
        <initializer>dont_use_strupr</initializer>
        <briefdescription>
<para>use <ref refid="pro_8h_1a13f5005c03ce74224b8c530e05b79723" kindref="member">qstrupr()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="878" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="878" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a8ab48894dc0738aef4f57ae3518a4af5" prot="public" static="no">
        <name>waitid</name>
        <initializer>dont_use_waitid</initializer>
        <briefdescription>
<para>use qwait() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="879" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="879" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a0ff9ced808887c13e8b64c783f4b9f56" prot="public" static="no">
        <name>waitpid</name>
        <initializer>dont_use_waitpid</initializer>
        <briefdescription>
<para>use qwait() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="880" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="880" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a96279fe0e5fa8c31bdf3b09af132fc44" prot="public" static="no">
        <name>wait</name>
        <initializer>dont_use_wait</initializer>
        <briefdescription>
<para>use qwait() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="881" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="881" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a77fa234acb9d88f85290b02c89e8168f" prot="public" static="no">
        <name>streq</name>
        <param><defname>s1</defname></param>
        <param><defname>s2</defname></param>
        <initializer>(strcmp((s1), (s2))  == 0)</initializer>
        <briefdescription>
<para>convenient check for string equality </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="885" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="885" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ab5789996a331e5a791f4d11d69e75aad" prot="public" static="no">
        <name>strieq</name>
        <param><defname>s1</defname></param>
        <param><defname>s2</defname></param>
        <initializer>(stricmp((s1), (s2)) == 0)</initializer>
        <briefdescription>
<para>see <ref refid="pro_8h_1a77fa234acb9d88f85290b02c89e8168f" kindref="member">streq</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="886" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="886" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ae2d49cbb787f228580ea50c87c4eef20" prot="public" static="no">
        <name>strneq</name>
        <param><defname>s1</defname></param>
        <param><defname>s2</defname></param>
        <param><defname>count</defname></param>
        <initializer>(strncmp((s1), (s2), (count))  == 0)</initializer>
        <briefdescription>
<para>see <ref refid="pro_8h_1a77fa234acb9d88f85290b02c89e8168f" kindref="member">streq</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="887" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="887" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a57c4d55b79919e131bb463a51fe91cdb" prot="public" static="no">
        <name>strnieq</name>
        <param><defname>s1</defname></param>
        <param><defname>s2</defname></param>
        <param><defname>count</defname></param>
        <initializer>(strnicmp((s1), (s2), (count)) == 0)</initializer>
        <briefdescription>
<para>see <ref refid="pro_8h_1a77fa234acb9d88f85290b02c89e8168f" kindref="member">streq</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="888" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="888" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1af5d3ed78c3d158e9d6a1863f063c3648" prot="public" static="no">
        <name>QMAXPATH</name>
        <initializer>260</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="936" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="936" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a90819bc56bb23ff4098a2b56d7ba264b" prot="public" static="no">
        <name>QMAXFILE</name>
        <initializer>260</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="937" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="937" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a23195218eef2cf21e2beae685a041783" prot="public" static="no">
        <name>DELIMITER</name>
        <initializer>&quot;;&quot;</initializer>
        <briefdescription>
<para>Delimiter of directory lists. </para>        </briefdescription>
        <detaileddescription>
<para>for MS DOS, Windows, other systems - &apos;:&apos; for Unix </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1043" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a0d112bae8fd35be772185b6ec6bcbe64" prot="public" static="no">
        <name>SEEK_SET</name>
        <initializer>0</initializer>
        <briefdescription>
<para>beginning of file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1115" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a4c8d0b76b470ba65a43ca46a88320f39" prot="public" static="no">
        <name>SEEK_CUR</name>
        <initializer>1</initializer>
        <briefdescription>
<para>current position of the file * </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1116" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ad2a2e6c114780c3071efd24f16c7f7d8" prot="public" static="no">
        <name>SEEK_END</name>
        <initializer>2</initializer>
        <briefdescription>
<para>end of file * </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1117" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ad58fca637a864c610283e7810cae250d" prot="public" static="no">
        <name>qmin</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &lt; (b)? (a): (b))</initializer>
        <briefdescription>
<para>universal min </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1214" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aa66c6a5fc7b63597216448e571020cc8" prot="public" static="no">
        <name>qmax</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &gt; (b)? (a): (b))</initializer>
        <briefdescription>
<para>universal max </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1215" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aef073c2546a5ff20623dcce4fe6edc74" prot="public" static="no">
        <name>OPERATOR_NEW</name>
        <param><defname>type</defname></param>
        <param><defname>count</defname></param>
        <initializer>new type[count]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1388" column="12" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a96639bfe55d300d34ccf01f733ce83b7" prot="public" static="no">
        <name>MC2</name>
        <param><defname>c1</defname></param>
        <param><defname>c2</defname></param>
        <initializer><ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref>(((c2)&lt;&lt;8)|c1)</initializer>
        <briefdescription>
<para>We can not use multi-character constants because they are not portable - use this macro instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1401" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ae74da8ce450c40edac775d8099c0a924" prot="public" static="no">
        <name>MC3</name>
        <param><defname>c1</defname></param>
        <param><defname>c2</defname></param>
        <param><defname>c3</defname></param>
        <initializer><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref>(((((c3)&lt;&lt;8)|(c2))&lt;&lt;8)|c1)</initializer>
        <briefdescription>
<para>We can not use multi-character constants because they are not portable - use this macro instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1402" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1afca0d2217a361502e60dea754441c5ff" prot="public" static="no">
        <name>MC4</name>
        <param><defname>c1</defname></param>
        <param><defname>c2</defname></param>
        <param><defname>c3</defname></param>
        <param><defname>c4</defname></param>
        <initializer><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref>(((((((c4)&lt;&lt;8)|(c3))&lt;&lt;8)|(c2))&lt;&lt;8)|c1)</initializer>
        <briefdescription>
<para>We can not use multi-character constants because they are not portable - use this macro instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1403" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a321a76729457dee669f1f6f7d6641fd4" prot="public" static="no">
        <name>read4bytes</name>
        <param><defname>h</defname></param>
        <param><defname>res</defname></param>
        <param><defname>mf</defname></param>
        <initializer><ref refid="pro_8h_1a8055a8933883a1ba50a059a3edba1faf" kindref="member">readbytes</ref>(h, res, 4, mf)</initializer>
        <briefdescription>
<para>see <ref refid="pro_8h_1a8055a8933883a1ba50a059a3edba1faf" kindref="member">readbytes()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1435" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a60662b1211fc9daca58c16fc546c47fd" prot="public" static="no">
        <name>write2bytes</name>
        <param><defname>h</defname></param>
        <param><defname>l</defname></param>
        <param><defname>mf</defname></param>
        <initializer><ref refid="pro_8h_1a65f7acee9458c297dab692697ba52acd" kindref="member">writebytes</ref>(h, l, 2, mf)</initializer>
        <briefdescription>
<para>see <ref refid="pro_8h_1a65f7acee9458c297dab692697ba52acd" kindref="member">writebytes()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1436" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1afd3ff2981c160f32e7bb9a81c7f6a110" prot="public" static="no">
        <name>write4bytes</name>
        <param><defname>h</defname></param>
        <param><defname>l</defname></param>
        <param><defname>mf</defname></param>
        <initializer><ref refid="pro_8h_1a65f7acee9458c297dab692697ba52acd" kindref="member">writebytes</ref>(h, l, 4, mf)</initializer>
        <briefdescription>
<para>see <ref refid="pro_8h_1a65f7acee9458c297dab692697ba52acd" kindref="member">writebytes()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1437" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a8d516921254b8e0b91573a639608769c" prot="public" static="no">
        <name>swapea</name>
        <initializer>swap32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1466" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a517be89e9f2bfad4c51a4068c5dc77f6" prot="public" static="no">
        <name>qhtons</name>
        <param><defname>x</defname></param>
        <initializer>swap16(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1479" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a66946ea07120d59c161f19efe39f9e18" prot="public" static="no">
        <name>qntohs</name>
        <param><defname>x</defname></param>
        <initializer>swap16(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1480" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1abcacc1695a4462b6330edf4516373362" prot="public" static="no">
        <name>qhtonl</name>
        <param><defname>x</defname></param>
        <initializer>swap32(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1481" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ac16afcc9f6b71f4afa81767b0cc21162" prot="public" static="no">
        <name>qntohl</name>
        <param><defname>x</defname></param>
        <initializer>swap32(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1482" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a4f51d946434d35adb9d25672d68d0f23" prot="public" static="no">
        <name>PLACEMENT_DELETE</name>
        <initializer>void operator delete(void *, void *) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1594" column="16" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ad6cb96a7774bd7e22f3991e5ec051d8a" prot="public" static="no">
        <name>DEFINE_MEMORY_ALLOCATION_FUNCS</name>
        <param></param>
        <initializer>void *operator new  (size_t _s) { return <ref refid="pro_8h_1a138f907840f458d7f81be38acedabde5" kindref="member">qalloc_or_throw</ref>(_s); } \
      void *operator new[](size_t _s) { return <ref refid="pro_8h_1a138f907840f458d7f81be38acedabde5" kindref="member">qalloc_or_throw</ref>(_s); } \
      void *operator new(size_t /*size*/, void *_v) { return _v; }    \
      void operator delete  (void *_blk) { <ref refid="pro_8h_1a69f9c35c61878b9b72795fa0f47afa26" kindref="member">qfree</ref>(_blk); }             \
      void operator delete[](void *_blk) { <ref refid="pro_8h_1a69f9c35c61878b9b72795fa0f47afa26" kindref="member">qfree</ref>(_blk); }             \
      PLACEMENT_DELETE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1595" column="13" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5a4512368f4f9ec1478eebddbed86589" prot="public" static="no">
        <name>DECLARE_COMPARISON_OPERATORS</name>
        <param><defname>type</defname></param>
        <initializer>bool operator==(const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) == 0; }      \
  bool operator!=(const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) != 0; }      \
  bool operator&lt; (const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) &lt;  0; }      \
  bool operator&gt; (const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) &gt;  0; }      \
  bool operator&lt;=(const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) &lt;= 0; }      \
  bool operator&gt;=(const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) &gt;= 0; }</initializer>
        <briefdescription>
<para>Macro to declare standard inline comparison operators. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1605" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a0b2aa18bc777ae38c141204eedd9c608" prot="public" static="no">
        <name>DECLARE_COMPARISONS</name>
        <param><defname>type</defname></param>
        <initializer><ref refid="pro_8h_1a5a4512368f4f9ec1478eebddbed86589" kindref="member">DECLARE_COMPARISON_OPERATORS</ref>(type) \
  friend int <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(const type &amp;a, const type &amp;b) { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">a.compare</ref>(b); } \
  int <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(const type &amp;r) const</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro to declare comparisons for our classes. All comparison operators call the <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare()</ref> function which returns -1/0/1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1615" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_l_o_b_j___1gad500f63bfe91b069379095060dea4d6d" prot="public" static="no">
        <name>RELOBJ_MASK</name>
        <initializer>0xF</initializer>
        <briefdescription>
<para>the first byte describes the relocation entry types </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2925" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2925" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_l_o_b_j___1ga68662ac9e3c829db2a6899ee80f002ab" prot="public" static="no">
        <name>RELSIZE_1</name>
        <initializer>0</initializer>
        <briefdescription>
<para>8-bit relocations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2926" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2926" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_l_o_b_j___1ga5df24be363ba05e7f6aa4cbbe43fa212" prot="public" static="no">
        <name>RELSIZE_2</name>
        <initializer>1</initializer>
        <briefdescription>
<para>16-bit relocations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2927" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2927" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_l_o_b_j___1gaebca938729f9a0915fca7582ad4fc381" prot="public" static="no">
        <name>RELSIZE_4</name>
        <initializer>2</initializer>
        <briefdescription>
<para>32-bit relocations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2928" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2928" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_l_o_b_j___1gae5dfc40b205e3ef27188a1e2072b5c58" prot="public" static="no">
        <name>RELSIZE_8</name>
        <initializer>3</initializer>
        <briefdescription>
<para>64-bit relocations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2929" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2929" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_l_o_b_j___1ga4942fa0a7e7c6bc090c0d71cfe034840" prot="public" static="no">
        <name>RELSIZE_CUST</name>
        <initializer>15</initializer>
        <briefdescription>
<para>custom relocations, should be handled internally </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2930" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___r_e_l_o_b_j___1ga48541017d2effc866bd5f15d6d769893" prot="public" static="no">
        <name>RELOBJ_CNT</name>
        <initializer>0x80</initializer>
        <briefdescription>
<para>counter present (not used yet) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2931" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2931" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ab0976bb11965a1fee145e9281e1f97ef" prot="public" static="no">
        <name>QLIST_DEFINED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>signal that the qlist class has been defined </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2947" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2947" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ae00cd947597417ef803198d8fa82d4c4" prot="public" static="no">
        <name>DEFINE_LIST_ITERATOR</name>
        <param><defname>iter</defname></param>
        <param><defname>constness</defname></param>
        <param><defname>cstr</defname></param>
        <briefdescription>
<para>Used for defining the &apos;iterator&apos; and &apos;const_iterator&apos; classes for qlist. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2990" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a16c56fbd73f043c58656bea7af331185" prot="public" static="no">
        <name>DEFINE_REVERSE_ITERATOR</name>
        <param><defname>riter</defname></param>
        <param><defname>iter</defname></param>
        <initializer>class riter                                                           \
  {                                                                     \
    iter p;                                                             \
  public:                                                               \
    riter(void) {}                                                      \
    riter(const iter &amp;x) : p(x) {}                                      \
    typename iter::value_type &amp;operator*(void) const { iter q=p; return *--q; }  \
    typename iter::value_type *operator-&gt;(void) const { return &amp;(operator*()); } \
    riter &amp;operator++(void) { --p; return *this; }                      \
    riter  operator++(int) { iter q=p; --p; return q; }                 \
    riter &amp;operator--(void) { ++p; return *this; }                      \
    riter  operator--(int) { iter q=p; ++p; return q; }                 \
    bool operator==(const riter &amp;x) const { return p == x.p; }          \
    bool operator!=(const riter &amp;x) const { return p != x.p; }          \
  };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3033" column="9"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a411df2435fac0228ade05b83af598353" prot="public" static="no">
        <name>DEFINE_VIRTUAL_DTOR</name>
        <param><defname>name</defname></param>
        <initializer>virtual ~name(void) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3313" column="12" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1afbd93524a4c5156ceb8a3300099e80fc" prot="public" static="no">
        <name>DECLARE_VIRTUAL_DTOR</name>
        <param><defname>name</defname></param>
        <initializer>virtual ~name(void)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3314" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ac5cc6b4d725987053d84b6e27fca1b56" prot="public" static="no">
        <name>DECLARE_UNCOPYABLE</name>
        <param><defname>T</defname></param>
        <initializer>T &amp;operator=(const T &amp;); T(const T &amp;);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Declare class as uncopyable. (copy assignment and copy ctr are undefined, so if anyone calls them, there will be a compilation or link error) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3320" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_b_d_e_c___1gacd7e581fa01c68a7b60e898e539a28f4" prot="public" static="no">
        <name>IDBDEC_ESCAPE</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>convert non-printable characters to C escapes (<linebreak/>
, , ) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3405" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a4c708623139f560bf99240dc2307c4ef" prot="public" static="no">
        <name>CP_ACP</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3423" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aa61d6f6b77ca0a9fdfbd1ce13d84abe0" prot="public" static="no">
        <name>CP_OEM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3426" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aadb80d30a31c113f6fe45511d44f9922" prot="public" static="no">
        <name>CP_UTF8</name>
        <initializer>65001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3429" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a1fb5b997efa27252ebad1d25e27d2e6e" prot="public" static="no">
        <name>BADCP</name>
        <initializer>wchar32_t(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3467" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a6c51cb594cdd4de3013f6ced1cbab8fd" prot="public" static="no">
        <name>CP_BOM</name>
        <initializer>0xFEFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3523" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a1298449aa3d5122f10caea0eb0cefae6" prot="public" static="no">
        <name>UTF8_BOM</name>
        <initializer>&quot;\xEF\xBB\xBF&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3524" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a1e501ec742469ff0ee42b7f48ec3f4ec" prot="public" static="no">
        <name>UTF8_BOM_SZ</name>
        <initializer>(sizeof(UTF8_BOM) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3525" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a9b5921e3a33c7009dc638fc6f05a7124" prot="public" static="no">
        <name>UTF16LE_BOM</name>
        <initializer>&quot;\xFF\xFE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3527" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1aef73adcc659df7cfc73bc73e43b2212a" prot="public" static="no">
        <name>UTF16BE_BOM</name>
        <initializer>&quot;\xFE\xFF&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3528" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a06f4616bd36ad360e30e596076e3e10d" prot="public" static="no">
        <name>UTF16_BOM_SZ</name>
        <initializer>(sizeof(UTF16LE_BOM) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3529" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a09df87dc3b9f53f8305a6775136d95cf" prot="public" static="no">
        <name>UTF32LE_BOM</name>
        <initializer>&quot;\xFF\xFE\x00\x00&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3531" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a814bd6cd5af4bb4e1265a687b7dbfc39" prot="public" static="no">
        <name>UTF32BE_BOM</name>
        <initializer>&quot;\x00\x00\xFE\xFF&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3532" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ac8f69f800c8bab5f82bd4fdeba90166b" prot="public" static="no">
        <name>UTF32_BOM_SZ</name>
        <initializer>(sizeof(UTF32LE_BOM) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3533" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a637ff0952306b768fe9113a2f72914fd" prot="public" static="no">
        <name>CP_ELLIPSIS</name>
        <initializer>0x2026</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3535" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a3688cbdf6c622ecabf18dadc95ee5ed5" prot="public" static="no">
        <name>UTF8_ELLIPSIS</name>
        <initializer>&quot;\xE2\x80\xA6&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3536" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1acf045fdcbe7ae44911b3eaeacee6751e" prot="public" static="no">
        <name>UTF8_ELLIPSIS_SZ</name>
        <initializer>(sizeof(UTF8_ELLIPSIS) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3537" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a4e7f4a06886f1d1fbaf0843fac448067" prot="public" static="no">
        <name>CP_REPLCHAR</name>
        <initializer>0xFFFD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3539" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a25eb96c47465db047da6378dad7989b7" prot="public" static="no">
        <name>UTF8_REPLCHAR</name>
        <initializer>&quot;\xEF\xBF\xBD&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3540" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ae96904c3d55ef792b1e1a2b8e0877c74" prot="public" static="no">
        <name>UTF8_REPLCHAR_SZ</name>
        <initializer>(sizeof(UTF8_REPLCHAR) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3541" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_e_f___1gabbfe23b246addb7fa7e0da9119445ab8" prot="public" static="no">
        <name>CEF_RETERR</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3550" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a0666846ef3d144935f9b9fc5168310e8" prot="public" static="no">
        <name>ENC_WIN1252</name>
        <initializer>&quot;windows-1252&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3580" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a6ce1fc72d5fa55d7add9d1e20bdf6fee" prot="public" static="no">
        <name>ENC_UTF8</name>
        <initializer>&quot;UTF-8&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3581" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a0f494d349890be87e5ed37ffd24ba55f" prot="public" static="no">
        <name>ENC_MUTF8</name>
        <initializer>&quot;MUTF-8&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3582" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ad08d3049cc3db1d941ec16b232f326bd" prot="public" static="no">
        <name>ENC_UTF16</name>
        <initializer>&quot;UTF-16&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3583" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1adc6b1a4db9bc80a0bdf414270374f11c" prot="public" static="no">
        <name>ENC_UTF16LE</name>
        <initializer>&quot;UTF-16LE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3584" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5d10842cb2d31bd513993508cac4c726" prot="public" static="no">
        <name>ENC_UTF16BE</name>
        <initializer>&quot;UTF-16BE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3585" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a4a8b775a7f2d853e6cfb511b15fdeacf" prot="public" static="no">
        <name>ENC_UTF32LE</name>
        <initializer>&quot;UTF-32LE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3586" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a21eefdc239ca4032dff918fa3406cbee" prot="public" static="no">
        <name>ENC_UTF32BE</name>
        <initializer>&quot;UTF-32BE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3587" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1acb2ff2067e6b8e5a97eb80352e0fd046" prot="public" static="no">
        <name>CP_UTF16</name>
        <initializer>1200</initializer>
        <briefdescription>
<para>UTF-16 codepage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3597" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a5c3e148aed786e7d7edf84c4551ebbb5" prot="public" static="no">
        <name>INVALID_FILE_ATTRIBUTES</name>
        <initializer>((DWORD)-1)</initializer>
        <briefdescription>
<para>old Visual C++ compilers were not defining this </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3602" column="13" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3602" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a56b8c0b48c8e29849467170ad19ac801" prot="public" static="no">
        <name>BELOW_NORMAL_PRIORITY_CLASS</name>
        <initializer>0x00004000</initializer>
        <briefdescription>
<para>old Visual C++ compilers were not defining this </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3605" column="13" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a2e2887e07438f24e08bebfd73d541813" prot="public" static="no">
        <name>SUBSTCHAR</name>
        <initializer>&apos;_&apos;</initializer>
        <briefdescription>
<para>default char, used if a char cannot be represented in a codepage </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3609" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1ae5314b4ed32e86fb438e011ac3046456" prot="public" static="no">
        <name>DEFCOLOR</name>
        <initializer><ref refid="pro_8h_1a3df5040891132e50157aee66affdf1de" kindref="member">bgcolor_t</ref>(-1)</initializer>
        <briefdescription>
<para>default color (used in function, segment definitions) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3615" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_o_r_e_d_i_r___1gae7f0f7a1f21dbecee6576ae133d18ff1" prot="public" static="no">
        <name>IOREDIR_INPUT</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>input redirection </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3632" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_o_r_e_d_i_r___1gaecbe0d841ba5ff00f0ea809ffee29de5" prot="public" static="no">
        <name>IOREDIR_OUTPUT</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>output redirection </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3633" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_o_r_e_d_i_r___1ga9980b995c6e9a1430315a9652695639b" prot="public" static="no">
        <name>IOREDIR_APPEND</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>append, do not overwrite the output file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3634" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_o_r_e_d_i_r___1ga14bedac94c44f284bddb03bbcf11b058" prot="public" static="no">
        <name>IOREDIR_QUOTED</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>the file name was quoted </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3635" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_p___1ga6a72f961d93bee3e84920f010aa396b5" prot="public" static="no">
        <name>LP_NEW_CONSOLE</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>create new console (only ms windows) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3740" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_p___1ga2a68a94201de80e7b38a99f7521fa479" prot="public" static="no">
        <name>LP_TRACE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>debug: unix: ptrace(TRACEME), windows: DEBUG_PROCESS </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3741" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_p___1gaaf7d57c6fd05fd8a992d28d924310092" prot="public" static="no">
        <name>LP_PATH_WITH_ARGS</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>&apos;args&apos; contains executable path too </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3742" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3742" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_p___1gaa327ff3c5b75dc1f0386d2706f44bc9b" prot="public" static="no">
        <name>LP_USE_SHELL</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>&apos;path&apos; is ignored in this case. </para>        </briefdescription>
        <detaileddescription>
<para>use shell to launch the command. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3743" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_p___1ga636e8219625f894dd0c51053df1c5ed9" prot="public" static="no">
        <name>LP_LAUNCH_32_BIT</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>prefer to launch 32-bit part of file (only mac) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3745" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3745" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_p___1gab69b1c1794fcf8f988177f1d348d27ef" prot="public" static="no">
        <name>LP_LAUNCH_64_BIT</name>
        <initializer>0x0020</initializer>
        <briefdescription>
<para>only one of LP_LAUNCH_*_BIT bits can be specified </para>        </briefdescription>
        <detaileddescription>
<para>prefer to launch 64-bit part of file (only mac) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3746" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_p___1ga4a52d1cd9ba5d6ac517cb824d7768ec0" prot="public" static="no">
        <name>LP_NO_ASLR</name>
        <initializer>0x0040</initializer>
        <briefdescription>
<para>disable ASLR (only mac) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3748" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_p___1ga61dd4175be8f944fe1102f1c2947d0c2" prot="public" static="no">
        <name>LP_DETACH_TTY</name>
        <initializer>0x0080</initializer>
        <briefdescription>
<para>detach the current tty (unix) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3749" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_p___1ga3799601cb3277fddf6e07fe9ad67874f" prot="public" static="no">
        <name>LP_HIDE_WINDOW</name>
        <initializer>0x0100</initializer>
        <briefdescription>
<para>tries to hide new window on startup (only windows) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3750" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pro_8h_1a883104093038da6648f4f4973d05641b" prot="public" static="no">
        <name>OPAQUE_HANDLE</name>
        <param><defname>n</defname></param>
        <initializer>typedef struct __ ## n {} *n</initializer>
        <briefdescription>
<para>Thread opaque handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3869" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3869" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="pro_8h_1a665bbcc021b383d33fd7854024ac464c" prot="public" static="no">
        <name>tty_control_t</name>
        <enumvalue id="pro_8h_1a665bbcc021b383d33fd7854024ac464ca8a457d62dd9761eb86ff82249b4c3766" prot="public">
          <name>TCT_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pro_8h_1a665bbcc021b383d33fd7854024ac464ca64babf86c319ca6311e7f2607ed0e78a" prot="public">
          <name>TCT_OWNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="pro_8h_1a665bbcc021b383d33fd7854024ac464ca1ed744677f70a079ab0fa821afafc3ff" prot="public">
          <name>TCT_NOT_OWNER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Teletype control. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3834" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3833" bodyend="3838"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char uchar</definition>
        <argsstring></argsstring>
        <name>uchar</name>
        <briefdescription>
<para>unsigned 8 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="299" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short ushort</definition>
        <argsstring></argsstring>
        <name>ushort</name>
        <briefdescription>
<para>unsigned 16 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="300" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int uint</definition>
        <argsstring></argsstring>
        <name>uint</name>
        <briefdescription>
<para>unsigned 32 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="301" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1ae47c588f3ab8c61121c1c7ab7edc47cd" prot="public" static="no">
        <type>char</type>
        <definition>typedef char int8</definition>
        <argsstring></argsstring>
        <name>int8</name>
        <briefdescription>
<para>signed 8 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="304" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a1a6408291ee3cfd0760a61ac64084154" prot="public" static="no">
        <type>signed char</type>
        <definition>typedef signed char sint8</definition>
        <argsstring></argsstring>
        <name>sint8</name>
        <briefdescription>
<para>signed 8 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="305" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1adde6aaee8457bee49c2a92621fe22b79" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char uint8</definition>
        <argsstring></argsstring>
        <name>uint8</name>
        <briefdescription>
<para>unsigned 8 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="306" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a4355d16fcf9f644c9ac84293f0b1801f" prot="public" static="no">
        <type>short</type>
        <definition>typedef short int16</definition>
        <argsstring></argsstring>
        <name>int16</name>
        <briefdescription>
<para>signed 16 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="307" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short uint16</definition>
        <argsstring></argsstring>
        <name>uint16</name>
        <briefdescription>
<para>unsigned 16 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="308" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a56f1a81c92849566ae864511088eb7e8" prot="public" static="no">
        <type>int</type>
        <definition>typedef int int32</definition>
        <argsstring></argsstring>
        <name>int32</name>
        <briefdescription>
<para>signed 32 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="309" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int uint32</definition>
        <argsstring></argsstring>
        <name>uint32</name>
        <briefdescription>
<para>unsigned 32 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="310" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" prot="public" static="no">
        <type>longlong</type>
        <definition>typedef longlong int64</definition>
        <argsstring></argsstring>
        <name>int64</name>
        <briefdescription>
<para>signed 64 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="314" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" prot="public" static="no">
        <type>ulonglong</type>
        <definition>typedef ulonglong uint64</definition>
        <argsstring></argsstring>
        <name>uint64</name>
        <briefdescription>
<para>unsigned 64 bit value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="315" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a278912da9ca7629af5b5040efe890ece" prot="public" static="no">
        <type>wchar_t</type>
        <definition>typedef wchar_t wchar16_t</definition>
        <argsstring></argsstring>
        <name>wchar16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="334" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a365d63e59c84075492584cbddceb6c33" prot="public" static="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>typedef uint32 wchar32_t</definition>
        <argsstring></argsstring>
        <name>wchar32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="335" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>typedef ptrdiff_t ssize_t</definition>
        <argsstring></argsstring>
        <name>ssize_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signed size_t - used to check for size overflows when the counter becomes negative. Also signed size_t allows us to signal an error condition using a negative value, for example, as a function return value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="345" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a5257343ca1e6d81b95e7bb9688608061" prot="public" static="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>typedef uint32 ea_t</definition>
        <argsstring></argsstring>
        <name>ea_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="393" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a7ababb5e1a5b9a8ef7e98785a7895dda" prot="public" static="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>typedef uint32 sel_t</definition>
        <argsstring></argsstring>
        <name>sel_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="394" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a2b7063a8b4ea1ab859b1240b6c5ed263" prot="public" static="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>typedef uint32 asize_t</definition>
        <argsstring></argsstring>
        <name>asize_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="395" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a4f737d7da496892600b04388dadd2fd1" prot="public" static="no">
        <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
        <definition>typedef int32 adiff_t</definition>
        <argsstring></argsstring>
        <name>adiff_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="396" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" prot="public" static="no">
        <type>asize_t</type>
        <definition>typedef asize_t uval_t</definition>
        <argsstring></argsstring>
        <name>uval_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>unsigned value used by the processor.<itemizedlist>
<listitem><para>for 32-bit ::ea_t - <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></para></listitem><listitem><para>for 64-bit ::ea_t - <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="402" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" prot="public" static="no">
        <type>adiff_t</type>
        <definition>typedef adiff_t sval_t</definition>
        <argsstring></argsstring>
        <name>sval_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>signed value used by the processor.<itemizedlist>
<listitem><para>for 32-bit ::ea_t - <ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></para></listitem><listitem><para>for 64-bit ::ea_t - <ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="405" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a84c6c720bb5e612c64013a7d4e8acd55" prot="public" static="no">
        <type>int</type>
        <definition>typedef error_t</definition>
        <argsstring></argsstring>
        <name>error_t</name>
        <briefdescription>
<para>Error code (errno) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="409" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a3ff070e1ea7ee45ec700c1ccff959597" prot="public" static="no">
        <type><ref refid="pro_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref></type>
        <definition>typedef uint8 op_dtype_t</definition>
        <argsstring></argsstring>
        <name>op_dtype_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="411" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a3645c7d6d9f101f476e964504741b92b" prot="public" static="no">
        <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
        <definition>typedef int32 qtime32_t</definition>
        <argsstring></argsstring>
        <name>qtime32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>we use our own time type because time_t can be 32-bit or 64-bit depending on the compiler </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="427" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a608a3fbc2403cb7e0b2314675c13f1ce" prot="public" static="no">
        <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
        <definition>typedef uint64 qtime64_t</definition>
        <argsstring></argsstring>
        <name>qtime64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>64-bit time value expressed as seconds and microseconds since the Epoch </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="429" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" prot="public" static="no">
        <type><ref refid="class__qstring" kindref="compound">_qstring</ref>&lt; char &gt;</type>
        <definition>typedef _qstring&lt;char&gt; qstring</definition>
        <argsstring></argsstring>
        <name>qstring</name>
        <briefdescription>
<para>regular string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2837" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2837" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a7fad0f3973de5825c480e27517e159f3" prot="public" static="no">
        <type><ref refid="class__qstring" kindref="compound">_qstring</ref>&lt; <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> &gt;</type>
        <definition>typedef _qstring&lt;uchar&gt; qtype</definition>
        <argsstring></argsstring>
        <name>qtype</name>
        <briefdescription>
<para>type string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2838" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2838" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1ae1af89f7fa627fd5a720250e14256908" prot="public" static="no">
        <type><ref refid="class__qstring" kindref="compound">_qstring</ref>&lt; wchar16_t &gt;</type>
        <definition>typedef _qstring&lt;wchar16_t&gt; qwstring</definition>
        <argsstring></argsstring>
        <name>qwstring</name>
        <briefdescription>
<para>unicode string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2839" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2839" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a365b8d9a8d955b16727c711d50bec282" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref> &gt;</type>
        <definition>typedef qvector&lt;uval_t&gt; uvalvec_t</definition>
        <argsstring></argsstring>
        <name>uvalvec_t</name>
        <briefdescription>
<para>vector of unsigned values </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3193" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1aac6b9b69e8232ea018c7a234cc882fcd" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref> &gt;</type>
        <definition>typedef qvector&lt;sval_t&gt; svalvec_t</definition>
        <argsstring></argsstring>
        <name>svalvec_t</name>
        <briefdescription>
<para>vector of signed values </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3194" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a9f46d9d52bbfcc78bc1836f4f2683da4" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; ea_t &gt;</type>
        <definition>typedef qvector&lt;ea_t&gt; eavec_t</definition>
        <argsstring></argsstring>
        <name>eavec_t</name>
        <briefdescription>
<para>vector of addresses </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3195" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; int &gt;</type>
        <definition>typedef qvector&lt;int&gt; intvec_t</definition>
        <argsstring></argsstring>
        <name>intvec_t</name>
        <briefdescription>
<para>vector of integers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3196" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a823b67c620f6cdca97e1d969ea4a9b02" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> &gt;</type>
        <definition>typedef qvector&lt;qstring&gt; qstrvec_t</definition>
        <argsstring></argsstring>
        <name>qstrvec_t</name>
        <briefdescription>
<para>vector of strings </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3197" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1af7fb122ad7ac49bded40ed26e0001849" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="pro_8h_1ae1af89f7fa627fd5a720250e14256908" kindref="member">qwstring</ref> &gt;</type>
        <definition>typedef qvector&lt;qwstring&gt; qwstrvec_t</definition>
        <argsstring></argsstring>
        <name>qwstrvec_t</name>
        <briefdescription>
<para>vector of unicode strings </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3198" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a690f2078cd0bc5c9eb1b37c6daa123dd" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; bool &gt;</type>
        <definition>typedef qvector&lt;bool&gt; boolvec_t</definition>
        <argsstring></argsstring>
        <name>boolvec_t</name>
        <briefdescription>
<para>vector of bools </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3199" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a3fb92c6beff4e1e004a4ef5a2e356391" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; size_t &gt;</type>
        <definition>typedef qvector&lt;size_t&gt; sizevec_t</definition>
        <argsstring></argsstring>
        <name>sizevec_t</name>
        <briefdescription>
<para>vector of sizes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3200" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a55dd00e03168fb5180830e87ef0a2c57" prot="public" static="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>typedef uint32 flags_t</definition>
        <argsstring></argsstring>
        <name>flags_t</name>
        <briefdescription>
<para>32-bit flags for each address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3611" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" prot="public" static="no">
        <type>ea_t</type>
        <definition>typedef ea_t tid_t</definition>
        <argsstring></argsstring>
        <name>tid_t</name>
        <briefdescription>
<para>type id (for enums, structs, etc) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3612" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a3df5040891132e50157aee66affdf1de" prot="public" static="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>typedef uint32 bgcolor_t</definition>
        <argsstring></argsstring>
        <name>bgcolor_t</name>
        <briefdescription>
<para>background color in RGB </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3614" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a3d227a0129097f194ff30166ba653d02" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structchannel__redir__t" kindref="compound">channel_redir_t</ref> &gt;</type>
        <definition>typedef qvector&lt;channel_redir_t&gt; channel_redirs_t</definition>
        <argsstring></argsstring>
        <name>channel_redirs_t</name>
        <briefdescription>
<para>vector of <ref refid="structchannel__redir__t" kindref="compound">channel_redir_t</ref> objects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3644" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3644" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a8a8fcacda1bd30d443b0a6b3e6b72d50" prot="public" static="no">
        <type>int idaapi</type>
        <definition>typedef int idaapi qthread_cb_t(void *ud)</definition>
        <argsstring>(void *ud)</argsstring>
        <name>qthread_cb_t</name>
        <briefdescription>
<para>THREADS. </para>        </briefdescription>
        <detaileddescription>
<para>Thread callback function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3865" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pro_8h_1a2561704a97dcdf2122a896301c1e8244" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* qhandle_t</definition>
        <argsstring></argsstring>
        <name>qhandle_t</name>
        <briefdescription>
<para>MS Windows HANDLE. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3954" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3954" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pro_8h_1a77c001eb66e37726bd14b9a35b16a59d" prot="public" static="no" mutable="no">
        <type>idaman size_t</type>
        <definition>idaman size_t bufsize</definition>
        <argsstring></argsstring>
        <name>bufsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="507" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pro_8h_1afcf53e7942db11ba01faa4a4b0e8e823" prot="public" static="no" mutable="no">
        <type>idaman size_t const char *</type>
        <definition>idaman size_t const char * format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="508" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pro_8h_1a009fd9a1b9e807f215bd2e6d8c5c5248" prot="public" static="no" mutable="no">
        <type>idaman size_t const char <ref refid="pro_8h_1a3645c7d6d9f101f476e964504741b92b" kindref="member">qtime32_t</ref></type>
        <definition>idaman size_t const char qtime64_t t</definition>
        <argsstring></argsstring>
        <name>t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="509" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pro_8h_1ae6695c86768c2156de5068ee322f6823" prot="public" static="no" mutable="no">
        <type>idaman bool ida_export_data</type>
        <definition>idaman bool ida_export_data is_ida_kernel</definition>
        <argsstring></argsstring>
        <name>is_ida_kernel</name>
        <briefdescription>
<para>Is this IDA kernel? If not, we are executing a standalone application. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="588" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pro_8h_1a634763e97c3f75cfe9d667a6f434f3ad" prot="public" static="no" mutable="no">
        <type>idaman bool ida_export_data</type>
        <definition>idaman bool ida_export_data under_debugger</definition>
        <argsstring></argsstring>
        <name>under_debugger</name>
        <briefdescription>
<para>is IDA running under a debugger? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="658" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="658" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pro_8h_1adcc6a45b5e26233729cfe62803dd2eed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref></type>
        <definition>INLINE int64 qatoll</definition>
        <argsstring>(const char *nptr)</argsstring>
        <name>qatoll</name>
        <param>
          <type>const char *</type>
          <declname>nptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="321" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="321" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a78ea2b4a8a882b88a415a5b5ff94369b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>INLINE THREAD_SAFE uint32 get_secs</definition>
        <argsstring>(qtime64_t t)</argsstring>
        <name>get_secs</name>
        <param>
          <type><ref refid="pro_8h_1a608a3fbc2403cb7e0b2314675c13f1ce" kindref="member">qtime64_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get the &apos;seconds since the epoch&apos; part of a qtime64_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="434" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="434" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1abc5bafcda40b14064ffb98d192fb2f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>INLINE THREAD_SAFE uint32 get_usecs</definition>
        <argsstring>(qtime64_t t)</argsstring>
        <name>get_usecs</name>
        <param>
          <type><ref refid="pro_8h_1a608a3fbc2403cb7e0b2314675c13f1ce" kindref="member">qtime64_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get the microseconds part of a qtime64_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="442" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="442" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a681707d0fea1655757aea8d66ac904cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a608a3fbc2403cb7e0b2314675c13f1ce" kindref="member">qtime64_t</ref></type>
        <definition>INLINE THREAD_SAFE qtime64_t make_qtime64</definition>
        <argsstring>(uint32 secs, DEFARG(int32 usecs, 0))</argsstring>
        <name>make_qtime64</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>secs</declname>
        </param>
        <param>
          <type>DEFARG(<ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref> usecs, 0)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a <ref refid="pro_8h_1a608a3fbc2403cb7e0b2314675c13f1ce" kindref="member">qtime64_t</ref> instance from a seconds value and microseconds value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>secs</parametername>
</parameternamelist>
<parameterdescription>
<para>seconds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usecs</parametername>
</parameternamelist>
<parameterdescription>
<para>microseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="452" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="452" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a1a664397b8a8fca96db609128e0ed314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qctime</definition>
        <argsstring>(char *buf, size_t bufsize, qtime32_t t)</argsstring>
        <name>qctime</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a3645c7d6d9f101f476e964504741b92b" kindref="member">qtime32_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts calendar time into a string. Puts &apos;wrong timestamp\n&apos; into the buffer if failed <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>calendar time </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="465" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a430b7ab0ffcb2caf063a4956ac8e09a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qctime_utc</definition>
        <argsstring>(char *buf, size_t bufsize, qtime32_t t)</argsstring>
        <name>qctime_utc</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a3645c7d6d9f101f476e964504741b92b" kindref="member">qtime32_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts calendar time into a string using Coordinated Universal Time (UTC). Function is equivalent to asctime(gmtime(t)). Puts &apos;wrong timestamp\n&apos; into the buffer if failed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>of the output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>calendar time </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ad50fcd84175debbba44150dbb6073052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qlocaltime</definition>
        <argsstring>(struct tm *_tm, qtime32_t t)</argsstring>
        <name>qlocaltime</name>
        <param>
          <type>struct tm *</type>
          <declname>_tm</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a3645c7d6d9f101f476e964504741b92b" kindref="member">qtime32_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a time value to a tm structure. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">_tm</parametername>
</parameternamelist>
<parameterdescription>
<para>result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>local time </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a00a277902406b3f757b9c4c38d50973a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>INLINE THREAD_SAFE bool qlocaltime64</definition>
        <argsstring>(struct tm *_tm, qtime64_t t)</argsstring>
        <name>qlocaltime64</name>
        <param>
          <type>struct tm *</type>
          <declname>_tm</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a608a3fbc2403cb7e0b2314675c13f1ce" kindref="member">qtime64_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Same as <ref refid="pro_8h_1ad50fcd84175debbba44150dbb6073052" kindref="member">qlocaltime(struct tm *, qtime32_t)</ref>, but accepts a 64-bit time value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="489" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="489" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a6422db3089cd3aa9d2b35e22278d34a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman</type>
        <definition>idaman AS_STRFTIME</definition>
        <argsstring>(3) THREAD_SAFE size_t ida_export qstrftime64(char *buf</argsstring>
        <name>AS_STRFTIME</name>
        <param>
          <type>3</type>
        </param>
        <briefdescription>
<para>Same as qstrftime(), but accepts a 64-bit time value. </para>        </briefdescription>
        <detaileddescription>
<para>Get string representation of a qtime32_t. Copies into &apos;buf&apos; the content of &apos;format&apos;, expanding its format specifiers into the corresponding values that represent the time described in &apos;t&apos;, with a limit of &apos;bufsize&apos; characters see <ulink url="http://www.cplusplus.com/reference/ctime/strftime/">http://www.cplusplus.com/reference/ctime/strftime/</ulink> for more <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>of the output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>format string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>time value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of the resulting string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a516211c4743c98f183569adc57de9045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export qsleep</definition>
        <argsstring>(int milliseconds)</argsstring>
        <name>qsleep</name>
        <param>
          <type>int</type>
          <declname>milliseconds</declname>
        </param>
        <briefdescription>
<para>Suspend execution for given number of milliseconds. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a07e890e75db386ca89e65cf81078ecee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> ida_export</type>
        <definition>idaman THREAD_SAFE uint64 ida_export get_nsec_stamp</definition>
        <argsstring>(void)</argsstring>
        <name>get_nsec_stamp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>High resolution timer. On Unix systems, returns current time in nanoseconds. On Windows, returns a high resolution counter (QueryPerformanceCounter) <simplesect kind="return"><para>stamp in nanoseconds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="531" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a01443707636069e955376bce0bd4836e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a608a3fbc2403cb7e0b2314675c13f1ce" kindref="member">qtime64_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE qtime64_t ida_export qtime64</definition>
        <argsstring>(void)</argsstring>
        <name>qtime64</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current time with microsecond resolution (in fact the resolution is worse on windows) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="536" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a949364582660e112cde2942431fdd506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export gen_rand_buf</definition>
        <argsstring>(void *buffer, size_t bufsz)</argsstring>
        <name>gen_rand_buf</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a random buffer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsz</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa566d92429849c81f035fc2f5c643f67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a84c6c720bb5e612c64013a7d4e8acd55" kindref="member">error_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE error_t ida_export set_qerrno</definition>
        <argsstring>(error_t code)</argsstring>
        <name>set_qerrno</name>
        <param>
          <type><ref refid="pro_8h_1a84c6c720bb5e612c64013a7d4e8acd55" kindref="member">error_t</ref></type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Set qerrno. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="603" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aee2130be457b029a366d04ae2333e8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a84c6c720bb5e612c64013a7d4e8acd55" kindref="member">error_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE error_t ida_export get_qerrno</definition>
        <argsstring>(void)</argsstring>
        <name>get_qerrno</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get qerrno. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="608" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ae72a90f168783073acf8ab0e83711e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> NORETURN void ida_export</type>
        <definition>idaman THREAD_SAFE NORETURN void ida_export interr</definition>
        <argsstring>(int code)</argsstring>
        <name>interr</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Show internal error message and terminate execution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="674" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a2806c6575b58eb42bb0d2b96f92fc39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *ida_export</type>
        <definition>idaman THREAD_SAFE void* ida_export qalloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>qalloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>System independent malloc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a8820d5cc099745032331eeb5acedc06e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *ida_export</type>
        <definition>idaman THREAD_SAFE void* ida_export qrealloc</definition>
        <argsstring>(void *alloc, size_t newsize)</argsstring>
        <name>qrealloc</name>
        <param>
          <type>void *</type>
          <declname>alloc</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>newsize</declname>
        </param>
        <briefdescription>
<para>System independent realloc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="678" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a4c3884469a039654d8073862f442194d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *ida_export</type>
        <definition>idaman THREAD_SAFE void* ida_export qcalloc</definition>
        <argsstring>(size_t nitems, size_t itemsize)</argsstring>
        <name>qcalloc</name>
        <param>
          <type>size_t</type>
          <declname>nitems</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>itemsize</declname>
        </param>
        <briefdescription>
<para>System independent calloc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="679" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a69f9c35c61878b9b72795fa0f47afa26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export qfree</definition>
        <argsstring>(void *alloc)</argsstring>
        <name>qfree</name>
        <param>
          <type>void *</type>
          <declname>alloc</declname>
        </param>
        <briefdescription>
<para>System independent free. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="680" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa4750398edaf310e15c64e5ec15d7692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qstrdup</definition>
        <argsstring>(const char *string)</argsstring>
        <name>qstrdup</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>System independent strdup. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="681" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5f504e6fb075c97db80fc40357fa5e75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* qalloc_array</definition>
        <argsstring>(size_t n)</argsstring>
        <name>qalloc_array</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Use this class to avoid integer overflows when allocating arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="689" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="689" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1af18530bd87d8babed040fb63dd9b1136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* qrealloc_array</definition>
        <argsstring>(T *ptr, size_t n)</argsstring>
        <name>qrealloc_array</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Use this class to avoid integer overflows when allocating arrays. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="696" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="696" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa6f63034dc8c1a2f236987740a6623dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *ida_export</type>
        <definition>idaman THREAD_SAFE void* ida_export memrev</definition>
        <argsstring>(void *buf, ssize_t size)</argsstring>
        <name>memrev</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reverse memory block. Analog of strrev() function <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer to reverse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to buffer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="756" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a18ffa492cbd3c5042ecfa00960e7b8a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export strrpl</definition>
        <argsstring>(char *str, int char1, int char2)</argsstring>
        <name>strrpl</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>char1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>char2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replace all occurrences of a character within a string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char1</parametername>
</parameternamelist>
<parameterdescription>
<para>char to be replaced </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char2</parametername>
</parameternamelist>
<parameterdescription>
<para>replacement char </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1addddeaf126e3134b9ed2aa24eb5de098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *</type>
        <definition>INLINE THREAD_SAFE char* tail</definition>
        <argsstring>(char *str)</argsstring>
        <name>tail</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Get tail of a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="785" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="785" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a0019437589c70ff1353b0d8d6cfd0b94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const char *</type>
        <definition>THREAD_SAFE const char* tail</definition>
        <argsstring>(const char *str)</argsstring>
        <name>tail</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Get tail of a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="788" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="788" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1af74a1e4b6b49709fc024d286568c2878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qstrncpy</definition>
        <argsstring>(char *dst, const char *src, size_t dstsize)</argsstring>
        <name>qstrncpy</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A safer strncpy - makes sure that there is a terminating zero. nb: this function doesn&apos;t fill the whole buffer zeroes as strncpy does nb: ssize_t(dstsize) must be &gt; 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="796" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a50baa551d4fa0f4fcf77543b7a265324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qstpncpy</definition>
        <argsstring>(char *dst, const char *src, size_t dstsize)</argsstring>
        <name>qstpncpy</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A safer stpncpy - returns pointer to the end of the destination nb: ssize_t(dstsize) must be &gt; 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="802" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a9e9f9105250f378799190e67245488d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qstrncat</definition>
        <argsstring>(char *dst, const char *src, size_t dstsize)</argsstring>
        <name>qstrncat</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A safer strncat - accepts the size of the &apos;dst&apos; as &apos;dstsize&apos; and returns dst nb: ssize_t(dstsize) must be &gt; 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="808" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a014e6f74c7c212304c02edc431279f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qstrtok</definition>
        <argsstring>(char *s, const char *delim, char **save_ptr)</argsstring>
        <name>qstrtok</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>delim</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>save_ptr</declname>
        </param>
        <briefdescription>
<para>Thread-safe version of strtok. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="813" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ad7989b0f91d31eb3c1d6e040d1e95b31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qstrlwr</definition>
        <argsstring>(char *str)</argsstring>
        <name>qstrlwr</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Convert the string to lowercase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="818" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a13f5005c03ce74224b8c530e05b79723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qstrupr</definition>
        <argsstring>(char *str)</argsstring>
        <name>qstrupr</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Convert the string to uppercase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="823" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a3c7dc639641cee1de7d4d90de696b589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const char *ida_export</type>
        <definition>idaman THREAD_SAFE const char* ida_export stristr</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>stristr</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find one string in another (Case insensitive analog of strstr()). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s1</parametername>
</parameternamelist>
<parameterdescription>
<para>string to be searched </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s2</parametername>
</parameternamelist>
<parameterdescription>
<para>string to search for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the first occurrence of s2 within s1, NULL if none exists </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="831" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a81ed6deb5b6b1731e4275a79cdc003f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *idaapi</type>
        <definition>char* idaapi stristr</definition>
        <argsstring>(char *s1, const char *s2)</argsstring>
        <name>stristr</name>
        <param>
          <type>char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>Same as <ref refid="pro_8h_1a3c7dc639641cee1de7d4d90de696b589" kindref="member">stristr(const char *, const char *)</ref> but returns a non-const result. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="836" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="836" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab81df2f3d6cea63ebccfdf2450360d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_local</type>
        <definition>INLINE THREAD_SAFE bool ida_local qisspace</definition>
        <argsstring>(char c)</argsstring>
        <name>qisspace</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>is...() functions misbehave with &apos;char&apos; argument. introduce more robust function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="840" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="840" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5e16a481d13a20be5414ff050ec070c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_local</type>
        <definition>INLINE THREAD_SAFE bool ida_local qisalpha</definition>
        <argsstring>(char c)</argsstring>
        <name>qisalpha</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>see <ref refid="pro_8h_1ab81df2f3d6cea63ebccfdf2450360d8c" kindref="member">qisspace()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="841" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="841" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a47084e44bc41d8d364b60969aae58184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_local</type>
        <definition>INLINE THREAD_SAFE bool ida_local qisalnum</definition>
        <argsstring>(char c)</argsstring>
        <name>qisalnum</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>see <ref refid="pro_8h_1ab81df2f3d6cea63ebccfdf2450360d8c" kindref="member">qisspace()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="842" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="842" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5cea8dd7f9629a65deaec22f07b17607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_local</type>
        <definition>INLINE THREAD_SAFE bool ida_local qispunct</definition>
        <argsstring>(char c)</argsstring>
        <name>qispunct</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>see <ref refid="pro_8h_1ab81df2f3d6cea63ebccfdf2450360d8c" kindref="member">qisspace()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="843" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="843" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a2d3e69301e21c3467a7f77541d3d3a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_local</type>
        <definition>INLINE THREAD_SAFE bool ida_local qislower</definition>
        <argsstring>(char c)</argsstring>
        <name>qislower</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>see <ref refid="pro_8h_1ab81df2f3d6cea63ebccfdf2450360d8c" kindref="member">qisspace()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="844" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="844" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a36826faa11a5313f596290ac8071facf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_local</type>
        <definition>INLINE THREAD_SAFE bool ida_local qisupper</definition>
        <argsstring>(char c)</argsstring>
        <name>qisupper</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>see <ref refid="pro_8h_1ab81df2f3d6cea63ebccfdf2450360d8c" kindref="member">qisspace()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="845" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="845" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab0fb0e915ede5190d8fca0f08fb49019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_local</type>
        <definition>INLINE THREAD_SAFE bool ida_local qisprint</definition>
        <argsstring>(char c)</argsstring>
        <name>qisprint</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>see <ref refid="pro_8h_1ab81df2f3d6cea63ebccfdf2450360d8c" kindref="member">qisspace()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="846" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="846" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a428ef01064fd63250a4511fa898362e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_local</type>
        <definition>INLINE THREAD_SAFE bool ida_local qisdigit</definition>
        <argsstring>(char c)</argsstring>
        <name>qisdigit</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>see <ref refid="pro_8h_1ab81df2f3d6cea63ebccfdf2450360d8c" kindref="member">qisspace()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="847" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="847" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a6d4d93bfa9b0a0207b9eb062bef54dec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_local</type>
        <definition>INLINE THREAD_SAFE bool ida_local qisxdigit</definition>
        <argsstring>(char c)</argsstring>
        <name>qisxdigit</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>see <ref refid="pro_8h_1ab81df2f3d6cea63ebccfdf2450360d8c" kindref="member">qisspace()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="848" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="848" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a32d6c984f57dc51803d16063a6ec176d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_local</type>
        <definition>INLINE THREAD_SAFE int ida_local qtolower</definition>
        <argsstring>(char c)</argsstring>
        <name>qtolower</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Get lowercase equivalent of given char. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="851" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="851" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a9cb7064092cd4e548780df46ca185a11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_local</type>
        <definition>INLINE THREAD_SAFE int ida_local qtoupper</definition>
        <argsstring>(char c)</argsstring>
        <name>qtoupper</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Get uppercase equivalent of given char. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="853" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="853" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="group__qsnprintf_1ga82e5d2c150c3a1d1eed598ea21baf879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qsnprintf</definition>
        <argsstring>(char *buffer, size_t n, const char *format,...)</argsstring>
        <name>qsnprintf</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>A safer snprintf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="904" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__qsnprintf_1ga463fd2201cca8b6362f1cd42b8403397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qsscanf</definition>
        <argsstring>(const char *input, const char *format,...)</argsstring>
        <name>qsscanf</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>A safer sscanf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="905" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__qsnprintf_1gaf45ba32528a64944837773def69b19ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qvsnprintf</definition>
        <argsstring>(char *buffer, size_t n, const char *format, va_list va)</argsstring>
        <name>qvsnprintf</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>See <ref refid="group__qsnprintf_1ga82e5d2c150c3a1d1eed598ea21baf879" kindref="member">qsnprintf()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="906" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__qsnprintf_1gaef7269e1694a397c5c7c1de0efffc608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qvsscanf</definition>
        <argsstring>(const char *input, const char *format, va_list va)</argsstring>
        <name>qvsscanf</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>See <ref refid="group__qsnprintf_1ga463fd2201cca8b6362f1cd42b8403397" kindref="member">qsscanf()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="907" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__qsnprintf_1ga6827295cc8e55915b6d07b4dc96d9897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export append_snprintf</definition>
        <argsstring>(char *buf, const char *end, const char *format,...)</argsstring>
        <name>append_snprintf</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Append result of sprintf to &apos;buf&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="908" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a509e62fac4101d287473b116b44e0de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GCC_DIAG_OFF</definition>
        <argsstring>(format-nonliteral)</argsstring>
        <name>GCC_DIAG_OFF</name>
        <param>
          <type>format-</type>
          <declname>nonliteral</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>qsnprintf that does not check its arguments. Normally gcc complains about the non-literal formats. However, sometimes we still need to call qsnprintf with a dynamically built format string. OTOH, there are absolutely no checks of the input arguments, so be careful! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="916" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a0e0177211b4f17692d47e138a310c743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE int</type>
        <definition>INLINE int nowarn_qsnprintf</definition>
        <argsstring>(char *buf, size_t size, const char *format,...)</argsstring>
        <name>nowarn_qsnprintf</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="917" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="917" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5accc4a517885c4cbef83044df33badd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GCC_DIAG_ON</definition>
        <argsstring>(format-nonliteral)</argsstring>
        <name>GCC_DIAG_ON</name>
        <param>
          <type>format-</type>
          <declname>nonliteral</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1abb07f6b8e62fe99e02386db222eac783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export vqmakepath</definition>
        <argsstring>(char *buf, size_t bufsize, const char *s1, va_list)</argsstring>
        <name>vqmakepath</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>va_list</type>
        </param>
        <briefdescription>
<para>See <ref refid="pro_8h_1ae31a114fc211533f7589d5ebc12ea214" kindref="member">qmakepath()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="943" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ae31a114fc211533f7589d5ebc12ea214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qmakepath</definition>
        <argsstring>(char *buf, size_t bufsize, const char *s1,...)</argsstring>
        <name>qmakepath</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a path from a null-terminated sequence of strings. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer. Can be == s1, but must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to result </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="951" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1af01b16b705d2cebea26f158d00e6fb56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export qgetcwd</definition>
        <argsstring>(char *buf, size_t bufsize)</argsstring>
        <name>qgetcwd</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current working directory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer This function calls <ref refid="kernwin_8hpp_1a6c448838751433bfda04dcdb8d8b1457" kindref="member">error()</ref> if any problem occurs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="959" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a91ac920d58e898fcc166659cd1ea7a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export qchdir</definition>
        <argsstring>(const char *path)</argsstring>
        <name>qchdir</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the current working directory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the new directory The possible return values are the same as those of the POSIX &apos;chdir&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="966" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ae2e087544b6da9a900418f117ebc8002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qdirname</definition>
        <argsstring>(char *buf, size_t bufsize, const char *path)</argsstring>
        <name>qdirname</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the directory part of the path. path and buf may point to the same buffer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer for the directory part. can be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of this buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>path to split </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>input buffer did not have the directory part. In this case the buffer is filled with &quot;.&quot; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="978" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a44d6db2829e60d14c9b2889bbead48d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qmakefile</definition>
        <argsstring>(char *buf, size_t bufsize, const char *base, const char *ext)</argsstring>
        <name>qmakefile</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct filename from base name and extension. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer. Can be == base, but must not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>base name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext</parametername>
</parameternamelist>
<parameterdescription>
<para>extension </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to result </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="988" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa3375d2d7a58e2655f52bd7d4ec67fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qsplitfile</definition>
        <argsstring>(char *file, char **base, char **ext)</argsstring>
        <name>qsplitfile</name>
        <param>
          <type>char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>base</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>ext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Split filename into base name and extension. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>filename, may be changed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>filled with base part, can be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext</parametername>
</parameternamelist>
<parameterdescription>
<para>filled with extension part, can be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the base part </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1001" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1af67b74196a76c81934616a3b506982bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qisabspath</definition>
        <argsstring>(const char *file)</argsstring>
        <name>qisabspath</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Is the file name absolute (not relative to the current dir?) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1006" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab740dfcab12d40de3733bf9bf414e65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const char *ida_export</type>
        <definition>idaman THREAD_SAFE const char* ida_export qbasename</definition>
        <argsstring>(const char *path)</argsstring>
        <name>qbasename</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the file name part of the given path. <simplesect kind="return"><para>NULL if path is NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1012" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab1fe42ecc6f8b3e0aa087c7b146a1524" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* qbasename</definition>
        <argsstring>(char *path)</argsstring>
        <name>qbasename</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Same as <ref refid="pro_8h_1ab740dfcab12d40de3733bf9bf414e65c" kindref="member">qbasename(const char *)</ref>, but accepts and returns non-const char pointers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1016" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1016" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a89daf99f325087c4e5fa191061ba7a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export qmake_full_path</definition>
        <argsstring>(char *dst, size_t dstsize, const char *src)</argsstring>
        <name>qmake_full_path</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Convert relative path to absolute path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1022" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a855654422b31a8bdaa4f3e0260536b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export search_path</definition>
        <argsstring>(char *buf, size_t bufsize, const char *file, bool search_cwd)</argsstring>
        <name>search_path</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>search_cwd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search for a file in the PATH environment variable or the current directory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer to hold the full file path </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the file name to look for. If the file is an absolute path then buf will return the file value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>search_cwd</parametername>
</parameternamelist>
<parameterdescription>
<para>search the current directory if file was not found in the PATH </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the file was found and false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1033" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ac0f51308d40e1c7024530036295239ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export set_file_ext</definition>
        <argsstring>(char *outbuf, size_t bufsize, const char *file, const char *ext)</argsstring>
        <name>set_file_ext</name>
        <param>
          <type>char *</type>
          <declname>outbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set file name extension unconditionally. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to hold the answer. may be the same as the file name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the file name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext</parametername>
</parameternamelist>
<parameterdescription>
<para>new extension (with or without &apos;.&apos;) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the new file name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1055" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a06be4849edd0436c49fae0e993b19c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const char *ida_export</type>
        <definition>idaman THREAD_SAFE const char* ida_export get_file_ext</definition>
        <argsstring>(const char *file)</argsstring>
        <name>get_file_ext</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get pointer to extension of file name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>filename </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the file extension or NULL if extension doesn&apos;t exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1066" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a05b160da817446b147177ba6b1728872" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool idaapi</type>
        <definition>THREAD_SAFE bool idaapi has_file_ext</definition>
        <argsstring>(const char *file)</argsstring>
        <name>has_file_ext</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Does the given file name have an extension? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1070" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1070" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a0e63de9dacb9d435cc8873ee7b47068b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *idaapi</type>
        <definition>THREAD_SAFE char* idaapi make_file_ext</definition>
        <argsstring>(char *buf, size_t bufsize, const char *file, const char *ext)</argsstring>
        <name>make_file_ext</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set file name extension if none exists. This function appends the extension to a file name. It won&apos;t change file name if extension already exists <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>file name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext</parametername>
</parameternamelist>
<parameterdescription>
<para>extension (with or without &apos;.&apos;) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the new file name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1085" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1085" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a24d4be9480f8a3318a4ba81d3f95e9dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export sanitize_file_name</definition>
        <argsstring>(char *name, size_t namesize)</argsstring>
        <name>sanitize_file_name</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>namesize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sanitize the file name. Remove the directory path, and replace wildcards ? * and chars&lt;&apos; &apos; with _. If the file name is empty, then:<itemizedlist>
<listitem><para>namesize != 0: generate a new temporary name, return true</para></listitem><listitem><para>namesize == 0: return false </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1adb85238b55ebc4b0e2fcfcb989cf3721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qopen</definition>
        <argsstring>(const char *file, int mode)</argsstring>
        <name>qopen</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Works the same as it&apos;s counterpart from Clib. The only difference is that it sets &apos;qerrno&apos; variable too </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ac8e7b75619a4148e19a36aa5dd2896b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qopen_shared</definition>
        <argsstring>(const char *file, int mode, int share_mode)</argsstring>
        <name>qopen_shared</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>share_mode</declname>
        </param>
        <briefdescription>
<para>Open file with given sharing_mode (use O_RDONLY, O_WRONLY, O_RDWR flags), sets qerrno. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a1a9f6a29a5e2854641d30cf2f8eac1f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qcreate</definition>
        <argsstring>(const char *file, int stat)</argsstring>
        <name>qcreate</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stat</declname>
        </param>
        <briefdescription>
<para>Create new file with O_RDWR, sets qerrno. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a815b8597cab8f72ee0c33a12faa9077b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qread</definition>
        <argsstring>(int h, void *buf, size_t n)</argsstring>
        <name>qread</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Works the same as it&apos;s counterpart from Clib. The only difference is that it sets &apos;qerrno&apos; variable too </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a91ddbdcbaaaa41eb39912b2ceeb829c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qwrite</definition>
        <argsstring>(int h, const void *buf, size_t n)</argsstring>
        <name>qwrite</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Works the same as it&apos;s counterpart from Clib. The only difference is that it sets &apos;qerrno&apos; variable too </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aee05a09c3b442f6af2d8af9d8a1e12b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a42ae75d34f73b9e691bd16aaddb897e5" kindref="member">qoff64_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE qoff64_t ida_export qtell</definition>
        <argsstring>(int h)</argsstring>
        <name>qtell</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Works the same as it&apos;s counterpart from Clib. The only difference is that it sets &apos;qerrno&apos; variable too </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a98bac18686a4052c3b9e2d76a44524b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a42ae75d34f73b9e691bd16aaddb897e5" kindref="member">qoff64_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE qoff64_t ida_export qseek</definition>
        <argsstring>(int h, int64 offset, int whence)</argsstring>
        <name>qseek</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Works the same as it&apos;s counterpart from Clib. The only difference is that it sets &apos;qerrno&apos; variable too </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ad58bc7cc6feca35b319505e5379e7f38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qclose</definition>
        <argsstring>(int h)</argsstring>
        <name>qclose</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Works the same as it&apos;s counterpart from Clib. The only difference is that it sets &apos;qerrno&apos; variable too </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1abd74367683c971ceea2ac42236e4f5f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qdup</definition>
        <argsstring>(int h)</argsstring>
        <name>qdup</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Works the same as it&apos;s counterpart from Clib. The only difference is that it sets &apos;qerrno&apos; variable too </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa3fd66082d6e27e780227c95cfe3a4fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qfsync</definition>
        <argsstring>(int h)</argsstring>
        <name>qfsync</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Works the same as it&apos;s counterpart from Clib. The only difference is that it sets &apos;qerrno&apos; variable too </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a6b8fcb778c6ac0688ede38fc29dd59a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> ida_export</type>
        <definition>idaman THREAD_SAFE uint64 ida_export qfilesize</definition>
        <argsstring>(const char *fname)</argsstring>
        <name>qfilesize</name>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the file size. This function may return 0 if the file is not found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a92145319fc95e6fab3d6677769fd297e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> ida_export</type>
        <definition>idaman THREAD_SAFE uint64 ida_export qfilelength</definition>
        <argsstring>(int h)</argsstring>
        <name>qfilelength</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get file length in bytes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>file descriptor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>file length in bytes, -1 if error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a0d3ca4021b1d308dd1aeabeab2aac16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qchsize</definition>
        <argsstring>(int h, uint64 fsize)</argsstring>
        <name>qchsize</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>fsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change file size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>file descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fsize</parametername>
</parameternamelist>
<parameterdescription>
<para>desired size </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>on success </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>otherwise and qerrno is set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a94b2c796631d884d94d8d0008c79331e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qmkdir</definition>
        <argsstring>(const char *file, int mode)</argsstring>
        <name>qmkdir</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an empty directory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>name (or full path) of directory to be created </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>permissions (only used on unix systems) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success </para></simplesect>
<simplesect kind="return"><para>-1 otherwise and qerrno is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1afa5d1eefb44387af02827de5662eda19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qrmdir</definition>
        <argsstring>(const char *file)</argsstring>
        <name>qrmdir</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a directory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>name (or full path) of directory to be removed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 success </para></simplesect>
<simplesect kind="return"><para>-1 otherwise and qerrno is set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a484a84bcb6a67696b339af1c9d6ef45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qfileexist</definition>
        <argsstring>(const char *file)</argsstring>
        <name>qfileexist</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Does the given file exist? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a9886dcec95eb78f8c9a1603ff867d29d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qisdir</definition>
        <argsstring>(const char *file)</argsstring>
        <name>qisdir</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Does the given path specify a directory? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a06acc89b643aef8713eb79ebeb03d123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qstat</definition>
        <argsstring>(const char *path, struct qstatbuf *buf)</argsstring>
        <name>qstat</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>struct <ref refid="structqstatbuf" kindref="compound">qstatbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a1ec5ebd8daec12ed1e70c32d9b43eac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qfstat</definition>
        <argsstring>(int h, struct qstatbuf *buf)</argsstring>
        <name>qfstat</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>struct <ref refid="structqstatbuf" kindref="compound">qstatbuf</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1adbf1c5970fc334035e7834b6aab4036c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export qatexit</definition>
        <argsstring>(void(idaapi *func)(void))</argsstring>
        <name>qatexit</name>
        <param>
          <type>void(idaapi *)(void)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Add a function to be called at exit time. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a70995b71a577a49e8b4a5c1e0f230db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export del_qatexit</definition>
        <argsstring>(void(idaapi *func)(void))</argsstring>
        <name>del_qatexit</name>
        <param>
          <type>void(idaapi *)(void)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Remove a previously added exit-time function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a53e88c62090838e19cb5ee945d7ab8f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> NORETURN void ida_export</type>
        <definition>idaman THREAD_SAFE NORETURN void ida_export qexit</definition>
        <argsstring>(int code)</argsstring>
        <name>qexit</name>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call qatexit functions, shut down UI and kernel, and exit. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>exit code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a4566afa8625a345f9b847c1605df76bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T qabs</definition>
        <argsstring>(T x)</argsstring>
        <name>qabs</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1217" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1217" bodyend="1217"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab8c34d2cdeb23146597c9c5d644100d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool idaapi</type>
        <definition>INLINE THREAD_SAFE bool idaapi test_bit</definition>
        <argsstring>(const uchar *bitmap, size_t bit)</argsstring>
        <name>test_bit</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bit</declname>
        </param>
        <briefdescription>
<para>Test if &apos;bit&apos; is set in &apos;bitmap&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1224" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1224" bodyend="1227"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a85f3f44724a76c6decd726467bf8f507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void idaapi</type>
        <definition>INLINE THREAD_SAFE void idaapi set_bit</definition>
        <argsstring>(uchar *bitmap, size_t bit)</argsstring>
        <name>set_bit</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bit</declname>
        </param>
        <briefdescription>
<para>Set &apos;bit&apos; in &apos;bitmap&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1229" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1229" bodyend="1233"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aae6ab7c8a9da581d45a76778a1a981ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void idaapi</type>
        <definition>INLINE THREAD_SAFE void idaapi clear_bit</definition>
        <argsstring>(uchar *bitmap, size_t bit)</argsstring>
        <name>clear_bit</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bit</declname>
        </param>
        <briefdescription>
<para>Clear &apos;bit&apos; in &apos;bitmap&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1235" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1235" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ad40de6069764e7223c8fa7195a9fa524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void idaapi</type>
        <definition>INLINE THREAD_SAFE void idaapi set_bits</definition>
        <argsstring>(uchar *bitmap, size_t low, size_t high)</argsstring>
        <name>set_bits</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>high</declname>
        </param>
        <briefdescription>
<para>Set bits between [low, high) in &apos;bitmap&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1241" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1241" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a8f72c86b167259e7bd9665415cd3c3ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void idaapi</type>
        <definition>INLINE THREAD_SAFE void idaapi clear_bits</definition>
        <argsstring>(uchar *bitmap, size_t low, size_t high)</argsstring>
        <name>clear_bits</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>low</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>high</declname>
        </param>
        <briefdescription>
<para>Clear bits between [low, high) in &apos;bitmap&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1248" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1248" bodyend="1253"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab480a1a497e13af24c7d7d87dead4781" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void idaapi</type>
        <definition>INLINE THREAD_SAFE void idaapi set_all_bits</definition>
        <argsstring>(uchar *bitmap, size_t nbits)</argsstring>
        <name>set_all_bits</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbits</declname>
        </param>
        <briefdescription>
<para>Set first &apos;nbits&apos; of &apos;bitmap&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1255" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1255" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ae4e96ba293ae65e04dbb64e39a9f6e5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void idaapi</type>
        <definition>INLINE THREAD_SAFE void idaapi clear_all_bits</definition>
        <argsstring>(uchar *bitmap, size_t nbits)</argsstring>
        <name>clear_all_bits</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>bitmap</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbits</declname>
        </param>
        <briefdescription>
<para>Clear first &apos;nbits&apos; of &apos;bitmap&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1265" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1265" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1af3ceb6df7cf2db3918c55439dbe01515" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export log2ceil</definition>
        <argsstring>(uint64 d64)</argsstring>
        <name>log2ceil</name>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>d64</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculate ceil(log2(d64)) or floor(log2(d64)), it returns 0 if d64 == 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1afeaba9fff0d74fd4a267604bb167589d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export log2floor</definition>
        <argsstring>(uint64 d64)</argsstring>
        <name>log2floor</name>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>d64</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a57721e58a0c34ec10726d19bc0bb3625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export bitcount</definition>
        <argsstring>(uint64 x)</argsstring>
        <name>bitcount</name>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>calculate number of set bits (the population count) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ad55e36bc7a9084146ce65df6a8453d61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> ida_export</type>
        <definition>idaman uint32 ida_export round_up_power2</definition>
        <argsstring>(uint32 x)</argsstring>
        <name>round_up_power2</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>round up or down to a power of 2 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa883e1ca9b53924f5e81ecc2d2daf62c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> ida_export</type>
        <definition>idaman uint32 ida_export round_down_power2</definition>
        <argsstring>(uint32 x)</argsstring>
        <name>round_down_power2</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a19938e0c6923854730fbf2409ccbf7b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T left_shift</definition>
        <argsstring>(const T &amp;value, int shift)</argsstring>
        <name>left_shift</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shift by the amount exceeding the operand size*8 is undefined by the standard. Indeed, GNUC may decide not to rotate the operand in some cases. We have to check this manually. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1310" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1310" bodyend="1313"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5ed01e11088da1be63006aa766c695c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T right_ushift</definition>
        <argsstring>(const T &amp;value, int shift)</argsstring>
        <name>right_ushift</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shift by the amount exceeding the operand size*8 is undefined by the standard. Indeed, GNUC may decide not to rotate the operand in some cases. We have to check this manually. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1315" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1315" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ae82c1a4b9799b62167768bbea36d0424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T right_sshift</definition>
        <argsstring>(const T &amp;value, int shift)</argsstring>
        <name>right_sshift</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shift by the amount exceeding the operand size*8 is undefined by the standard. Indeed, GNUC may decide not to rotate the operand in some cases. We have to check this manually. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1320" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1320" bodyend="1323"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5e8d0bacfee3e75e9f2c84c6dbdfb0fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T qrotl</definition>
        <argsstring>(T value, size_t count)</argsstring>
        <name>qrotl</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Rotate left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1326" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1326" bodyend="1335"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a12cd12027efcc6c9131b49a784540064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T qrotr</definition>
        <argsstring>(T value, size_t count)</argsstring>
        <name>qrotr</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Rotate right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1338" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1338" bodyend="1347"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a3a726f3e8a83a601fc45c5d16a34a113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T make_mask</definition>
        <argsstring>(int count)</argsstring>
        <name>make_mask</name>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Make a mask of &apos;count&apos; bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1350" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1350" bodyend="1353"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ad7b01a33f0db37cc8a62c8f0fe67a225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>void idaapi</type>
        <definition>void idaapi setflag</definition>
        <argsstring>(T &amp;where, U bit, bool cnd)</argsstring>
        <name>setflag</name>
        <param>
          <type>T &amp;</type>
          <declname>where</declname>
        </param>
        <param>
          <type>U</type>
          <declname>bit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cnd</declname>
        </param>
        <briefdescription>
<para>Set a &apos;bit&apos; in &apos;where&apos; if &apos;value&apos; if not zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1356" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1356" bodyend="1362"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a3adbc75fa70a61a375bccf50dc5c2ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool is_mul_ok</definition>
        <argsstring>(T count, T elsize)</argsstring>
        <name>is_mul_ok</name>
        <param>
          <type>T</type>
          <declname>count</declname>
        </param>
        <param>
          <type>T</type>
          <declname>elsize</declname>
        </param>
        <briefdescription>
<para>Check that unsigned multiplication does not overflow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1365" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1365" bodyend="1371"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ac1a8d90f85995bb3fa388df9a94b8a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool is_add_ok</definition>
        <argsstring>(T x, T y)</argsstring>
        <name>is_add_ok</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Check that unsigned addition does not overflow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1374" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1374" bodyend="1378"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab73f409fbca4369979fd0966614bf466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> ida_export</type>
        <definition>idaman uint64 ida_export extend_sign</definition>
        <argsstring>(uint64 v, int nbytes, bool sign_extend)</argsstring>
        <name>extend_sign</name>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sign_extend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sign-, or zero-extend the value &apos;v&apos; to occupy 64 bits. The value &apos;v&apos; is considered to be of size &apos;nbytes&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a8055a8933883a1ba50a059a3edba1faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export readbytes</definition>
        <argsstring>(int h, uint32 *res, int size, bool mf)</argsstring>
        <name>readbytes</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read at most 4 bytes from file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>file handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>value read from file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of value in bytes (1,2,4) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mf</parametername>
</parameternamelist>
<parameterdescription>
<para>is MSB first? </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, nonzero otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a65f7acee9458c297dab692697ba52acd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export writebytes</definition>
        <argsstring>(int h, uint32 l, int size, bool mf)</argsstring>
        <name>writebytes</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write at most 4 bytes to file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>file handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>value to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of value in bytes (1,2,4) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mf</parametername>
</parameternamelist>
<parameterdescription>
<para>is MSB first? </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, nonzero otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a4cfaaa6d8c42a61ad442098346a71f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export read2bytes</definition>
        <argsstring>(int h, uint16 *res, bool mf)</argsstring>
        <name>read2bytes</name>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref> *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a 2 byte entity from a file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>file handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>res</parametername>
</parameternamelist>
<parameterdescription>
<para>value read from file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mf</parametername>
</parameternamelist>
<parameterdescription>
<para>is MSB first? </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, nonzero otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1433" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab29570d44c212315993dd9736de03558" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 swap32</definition>
        <argsstring>(uint32 x)</argsstring>
        <name>swap32</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1446" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1446" bodyend="1447"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a54a82bd22ccc00a89d2b5bbfa79bead1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>ushort swap16</definition>
        <argsstring>(ushort x)</argsstring>
        <name>swap16</name>
        <param>
          <type><ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1450" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1450" bodyend="1451"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a435fea957a4f3f87b0d4b183cc286e90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export swap_value</definition>
        <argsstring>(void *dst, const void *src, int size)</argsstring>
        <name>swap_value</name>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Swap endianness of a given value in memory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>result of swap </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be swapped </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of value: can be 1, 2, 4, 8, or 16. For any other values of size this function does nothing </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a4692ee30c39996bea9dff58672ff74d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export reloc_value</definition>
        <argsstring>(void *value, int size, adiff_t delta, bool mf)</argsstring>
        <name>reloc_value</name>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>adiff_t</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1acc8d0eeac106017d7447fd2c69710121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE uval_t ida_export rotate_left</definition>
        <argsstring>(uval_t x, int count, size_t bits, size_t offset)</argsstring>
        <name>rotate_left</name>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rotate left - can be used to rotate a value to the right if the count is negative. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>value to rotate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>shift amount </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bits</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to rotate (32 will rotate a dword) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>number of first bit to rotate. (bits=8 offset=16 will rotate the third byte of the value) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the rotated value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1506" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a6e9456ae4a0589ce42e2d8aee643fc50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void qswap</definition>
        <argsstring>(T &amp;a, T &amp;b)</argsstring>
        <name>qswap</name>
        <param>
          <type>T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Swap 2 objects of the same type using memory copies. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1511" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="1511" bodyend="1517"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a138f907840f458d7f81be38acedabde5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *ida_export</type>
        <definition>idaman THREAD_SAFE void* ida_export qalloc_or_throw</definition>
        <argsstring>(size_t size)</argsstring>
        <name>qalloc_or_throw</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para><ref refid="pro_8h_1a2806c6575b58eb42bb0d2b96f92fc39b" kindref="member">qalloc()</ref> &apos;size&apos; bytes, and throw a &quot;not enough memory&quot; error if failed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a1084d74e6fc1676259982ac1f4abf057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *ida_export</type>
        <definition>idaman THREAD_SAFE void* ida_export qrealloc_or_throw</definition>
        <argsstring>(void *ptr, size_t size)</argsstring>
        <name>qrealloc_or_throw</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para><ref refid="pro_8h_1a8820d5cc099745032331eeb5acedc06e" kindref="member">qrealloc()</ref> &apos;ptr&apos; by &apos;size&apos;, and throw a &quot;not enough memory&quot; error if failed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1574" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a577328d386c616047f7fa85263433d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *ida_export</type>
        <definition>idaman THREAD_SAFE void* ida_export qvector_reserve</definition>
        <argsstring>(void *vec, void *old, size_t cnt, size_t elsize)</argsstring>
        <name>qvector_reserve</name>
        <param>
          <type>void *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>old</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>elsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change capacity of given qvector. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a qvector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the qvector&apos;s array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements to reserve </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>elsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of each element </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the newly allocated array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="1584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a9e45a87c365b2c527c9104ab08788ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int lexcompare</definition>
        <argsstring>(const T &amp;a, const T &amp;b)</argsstring>
        <name>lexcompare</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Standard lexical comparison. <simplesect kind="return"><para>-1 if a &lt; b, 1 if a &gt; b, and 0 if a == b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2139" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2139" bodyend="2146"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a6de7451013440529ab09bddd991960de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int lexcompare_vectors</definition>
        <argsstring>(const T &amp;a, const T &amp;b)</argsstring>
        <name>lexcompare_vectors</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lexical comparison of two vectors. Also see <ref refid="pro_8h_1a9e45a87c365b2c527c9104ab08788ab0" kindref="member">lexcompare()</ref>. <simplesect kind="return"><para>0 if the two vectors are identical 1 if &apos;a&apos; is larger than &apos;b&apos; -1 if &apos;a&apos; is smaller than &apos;b&apos; otherwise return the first nonzero lexical comparison between each element in &apos;a&apos; and &apos;b&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2153" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="2153" bodyend="2164"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1adadf95964a5783b7d41a9d83be4ddf00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export relocate_relobj</definition>
        <argsstring>(struct relobj_t *_relobj, ea_t ea, bool mf)</argsstring>
        <name>relocate_relobj</name>
        <param>
          <type>struct <ref refid="structrelobj__t" kindref="compound">relobj_t</ref> *</type>
          <declname>_relobj</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="2935" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int compare</definition>
        <argsstring>(const T &amp;a, const T &amp;b)</argsstring>
        <name>compare</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Template to compare any 2 values of the same type. Returns -1/0/1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3225" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3225" bodyend="3232"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a1fc4e64819af9cfc256e8923cb1357ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int compare</definition>
        <argsstring>(const qvector&lt; T &gt; &amp;a, const qvector&lt; T &gt; &amp;b)</argsstring>
        <name>compare</name>
        <param>
          <type>const <ref refid="classqvector" kindref="compound">qvector</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classqvector" kindref="compound">qvector</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3236" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3236" bodyend="3239"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a7a59764717cd8c035141202ed6b9216a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int compare</definition>
        <argsstring>(const qlist&lt; T &gt; &amp;a, const qlist&lt; T &gt; &amp;b)</argsstring>
        <name>compare</name>
        <param>
          <type>const <ref refid="classqlist" kindref="compound">qlist</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classqlist" kindref="compound">qlist</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3243" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3243" bodyend="3246"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a02bb3241571258f28a3a50da2f7ac5c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int compare</definition>
        <argsstring>(const std::pair&lt; T, U &gt; &amp;a, const std::pair&lt; T, U &gt; &amp;b)</argsstring>
        <name>compare</name>
        <param>
          <type>const std::pair&lt; T, U &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const std::pair&lt; T, U &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3250" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3250" bodyend="3256"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1adcf694eb9532c762539e794b92ee232e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int compare_containers</definition>
        <argsstring>(const T &amp;l, const T &amp;r)</argsstring>
        <name>compare_containers</name>
        <param>
          <type>const T &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Template to compare any 2 containers of the same type. Returns -1/0/1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3261" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3261" bodyend="3276"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a337fb9062596c727faa1a084b3ac677f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T align_up</definition>
        <argsstring>(T val, int elsize)</argsstring>
        <name>align_up</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elsize</declname>
        </param>
        <briefdescription>
<para>Align element up to nearest boundary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3280" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3280" bodyend="3286"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab993ac342c68015fdf84426cef066369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T align_down</definition>
        <argsstring>(T val, int elsize)</argsstring>
        <name>align_down</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elsize</declname>
        </param>
        <briefdescription>
<para>Align element down to nearest boundary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3290" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3290" bodyend="3295"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a3afa0586d3fb7a30d0b0a3bf8f4bdc68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export base64_encode</definition>
        <argsstring>(qstring *output, const void *input, size_t size)</argsstring>
        <name>base64_encode</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Encode base64. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab1debbc49691c4bd98960efd6d62eff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export base64_decode</definition>
        <argsstring>(bytevec_t *output, const char *input, size_t size)</argsstring>
        <name>base64_decode</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Decode base64. </para>        </briefdescription>
        <detaileddescription>
<para>Decode base64 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1abe11d9e0e16f57ff96ebc5c2f65fb655" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export replace_tabs</definition>
        <argsstring>(qstring *out, const char *str, int tabsize)</argsstring>
        <name>replace_tabs</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tabsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert tabulations to spaces <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer to append to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>input string. can not be equal to out-&gt;c_str() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tabsize</parametername>
</parameternamelist>
<parameterdescription>
<para>tabulation size </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true-replaced some tabs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__c__str__conv_1gaf1e6165c701ac9fb7d20958aff93f012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export str2user</definition>
        <argsstring>(char *dst, const char *src, size_t dstsize)</argsstring>
        <name>str2user</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsize</declname>
        </param>
        <briefdescription>
<para>Make a user representation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__c__str__conv_1gad65d8d0c79f8761d8551ca2b85436d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export user2str</definition>
        <argsstring>(char *dst, const char *src, size_t dstsize)</argsstring>
        <name>user2str</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsize</declname>
        </param>
        <briefdescription>
<para>Make an internal representation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__c__str__conv_1gaf07498922444526a1697fc58456dfc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char ida_export</type>
        <definition>idaman THREAD_SAFE char ida_export back_char</definition>
        <argsstring>(const char *&amp;p)</argsstring>
        <name>back_char</name>
        <param>
          <type>const char *&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Translate char after &apos;\&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__c__str__conv_1gaf90e18cf75dd11e9428f1048bceef522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export qstr2user</definition>
        <argsstring>(qstring *dst, const char *src, int nsyms=-1)</argsstring>
        <name>qstr2user</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nsyms</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>see <ref refid="group__c__str__conv_1gaf1e6165c701ac9fb7d20958aff93f012" kindref="member">str2user()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__c__str__conv_1gac5190d20bd91d0630d23e9a488fc0b23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void qstr2user</definition>
        <argsstring>(qstring *dst, const qstring &amp;src)</argsstring>
        <name>qstr2user</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3373" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3373" bodyend="3373"/>
      </memberdef>
      <memberdef kind="function" id="group__c__str__conv_1ga86d364d8894c49d87500393a832f2ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export user2qstr</definition>
        <argsstring>(qstring *dst, const qstring &amp;src)</argsstring>
        <name>user2qstr</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>see <ref refid="group__c__str__conv_1gad65d8d0c79f8761d8551ca2b85436d59" kindref="member">user2str()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a0ee918b56f592ac4e45de9a0f71c9b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export is_valid_utf8</definition>
        <argsstring>(const char *in)</argsstring>
        <name>is_valid_utf8</name>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does byte sequence consist of valid UTF-8-encoded codepoints? <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>the byte sequence </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ae0f5ce48eff3c5b9dde53efccbb66606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export utf8_utf16</definition>
        <argsstring>(qwstring *out, const char *in, int nsyms=-1)</argsstring>
        <name>utf8_utf16</name>
        <param>
          <type><ref refid="pro_8h_1ae1af89f7fa627fd5a720250e14256908" kindref="member">qwstring</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nsyms</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>UTF-8 -&gt; UTF-16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ad89193f3e26115cc0cd364c86bfd652f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export utf16_utf8</definition>
        <argsstring>(qstring *out, const wchar16_t *in, int nsyms=-1)</argsstring>
        <name>utf16_utf8</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const wchar16_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nsyms</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>UTF-16 -&gt; UTF-8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ac08de96f994904782b20c195dc64f3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export idb_utf8</definition>
        <argsstring>(qstring *out, const char *in, int nsyms=-1, int flags=0)</argsstring>
        <name>idb_utf8</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nsyms</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IDB default C string encoding -&gt; UTF-8 <simplesect kind="return"><para>success (i.e., all bytes converted) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3411" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5eab991585ca5b7ee7f070cf5b32a3af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export change_codepage</definition>
        <argsstring>(qstring *out, const char *in, int incp, int outcp)</argsstring>
        <name>change_codepage</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outcp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab0d4f43c17799e449ef5873d0449ce94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>INLINE THREAD_SAFE bool acp_utf8</definition>
        <argsstring>(qstring *out, const char *in)</argsstring>
        <name>acp_utf8</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3431" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3431" bodyend="3434"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a6f099cfab946900b6b48bb6a83217af7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> wchar16_t</type>
        <definition>THREAD_SAFE wchar16_t utf8_wchar16</definition>
        <argsstring>(uchar b0, uchar b1)</argsstring>
        <name>utf8_wchar16</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b0</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3442" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3442" bodyend="3445"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a8cbfd9838d9d3ff3cc46324b608af8ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> wchar16_t</type>
        <definition>THREAD_SAFE wchar16_t utf8_wchar16</definition>
        <argsstring>(uchar b0, uchar b1, uchar b2)</argsstring>
        <name>utf8_wchar16</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b0</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b1</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3448" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3448" bodyend="3453"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a01104e8aeea46b67beab3d18e758f3c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> wchar32_t</type>
        <definition>THREAD_SAFE wchar32_t utf8_wchar32</definition>
        <argsstring>(uchar b0, uchar b1, uchar b2, uchar b3)</argsstring>
        <name>utf8_wchar32</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b0</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b1</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b2</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3456" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3456" bodyend="3462"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a8ee8d4744f8f9ea52b908f7f59813512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> wchar32_t ida_export</type>
        <definition>idaman THREAD_SAFE wchar32_t ida_export get_utf8_char</definition>
        <argsstring>(const char **pptr)</argsstring>
        <name>get_utf8_char</name>
        <param>
          <type>const char **</type>
          <declname>pptr</declname>
        </param>
        <briefdescription>
<para>Read one UTF-8 character from string. if error, return BADUCP. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3471" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a706cdccced995509d6654070c8bd949a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export prev_utf8_char</definition>
        <argsstring>(wchar32_t *out_cp, const char **p, const char *begin)</argsstring>
        <name>prev_utf8_char</name>
        <param>
          <type>wchar32_t *</type>
          <declname>out_cp</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>begin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the UTF-8 character from string, before &apos;p&apos;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_cp</parametername>
</parameternamelist>
<parameterdescription>
<para>the output codepoint storage. May be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer, pointing in the &apos;begin&apos; string right after the UTF-8-encoded codepoint we want to retrieve </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>the beginning of the string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3481" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a2fcf1d47dcb9f3ccb3506388d3604ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> size_t ida_export</type>
        <definition>idaman THREAD_SAFE size_t ida_export skip_utf8</definition>
        <argsstring>(const char **putf8, size_t n)</argsstring>
        <name>skip_utf8</name>
        <param>
          <type>const char **</type>
          <declname>putf8</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Advance by n codepoints into the UTF-8 buffer.</para><para>Each bad byte (i.e., can&apos;t be decoded as UTF-8) will count as 1 codepoint. In addition, encountering an unexpected end-of-string (i.e., &apos;\0&apos;) will cause this function to stop and return a non-zero value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>putf8</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the UTF-8 bytes buffer to advance into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of codepoints to advance into the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of codepoints that we failed to decode, thus: 0 - success, &gt;0 - a terminating zero was encountered. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3495" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a91ee95acb00f15fbd341d33e81970f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE ssize_t ida_export put_utf8_char</definition>
        <argsstring>(char *out, wchar32_t cp)</argsstring>
        <name>put_utf8_char</name>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>wchar32_t</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode the codepoint into a UTF-8 byte sequence, and add terminating zero <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer (must be at least MAX_UTF8_SEQ_LEN bytes wide) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cp</parametername>
</parameternamelist>
<parameterdescription>
<para>the codepoint to encode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>how many bytes were put into the output buffer (without the terminating zero), or size_t(-1) on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3504" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a7b69a25114e4c25ae57513926e3bb7c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> size_t ida_export</type>
        <definition>idaman THREAD_SAFE size_t ida_export qustrlen</definition>
        <argsstring>(const char *utf8)</argsstring>
        <name>qustrlen</name>
        <param>
          <type>const char *</type>
          <declname>utf8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3510" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a1dcdc0475f6fb744fdf4565932ff3918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qustrncpy</definition>
        <argsstring>(char *dst, const char *utf8, size_t dstsize)</argsstring>
        <name>qustrncpy</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>utf8</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A safer strncpy - makes sure that there is a terminating zero. nb: this function doesn&apos;t truncate the last UTF-8 character. <simplesect kind="see"><para><ref refid="pro_8h_1af74a1e4b6b49709fc024d286568c2878" kindref="member">qstrncpy()</ref> </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if the input buffer was truncated </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ae52a058abfcbb3f763e7b1beaab6f733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman ssize_t ida_export convert_encoding</definition>
        <argsstring>(bytevec_t *out, const char *fromcode, const char *tocode, const uchar *indata, ssize_t insize, DEFARG(int flags, 0))</argsstring>
        <name>convert_encoding</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fromcode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tocode</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>indata</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
          <declname>insize</declname>
        </param>
        <param>
          <type>DEFARG(int flags, 0)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert data from encoding fromcode into tocode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>see CEF_* </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of input bytes converted (can be less than actual size if there was an invalid character) -1 if source or target encoding is not supported possible encoding names: windows codepages (&quot;CP1251&quot; etc), charset names (&quot;Shift-JIS&quot;), and many encodings supported by iconv </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3559" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a844708c6b55cab0e4bee4c66463dd35c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
        <definition>ssize_t convert_encoding</definition>
        <argsstring>(bytevec_t *out, const char *fromcode, const char *tocode, const bytevec_t *indata, DEFARG(int flags, 0))</argsstring>
        <name>convert_encoding</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fromcode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tocode</declname>
        </param>
        <param>
          <type>const <ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> *</type>
          <declname>indata</declname>
        </param>
        <param>
          <type>DEFARG(int flags, 0)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3568" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3568" bodyend="3577"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a2e1f8e01bb2f7b93ad1bd6b51797c2fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> size_t ida_export</type>
        <definition>idaman THREAD_SAFE size_t ida_export parse_command_line</definition>
        <argsstring>(qstrvec_t *args, channel_redirs_t *redirs, const char *cmdline, int flags)</argsstring>
        <name>parse_command_line</name>
        <param>
          <type><ref refid="pro_8h_1a823b67c620f6cdca97e1d969ea4a9b02" kindref="member">qstrvec_t</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a3d227a0129097f194ff30166ba653d02" kindref="member">channel_redirs_t</ref> *</type>
          <declname>redirs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cmdline</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse a space separated string (escaping with backslash is supported). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">args</parametername>
</parameternamelist>
<parameterdescription>
<para>a string vector to hold the results </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">redirs</parametername>
</parameternamelist>
<parameterdescription>
<para>map of channel redirections found in cmdline<itemizedlist>
<listitem><para>if NULL, redirections won&apos;t be parsed</para></listitem><listitem><para>if there are syntax errors in redirections, consider them as arguments </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmdline</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to be parsed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___l_p___1gaaf7d57c6fd05fd8a992d28d924310092" kindref="member">LP_PATH_WITH_ARGS</ref> or 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of parsed arguments </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3659" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5ba3e060917a3e5b8402d2157607803c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char **</type>
        <definition>char** expand_argv</definition>
        <argsstring>(int *p_argc, int argc, const char *const argv[])</argsstring>
        <name>expand_argv</name>
        <param>
          <type>int *</type>
          <declname>p_argc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy and expand command line arguments. For &apos;&apos; arguments the file contents are inserted into the resulting argv. Format of the file: one switch per line, &apos;;&apos; for comment lines On windows, argv will also be interpreted as OEM codepage, and will be decoded as such and re-encoded into UTF-8. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">p_argc</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the returned argv array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>number of entries in argv array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>array of strings </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new argv (terminated by NULL). It must be freed with <ref refid="pro_8h_1aa3414fce0fc99ab9d2f82334183a866d" kindref="member">free_argv()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa3414fce0fc99ab9d2f82334183a866d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>INLINE void</type>
        <definition>INLINE void free_argv</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>free_argv</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Free &apos;argc&apos; elements of &apos;argv&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3682" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3682" bodyend="3691"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ac85b202fd5a03476ee1af8696c9de487" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export quote_cmdline_arg</definition>
        <argsstring>(qstring *arg)</argsstring>
        <name>quote_cmdline_arg</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Quote a command line argument if it contains escape characters. For example, *.c will be converted into &quot;*.c&quot; because * may be inadvertently expanded by the shell <simplesect kind="return"><para>true: modified &apos;arg&apos; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a75e47f39d16ac90b4e158db16114e7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export parse_dbgopts</definition>
        <argsstring>(struct instant_dbgopts_t *ido, const char *r_switch)</argsstring>
        <name>parse_dbgopts</name>
        <param>
          <type>struct <ref refid="structinstant__dbgopts__t" kindref="compound">instant_dbgopts_t</ref> *</type>
          <declname>ido</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>r_switch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the -r command line switch (for instant debugging). r_switch points to the value of the -r switch. Example: win32+ <simplesect kind="return"><para>true-ok, false-parse error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3723" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a0c392bfd687547ec1a2d755281179e0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *ida_export</type>
        <definition>idaman THREAD_SAFE void* ida_export launch_process</definition>
        <argsstring>(const launch_process_params_t &amp;lpp, qstring *errbuf=NULL)</argsstring>
        <name>launch_process</name>
        <param>
          <type>const <ref refid="structlaunch__process__params__t" kindref="compound">launch_process_params_t</ref> &amp;</type>
          <declname>lpp</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>errbuf</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Launch the specified process in parallel. <simplesect kind="return"><para>handle (unix: child pid), NULL - error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3776" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a2c629c6befea4d059905c0d4672ffce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export term_process</definition>
        <argsstring>(void *handle)</argsstring>
        <name>term_process</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forcibly terminate a running process. <simplesect kind="return"><para>0-ok, otherwise an error code that can be passed to <ref refid="err_8h_1ab4511117132fa14e07ceb3c8b7101949" kindref="member">winerr()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3788" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a2bbea1080e3dafb9fa04cd2bc1446532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qwait_timed</definition>
        <argsstring>(int *status, int child, int flags, int timeout_ms)</argsstring>
        <name>qwait_timed</name>
        <param>
          <type>int *</type>
          <declname>status</declname>
        </param>
        <param>
          <type>int</type>
          <declname>child</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for state changes in a child process (UNIX only). Here: child, status, flags - the same as in system call <ref refid="pro_8h_1a0ff9ced808887c13e8b64c783f4b9f56" kindref="member">waitpid()</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout in milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3795" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa8133390ab4d182d5735f10e2ddf93c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export check_process_exit</definition>
        <argsstring>(void *handle, int *exit_code, DEFARG(int msecs,-1))</argsstring>
        <name>check_process_exit</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exit_code</declname>
        </param>
        <param>
          <type>DEFARG(int msecs,-1)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether process has terminated or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>process handle to wait for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">exit_code</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the buffer for the exit code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msecs</parametername>
</parameternamelist>
<parameterdescription>
<para>how long to wait. special values:<itemizedlist>
<listitem><para>0: do not wait</para></listitem><listitem><para>1 or -1: wait infinitely</para></listitem><listitem><para>other values: timeout in milliseconds </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>process has exited, and the exit code is available. if *exit_code &lt; 0: the process was killed with a signal -*exit_code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>process has not exited yet </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>error happened, see error code for <ref refid="err_8h_1ab4511117132fa14e07ceb3c8b7101949" kindref="member">winerr()</ref> in *exit_code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3827" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a07c66801ba4bb5f1a1e68c379d4283c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> enum <ref refid="pro_8h_1a665bbcc021b383d33fd7854024ac464c" kindref="member">tty_control_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE enum tty_control_t ida_export is_control_tty</definition>
        <argsstring>(int fd)</argsstring>
        <name>is_control_tty</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the current process is the owner of the TTY specified by &apos;fd&apos; (typically an opened descriptor to /dev/tty). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3844" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a2b930155eb685212db11fb14d2444313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export qdetach_tty</definition>
        <argsstring>(void)</argsstring>
        <name>qdetach_tty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the current terminal is the controlling terminal of the calling process, give up this controlling terminal. <simplesect kind="note"><para>The current terminal is supposed to be /dev/tty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3851" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a60084934decaa09c664279c8546eda4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export qcontrol_tty</definition>
        <argsstring>(void)</argsstring>
        <name>qcontrol_tty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make the current terminal the controlling terminal of the calling process. <simplesect kind="note"><para>The current terminal is supposed to be /dev/tty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3858" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ac3d468877f6b93e13a8ed3f76b1a5ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OPAQUE_HANDLE</definition>
        <argsstring>(qthread_t)</argsstring>
        <name>OPAQUE_HANDLE</name>
        <param>
          <type>qthread_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3873" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aeb5a6fa456824b1c1af7903c6f462039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> qthread_t ida_export</type>
        <definition>idaman THREAD_SAFE qthread_t ida_export qthread_create</definition>
        <argsstring>(qthread_cb_t *thread_cb, void *ud)</argsstring>
        <name>qthread_create</name>
        <param>
          <type><ref refid="pro_8h_1a8a8fcacda1bd30d443b0a6b3e6b72d50" kindref="member">qthread_cb_t</ref> *</type>
          <declname>thread_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
<para>Create a thread and return a thread handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3878" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aff96fef70b30b85e18918ddc57d23748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void ida_export</type>
        <definition>idaman THREAD_SAFE void ida_export qthread_free</definition>
        <argsstring>(qthread_t q)</argsstring>
        <name>qthread_free</name>
        <param>
          <type>qthread_t</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free a thread resource (does not kill the thread) (calls pthread_detach under unix) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3884" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa326e7b21c65bd4c263ebfa88bcbc79e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qthread_join</definition>
        <argsstring>(qthread_t q)</argsstring>
        <name>qthread_join</name>
        <param>
          <type>qthread_t</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Wait a thread until it terminates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3889" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1acb144299b790f3d111e2c40422c712f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qthread_kill</definition>
        <argsstring>(qthread_t q)</argsstring>
        <name>qthread_kill</name>
        <param>
          <type>qthread_t</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Forcefully kill a thread (calls pthread_cancel under unix) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3894" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ade61baa9f965692544c4b34541156e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> qthread_t ida_export</type>
        <definition>idaman THREAD_SAFE qthread_t ida_export qthread_self</definition>
        <argsstring>(void)</argsstring>
        <name>qthread_self</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current thread. Must call <ref refid="pro_8h_1aff96fef70b30b85e18918ddc57d23748" kindref="member">qthread_free()</ref> to free it! </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3899" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a60729cf35ae84037a12b913dd85e8fc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qthread_same</definition>
        <argsstring>(qthread_t q)</argsstring>
        <name>qthread_same</name>
        <param>
          <type>qthread_t</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Is the current thread the same as &apos;q&apos;? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3904" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a155c7c687ecea1742cfa191de31cdbda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export is_main_thread</definition>
        <argsstring>(void)</argsstring>
        <name>is_main_thread</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Are we running in the main thread? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3909" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a0c6818cd6e13fd43c76fe4a714f33d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qsetenv</definition>
        <argsstring>(const char *varname, const char *value)</argsstring>
        <name>qsetenv</name>
        <param>
          <type>const char *</type>
          <declname>varname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Thread safe function to work with the environment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3914" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab8ba72892569a9b71dd5ea7f94e6819c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qgetenv</definition>
        <argsstring>(const char *varname, DEFARG(qstring *buf, NULL))</argsstring>
        <name>qgetenv</name>
        <param>
          <type>const char *</type>
          <declname>varname</declname>
        </param>
        <param>
          <type>DEFARGqstring *,</type>
          <declname>NULL</declname>
        </param>
        <briefdescription>
<para>Thread safe function to work with the environment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3915" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a48845cf496265dca880619c3bb26ce21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OPAQUE_HANDLE</definition>
        <argsstring>(qsemaphore_t)</argsstring>
        <name>OPAQUE_HANDLE</name>
        <param>
          <type>qsemaphore_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Semaphore. Named semaphores are public, nameless ones are local to the process </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3922" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a7bbc94d6ddaba86f5364bca33d297ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> qsemaphore_t ida_export</type>
        <definition>idaman THREAD_SAFE qsemaphore_t ida_export qsem_create</definition>
        <argsstring>(const char *name, int init_count)</argsstring>
        <name>qsem_create</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>init_count</declname>
        </param>
        <briefdescription>
<para>Create a new semaphore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3924" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a5e78011a136767fdbcfd64928bb902f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qsem_free</definition>
        <argsstring>(qsemaphore_t sem)</argsstring>
        <name>qsem_free</name>
        <param>
          <type>qsemaphore_t</type>
          <declname>sem</declname>
        </param>
        <briefdescription>
<para>Free a semaphore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3925" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a2d1950973aaaa78f29b55bf0b88f8449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qsem_post</definition>
        <argsstring>(qsemaphore_t sem)</argsstring>
        <name>qsem_post</name>
        <param>
          <type>qsemaphore_t</type>
          <declname>sem</declname>
        </param>
        <briefdescription>
<para>Unlock a semaphore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3926" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ac8c3af045e14be6517b564088a76814f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qsem_wait</definition>
        <argsstring>(qsemaphore_t sem, int timeout_ms)</argsstring>
        <name>qsem_wait</name>
        <param>
          <type>qsemaphore_t</type>
          <declname>sem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
<para>Lock and decrement a semaphore. timeout = -1 means block indefinitely. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3927" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a33d7a6e6701d1e4760dd4ee09a9368be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OPAQUE_HANDLE</definition>
        <argsstring>(qmutex_t)</argsstring>
        <name>OPAQUE_HANDLE</name>
        <param>
          <type>qmutex_t</type>
        </param>
        <briefdescription>
<para>Mutex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3932" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a8cc3ccad74085595a2cd398a9f195665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qmutex_free</definition>
        <argsstring>(qmutex_t m)</argsstring>
        <name>qmutex_free</name>
        <param>
          <type>qmutex_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Free a mutex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3933" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1aa3d08e13176f36f496938e90529028ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> qmutex_t ida_export</type>
        <definition>idaman THREAD_SAFE qmutex_t ida_export qmutex_create</definition>
        <argsstring>(void)</argsstring>
        <name>qmutex_create</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new mutex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3934" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a8df924ddb42c0879791c0da35ff4f911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qmutex_lock</definition>
        <argsstring>(qmutex_t m)</argsstring>
        <name>qmutex_lock</name>
        <param>
          <type>qmutex_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Lock a mutex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3935" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a7a31032cf0282b901a5633f5874dc71a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export qmutex_unlock</definition>
        <argsstring>(qmutex_t m)</argsstring>
        <name>qmutex_unlock</name>
        <param>
          <type>qmutex_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Unlock a mutex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3936" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ad036316f67d88e89c7d34984465b3a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qpipe_create</definition>
        <argsstring>(qhandle_t handles[2])</argsstring>
        <name>qpipe_create</name>
        <param>
          <type><ref refid="pro_8h_1a2561704a97dcdf2122a896301c1e8244" kindref="member">qhandle_t</ref></type>
          <declname>handles</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a pipe. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">handles</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem><para>handles[0] : read handle</para></listitem><listitem><para>handles[1] : write handle </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error code (0-ok) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3966" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ab98cfc3a4848032b878c3fc727262852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE ssize_t ida_export qpipe_read</definition>
        <argsstring>(qhandle_t handle, void *buf, size_t size)</argsstring>
        <name>qpipe_read</name>
        <param>
          <type><ref refid="pro_8h_1a2561704a97dcdf2122a896301c1e8244" kindref="member">qhandle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Read from a pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of read bytes. -1-error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3971" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1ae3a2d42e00ddd0843d3ab416e03dfad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE ssize_t ida_export qpipe_write</definition>
        <argsstring>(qhandle_t handle, const void *buf, size_t size)</argsstring>
        <name>qpipe_write</name>
        <param>
          <type><ref refid="pro_8h_1a2561704a97dcdf2122a896301c1e8244" kindref="member">qhandle_t</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Write to a pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of written bytes. -1-error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3976" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1af823cc70190082a02826f571b4420664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qpipe_close</definition>
        <argsstring>(qhandle_t handle)</argsstring>
        <name>qpipe_close</name>
        <param>
          <type><ref refid="pro_8h_1a2561704a97dcdf2122a896301c1e8244" kindref="member">qhandle_t</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Close a pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>error code (0-ok) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3981" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pro_8h_1a2ca258578f1f14e0d046a80fc39336b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qwait_for_handles</definition>
        <argsstring>(int *idx, const qhandle_t *handles, int n, uint32 write_bitmask, int timeout_ms)</argsstring>
        <name>qwait_for_handles</name>
        <param>
          <type>int *</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a2561704a97dcdf2122a896301c1e8244" kindref="member">qhandle_t</ref> *</type>
          <declname>handles</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>write_bitmask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_ms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for file/socket/pipe handles. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">idx</parametername>
</parameternamelist>
<parameterdescription>
<para>handle index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handles</parametername>
</parameternamelist>
<parameterdescription>
<para>handles to wait for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of handles </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_bitmask</parametername>
</parameternamelist>
<parameterdescription>
<para>bitmask of indexes of handles opened for writing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>timeout value in milliseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error code. on timeout, returns 0 and sets idx to -1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3992" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is the first header included in the IDA project. </para>    </briefdescription>
    <detaileddescription>
<para>It defines the most common types, functions and data. Also, it tries to make system dependent definitions.</para><para>The following preprocessor macros are used in the project (the list may be incomplete)</para><para>Platform must be specified as one of:</para><para><bold>NT</bold> - MS Windows (all platforms) <linebreak/>
 <bold>LINUX</bold> - Linux <linebreak/>
 <bold>MAC</bold> - MAC OS X</para><para><bold>EA64</bold> - 64-bit address size (sizeof(ea_t)==8) <linebreak/>
 <bold>X86</bold> - 32-bit debug servers (sizeof(void*)==4) <linebreak/>
 <bold>X86</bold> - Intel x86 processor (default) <linebreak/>
 <bold>PPC</bold> - PowerPC <linebreak/>
 <bold>ARM</bold> - ARM </para>    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h"/>
  </compounddef>
</doxygen>
