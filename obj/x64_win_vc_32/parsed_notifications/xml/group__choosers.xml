<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group__choosers" kind="group">
    <compoundname>choosers</compoundname>
    <title>Functions: generic list choosers</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__choosers_1gadefb0a59b077bb1872b25741366ca715" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
        <definition>ssize_t choose</definition>
        <argsstring>(chooser_base_t *ch, const void *def_item)</argsstring>
        <name>choose</name>
        <param>
          <type><ref refid="structchooser__base__t" kindref="compound">chooser_base_t</ref> *</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>def_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a generic list chooser (n-column) and allow the user to select an item. The closed() callback will be called when the window is closed. In addition, after the window is closed, the chooser instance will be delete()d unless CH_KEEP is specified (useful for global, or stack-allocated chooser instances, that must not be deleted.) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>def_item</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to some data that indentifies the default item For modal choosers: </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the selected item (0-based) </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a100e0d1651b8811c7df60f02d991ef6e" kindref="member">chooser_base_t::NO_SELECTION</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>the user refused to choose anything (pressed Esc). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a403da04064cc128f8b3c349032275bf0" kindref="member">chooser_base_t::EMPTY_CHOOSER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>the chooser was not created because the init() callback has returned &apos;false&apos; For non-modal choosers: </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>the chooser was created successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a1c9909c9fe579274c2a3392f06fdab53" kindref="member">chooser_base_t::ALREADY_EXISTS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>did not open a new chooser because a chooser with the same object is already open. If CH_FORCE_DEFAULT is set, the cursor of the chooser will be positioned to the new item.</para></parameterdescription>
</parameteritem>
</parameterlist>
Invoke the chooser with a chooser object (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada01484e487b4793359f749d2bf6e1b301" kindref="member">chtype_generic</ref>). see the <ref refid="group__choosers_1gadefb0a59b077bb1872b25741366ca715" kindref="member">choose()</ref> function above </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2781" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5564" bodyend="5567"/>
      </memberdef>
      <memberdef kind="function" id="group__choosers_1ga862abc8600a4d9195c315e0fec27cb3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
        <definition>ssize_t chooser_t::choose</definition>
        <argsstring>(ssize_t deflt=0)</argsstring>
        <name>choose</name>
        <param>
          <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
          <declname>deflt</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a generic list chooser and allow the user to select an item. May be overriden in derived choosers. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deflt</parametername>
</parameternamelist>
<parameterdescription>
<para>default selection or NO_SELECTION see the <ref refid="group__choosers_1ga862abc8600a4d9195c315e0fec27cb3a" kindref="member">choose()</ref> function below </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2570" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2783" bodyend="2788"/>
      </memberdef>
      <memberdef kind="function" id="group__choosers_1gae355a0659cc7cab9f7ef85b12741283a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
        <definition>ssize_t chooser_multi_t::choose</definition>
        <argsstring>(const sizevec_t &amp;deflt=sizevec_t())</argsstring>
        <name>choose</name>
        <param>
          <type>const <ref refid="pro_8h_1a3fb92c6beff4e1e004a4ef5a2e356391" kindref="member">sizevec_t</ref> &amp;</type>
          <declname>deflt</declname>
          <defval><ref refid="pro_8h_1a3fb92c6beff4e1e004a4ef5a2e356391" kindref="member">sizevec_t</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a generic list chooser and allow the user to select an item. May be overriden in derived choosers. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deflt</parametername>
</parameternamelist>
<parameterdescription>
<para>default selection (may be empty) see the <ref refid="group__choosers_1gae355a0659cc7cab9f7ef85b12741283a" kindref="member">choose()</ref> function below </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2665" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2790" bodyend="2795"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>These functions display a window that allows the user to select items </para>    </detaileddescription>
  </compounddef>
</doxygen>
