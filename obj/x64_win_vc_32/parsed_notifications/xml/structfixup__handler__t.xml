<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structfixup__handler__t" kind="struct" language="C++" prot="public">
    <compoundname>fixup_handler_t</compoundname>
    <includes refid="fixup_8hpp" local="no">fixup.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfixup__handler__t_1a52d7a5c064eab01a63f34ded5bb150f8" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
        <definition>int32 fixup_handler_t::cbsize</definition>
        <argsstring></argsstring>
        <name>cbsize</name>
        <briefdescription>
<para>size of this structure </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="365" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfixup__handler__t_1ad51cbef6f87099b42310de8c6e896163" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* fixup_handler_t::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Format name, must be unique. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="366" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfixup__handler__t_1af8790360005d3c1574100c8665a59013" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 fixup_handler_t::props</definition>
        <argsstring></argsstring>
        <name>props</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group___f_h_f__" kindref="compound">Fixup handler properties</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="367" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fh__options_1gae7b3073ac6e4a2099b965824e0c1966d" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref></type>
        <definition>uint8 fixup_handler_t::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
<para>size in bytes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="378" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fh__options_1gaf430f824beaa0786e687e16756554065" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref></type>
        <definition>uint8 fixup_handler_t::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
<para>number of significant bits before shifting </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="379" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fh__options_1ga6de49b5dbb84d7af99012416767d288b" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref></type>
        <definition>uint8 fixup_handler_t::shift</definition>
        <argsstring></argsstring>
        <name>shift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of bits to shift right before patching. The following should be true: `width - shift &lt;= size * 8&apos; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="380" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fh__options_1ga32b0e70c2b1914672bb4e285f311546f" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref></type>
        <definition>uint8 fixup_handler_t::rsrv4</definition>
        <argsstring></argsstring>
        <name>rsrv4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="383" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fh__options_1ga4707af9d7b13e8eed74ddc3ebbdd0b53" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 fixup_handler_t::reftype</definition>
        <argsstring></argsstring>
        <name>reftype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reference info type and flags, std_apply() produces an offset of this type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="385" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfixup__handler__t_1aa07d892e78d05a2c7db3695795acff2d" prot="public" static="no" mutable="no">
        <type>bool(idaapi *</type>
        <definition>bool(idaapi * fixup_handler_t::apply) (const fixup_handler_t *fh, ea_t item_ea, ea_t fixup_ea, int opnum, bool is_macro, const fixup_data_t &amp;fd)</definition>
        <argsstring>)(const fixup_handler_t *fh, ea_t item_ea, ea_t fixup_ea, int opnum, bool is_macro, const fixup_data_t &amp;fd)</argsstring>
        <name>apply</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply a fixup: take it into account while analyzing the file. Usually it consists of converting the operand into an offset expression. <simplesect kind="see"><para><ref refid="fixup_8hpp_1ab0a42c2b927e6a87c6bfbc97694e5546" kindref="member">apply_fixup()</ref> If this callback is not specified then std_apply() is used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="393" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfixup__handler__t_1a1407a907fd1d996e76ce45faeeaab49a" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>(idaapi *</type>
        <definition>uval_t(idaapi * fixup_handler_t::get_value) (const fixup_handler_t *fh, ea_t ea)</definition>
        <argsstring>)(const fixup_handler_t *fh, ea_t ea)</argsstring>
        <name>get_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the operand value. This callback is called from <ref refid="fixup_8hpp_1ae68a51805b27c4eae6e0b8efa2a32880" kindref="member">get_fixup_value()</ref>. <simplesect kind="see"><para><ref refid="fixup_8hpp_1ae68a51805b27c4eae6e0b8efa2a32880" kindref="member">get_fixup_value()</ref> If this callback is not specified then std_get_value() is used. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="405" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfixup__handler__t_1a746e5b923d4af600fa5fc013f75d140f" prot="public" static="no" mutable="no">
        <type>bool(idaapi *</type>
        <definition>bool(idaapi * fixup_handler_t::patch_value) (const fixup_handler_t *fh, ea_t ea, const fixup_data_t &amp;fd)</definition>
        <argsstring>)(const fixup_handler_t *fh, ea_t ea, const fixup_data_t &amp;fd)</argsstring>
        <name>patch_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Patch the fixup bytes. This callback is called from <ref refid="fixup_8hpp_1a2a07510903124f52ac5c9fd57496a4b2" kindref="member">patch_fixup_value()</ref> or after changing the fixup (e.g. after it was moved from one location to another). If this callback is not specified then std_patch_value() is used. <simplesect kind="see"><para><ref refid="fixup_8hpp_1a2a07510903124f52ac5c9fd57496a4b2" kindref="member">patch_fixup_value()</ref> </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>the fixup bytes do not fit. The database is changed even in this case. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="414" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="414" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements the core behavior of a custom fixup. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="364" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="363" bodyend="419"/>
    <listofallmembers>
      <member refid="structfixup__handler__t_1aa07d892e78d05a2c7db3695795acff2d" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>apply</name></member>
      <member refid="structfixup__handler__t_1a52d7a5c064eab01a63f34ded5bb150f8" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>cbsize</name></member>
      <member refid="structfixup__handler__t_1a1407a907fd1d996e76ce45faeeaab49a" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>get_value</name></member>
      <member refid="structfixup__handler__t_1ad51cbef6f87099b42310de8c6e896163" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>name</name></member>
      <member refid="structfixup__handler__t_1a746e5b923d4af600fa5fc013f75d140f" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>patch_value</name></member>
      <member refid="structfixup__handler__t_1af8790360005d3c1574100c8665a59013" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>props</name></member>
      <member refid="group__fh__options_1ga4707af9d7b13e8eed74ddc3ebbdd0b53" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>reftype</name></member>
      <member refid="group__fh__options_1ga32b0e70c2b1914672bb4e285f311546f" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>rsrv4</name></member>
      <member refid="group__fh__options_1ga6de49b5dbb84d7af99012416767d288b" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>shift</name></member>
      <member refid="group__fh__options_1gae7b3073ac6e4a2099b965824e0c1966d" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>size</name></member>
      <member refid="group__fh__options_1gaf430f824beaa0786e687e16756554065" prot="public" virt="non-virtual"><scope>fixup_handler_t</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
