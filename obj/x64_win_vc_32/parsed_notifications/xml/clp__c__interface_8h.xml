<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="clp__c__interface_8h" kind="file" language="C++">
    <compoundname>clp_c_interface.h</compoundname>
    <includes refid="coin__c__defines_8h" local="yes">coin_c_defines.h</includes>
    <incdepgraph>
      <node id="115">
        <label>coin_c_defines.h</label>
        <link refid="coin__c__defines_8h_source"/>
      </node>
      <node id="114">
        <label>obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h</label>
        <link refid="clp__c__interface_8h"/>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>Constructors and destructor</header>
      <description><para>This is a first &quot;C&quot; interface to Clp. It has similarities to the OSL V3 interface and only has most common functions These do not have an exact analogue in C++. The user does not need to know structure of Clp_Simplex.</para><para>For all functions outside this group there is an exact C++ analogue created by taking the first parameter out, removing the Clp_ from name and applying the method to an object of type ClpSimplex. </para></description>
      <memberdef kind="function" id="clp__c__interface_8h_1a33ea85dbe86b34c783540e1f56e274f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI Clp_Simplex *COINLINKAGE</type>
        <definition>COINLIBAPI Clp_Simplex* COINLINKAGE Clp_newModel</definition>
        <argsstring>(void)</argsstring>
        <name>Clp_newModel</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default constructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ac9621f42ee096ee7ab6b73c21a4d9a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_deleteModel</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_deleteModel</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="31" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Load model - loads some stuff and initializes others</header>
      <memberdef kind="function" id="clp__c__interface_8h_1a4bc50586261e9fc0f03d5b145ce40f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_loadProblem</definition>
        <argsstring>(Clp_Simplex *model, const int numcols, const int numrows, const CoinBigIndex *start, const int *index, const double *value, const double *collb, const double *colub, const double *obj, const double *rowlb, const double *rowub)</argsstring>
        <name>Clp_loadProblem</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numcols</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>numrows</declname>
        </param>
        <param>
          <type>const CoinBigIndex *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>collb</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>colub</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>rowlb</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>rowub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Loads a problem (the constraints on the rows are given by lower and upper bounds). If a pointer is NULL then the following values are the default: <itemizedlist>
<listitem>
<para><computeroutput>colub</computeroutput>: all columns have upper bound infinity </para></listitem>
<listitem>
<para><computeroutput>collb</computeroutput>: all columns have lower bound 0 </para></listitem>
<listitem>
<para><computeroutput>rowub</computeroutput>: all rows have upper bound infinity </para></listitem>
<listitem>
<para><computeroutput>rowlb</computeroutput>: all rows have lower bound -infinity </para></listitem>
<listitem>
<para><computeroutput>obj</computeroutput>: all variables have 0 objective coefficient </para></listitem>
</itemizedlist>
Just like the other loadProblem() method except that the matrix is given in a standard column major ordered format (without gaps). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a31d6e33829fc5f94fbda1f409279331f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_readMps</definition>
        <argsstring>(Clp_Simplex *model, const char *filename, int keepNames, int ignoreErrors)</argsstring>
        <name>Clp_readMps</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keepNames</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ignoreErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read an mps file from the given filename </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a22822fe2ddbb94d529c8b5247ed1a074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_writeMps</definition>
        <argsstring>(Clp_Simplex *model, const char *filename)</argsstring>
        <name>Clp_writeMps</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write an mps file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a3208ff988c9b63a659074650795b94c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_copyInIntegerInformation</definition>
        <argsstring>(Clp_Simplex *model, const char *information)</argsstring>
        <name>Clp_copyInIntegerInformation</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>information</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy in integer informations </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1afe89e2052ae2a17a6998a2aecb9c7384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_deleteIntegerInformation</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_deleteIntegerInformation</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop integer informations </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9c6f898cacf149cae3c9cc57967a387d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_resize</definition>
        <argsstring>(Clp_Simplex *model, int newNumberRows, int newNumberColumns)</argsstring>
        <name>Clp_resize</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newNumberRows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newNumberColumns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resizes rim part of model </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a4efa80e5db9b7c478aa102e758633e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_deleteRows</definition>
        <argsstring>(Clp_Simplex *model, int number, const int *which)</argsstring>
        <name>Clp_deleteRows</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes rows </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a96538bfd1c07adb557b06b9781864c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_addRows</definition>
        <argsstring>(Clp_Simplex *model, int number, const double *rowLower, const double *rowUpper, const int *rowStarts, const int *columns, const double *elements)</argsstring>
        <name>Clp_addRows</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>rowLower</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>rowUpper</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>rowStarts</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>columns</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add rows </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1abe0380f93432ebe11dedf39c697d322a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_deleteColumns</definition>
        <argsstring>(Clp_Simplex *model, int number, const int *which)</argsstring>
        <name>Clp_deleteColumns</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deletes columns </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aec2e68b187bdf3e943b3853696aa1e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_addColumns</definition>
        <argsstring>(Clp_Simplex *model, int number, const double *columnLower, const double *columnUpper, const double *objective, const int *columnStarts, const int *rows, const double *elements)</argsstring>
        <name>Clp_addColumns</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>columnLower</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>columnUpper</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>objective</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>columnStarts</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add columns </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a087ec95b813dbe1da3822777c5d72245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_chgRowLower</definition>
        <argsstring>(Clp_Simplex *model, const double *rowLower)</argsstring>
        <name>Clp_chgRowLower</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>rowLower</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change row lower bounds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1adfda8b87c415de159b02a203ce9a1919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_chgRowUpper</definition>
        <argsstring>(Clp_Simplex *model, const double *rowUpper)</argsstring>
        <name>Clp_chgRowUpper</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>rowUpper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change row upper bounds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ad2eb4138ee3285a8a02cad0449488a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_chgColumnLower</definition>
        <argsstring>(Clp_Simplex *model, const double *columnLower)</argsstring>
        <name>Clp_chgColumnLower</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>columnLower</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change column lower bounds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ae2f50d254329f81264a6b7fe06ba82e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_chgColumnUpper</definition>
        <argsstring>(Clp_Simplex *model, const double *columnUpper)</argsstring>
        <name>Clp_chgColumnUpper</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>columnUpper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change column upper bounds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a5d1776abaeb2aac2a4516d901f88a90d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_chgObjCoefficients</definition>
        <argsstring>(Clp_Simplex *model, const double *objIn)</argsstring>
        <name>Clp_chgObjCoefficients</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>objIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change objective coefficients </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aeb3ce4d7a9cc8b5eac3c1a9f7eb9e5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_dropNames</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_dropNames</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drops names - makes lengthnames 0 and names empty </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ab8b048674db21ed47219e2dcd41cb211" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_copyNames</definition>
        <argsstring>(Clp_Simplex *model, const char *const *rowNames, const char *const *columnNames)</argsstring>
        <name>Clp_copyNames</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>rowNames</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>columnNames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copies in names </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="96" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>gets and sets - you will find some synonyms at the end of this file</header>
      <memberdef kind="function" id="clp__c__interface_8h_1a8a951c615e07b9112450212b775db92f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_numberRows</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_numberRows</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of rows </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ae9f2655728242699eb92ef4220affcf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_numberColumns</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_numberColumns</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of columns </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a526bfcb9090b6e64f26b31c07b078fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_primalTolerance</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_primalTolerance</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Primal tolerance to use </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9460c4ab95bf224fbc001785715bbb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setPrimalTolerance</definition>
        <argsstring>(Clp_Simplex *model, double value)</argsstring>
        <name>Clp_setPrimalTolerance</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aed2646e7d8812cbd84e37537248f37b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_dualTolerance</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_dualTolerance</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dual tolerance to use </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a18773b327671cfc3efc858f5ee47d942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setDualTolerance</definition>
        <argsstring>(Clp_Simplex *model, double value)</argsstring>
        <name>Clp_setDualTolerance</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ab8ac0445050a442a8221b2145c1e86c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_dualObjectiveLimit</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_dualObjectiveLimit</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dual objective limit </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a0e5c5ad3b8e736c85d1217b69f706da6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setDualObjectiveLimit</definition>
        <argsstring>(Clp_Simplex *model, double value)</argsstring>
        <name>Clp_setDualObjectiveLimit</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a03717ca7d70bdc99cf45911551991914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_objectiveOffset</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_objectiveOffset</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Objective offset </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a60711a977953a5b64bb11150e3878db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setObjectiveOffset</definition>
        <argsstring>(Clp_Simplex *model, double value)</argsstring>
        <name>Clp_setObjectiveOffset</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a6d32e2c7cb96ea91fe52a788701e45c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_problemName</definition>
        <argsstring>(Clp_Simplex *model, int maxNumberCharacters, char *array)</argsstring>
        <name>Clp_problemName</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxNumberCharacters</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fills in array with problem name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a5d0fe693a800d72368e51110bd7d5916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_setProblemName</definition>
        <argsstring>(Clp_Simplex *model, int maxNumberCharacters, char *array)</argsstring>
        <name>Clp_setProblemName</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxNumberCharacters</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9a86945f1990e64c8aa6a8106dbabd6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_numberIterations</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_numberIterations</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of iterations </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9e1a219398fdf61ee6d5db5dbd98112e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setNumberIterations</definition>
        <argsstring>(Clp_Simplex *model, int numberIterations)</argsstring>
        <name>Clp_setNumberIterations</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numberIterations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a1ebae212b22021a93d09b471fee788fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int</type>
        <definition>COINLIBAPI int maximumIterations</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>maximumIterations</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum number of iterations </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a45cd35ca03dd6f52166259fb63b66438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setMaximumIterations</definition>
        <argsstring>(Clp_Simplex *model, int value)</argsstring>
        <name>Clp_setMaximumIterations</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ad3ef2db538e5883d5c7a2a7315315d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_maximumSeconds</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_maximumSeconds</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum time in seconds (from when set called) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a6fded9256f373f1c1a67245df43d1039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setMaximumSeconds</definition>
        <argsstring>(Clp_Simplex *model, double value)</argsstring>
        <name>Clp_setMaximumSeconds</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a417012e9177970f8df42d3849e0b579c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_hitMaximumIterations</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_hitMaximumIterations</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if hit maximum iterations (or time) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a94398ee9c5d04c196140ca5eea04d09f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_status</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_status</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Status of problem: 0 - optimal 1 - primal infeasible 2 - dual infeasible 3 - stopped on iterations etc 4 - stopped due to errors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9ee4f63b684fda5e3cee9637766f024d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setProblemStatus</definition>
        <argsstring>(Clp_Simplex *model, int problemStatus)</argsstring>
        <name>Clp_setProblemStatus</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>problemStatus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set problem status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ab46d4ac203b27601ea58e9566748228a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_secondaryStatus</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_secondaryStatus</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Secondary status of problem - may get extended 0 - none 1 - primal infeasible because dual limit reached 2 - scaled problem optimal - unscaled has primal infeasibilities 3 - scaled problem optimal - unscaled has dual infeasibilities 4 - scaled problem optimal - unscaled has both dual and primal infeasibilities </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aadc3df01796e8c83ed1db9f073d451b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setSecondaryStatus</definition>
        <argsstring>(Clp_Simplex *model, int status)</argsstring>
        <name>Clp_setSecondaryStatus</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a3f3c8527e5264d24a13d94b5ac780d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_optimizationDirection</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_optimizationDirection</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Direction of optimization (1 - minimize, -1 - maximize, 0 - ignore </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ab3e9bc8b4754af898f55554e09f80e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setOptimizationDirection</definition>
        <argsstring>(Clp_Simplex *model, double value)</argsstring>
        <name>Clp_setOptimizationDirection</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9b78ad3dedc0595e13b8893979876936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_primalRowSolution</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_primalRowSolution</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Primal row solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ae1a24345e88bf86d28a215029c9f6a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_primalColumnSolution</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_primalColumnSolution</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Primal column solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a924268d8915cb0dadb815a5920efc4a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_dualRowSolution</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_dualRowSolution</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dual row solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aa7f9d3dd0be88c765386ab0830800a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_dualColumnSolution</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_dualColumnSolution</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reduced costs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9aa15dd1c81e68a775d7a91873b9a2f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_rowLower</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_rowLower</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Row lower </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a01ec49301a8630ce08a4a04c13a8fcfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_rowUpper</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_rowUpper</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Row upper </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9d547d1924b401cdb721934ce06a34e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_objective</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_objective</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Objective </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a4ac22f5e3a010a98179ea110cd7f0b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_columnLower</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_columnLower</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Column Lower </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1afc2369ddfc6180f9843751e99f01cf9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_columnUpper</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_columnUpper</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Column Upper </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ad574f03a635c1c6166af87f747f0fd3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_getNumElements</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getNumElements</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of elements in matrix </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1add9020e6e97926fdcd6e27f2463f49b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const CoinBigIndex *COINLINKAGE</type>
        <definition>COINLIBAPI const CoinBigIndex* COINLINKAGE Clp_getVectorStarts</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getVectorStarts</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ad75fc2e002c8b0d6e3040a4888ec012e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const int *COINLINKAGE</type>
        <definition>COINLIBAPI const int* COINLINKAGE Clp_getIndices</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getIndices</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ac39e05c73e01dd92268f4aa1982e25b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const int *COINLINKAGE</type>
        <definition>COINLIBAPI const int* COINLINKAGE Clp_getVectorLengths</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getVectorLengths</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a640996043aedab5315dd498261229521" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getElements</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getElements</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a1926139b77ec95fcb67e89920f5ae4af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_objectiveValue</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_objectiveValue</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Objective value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aad3e2e79ff95f68e32abeb85eba4078f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI char *COINLINKAGE</type>
        <definition>COINLIBAPI char* COINLINKAGE Clp_integerInformation</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_integerInformation</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Integer information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a8a4b148b4c5d9ad17e58cc2ed78cafa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_infeasibilityRay</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_infeasibilityRay</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Infeasibility/unbounded ray (NULL returned if none/wrong) Up to user to use delete [] on these arrays. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a2e9d45552d852c80a3b75fd4f316f424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double *COINLINKAGE</type>
        <definition>COINLIBAPI double* COINLINKAGE Clp_unboundedRay</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_unboundedRay</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a54847ce34e1ebcf7cc0cbcb9f312ddb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_statusExists</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_statusExists</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>See if status array exists (partly for OsiClp) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a4165a56db525d9838fb1688c80cf45a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI unsigned char *COINLINKAGE</type>
        <definition>COINLIBAPI unsigned char* COINLINKAGE Clp_statusArray</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_statusArray</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return address of status array (char[numberRows+numberColumns]) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a097c09032c2de49c9a1cb45d58cbc751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_copyinStatus</definition>
        <argsstring>(Clp_Simplex *model, const unsigned char *statusArray)</argsstring>
        <name>Clp_copyinStatus</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>statusArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy in status vector </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1acc026cff42a88f183a219d333f1b1b37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_getColumnStatus</definition>
        <argsstring>(Clp_Simplex *model, int sequence)</argsstring>
        <name>Clp_getColumnStatus</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sequence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aa4d45b2ab2bec2cddf96bf5ce44eb3c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_getRowStatus</definition>
        <argsstring>(Clp_Simplex *model, int sequence)</argsstring>
        <name>Clp_getRowStatus</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sequence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a87022e3a4500f3f19c293cd6de14d6a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setColumnStatus</definition>
        <argsstring>(Clp_Simplex *model, int sequence, int value)</argsstring>
        <name>Clp_setColumnStatus</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a4f1ccc8ccf6ff6247916ea520e7dbdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setRowStatus</definition>
        <argsstring>(Clp_Simplex *model, int sequence, int value)</argsstring>
        <name>Clp_setRowStatus</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1abe097e181577e1ff7f04564112bedf34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setUserPointer</definition>
        <argsstring>(Clp_Simplex *model, void *pointer)</argsstring>
        <name>Clp_setUserPointer</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>User pointer for whatever reason </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a211359cadabc1f1209e1b85f05ea49c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void *COINLINKAGE</type>
        <definition>COINLIBAPI void* COINLINKAGE Clp_getUserPointer</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getUserPointer</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="213" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Message handling.  Call backs are handled by ONE function</header>
      <memberdef kind="function" id="clp__c__interface_8h_1aed2facee32774ad0315a5b3f7e6e2529" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_registerCallBack</definition>
        <argsstring>(Clp_Simplex *model, clp_callback userCallBack)</argsstring>
        <name>Clp_registerCallBack</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>clp_callback</type>
          <declname>userCallBack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pass in Callback function. Message numbers up to 1000000 are Clp, Coin ones have 1000000 added </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a60e5619953bd4a2ef364561779cef5a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_registerCallBack2</definition>
        <argsstring>(Clp_Simplex *model, clp_callback2 userCallBack)</argsstring>
        <name>Clp_registerCallBack2</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>clp_callback2</type>
          <declname>userCallBack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a59d9e2e45060d8a3f334b13437b31cff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_clearCallBack</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_clearCallBack</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unset Callback function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a86efa12f04f54cdffb4d80106dbf5f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setLogLevel</definition>
        <argsstring>(Clp_Simplex *model, int value)</argsstring>
        <name>Clp_setLogLevel</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Amount of print out: 0 - none 1 - just final 2 - just factorizations 3 - as 2 plus a bit more 4 - verbose above that 8,16,32 etc just for selective debug </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a075eb43de6968c7bd43cbfe3af9e2fc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_logLevel</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_logLevel</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a1281c9e550cace3c9ecd343f6ef4a7c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_lengthNames</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_lengthNames</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>length of names (0 means no names0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9f9af6f230ffe865d6952d8ca18dc08a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_rowName</definition>
        <argsstring>(Clp_Simplex *model, int iRow, char *name)</argsstring>
        <name>Clp_rowName</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iRow</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill in array (at least lengthNames+1 long) with a row name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a58f54119751431b5b5501c91af49b9fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_columnName</definition>
        <argsstring>(Clp_Simplex *model, int iColumn, char *name)</argsstring>
        <name>Clp_columnName</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iColumn</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill in array (at least lengthNames+1 long) with a column name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="240" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Functions most useful to user</header>
      <memberdef kind="function" id="clp__c__interface_8h_1adb83067d445a8961ea59641b75ef2ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_initialSolve</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_initialSolve</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>General solve algorithm which can do presolve. See ClpSolve.hpp for options </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a2caad724491ecb1528d2179ddb61afc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_initialDualSolve</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_initialDualSolve</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dual initial solve </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1af373af708b9693e8125c4e3cfef72ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_initialPrimalSolve</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_initialPrimalSolve</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Primal initial solve </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a15c3556b6cff45bce3fbcb2ee1e5670f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_dual</definition>
        <argsstring>(Clp_Simplex *model, int ifValuesPass)</argsstring>
        <name>Clp_dual</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ifValuesPass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dual algorithm - see ClpSimplexDual.hpp for method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ae6a0fa19596878e9ece8ba1303b348bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_primal</definition>
        <argsstring>(Clp_Simplex *model, int ifValuesPass)</argsstring>
        <name>Clp_primal</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ifValuesPass</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Primal algorithm - see ClpSimplexPrimal.hpp for method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a1bd7b08d6b6000e2f142fd667e652e30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_scaling</definition>
        <argsstring>(Clp_Simplex *model, int mode)</argsstring>
        <name>Clp_scaling</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets or unsets scaling, 0 -off, 1 equilibrium, 2 geometric, 3, auto, 4 dynamic(later) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ae20e99628d6c963087e502069f678545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_scalingFlag</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_scalingFlag</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets scalingFlag </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ae4cf9a5e2f6760e0995bfacef58f6548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_crash</definition>
        <argsstring>(Clp_Simplex *model, double gap, int pivot)</argsstring>
        <name>Clp_crash</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gap</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pivot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Crash - at present just aimed at dual, returns -2 if dual preferred and crash basis created -1 if dual preferred and all slack basis preferred 0 if basis going in was not all slack 1 if primal preferred and all slack basis preferred 2 if primal preferred and crash basis created.</para><para>if gap between bounds &lt;=&quot;gap&quot; variables can be flipped</para><para>If &quot;pivot&quot; is 0 No pivoting (so will just be choice of algorithm) 1 Simple pivoting e.g. gub 2 Mini iterations </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="277" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>most useful gets and sets</header>
      <memberdef kind="function" id="clp__c__interface_8h_1a589d91e4229d5bca696c07b061cb8e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_primalFeasible</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_primalFeasible</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If problem is primal feasible </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a798a076bbf3ebfb4c836299c850b5037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_dualFeasible</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_dualFeasible</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If problem is dual feasible </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a1116cd896aa130279823dae9aef355c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_dualBound</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_dualBound</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dual bound </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9bb8d42684472f2ef9d86a5803509042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setDualBound</definition>
        <argsstring>(Clp_Simplex *model, double value)</argsstring>
        <name>Clp_setDualBound</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a8234a556ec21d74910a093b757ee1fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_infeasibilityCost</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_infeasibilityCost</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Infeasibility cost </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a65e7237ff3576d735f7470435b939c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setInfeasibilityCost</definition>
        <argsstring>(Clp_Simplex *model, double value)</argsstring>
        <name>Clp_setInfeasibilityCost</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a6d0a8f2c352bbff6ee1fca87211f19b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_perturbation</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_perturbation</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perturbation: 50 - switch on perturbation 100 - auto perturb if takes too long (1.0e-6 largest nonzero) 101 - we are perturbed 102 - don&apos;t try perturbing again default is 100 others are for playing </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ad326824119764f767cd7e7965acaace5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setPerturbation</definition>
        <argsstring>(Clp_Simplex *model, int value)</argsstring>
        <name>Clp_setPerturbation</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a1ff9940906df07997acab4d53852dca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_algorithm</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_algorithm</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current (or last) algorithm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a7cf4073c43154ebd789f17e5d3c1c61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setAlgorithm</definition>
        <argsstring>(Clp_Simplex *model, int value)</argsstring>
        <name>Clp_setAlgorithm</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set algorithm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a02b9969d566feab50be17cf99a0dd140" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_sumDualInfeasibilities</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_sumDualInfeasibilities</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sum of dual infeasibilities </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aa9c8cba9f08dcf86dbc66aa8ca9b5b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_numberDualInfeasibilities</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_numberDualInfeasibilities</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of dual infeasibilities </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a5cf36724333af71db9896f6c5e7e2c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_sumPrimalInfeasibilities</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_sumPrimalInfeasibilities</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sum of primal infeasibilities </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="312" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a554e24d3153ca312e2ba439b65cb03ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_numberPrimalInfeasibilities</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_numberPrimalInfeasibilities</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of primal infeasibilities </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a1ae601dc063968c92a5daacea10691cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_saveModel</definition>
        <argsstring>(Clp_Simplex *model, const char *fileName)</argsstring>
        <name>Clp_saveModel</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save model to file, returns 0 if success. This is designed for use outside algorithms so does not save iterating arrays etc. It does not save any messaging information. Does not save scaling values. It does not know about all types of virtual functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="321" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a30ddc5292a3402d59dfae48a2dab5e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_restoreModel</definition>
        <argsstring>(Clp_Simplex *model, const char *fileName)</argsstring>
        <name>Clp_restoreModel</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore model from file, returns 0 if success, deletes current model </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a6ddbf0343acb7665db8f4687d9de0d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_checkSolution</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_checkSolution</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Just check solution (for external use) - sets sum of infeasibilities etc </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="328" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>gets and sets - some synonyms</header>
      <memberdef kind="function" id="clp__c__interface_8h_1a856097362d71d279ed53e7c565ac4902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_getNumRows</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getNumRows</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of rows </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1acb469c46ab30593c63b7703cfecd7de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_getNumCols</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getNumCols</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of columns </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a970980a0083c0d4a50494cf9a92de5d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_getIterationCount</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getIterationCount</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of iterations </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a26af9320ad614994933cafd8f2fe8996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_isAbandoned</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_isAbandoned</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Are there a numerical difficulties? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a333a08740711c5e8c9070f38e1e33dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_isProvenOptimal</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_isProvenOptimal</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is optimality proven? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a55882137b44c0d8d1bc04004f40df671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_isProvenPrimalInfeasible</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_isProvenPrimalInfeasible</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is primal infeasiblity proven? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aac7d4ee4e128036beb5e4094b5313088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_isProvenDualInfeasible</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_isProvenDualInfeasible</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is dual infeasiblity proven? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a8488426d5ce607dbb48e54b5e71ef04a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_isPrimalObjectiveLimitReached</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_isPrimalObjectiveLimitReached</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is the given primal objective limit reached? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1adfe6f4619793cb3be2c5a5bfb5650ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_isDualObjectiveLimitReached</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_isDualObjectiveLimitReached</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is the given dual objective limit reached? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a4b8eb0388a51af4376e33cf346286a38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI int COINLINKAGE</type>
        <definition>COINLIBAPI int COINLINKAGE Clp_isIterationLimitReached</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_isIterationLimitReached</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iteration limit reached? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a688ab9b3c4881416024a4fa714f48ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_getObjSense</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getObjSense</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Direction of optimization (1 - minimize, -1 - maximize, 0 - ignore </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9ebbf5e04cf7900b157e4967430df520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getRowActivity</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getRowActivity</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Primal row solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a2bff6a6c6c4255dee57e609431a5ad21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getColSolution</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getColSolution</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Primal column solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a5ed31de1d250597dcc6700581b92bd04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setColSolution</definition>
        <argsstring>(Clp_Simplex *model, const double *input)</argsstring>
        <name>Clp_setColSolution</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a7a6d7f90dc800439adef2f1be8436f00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getRowPrice</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getRowPrice</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dual row solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a2c3e6b7dd61bfd4681f3df9bd996f206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getReducedCost</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getReducedCost</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reduced costs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a5f6c78b2f9face609e0b176ae7b9f309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getRowLower</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getRowLower</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Row lower </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1aacde28441acc597b698745db2d6f14d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getRowUpper</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getRowUpper</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Row upper </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a76dfcad2e6435094447922f54f6af644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getObjCoefficients</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getObjCoefficients</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Objective </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ae186130b96b711061318d7e5d4b83013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getColLower</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getColLower</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Column Lower </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1ad44ecd0031b32260dec711c5c6a7593e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI const double *COINLINKAGE</type>
        <definition>COINLIBAPI const double* COINLINKAGE Clp_getColUpper</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getColUpper</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Column Upper </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a5a64144d95c1f85079c8bad9c76c2537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_getObjValue</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getObjValue</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Objective value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a86ccbbce8fb8998ecf4658510b274a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_printModel</definition>
        <argsstring>(Clp_Simplex *model, const char *fname)</argsstring>
        <name>Clp_printModel</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print model for debugging purposes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a1d48a3788c0f677a3affc9a0b3a1aaa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_getSmallElementValue</definition>
        <argsstring>(Clp_Simplex *model)</argsstring>
        <name>Clp_getSmallElementValue</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a6c62560042f28d46c0382e2fe54b9d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_setSmallElementValue</definition>
        <argsstring>(Clp_Simplex *model, double value)</argsstring>
        <name>Clp_setSmallElementValue</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a9dbb65e88faa24953f446bba775cb888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI void COINLINKAGE</type>
        <definition>COINLIBAPI void COINLINKAGE Clp_dumpMatrix</definition>
        <argsstring>(Clp_Simplex *model, const char *fname)</argsstring>
        <name>Clp_dumpMatrix</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="clp__c__interface_8h_1a6d19b7789479d7e41040abe768cd780f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COINLIBAPI double COINLINKAGE</type>
        <definition>COINLIBAPI double COINLINKAGE Clp_getMatrixElement</definition>
        <argsstring>(Clp_Simplex *model, int row_val, int col_val)</argsstring>
        <name>Clp_getMatrixElement</name>
        <param>
          <type>Clp_Simplex *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>col_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h" line="386" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/clp_c_interface.h"/>
  </compounddef>
</doxygen>
