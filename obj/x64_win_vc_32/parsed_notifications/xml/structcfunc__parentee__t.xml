<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structcfunc__parentee__t" kind="struct" language="C++" prot="public">
    <compoundname>cfunc_parentee_t</compoundname>
    <basecompoundref refid="structctree__parentee__t" prot="public" virt="non-virtual">ctree_parentee_t</basecompoundref>
    <includes refid="hexrays_8hpp" local="no">hexrays.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structcfunc__parentee__t_1a4e803005d95efb20b8ff3a9e2114839b" prot="public" static="no" mutable="no">
        <type><ref refid="structcfunc__t" kindref="compound">cfunc_t</ref> *</type>
        <definition>cfunc_t* cfunc_parentee_t::func</definition>
        <argsstring></argsstring>
        <name>func</name>
        <briefdescription>
<para>Pointer to current function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5413" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5413" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcfunc__parentee__t_1a3de987e20bc93972d9fa771508fea5ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cfunc_parentee_t::cfunc_parentee_t</definition>
        <argsstring>(cfunc_t *f, bool post=false)</argsstring>
        <name>cfunc_parentee_t</name>
        <param>
          <type><ref refid="structcfunc__t" kindref="compound">cfunc_t</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>post</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5414" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5414" bodyend="5415"/>
      </memberdef>
      <memberdef kind="function" id="structcfunc__parentee__t_1a723aa9a3c233c35f63ac50a0aa7a2ce8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool cfunc_parentee_t::calc_rvalue_type</definition>
        <argsstring>(tinfo_t *target, const cexpr_t *e)</argsstring>
        <name>calc_rvalue_type</name>
        <param>
          <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate rvalue type. This function tries to determine the type of the specified item based on its context. For example, if the current expression is the right side of an assignment operator, the type of its left side will be returned. This function can be used to determine the &apos;best&apos; type of the specified expression. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">e</parametername>
</parameternamelist>
<parameterdescription>
<para>expression to determine the desired type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">target</parametername>
</parameternamelist>
<parameterdescription>
<para>&apos;best&apos; type of the expression will be returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5426" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10731" bodyend="10734"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to traverse the whole function. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="631">
        <label>ctree_parentee_t</label>
        <link refid="structctree__parentee__t"/>
        <childnode refid="632" relation="public-inheritance">
        </childnode>
      </node>
      <node id="632">
        <label>ctree_visitor_t</label>
        <link refid="structctree__visitor__t"/>
      </node>
      <node id="630">
        <label>cfunc_parentee_t</label>
        <link refid="structcfunc__parentee__t"/>
        <childnode refid="631" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="674">
        <label>ivl_tpl&lt; uval_t &gt;</label>
        <link refid="structivl__tpl"/>
      </node>
      <node id="648">
        <label>bitset_t</label>
        <link refid="classbitset__t"/>
      </node>
      <node id="687">
        <label>cinsn_t</label>
        <link refid="structcinsn__t"/>
        <childnode refid="688" relation="public-inheritance">
        </childnode>
        <childnode refid="689" relation="usage">
          <edgelabel>cexpr</edgelabel>
        </childnode>
        <childnode refid="695" relation="usage">
          <edgelabel>cwhile</edgelabel>
        </childnode>
        <childnode refid="698" relation="usage">
          <edgelabel>cswitch</edgelabel>
        </childnode>
        <childnode refid="701" relation="usage">
          <edgelabel>cfor</edgelabel>
        </childnode>
        <childnode refid="702" relation="usage">
          <edgelabel>cdo</edgelabel>
        </childnode>
        <childnode refid="703" relation="usage">
          <edgelabel>casm</edgelabel>
        </childnode>
        <childnode refid="705" relation="usage">
          <edgelabel>cblock</edgelabel>
        </childnode>
        <childnode refid="707" relation="usage">
          <edgelabel>creturn</edgelabel>
        </childnode>
        <childnode refid="708" relation="usage">
          <edgelabel>cif</edgelabel>
        </childnode>
        <childnode refid="709" relation="usage">
          <edgelabel>cgoto</edgelabel>
        </childnode>
      </node>
      <node id="686">
        <label>qvector&lt; simpleline_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="646">
        <label>mlist_t</label>
        <link refid="structmlist__t"/>
        <childnode refid="643" relation="usage">
          <edgelabel>mem</edgelabel>
        </childnode>
        <childnode refid="647" relation="usage">
          <edgelabel>reg</edgelabel>
        </childnode>
      </node>
      <node id="672">
        <label>ivl_with_name_t</label>
        <link refid="structivl__with__name__t"/>
        <childnode refid="673" relation="usage">
          <edgelabel>ivl</edgelabel>
        </childnode>
      </node>
      <node id="660">
        <label>tinfo_t</label>
        <link refid="classtinfo__t"/>
      </node>
      <node id="705">
        <label>cblock_t</label>
        <link refid="structcblock__t"/>
        <childnode refid="706" relation="public-inheritance">
        </childnode>
      </node>
      <node id="706">
        <label>qlist&lt; cinsn_t &gt;</label>
        <link refid="classqlist"/>
      </node>
      <node id="662">
        <label>mop_addr_t</label>
        <link refid="classmop__addr__t"/>
        <childnode refid="653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="684">
        <label>netnode</label>
        <link refid="classnetnode"/>
      </node>
      <node id="699">
        <label>ccases_t</label>
        <link refid="structccases__t"/>
        <childnode refid="700" relation="public-inheritance">
        </childnode>
      </node>
      <node id="666">
        <label>qvector&lt; mop_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="643">
        <label>ivlset_t</label>
        <link refid="structivlset__t"/>
        <childnode refid="644" relation="public-inheritance">
        </childnode>
      </node>
      <node id="692">
        <label>carglist_t</label>
        <link refid="structcarglist__t"/>
        <childnode refid="693" relation="public-inheritance">
        </childnode>
        <childnode refid="660" relation="usage">
          <edgelabel>functype</edgelabel>
        </childnode>
      </node>
      <node id="651">
        <label>mblock_t</label>
        <link refid="classmblock__t"/>
        <childnode refid="639" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="646" relation="usage">
          <edgelabel>maybuse</edgelabel>
          <edgelabel>dnu</edgelabel>
          <edgelabel>maybdef</edgelabel>
          <edgelabel>mustbuse</edgelabel>
          <edgelabel>mustbdef</edgelabel>
          <edgelabel>dead_at_start</edgelabel>
        </childnode>
        <childnode refid="649" relation="usage">
          <edgelabel>succset</edgelabel>
          <edgelabel>predset</edgelabel>
        </childnode>
        <childnode refid="652" relation="usage">
          <edgelabel>head</edgelabel>
          <edgelabel>tail</edgelabel>
        </childnode>
        <childnode refid="651" relation="usage">
          <edgelabel>nextb</edgelabel>
          <edgelabel>prevb</edgelabel>
        </childnode>
      </node>
      <node id="634">
        <label>ctree_parentee_t</label>
        <link refid="structctree__parentee__t"/>
        <childnode refid="635" relation="public-inheritance">
        </childnode>
      </node>
      <node id="683">
        <label>rangevec_base_t</label>
        <link refid="classqvector"/>
      </node>
      <node id="701">
        <label>cfor_t</label>
        <link refid="structcfor__t"/>
        <childnode refid="696" relation="public-inheritance">
        </childnode>
        <childnode refid="689" relation="usage">
          <edgelabel>step</edgelabel>
          <edgelabel>init</edgelabel>
        </childnode>
      </node>
      <node id="669">
        <label>operand_locator_t</label>
        <link refid="structoperand__locator__t"/>
      </node>
      <node id="690">
        <label>cnumber_t</label>
        <link refid="structcnumber__t"/>
        <childnode refid="691" relation="usage">
          <edgelabel>nf</edgelabel>
        </childnode>
      </node>
      <node id="645">
        <label>qvector&lt; ivl_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="638">
        <label>qvector&lt; citem_t * &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="635">
        <label>ctree_visitor_t</label>
        <link refid="structctree__visitor__t"/>
        <childnode refid="636" relation="usage">
          <edgelabel>parents</edgelabel>
        </childnode>
      </node>
      <node id="670">
        <label>mcases_t</label>
        <link refid="classmcases__t"/>
        <childnode refid="649" relation="usage">
          <edgelabel>targets</edgelabel>
        </childnode>
      </node>
      <node id="665">
        <label>qvector&lt; mcallarg_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="695">
        <label>cwhile_t</label>
        <link refid="structcwhile__t"/>
        <childnode refid="696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="707">
        <label>creturn_t</label>
        <link refid="structcreturn__t"/>
        <childnode refid="697" relation="public-inheritance">
        </childnode>
      </node>
      <node id="676">
        <label>func_t</label>
        <link refid="classfunc__t"/>
        <childnode refid="677" relation="public-inheritance">
        </childnode>
        <childnode refid="678" relation="usage">
          <edgelabel>regargs</edgelabel>
        </childnode>
        <childnode refid="679" relation="usage">
          <edgelabel>points</edgelabel>
        </childnode>
        <childnode refid="677" relation="usage">
          <edgelabel>tails</edgelabel>
        </childnode>
        <childnode refid="680" relation="usage">
          <edgelabel>regvars</edgelabel>
        </childnode>
        <childnode refid="681" relation="usage">
          <edgelabel>llabels</edgelabel>
        </childnode>
      </node>
      <node id="653">
        <label>mop_t</label>
        <link refid="classmop__t"/>
        <childnode refid="654" relation="usage">
          <edgelabel>scif</edgelabel>
        </childnode>
        <childnode refid="661" relation="usage">
          <edgelabel>fpc</edgelabel>
        </childnode>
        <childnode refid="662" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="663" relation="usage">
          <edgelabel>pair</edgelabel>
        </childnode>
        <childnode refid="664" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
        <childnode refid="652" relation="usage">
          <edgelabel>d</edgelabel>
        </childnode>
        <childnode refid="667" relation="usage">
          <edgelabel>l</edgelabel>
        </childnode>
        <childnode refid="668" relation="usage">
          <edgelabel>nnn</edgelabel>
        </childnode>
        <childnode refid="670" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="671" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
      </node>
      <node id="636">
        <label>qvector&lt; T &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="704">
        <label>eavec_t</label>
        <link refid="classqvector"/>
      </node>
      <node id="663">
        <label>mop_pair_t</label>
        <link refid="classmop__pair__t"/>
        <childnode refid="653" relation="usage">
          <edgelabel>hop</edgelabel>
          <edgelabel>lop</edgelabel>
        </childnode>
      </node>
      <node id="694">
        <label>var_ref_t</label>
        <link refid="structvar__ref__t"/>
        <childnode refid="639" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="703">
        <label>casm_t</label>
        <link refid="structcasm__t"/>
        <childnode refid="704" relation="public-inheritance">
        </childnode>
      </node>
      <node id="678">
        <label>regarg_t</label>
        <link refid="structregarg__t"/>
      </node>
      <node id="689">
        <label>cexpr_t</label>
        <link refid="structcexpr__t"/>
        <childnode refid="688" relation="public-inheritance">
        </childnode>
        <childnode refid="689" relation="usage">
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
          <edgelabel>z</edgelabel>
        </childnode>
        <childnode refid="661" relation="usage">
          <edgelabel>fpc</edgelabel>
        </childnode>
        <childnode refid="690" relation="usage">
          <edgelabel>n</edgelabel>
        </childnode>
        <childnode refid="692" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="660" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="687" relation="usage">
          <edgelabel>insn</edgelabel>
        </childnode>
        <childnode refid="694" relation="usage">
          <edgelabel>v</edgelabel>
        </childnode>
      </node>
      <node id="700">
        <label>qvector&lt; ccase_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="691">
        <label>number_format_t</label>
        <link refid="structnumber__format__t"/>
        <childnode refid="642" relation="usage">
          <edgelabel>type_name</edgelabel>
        </childnode>
      </node>
      <node id="661">
        <label>fnumber_t</label>
        <link refid="structfnumber__t"/>
      </node>
      <node id="633">
        <label>cfunc_parentee_t</label>
        <link refid="structcfunc__parentee__t"/>
        <childnode refid="634" relation="public-inheritance">
        </childnode>
        <childnode refid="637" relation="usage">
          <edgelabel>func</edgelabel>
        </childnode>
      </node>
      <node id="639">
        <label>mbl_array_t</label>
        <link refid="classmbl__array__t"/>
        <childnode refid="640" relation="usage">
          <edgelabel>vars</edgelabel>
        </childnode>
        <childnode refid="642" relation="usage">
          <edgelabel>label</edgelabel>
          <edgelabel>error_strarg</edgelabel>
        </childnode>
        <childnode refid="643" relation="usage">
          <edgelabel>gotoff_stkvars</edgelabel>
          <edgelabel>restricted_memory</edgelabel>
          <edgelabel>aliased_memory</edgelabel>
        </childnode>
        <childnode refid="646" relation="usage">
          <edgelabel>spoiled_list</edgelabel>
          <edgelabel>nodel_memory</edgelabel>
        </childnode>
        <childnode refid="649" relation="usage">
          <edgelabel>argidx</edgelabel>
        </childnode>
        <childnode refid="650" relation="usage">
          <edgelabel>idb_spoiled</edgelabel>
        </childnode>
        <childnode refid="651" relation="usage">
          <edgelabel>blocks</edgelabel>
          <edgelabel>natural</edgelabel>
        </childnode>
        <childnode refid="647" relation="usage">
          <edgelabel>consumed_argregs</edgelabel>
        </childnode>
        <childnode refid="672" relation="usage">
          <edgelabel>std_ivls</edgelabel>
        </childnode>
        <childnode refid="660" relation="usage">
          <edgelabel>idb_type</edgelabel>
        </childnode>
        <childnode refid="675" relation="usage">
          <edgelabel>mbr</edgelabel>
        </childnode>
        <childnode refid="684" relation="usage">
          <edgelabel>idb_node</edgelabel>
        </childnode>
        <childnode refid="685" relation="usage">
          <edgelabel>notes</edgelabel>
        </childnode>
        <childnode refid="673" relation="usage">
          <edgelabel>aliased_args</edgelabel>
          <edgelabel>aliased_vars</edgelabel>
        </childnode>
      </node>
      <node id="664">
        <label>mcallinfo_t</label>
        <link refid="classmcallinfo__t"/>
        <childnode refid="643" relation="usage">
          <edgelabel>visible_memory</edgelabel>
        </childnode>
        <childnode refid="646" relation="usage">
          <edgelabel>pass_regs</edgelabel>
          <edgelabel>spoiled</edgelabel>
          <edgelabel>dead_regs</edgelabel>
          <edgelabel>return_regs</edgelabel>
        </childnode>
        <childnode refid="665" relation="usage">
          <edgelabel>args</edgelabel>
        </childnode>
        <childnode refid="660" relation="usage">
          <edgelabel>return_type</edgelabel>
        </childnode>
        <childnode refid="666" relation="usage">
          <edgelabel>retregs</edgelabel>
        </childnode>
        <childnode refid="656" relation="usage">
          <edgelabel>return_argloc</edgelabel>
        </childnode>
      </node>
      <node id="675">
        <label>mba_ranges_t</label>
        <link refid="structmba__ranges__t"/>
        <childnode refid="676" relation="usage">
          <edgelabel>pfn</edgelabel>
        </childnode>
        <childnode refid="682" relation="usage">
          <edgelabel>ranges</edgelabel>
        </childnode>
      </node>
      <node id="644">
        <label>ivlset_tpl&lt; ivl_t, uval_t &gt;</label>
        <link refid="classivlset__tpl"/>
        <childnode refid="645" relation="usage">
          <edgelabel>bag</edgelabel>
        </childnode>
      </node>
      <node id="698">
        <label>cswitch_t</label>
        <link refid="structcswitch__t"/>
        <childnode refid="697" relation="public-inheritance">
        </childnode>
        <childnode refid="699" relation="usage">
          <edgelabel>cases</edgelabel>
        </childnode>
        <childnode refid="690" relation="usage">
          <edgelabel>mvnf</edgelabel>
        </childnode>
      </node>
      <node id="654">
        <label>scif_t</label>
        <link refid="structscif__t"/>
        <childnode refid="655" relation="public-inheritance">
        </childnode>
        <childnode refid="639" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="642" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="660" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="649">
        <label>qvector&lt; int &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="679">
        <label>stkpnt_t</label>
        <link refid="structstkpnt__t"/>
      </node>
      <node id="642">
        <label>_qstring&lt; char &gt;</label>
        <link refid="class__qstring"/>
      </node>
      <node id="693">
        <label>qvector&lt; carg_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="652">
        <label>minsn_t</label>
        <link refid="classminsn__t"/>
        <childnode refid="652" relation="usage">
          <edgelabel>prev</edgelabel>
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="653" relation="usage">
          <edgelabel>l</edgelabel>
          <edgelabel>r</edgelabel>
          <edgelabel>d</edgelabel>
        </childnode>
      </node>
      <node id="688">
        <label>citem_t</label>
        <link refid="structcitem__t"/>
      </node>
      <node id="657">
        <label>scattered_aloc_t</label>
        <link refid="classscattered__aloc__t"/>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
      </node>
      <node id="658">
        <label>qvector&lt; argpart_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="677">
        <label>range_t</label>
        <link refid="structrange__t"/>
      </node>
      <node id="655">
        <label>vdloc_t</label>
        <link refid="classvdloc__t"/>
        <childnode refid="656" relation="public-inheritance">
        </childnode>
      </node>
      <node id="680">
        <label>regvar_t</label>
        <link refid="structregvar__t"/>
        <childnode refid="677" relation="public-inheritance">
        </childnode>
      </node>
      <node id="685">
        <label>qvector&lt; hexwarn_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="668">
        <label>mnumber_t</label>
        <link refid="structmnumber__t"/>
        <childnode refid="669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="640">
        <label>lvars_t</label>
        <link refid="structlvars__t"/>
        <childnode refid="641" relation="public-inheritance">
        </childnode>
      </node>
      <node id="656">
        <label>argloc_t</label>
        <link refid="classargloc__t"/>
        <childnode refid="657" relation="usage">
          <edgelabel>dist</edgelabel>
        </childnode>
        <childnode refid="659" relation="usage">
          <edgelabel>rrel</edgelabel>
        </childnode>
      </node>
      <node id="709">
        <label>cgoto_t</label>
        <link refid="structcgoto__t"/>
      </node>
      <node id="681">
        <label>llabel_t</label>
        <link refid="structllabel__t"/>
      </node>
      <node id="667">
        <label>lvar_ref_t</label>
        <link refid="structlvar__ref__t"/>
        <childnode refid="639" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="641">
        <label>qvector&lt; lvar_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="671">
        <label>stkvar_ref_t</label>
        <link refid="structstkvar__ref__t"/>
        <childnode refid="639" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="650">
        <label>qvector&lt; reg_info_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="659">
        <label>rrel_t</label>
        <link refid="structrrel__t"/>
      </node>
      <node id="702">
        <label>cdo_t</label>
        <link refid="structcdo__t"/>
        <childnode refid="696" relation="public-inheritance">
        </childnode>
      </node>
      <node id="697">
        <label>ceinsn_t</label>
        <link refid="structceinsn__t"/>
        <childnode refid="689" relation="usage">
          <edgelabel>expr</edgelabel>
        </childnode>
      </node>
      <node id="647">
        <label>rlist_t</label>
        <link refid="classrlist__t"/>
        <childnode refid="648" relation="public-inheritance">
        </childnode>
      </node>
      <node id="708">
        <label>cif_t</label>
        <link refid="structcif__t"/>
        <childnode refid="697" relation="public-inheritance">
        </childnode>
        <childnode refid="687" relation="usage">
          <edgelabel>ithen</edgelabel>
          <edgelabel>ielse</edgelabel>
        </childnode>
      </node>
      <node id="696">
        <label>cloop_t</label>
        <link refid="structcloop__t"/>
        <childnode refid="697" relation="public-inheritance">
        </childnode>
        <childnode refid="687" relation="usage">
          <edgelabel>body</edgelabel>
        </childnode>
      </node>
      <node id="673">
        <label>ivl_t</label>
        <link refid="structivl__t"/>
        <childnode refid="674" relation="public-inheritance">
        </childnode>
        <childnode refid="673" relation="usage">
          <edgelabel>allmem</edgelabel>
        </childnode>
      </node>
      <node id="637">
        <label>cfunc_t</label>
        <link refid="structcfunc__t"/>
        <childnode refid="638" relation="usage">
          <edgelabel>treeitems</edgelabel>
        </childnode>
        <childnode refid="639" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="686" relation="usage">
          <edgelabel>sv</edgelabel>
        </childnode>
        <childnode refid="636" relation="usage">
          <edgelabel>argidx</edgelabel>
        </childnode>
        <childnode refid="687" relation="usage">
          <edgelabel>body</edgelabel>
        </childnode>
      </node>
      <node id="682">
        <label>rangevec_t</label>
        <link refid="structrangevec__t"/>
        <childnode refid="683" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5412" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5411" bodyend="5427"/>
    <listofallmembers>
      <member refid="structctree__visitor__t_1a517e8ea89250c27082fcaccf05562536" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>apply_to</name></member>
      <member refid="structctree__visitor__t_1afbc6f6be87a1eda300bfdae95fbd10fc" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>apply_to_exprs</name></member>
      <member refid="structcfunc__parentee__t_1a723aa9a3c233c35f63ac50a0aa7a2ce8" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>calc_rvalue_type</name></member>
      <member refid="structcfunc__parentee__t_1a3de987e20bc93972d9fa771508fea5ee" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>cfunc_parentee_t</name></member>
      <member refid="structctree__visitor__t_1a4ffce52d05a95c331504000f4d4853f9" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>clr_prune</name></member>
      <member refid="structctree__visitor__t_1aedb8513d05e694551c4f9b1117176129" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>clr_restart</name></member>
      <member refid="structctree__parentee__t_1ae9e74e4e590a8f1ce0c735b802de143d" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>ctree_parentee_t</name></member>
      <member refid="structctree__visitor__t_1a3ae6712cf4d6cbe728271b50720d1d1a" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>ctree_visitor_t</name></member>
      <member refid="structctree__visitor__t_1ab9f328f14cba3408273e5312b36f6b6c" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>cv_flags</name></member>
      <member refid="structctree__visitor__t_1a2080c808900cced04d86c1ce19c2c9d6" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>DEFINE_VIRTUAL_DTOR</name></member>
      <member refid="structcfunc__parentee__t_1a4e803005d95efb20b8ff3a9e2114839b" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>func</name></member>
      <member refid="structctree__visitor__t_1a5f204e44a57e3395043ee7d5304a27b8" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>is_postorder</name></member>
      <member refid="structctree__visitor__t_1ac2eeb74a3af63b308f1854ad841433cc" prot="public" virt="virtual"><scope>cfunc_parentee_t</scope><name>leave_expr</name></member>
      <member refid="structctree__visitor__t_1ae7ecb9e327546dbf3537f085fdc52a26" prot="public" virt="virtual"><scope>cfunc_parentee_t</scope><name>leave_insn</name></member>
      <member refid="structctree__visitor__t_1a9cb5b62625be997d9d0ae05e2ba19ace" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>maintain_parents</name></member>
      <member refid="structctree__visitor__t_1a99e573446f6b036b34e69b519b72a907" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>must_prune</name></member>
      <member refid="structctree__visitor__t_1a6badab23e955cae5c687b2aeb6f0f84e" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>must_restart</name></member>
      <member refid="structctree__visitor__t_1a655d2e340fe8430a2c8f5769bdc0e375" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>only_insns</name></member>
      <member refid="structctree__visitor__t_1a859e53605be246707122950ddf772ab9" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>parent_expr</name></member>
      <member refid="structctree__visitor__t_1ac01ca10a2a426cbb58c51c26ad469b78" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>parent_insn</name></member>
      <member refid="structctree__visitor__t_1a379fa1c12dbbb0385a971fdd3a7cb75f" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>parents</name></member>
      <member refid="structctree__visitor__t_1a5dc5f0c355714910e368c90ad2e6b89e" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>prune_now</name></member>
      <member refid="structctree__parentee__t_1a5ed65a1b8f884fd5617fc6f2a4ee63ae" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>recalc_parent_types</name></member>
      <member refid="structctree__visitor__t_1a6e4110d5385bc3d7e753a5fe6eb8f629" prot="public" virt="non-virtual"><scope>cfunc_parentee_t</scope><name>set_restart</name></member>
      <member refid="structctree__visitor__t_1abe7d79b70265170a0068262ecf0426de" prot="public" virt="virtual"><scope>cfunc_parentee_t</scope><name>visit_expr</name></member>
      <member refid="structctree__visitor__t_1ab8d26a871ef07d16049741c0d6caf755" prot="public" virt="virtual"><scope>cfunc_parentee_t</scope><name>visit_insn</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
