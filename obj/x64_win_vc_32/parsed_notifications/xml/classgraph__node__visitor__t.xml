<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classgraph__node__visitor__t" kind="class" language="C++" prot="public">
    <compoundname>graph_node_visitor_t</compoundname>
    <includes refid="graph_8hpp" local="no">graph.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraph__node__visitor__t_1a8e5e1fdfa231e53c88f6fd8519b426c1" prot="private" static="no" mutable="no">
        <type><ref refid="classnode__set__t" kindref="compound">node_set_t</ref></type>
        <definition>node_set_t graph_node_visitor_t::visited</definition>
        <argsstring></argsstring>
        <name>visited</name>
        <briefdescription>
<para>set of previously visited nodes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="207" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraph__node__visitor__t_1a103c0d0eb42196dbe9613097d793081e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi graph_node_visitor_t::reinit</definition>
        <argsstring>(void)</argsstring>
        <name>reinit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset visited nodes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="210" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__node__visitor__t_1aa05a414dececee1d456b0b9c2f9617f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi graph_node_visitor_t::set_visited</definition>
        <argsstring>(int n)</argsstring>
        <name>set_visited</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Mark node as visited. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="212" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="212" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__node__visitor__t_1a95e89f30904374462437bf4d45ecdef9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi graph_node_visitor_t::is_visited</definition>
        <argsstring>(int n) const</argsstring>
        <name>is_visited</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Have we already visited the given node? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="214" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__node__visitor__t_1ae84e962ce5e94b651de870166c838539" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int idaapi</type>
        <definition>virtual int idaapi graph_node_visitor_t::visit_node</definition>
        <argsstring>(int)</argsstring>
        <name>visit_node</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Implements action to take when a node is visited. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="217" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classgraph__node__visitor__t_1a18552206d24ac166348456182cc70fae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool idaapi</type>
        <definition>virtual bool idaapi graph_node_visitor_t::is_forbidden_edge</definition>
        <argsstring>(int, int) const</argsstring>
        <name>is_forbidden_edge</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Should the edge between &apos;n&apos; and &apos;m&apos; be ignored? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="219" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="219" bodyend="219"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Node visitor - see <ref refid="classabstract__graph__t_1a57fbf665e421e950a2acc1324500398a" kindref="member">abstract_graph_t::visit_nodes()</ref> </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="206" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="205" bodyend="222"/>
    <listofallmembers>
      <member refid="classgraph__node__visitor__t_1a18552206d24ac166348456182cc70fae" prot="public" virt="virtual"><scope>graph_node_visitor_t</scope><name>is_forbidden_edge</name></member>
      <member refid="classgraph__node__visitor__t_1a95e89f30904374462437bf4d45ecdef9" prot="public" virt="non-virtual"><scope>graph_node_visitor_t</scope><name>is_visited</name></member>
      <member refid="classgraph__node__visitor__t_1a103c0d0eb42196dbe9613097d793081e" prot="public" virt="non-virtual"><scope>graph_node_visitor_t</scope><name>reinit</name></member>
      <member refid="classgraph__node__visitor__t_1aa05a414dececee1d456b0b9c2f9617f8" prot="public" virt="non-virtual"><scope>graph_node_visitor_t</scope><name>set_visited</name></member>
      <member refid="classgraph__node__visitor__t_1ae84e962ce5e94b651de870166c838539" prot="public" virt="virtual"><scope>graph_node_visitor_t</scope><name>visit_node</name></member>
      <member refid="classgraph__node__visitor__t_1a8e5e1fdfa231e53c88f6fd8519b426c1" prot="private" virt="non-virtual"><scope>graph_node_visitor_t</scope><name>visited</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
