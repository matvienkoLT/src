<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="graph_8hpp" kind="file" language="C++">
    <compoundname>graph.hpp</compoundname>
    <includes local="no">math.h</includes>
    <includes refid="pro_8h" local="no">pro.h</includes>
    <includes refid="gdl_8hpp" local="no">gdl.hpp</includes>
    <includes refid="idp_8hpp" local="no">idp.hpp</includes>
    <includes refid="kernwin_8hpp" local="no">kernwin.hpp</includes>
    <incdepgraph>
      <node id="481">
        <label>sys/stat.h</label>
      </node>
      <node id="465">
        <label>stdarg.h</label>
      </node>
      <node id="468">
        <label>assert.h</label>
      </node>
      <node id="489">
        <label>ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
      </node>
      <node id="464">
        <label>stdlib.h</label>
      </node>
      <node id="495">
        <label>ua.hpp</label>
        <link refid="ua_8hpp"/>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
      </node>
      <node id="498">
        <label>bitrange.hpp</label>
        <link refid="bitrange_8hpp"/>
      </node>
      <node id="476">
        <label>io.h</label>
      </node>
      <node id="479">
        <label>fcntl.h</label>
      </node>
      <node id="482">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="474">
        <label>malloc.h</label>
      </node>
      <node id="473">
        <label>string</label>
      </node>
      <node id="492">
        <label>idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
      </node>
      <node id="478">
        <label>map</label>
      </node>
      <node id="477">
        <label>direct.h</label>
      </node>
      <node id="466">
        <label>stddef.h</label>
      </node>
      <node id="488">
        <label>nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
      </node>
      <node id="461">
        <label>obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</label>
        <link refid="graph_8hpp"/>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
      </node>
      <node id="491">
        <label>lines.hpp</label>
        <link refid="lines_8hpp"/>
        <childnode refid="489" relation="include">
        </childnode>
      </node>
      <node id="469">
        <label>limits.h</label>
      </node>
      <node id="480">
        <label>sys/types.h</label>
      </node>
      <node id="475">
        <label>string.h</label>
      </node>
      <node id="483">
        <label>gdl.hpp</label>
        <link refid="gdl_8hpp"/>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
      </node>
      <node id="472">
        <label>new</label>
      </node>
      <node id="497">
        <label>xref.hpp</label>
        <link refid="xref_8hpp"/>
      </node>
      <node id="485">
        <label>funcs.hpp</label>
        <link refid="funcs_8hpp"/>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
      </node>
      <node id="463">
        <label>pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="482" relation="include">
        </childnode>
      </node>
      <node id="494">
        <label>segment.hpp</label>
        <link refid="segment_8hpp"/>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
      </node>
      <node id="471">
        <label>time.h</label>
      </node>
      <node id="462">
        <label>math.h</label>
      </node>
      <node id="493">
        <label>fpro.h</label>
        <link refid="fpro_8h"/>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
      </node>
      <node id="499">
        <label>config.hpp</label>
        <link refid="config_8hpp_source"/>
      </node>
      <node id="487">
        <label>bytes.hpp</label>
        <link refid="bytes_8hpp"/>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
      </node>
      <node id="470">
        <label>ctype.h</label>
      </node>
      <node id="486">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
      </node>
      <node id="490">
        <label>netnode.hpp</label>
        <link refid="netnode_8hpp"/>
        <childnode refid="486" relation="include">
        </childnode>
      </node>
      <node id="496">
        <label>kernwin.hpp</label>
        <link refid="kernwin_8hpp"/>
      </node>
      <node id="484">
        <label>set</label>
      </node>
      <node id="467">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structnode__info__t" prot="public">node_info_t</innerclass>
    <innerclass refid="classnode__ordering__t" prot="public">node_ordering_t</innerclass>
    <innerclass refid="structedge__t" prot="public">edge_t</innerclass>
    <innerclass refid="classgraph__node__visitor__t" prot="public">graph_node_visitor_t</innerclass>
    <innerclass refid="structgraph__path__visitor__t" prot="public">graph_path_visitor_t</innerclass>
    <innerclass refid="structpoint__t" prot="public">point_t</innerclass>
    <innerclass refid="classpointseq__t" prot="public">pointseq_t</innerclass>
    <innerclass refid="structrect__t" prot="public">rect_t</innerclass>
    <innerclass refid="struct_t_point_double" prot="public">TPointDouble</innerclass>
    <innerclass refid="structedge__info__t" prot="public">edge_info_t</innerclass>
    <innerclass refid="structedge__layout__point__t" prot="public">edge_layout_point_t</innerclass>
    <innerclass refid="structselection__item__t" prot="public">selection_item_t</innerclass>
    <innerclass refid="structscreen__graph__selection__t" prot="public">screen_graph_selection_t</innerclass>
    <innerclass refid="structedge__segment__t" prot="public">edge_segment_t</innerclass>
    <innerclass refid="classgraph__item__t" prot="public">graph_item_t</innerclass>
    <innerclass refid="structinterval__t" prot="public">interval_t</innerclass>
    <innerclass refid="structrow__info__t" prot="public">row_info_t</innerclass>
    <innerclass refid="classabstract__graph__t" prot="public">abstract_graph_t</innerclass>
    <innerclass refid="structedge__infos__wrapper__t" prot="public">edge_infos_wrapper_t</innerclass>
    <innerclass refid="classmutable__graph__t" prot="public">mutable_graph_t</innerclass>
    <innerclass refid="classgraph__visitor__t" prot="public">graph_visitor_t</innerclass>
    <innerclass refid="structgroup__crinfo__t" prot="public">group_crinfo_t</innerclass>
    <innerclass refid="structuser__graph__place__t" prot="public">user_graph_place_t</innerclass>
      <sectiondef kind="user-defined">
      <header>grentry</header>
      <description><para>IDA designates a function for handling graph operations (::grentry). This function accepts a notification code (<ref refid="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638a" kindref="member">graph_notification_t</ref>), along with a list of relevant arguments, and handles the action appropriately (similar to <ref refid="kernwin_8hpp_1ac113029c6eff6a6476cd787a6a59f0e8" kindref="member">callui</ref> in <ref refid="kernwin_8hpp" kindref="compound">kernwin.hpp</ref>). </para></description>
      <memberdef kind="function" id="graph_8hpp_1ac4282ba4c6e0a401200347bee2e46a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
        <definition>ssize_t grentry</definition>
        <argsstring>(graph_notification_t event_code,...)</argsstring>
        <name>grentry</name>
        <param>
          <type><ref refid="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638a" kindref="member">graph_notification_t</ref></type>
          <declname>event_code</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1211" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1211" bodyend="1218"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___n_i_f___1ga5688bdf1ebd5f56f14cea113eba3e21b" prot="public" static="no">
        <name>NIF_BG_COLOR</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
<para><ref refid="structnode__info__t_1a7caea4d93998d2198fcdc0dbb155f6ae" kindref="member">node_info_t::bg_color</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="34" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_i_f___1gaa95a59e31ba9f19fcfb95e68076d8869" prot="public" static="no">
        <name>NIF_FRAME_COLOR</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
<para><ref refid="structnode__info__t_1a20de596f26b9c470230a1aa68f25155d" kindref="member">node_info_t::frame_color</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="35" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_i_f___1gad5f596d2be80ac102de58cb502613063" prot="public" static="no">
        <name>NIF_EA</name>
        <initializer>(1 &lt;&lt; 2)</initializer>
        <briefdescription>
<para><ref refid="structnode__info__t_1a6cca7ccf2fcdf3904bd05a1319ee2d81" kindref="member">node_info_t::ea</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="36" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_i_f___1gaf0c0726b90a1a2cd196f8865a92fab56" prot="public" static="no">
        <name>NIF_TEXT</name>
        <initializer>(1 &lt;&lt; 3)</initializer>
        <briefdescription>
<para><ref refid="structnode__info__t_1a5d7c04d9d47f610a988868d8eb6eaef2" kindref="member">node_info_t::text</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="37" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_i_f___1ga0ff14bbf565c557a3c6e56f89801ff24" prot="public" static="no">
        <name>NIF_FLAGS</name>
        <initializer>(1 &lt;&lt; 4)</initializer>
        <briefdescription>
<para><ref refid="structnode__info__t_1a7bd92c36a8112663164baf83fda73646" kindref="member">node_info_t::flags</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="38" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_i_f___1ga3e7dc8bf53afa7c56cd030d6e46ea3a4" prot="public" static="no">
        <name>NIF_ALL</name>
        <initializer>(<ref refid="group___n_i_f___1ga5688bdf1ebd5f56f14cea113eba3e21b" kindref="member">NIF_BG_COLOR</ref> | <ref refid="group___n_i_f___1gaa95a59e31ba9f19fcfb95e68076d8869" kindref="member">NIF_FRAME_COLOR</ref> | <ref refid="group___n_i_f___1gad5f596d2be80ac102de58cb502613063" kindref="member">NIF_EA</ref> | <ref refid="group___n_i_f___1gaf0c0726b90a1a2cd196f8865a92fab56" kindref="member">NIF_TEXT</ref> | <ref refid="group___n_i_f___1ga0ff14bbf565c557a3c6e56f89801ff24" kindref="member">NIF_FLAGS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="39" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_l_i_c_t_l___1ga6871dac909fe5d3f028bb602f0dfceb4" prot="public" static="no">
        <name>GLICTL_CENTER</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
<para>the gli should be set/get as center </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="46" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="graph_8hpp_1a9e59a659cbdef5463db17cb486104dbe" prot="public" static="no">
        <name>NIFF_SHOW_CONTENTS</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="63" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="graph_8hpp_1a0aff50e054db5e2a540ea5aad956a4da" prot="public" static="no">
        <name>GCC_PUREVIRT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For some reason GCC insists on putting the vtable into object files, even though we only use <ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> by pointer. This looks like a linker bug. We fix it by declaring functions as pure virtual when plugins are compiled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="846" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="846" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="graph_8hpp_1a8f2686df6b1ff0b7ed3ae30e54905010" prot="public" static="no">
        <name>CHKNODEIDX</name>
        <param><defname>n</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="864" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="graph_8hpp_1adfe548f81f844eac6abcf132151f7e66" prot="public" static="no">
        <name>MTG_GROUP_NODE</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>is group node? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="894" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="894" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="graph_8hpp_1ab26e79c074f748ba910a2fd0915b4031" prot="public" static="no">
        <name>MTG_DOT_NODE</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>is dot node? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="895" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="895" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="graph_8hpp_1a6e5ffad8cbc4e592627cc1dd38cc24ca" prot="public" static="no">
        <name>MTG_NON_DISPLAYABLE_NODE</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>for disassembly graphs - non-displayable nodes have a visible area that is too large to generate disassembly lines for without IDA slowing down significantly (see MAX_VISIBLE_NODE_AREA) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="896" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="896" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="graph_8hpp_1ac58f2694a7b89587d78be4560bd6fbaf" prot="public" static="no">
        <name>COLLAPSED_NODE</name>
        <initializer>0x80000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="918" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="918" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="graph_8hpp_1ab8f88a4b8bd8582006a2759a335b428c" prot="public" static="no">
        <name>edge_type_t</name>
        <enumvalue id="graph_8hpp_1ab8f88a4b8bd8582006a2759a335b428ca4d38474e707f8b0f9cf5be188dea0f96" prot="public">
          <name>edge_error</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1ab8f88a4b8bd8582006a2759a335b428caf483f2ea188ebe1b00d967b0a0ab00ab" prot="public">
          <name>edge_tree</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1ab8f88a4b8bd8582006a2759a335b428ca57e8d6a47bef0b9a16bf8f90f67fe82b" prot="public">
          <name>edge_forward</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1ab8f88a4b8bd8582006a2759a335b428ca019174dccacefb51fb1b05a6f8a18ad1" prot="public">
          <name>edge_back</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1ab8f88a4b8bd8582006a2759a335b428cae7d8ad6418761795ee05f41fc725b1e7" prot="public">
          <name>edge_cross</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1ab8f88a4b8bd8582006a2759a335b428ca3f0c83da7fa91a389443ca01aa4954e4" prot="public">
          <name>edge_subgraph</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="191" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="190" bodyend="198"/>
      </memberdef>
      <memberdef kind="enum" id="graph_8hpp_1a78441e00b01a66782dcec75d1631ab33" prot="public" static="no">
        <name>graph_item_type_t</name>
        <enumvalue id="graph_8hpp_1a78441e00b01a66782dcec75d1631ab33a6b851d65d1eb6a6232f988645bb20b2c" prot="public">
          <name>git_none</name>
          <briefdescription>
<para>nothing </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a78441e00b01a66782dcec75d1631ab33a58605389f42ea64c64a52cc11a028773" prot="public">
          <name>git_edge</name>
          <briefdescription>
<para>edge (<ref refid="classgraph__item__t_1a7a01a1ff8fc1b5b1719c9d2fc17b3425" kindref="member">graph_item_t::e</ref>, <ref refid="classgraph__item__t_1a6b7c8ed463ff24b398403df847125a91" kindref="member">graph_item_t::n</ref>. n is farthest edge endpoint) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a78441e00b01a66782dcec75d1631ab33a9c07ae71400dee2a09d6822a23af098f" prot="public">
          <name>git_node</name>
          <briefdescription>
<para>node title (<ref refid="classgraph__item__t_1a6b7c8ed463ff24b398403df847125a91" kindref="member">graph_item_t::n</ref>) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a78441e00b01a66782dcec75d1631ab33aa690a7bdf872178adfeb9ad5044efe7f" prot="public">
          <name>git_tool</name>
          <briefdescription>
<para>node title button (<ref refid="classgraph__item__t_1a6b7c8ed463ff24b398403df847125a91" kindref="member">graph_item_t::n</ref>, <ref refid="classgraph__item__t_1a60d68bdd91863f7912600c304680d43f" kindref="member">graph_item_t::b</ref>) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a78441e00b01a66782dcec75d1631ab33a3d3e6a100b45ce4b325f4d04de681f73" prot="public">
          <name>git_text</name>
          <briefdescription>
<para>node text (<ref refid="classgraph__item__t_1a6b7c8ed463ff24b398403df847125a91" kindref="member">graph_item_t::n</ref>, <ref refid="classgraph__item__t_1a673168e0b40d4280a204b920c4d89e7f" kindref="member">graph_item_t::p</ref>) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a78441e00b01a66782dcec75d1631ab33af4ca5c75bba73f2859bb6975ed63c478" prot="public">
          <name>git_elp</name>
          <briefdescription>
<para>edge layout point (<ref refid="classgraph__item__t_1a95b79ad65544457d5f656f644a8ba72a" kindref="member">graph_item_t::elp</ref>) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>See <ref refid="classgraph__item__t" kindref="compound">graph_item_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="579" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="578" bodyend="586"/>
      </memberdef>
      <memberdef kind="enum" id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638a" prot="public" static="no">
        <name>graph_notification_t</name>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aad36b99ba27d7baa964ddd598322b9398" prot="public">
          <name>grcode_calculating_layout</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>calculating user-defined graph layout. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>not implemented </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>graph layout calculated by the plugin </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaf13bb6814b5897d196b79be2c87ee207" prot="public">
          <name>grcode_layout_calculated</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>graph layout calculated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout_succeeded</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>must return 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa2eb4fa5d6a0d492ee899b938b3652a31" prot="public">
          <name>grcode_changed_graph</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>new graph has been set. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>must return 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa8fd85af008fe022ff932e6434931d49a" prot="public">
          <name>grcode_changed_current</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>a new graph node became the current node. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gv</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>curnode</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>forbid to change the current node </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aab0229153eb4568393eabfd9b9a116a0b" prot="public">
          <name>grcode_clicked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>graph is being clicked. this callback allows you to ignore some clicks. it occurs too early, internal graph variables are not updated yet. current_item1, current_item2 point to the same thing. item2 has more information. see also: <ref refid="kernwin_8hpp_1adefb66562d8615c65b5c9fc3c69121f5" kindref="member">custom_viewer_click_t</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gv</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_item1</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structselection__item__t" kindref="compound">selection_item_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_item2</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classgraph__item__t" kindref="compound">graph_item_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ignore click </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaf4ea0b377a74cef2dc1d94feb3b7b841" prot="public">
          <name>grcode_dblclicked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>a graph node has been double clicked. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gv</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_item</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structselection__item__t" kindref="compound">selection_item_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ignore click </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa60635607b6239d1889c335f9c7e65668" prot="public">
          <name>grcode_creating_group</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>a group is being created. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" kindref="member">intvec_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>forbid group creation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa51a0c5b5c80c6661e97d914a6f66d82a" prot="public">
          <name>grcode_deleting_group</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>a group is being deleted. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>old_group</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>forbid group deletion </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa883d2c82679d39dbeb3aad504e48410e" prot="public">
          <name>grcode_group_visibility</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>a group is being collapsed/uncollapsed <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expand</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>forbid group modification </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa0e92d1b1f28d194a3b0d2f7b2bef733e" prot="public">
          <name>grcode_gotfocus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>a graph viewer got focus. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gv</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>must return 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaddfbdc3de9985ef0a4962072103ae259" prot="public">
          <name>grcode_lostfocus</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>a graph viewer lost focus. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gv</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>must return 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aae639a9dfeab12e4be5356cb012e3d90e" prot="public">
          <name>grcode_user_refresh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>refresh user-defined graph node number and edges. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaeb732f596e2bb4638efc2abd83e9d845" prot="public">
          <name>grcode_user_gentext</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>generate text for user-defined graph nodes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aabdbb8b306b0375386b3524fb9955ff4a" prot="public">
          <name>grcode_user_text</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>retrieve text for user-defined graph node. NB: do not use anything calling GDI! <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char **) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bg_color</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="pro_8h_1a3df5040891132e50157aee66affdf1de" kindref="member">bgcolor_t</ref> *) may be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success, result must be filled </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aac7b5ecfea92f9a3e20abf73b1c05273e" prot="public">
          <name>grcode_user_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>calculate node size for user-defined graph. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cx</parametername>
</parameternamelist>
<parameterdescription>
<para>(int *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cy</parametername>
</parameternamelist>
<parameterdescription>
<para>(int *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>did not calculate. ida will use node text size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>calculated. ida will add node title to the size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa9c97208f750c4def97b7e9df266d7878" prot="public">
          <name>grcode_user_title</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>render node title of a user-defined graph. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title_rect</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structrect__t" kindref="compound">rect_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title_bg_color</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dc</parametername>
</parameternamelist>
<parameterdescription>
<para>(HDC) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>did not render, ida will fill it with title_bg_color </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>rendered node title </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aabc932a427dee1d28edf8fb40f0b5dc15" prot="public">
          <name>grcode_user_draw</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>render node of a user-defined graph. NB: draw only on the specified DC and nowhere else! <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_rect</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structrect__t" kindref="compound">rect_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dc</parametername>
</parameternamelist>
<parameterdescription>
<para>(HDC) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>not rendered </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>rendered </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa81fd08d965946146a550137ce9744a46" prot="public">
          <name>grcode_user_hint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>retrieve hint for the user-defined graph. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mousenode</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mouseedge_src</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mouseedge_dst</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hint</parametername>
</parameternamelist>
<parameterdescription>
<para>(char **) must be allocated by <ref refid="pro_8h_1a2806c6575b58eb42bb0d2b96f92fc39b" kindref="member">qalloc()</ref> or <ref refid="pro_8h_1aa4750398edaf310e15c64e5ec15d7692" kindref="member">qstrdup()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>use default hint </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>use proposed hint </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aab28c8e3b20c8f3f29708fe4f75721b99" prot="public">
          <name>grcode_destroyed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>graph is being destroyed. Note that this doesn&apos;t mean the graph viewer is being destroyed; this only means that the graph that is being displayed by it is being destroyed, and that, e.g., any possibly cached data should be invalidated (this event can happen when, for example, the user decides to group nodes together: that operation will effectively create a new graph, that will replace the old one.) To be notified when the graph viewer itself is being destroyed, please see notification &apos;view_close&apos;, in <ref refid="kernwin_8hpp" kindref="compound">kernwin.hpp</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>must return 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa956485c89297869472b3b28d120c4858" prot="public">
          <name>grcode_create_graph_viewer</name>
          <initializer>= 256</initializer>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a2f8cf4d675de4aae5fbc3f57ba47d5c4" kindref="member">create_graph_viewer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aab6cf7c81341b36f8351d48ffa7aac5c5" prot="public">
          <name>grcode_get_graph_viewer</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a33c94d1876246325b00d36ae1fea9fde" kindref="member">get_graph_viewer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aade2ae84139031d995874460ac4cf8b7f" prot="public">
          <name>grcode_get_viewer_graph</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a4e7070a663be797bb8ff1484ecdfa4ad" kindref="member">get_viewer_graph()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aae422b9ee30d600557cea64f868ead9a8" prot="public">
          <name>grcode_create_mutable_graph</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a5df0773b00208be3aa316bfffaa98f63" kindref="member">create_mutable_graph()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa9f66706bf9a64839614bf71a896d05e5" prot="public">
          <name>grcode_set_viewer_graph</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a004fa6de6d0ea9e2711b927a7311a911" kindref="member">set_viewer_graph()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aae8af1ea7a27fb7d353ae237affdfc9f4" prot="public">
          <name>grcode_refresh_viewer</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a10b7bfe95168e7494ea83a6d4751506b" kindref="member">refresh_viewer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa7e39ca699aff4382d4336e3eee58ccc5" prot="public">
          <name>grcode_fit_window</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1af551efa22ddaba173ac7cc6d74c5a83a" kindref="member">viewer_fit_window()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaa507b189d29455a48af2b5eeb3361377" prot="public">
          <name>grcode_get_curnode</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a53371375deb94eec55451b075b7aec59" kindref="member">viewer_get_curnode()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa17b886a0555e7003fbd00a07c32697be" prot="public">
          <name>grcode_center_on</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1aa6dd9196b877d8c6bfd05768806f4bed" kindref="member">viewer_center_on()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa06bce51de7effa90510d0d3aaf12bbe5" prot="public">
          <name>grcode_get_selection</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1aa34280672acc8d7822b4ce828ee08961" kindref="member">viewer_get_selection()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa0411682229848403af716e6b8ac925c3" prot="public">
          <name>grcode_del_custom_layout</name>
          <briefdescription>
<para>use mutable_graph_t::del_custom_layout() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aab1d19f5de48b88954ff80cb7832be5a5" prot="public">
          <name>grcode_set_custom_layout</name>
          <briefdescription>
<para>use mutable_graph_t::set_custom_layout() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aad0192a5561a99c862f2f31ed4f640605" prot="public">
          <name>grcode_set_graph_groups</name>
          <briefdescription>
<para>use mutable_graph_t::set_graph_groups() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaf794f84f37d0a306f06fe069feffec5e" prot="public">
          <name>grcode_clear</name>
          <briefdescription>
<para>use mutable_graph_t::clear() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa43a3a2b906dfa99b2ee559b18577a2a1" prot="public">
          <name>grcode_create_digraph_layout</name>
          <briefdescription>
<para>use mutable_graph_t::create_digraph_layout() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa7faf6e4fe1bdd0422fb211c247044409" prot="public">
          <name>grcode_create_tree_layout</name>
          <briefdescription>
<para>use abstract_graph_t::create_tree_layout() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aae53811ecb22842925633ce7f80361815" prot="public">
          <name>grcode_create_circle_layout</name>
          <briefdescription>
<para>use abstract_graph_t::create_circle_layout() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa7a792f60cf520584c4103d005925be9b" prot="public">
          <name>grcode_get_node_representative</name>
          <briefdescription>
<para>use mutable_graph_t::get_node_representative() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa9299d3333c96f34981e48eb5d4f0c565" prot="public">
          <name>grcode_find_subgraph_node</name>
          <briefdescription>
<para>use mutable_graph_t::_find_subgraph_node() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa623a85ef7b565e6d01e1700e13f14084" prot="public">
          <name>grcode_create_group</name>
          <briefdescription>
<para>use mutable_graph_t::create_group() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa7c6ab713429ab0c5308bcc88c7ba6320" prot="public">
          <name>grcode_get_custom_layout</name>
          <briefdescription>
<para>use mutable_graph_t::get_custom_layout() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa1461be5b9356a7baf3f92a5129716c38" prot="public">
          <name>grcode_get_graph_groups</name>
          <briefdescription>
<para>use mutable_graph_t::get_graph_groups() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa9aa04e76f072683a6897f226d5ba95fc" prot="public">
          <name>grcode_empty</name>
          <briefdescription>
<para>use mutable_graph_t::empty() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa2692c3c18dd1615ffe7571b96395f010" prot="public">
          <name>grcode_is_visible_node</name>
          <briefdescription>
<para>use mutable_graph_t::is_visible_node() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa55354f94ce6447fc306bf1cf48c21ae4" prot="public">
          <name>grcode_delete_group</name>
          <briefdescription>
<para>use mutable_graph_t::delete_group() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa20946c19eddd8dc4c6773963d7c92003" prot="public">
          <name>grcode_change_group_visibility</name>
          <briefdescription>
<para>use mutable_graph_t::change_group_visibility() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa810172a408935102147fce75679c98d3" prot="public">
          <name>grcode_set_edge</name>
          <briefdescription>
<para>use mutable_graph_t::set_edge() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaf1cf159e40157b5ab1f41557ec3e413f" prot="public">
          <name>grcode_node_qty</name>
          <briefdescription>
<para>use mutable_graph_t::node_qty() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa0a1ec088da01de19b2a8b6ed9e03de0f" prot="public">
          <name>grcode_nrect</name>
          <briefdescription>
<para>use mutable_graph_t::nrect() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaaa5518609f9cd4f2a84e5880be31f587" prot="public">
          <name>grcode_set_titlebar_height</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a73957876803ab3946feee2ef6f086f35" kindref="member">viewer_set_titlebar_height()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa4365a5731a2630a13bf38a23895fa10d" prot="public">
          <name>grcode_create_user_graph_place</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a0dad3f8415c4b64d4468ae8e7f59dbf6" kindref="member">create_user_graph_place()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa17b58091aa7adba4b9346f48a8718138" prot="public">
          <name>grcode_create_disasm_graph1</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a1bbf69747b1dad8589620d7f69d719bb" kindref="member">create_disasm_graph(ea_t ea)</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa0a1f072563948546a787ca8b202f60e2" prot="public">
          <name>grcode_create_disasm_graph2</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1aefabfff7ea927bb442d4bfb80f3eb8d8" kindref="member">create_disasm_graph(const rangevec_t &amp;ranges)</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aae3e76a856b8b484370e8b89ca7edf44c" prot="public">
          <name>grcode_set_node_info</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a9e2134d0c20f221f721ee4954763c419" kindref="member">viewer_set_node_info()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaffce36086a29a7617b699a855e1632f4" prot="public">
          <name>grcode_get_node_info</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a6fd5e32edbc03622acb9e6173c21278f" kindref="member">viewer_get_node_info()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaf04ed1502aafd18b6ae9ca0ba480d046" prot="public">
          <name>grcode_del_node_info</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1aec726c555b2e3ff7ffc3fa6388e1ab18" kindref="member">viewer_del_node_info()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa0492ef3a391d15f0a9c5a6dcabfd3d67" prot="public">
          <name>grcode_viewer_create_groups</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aac8323fd60d7e729f7b6d6829cd250f64" prot="public">
          <name>grcode_viewer_delete_groups</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa740fcd149372f8efa6b3e40d936ffb68" prot="public">
          <name>grcode_viewer_groups_visibility</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa8db18a64b96464c7e70cc88c6ed36c22" prot="public">
          <name>grcode_viewer_create_groups_vec</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a7b6b4dbf2a1d9d2200152ef7957f0896" kindref="member">viewer_create_groups()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa01291468440b16854ce0a9b8d00c9271" prot="public">
          <name>grcode_viewer_delete_groups_vec</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a2ce86735da8bd32f757144dee5ce042e" kindref="member">viewer_delete_groups()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa0b1bb18d72fba96158f705c461ee7887" prot="public">
          <name>grcode_viewer_groups_visibility_vec</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a33ccbc2cc7d0a5eabdc2f3314cfd7301" kindref="member">viewer_set_groups_visibility()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa4e193bca5a7d47569591d1cb5534c557" prot="public">
          <name>grcode_delete_mutable_graph</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a1f3337111f08d4a141ee4058c2b9dc90" kindref="member">delete_mutable_graph()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaffacf5496274fd8dd0e46d053bc2207b" prot="public">
          <name>grcode_edge_infos_wrapper_copy</name>
          <briefdescription>
<para>use edge_infos_wrapper_t::operator=() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aacc36cc019058b98c6d3bf515a0c77616" prot="public">
          <name>grcode_edge_infos_wrapper_clear</name>
          <briefdescription>
<para>use edge_infos_wrapper_t::clear() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa5468df7d19e89ea68c050868c9e3f274" prot="public">
          <name>grcode_attach_menu_item</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aa8546ef25bf04ec4f1cddc725d0ca9a56" prot="public">
          <name>grcode_set_gli</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a4734bb396ceb5fe074a4fb962c7da31e" kindref="member">viewer_set_gli()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaf4062f164aafd0ae8967674c179cfec1" prot="public">
          <name>grcode_get_gli</name>
          <briefdescription>
<para>use <ref refid="graph_8hpp_1a5db5120b806800f2e9cab9ccb211fb45" kindref="member">viewer_get_gli()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Graph notification codes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1001" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1000" bodyend="1198"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="graph_8hpp_1a82af93bb7b5138045e9db058f4b9cab9" prot="public" static="no">
        <type>ea_t</type>
        <definition>typedef ea_t graph_id_t</definition>
        <argsstring></argsstring>
        <name>graph_id_t</name>
        <briefdescription>
<para>Graph instances have a unique id (see <ref refid="classmutable__graph__t_1ace192a1557464e0ce725a58f309dec00" kindref="member">mutable_graph_t::gid</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="98" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graph_8hpp_1a26a3afa7e647348ae4180e4ec3420ce6" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structedge__t" kindref="compound">edge_t</ref> &gt;</type>
        <definition>typedef qvector&lt;edge_t&gt; edgevec_t</definition>
        <argsstring></argsstring>
        <name>edgevec_t</name>
        <briefdescription>
<para>vector of graph edges </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="184" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graph_8hpp_1aef0f08c6c853f0cd2bdefedcef796b55" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structpoint__t" kindref="compound">point_t</ref> &gt;</type>
        <definition>typedef qvector&lt;point_t&gt; pointvec_t</definition>
        <argsstring></argsstring>
        <name>pointvec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="277" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graph_8hpp_1a5b8e7dd25431c0cf4ca4709239f2e65f" prot="public" static="no">
        <type>int</type>
        <definition>typedef int layout_type_t</definition>
        <argsstring></argsstring>
        <name>layout_type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>see <ref refid="group__layout__" kindref="compound">Proximity view layouts</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="434" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graph_8hpp_1aad0d514605345a6a88e930c152ce48ff" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structrow__info__t" kindref="compound">row_info_t</ref> &gt;</type>
        <definition>typedef qvector&lt;row_info_t&gt; graph_row_info_t</definition>
        <argsstring></argsstring>
        <name>graph_row_info_t</name>
        <briefdescription>
<para>vector of row infos </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="655" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graph_8hpp_1a5091daf84ed39cacccaeee148a8c9a67" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structgroup__crinfo__t" kindref="compound">group_crinfo_t</ref> &gt;</type>
        <definition>typedef qvector&lt;group_crinfo_t&gt; groups_crinfos_t</definition>
        <argsstring></argsstring>
        <name>groups_crinfos_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1229" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" prot="public" static="no">
        <type>TWidget</type>
        <definition>typedef TWidget graph_viewer_t</definition>
        <argsstring></argsstring>
        <name>graph_viewer_t</name>
        <briefdescription>
<para>graph view opaque structure </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1233" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1233" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__layout___1gacec193bb7928fa8315c4158f6e8f3a8b" prot="public" static="no" mutable="no">
        <type>const <ref refid="graph_8hpp_1a5b8e7dd25431c0cf4ca4709239f2e65f" kindref="member">layout_type_t</ref></type>
        <definition>const layout_type_t layout_none</definition>
        <argsstring></argsstring>
        <name>layout_none</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="438" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__layout___1ga05c1558204716d74b4aa6120dcf6b7e0" prot="public" static="no" mutable="no">
        <type>const <ref refid="graph_8hpp_1a5b8e7dd25431c0cf4ca4709239f2e65f" kindref="member">layout_type_t</ref></type>
        <definition>const layout_type_t layout_digraph</definition>
        <argsstring></argsstring>
        <name>layout_digraph</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="439" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__layout___1ga34e479072f60f0554ec0dbc208b15b8f" prot="public" static="no" mutable="no">
        <type>const <ref refid="graph_8hpp_1a5b8e7dd25431c0cf4ca4709239f2e65f" kindref="member">layout_type_t</ref></type>
        <definition>const layout_type_t layout_tree</definition>
        <argsstring></argsstring>
        <name>layout_tree</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="440" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__layout___1gafb394099b487dcda59c508630e6362b6" prot="public" static="no" mutable="no">
        <type>const <ref refid="graph_8hpp_1a5b8e7dd25431c0cf4ca4709239f2e65f" kindref="member">layout_type_t</ref></type>
        <definition>const layout_type_t layout_circle</definition>
        <argsstring></argsstring>
        <name>layout_circle</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="441" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__layout___1gac808aefbae40a2d18fd34086465faa7e" prot="public" static="no" mutable="no">
        <type>const <ref refid="graph_8hpp_1a5b8e7dd25431c0cf4ca4709239f2e65f" kindref="member">layout_type_t</ref></type>
        <definition>const layout_type_t layout_polar_tree</definition>
        <argsstring></argsstring>
        <name>layout_polar_tree</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="442" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__layout___1ga4f9fc4b98cf9121c80b8a6c4a38c0937" prot="public" static="no" mutable="no">
        <type>const <ref refid="graph_8hpp_1a5b8e7dd25431c0cf4ca4709239f2e65f" kindref="member">layout_type_t</ref></type>
        <definition>const layout_type_t layout_orthogonal</definition>
        <argsstring></argsstring>
        <name>layout_orthogonal</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="443" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__layout___1gac3adfd94d7e49e686b06551a75e99f30" prot="public" static="no" mutable="no">
        <type>const <ref refid="graph_8hpp_1a5b8e7dd25431c0cf4ca4709239f2e65f" kindref="member">layout_type_t</ref></type>
        <definition>const layout_type_t layout_radial_tree</definition>
        <argsstring></argsstring>
        <name>layout_radial_tree</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="444" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graph_8hpp_1af3bcb48a9006c0efa864314623f8996c" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int ygap</definition>
        <argsstring></argsstring>
        <name>ygap</name>
        <initializer>= 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="657" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graph_8hpp_1ad1e6941ccc4330d2ae4e89c6d1dfa059" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int xgap</definition>
        <argsstring></argsstring>
        <name>xgap</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="658" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graph_8hpp_1a8ba106c537d4d2d5b619fa59dcc3e875" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int arrow_height</definition>
        <argsstring></argsstring>
        <name>arrow_height</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="659" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graph_8hpp_1a49d0041f535396bc137f479d6945dba2" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int arrow_width</definition>
        <argsstring></argsstring>
        <name>arrow_width</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="660" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="660" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="graph_8hpp_1a9180cd747740ca2f55b61fff3359dca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export get_node_info</definition>
        <argsstring>(node_info_t *out, graph_id_t gid, int node)</argsstring>
        <name>get_node_info</name>
        <param>
          <type><ref refid="structnode__info__t" kindref="compound">node_info_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="graph_8hpp_1a82af93bb7b5138045e9db058f4b9cab9" kindref="member">graph_id_t</ref></type>
          <declname>gid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get node info. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gid</parametername>
</parameternamelist>
<parameterdescription>
<para>id of desired graph </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>node number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a9a33b3a1d3c9a37011d8d56dbd1fdeca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export set_node_info</definition>
        <argsstring>(graph_id_t gid, int node, const node_info_t &amp;ni, uint32 flags)</argsstring>
        <name>set_node_info</name>
        <param>
          <type><ref refid="graph_8hpp_1a82af93bb7b5138045e9db058f4b9cab9" kindref="member">graph_id_t</ref></type>
          <declname>gid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const <ref refid="structnode__info__t" kindref="compound">node_info_t</ref> &amp;</type>
          <declname>ni</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set node info. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gid</parametername>
</parameternamelist>
<parameterdescription>
<para>id of desired graph </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>node number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ni</parametername>
</parameternamelist>
<parameterdescription>
<para>node info to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>combination of <ref refid="group___n_i_f__" kindref="compound">Node info flags</ref>, identifying which fields of &apos;ni&apos; will be used </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a7a683b8ccf7d4f98ba51950f99f915fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export del_node_info</definition>
        <argsstring>(graph_id_t gid, int node)</argsstring>
        <name>del_node_info</name>
        <param>
          <type><ref refid="graph_8hpp_1a82af93bb7b5138045e9db058f4b9cab9" kindref="member">graph_id_t</ref></type>
          <declname>gid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Delete the <ref refid="structnode__info__t" kindref="compound">node_info_t</ref> for the given node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a8897ac8378084bd06bc992f2a8d81a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export clr_node_info</definition>
        <argsstring>(graph_id_t gid, int node, uint32 flags)</argsstring>
        <name>clr_node_info</name>
        <param>
          <type><ref refid="graph_8hpp_1a82af93bb7b5138045e9db058f4b9cab9" kindref="member">graph_id_t</ref></type>
          <declname>gid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear node info for the given node. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gid</parametername>
</parameternamelist>
<parameterdescription>
<para>id of desired graph </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>node number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>combination of <ref refid="group___n_i_f__" kindref="compound">Node info flags</ref>, identifying which fields of <ref refid="structnode__info__t" kindref="compound">node_info_t</ref> will be cleared </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a79f0d7ec3a8c3fa075c0010f25861ad9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> double</type>
        <definition>THREAD_SAFE double calc_dist</definition>
        <argsstring>(point_t p, point_t q)</argsstring>
        <name>calc_dist</name>
        <param>
          <type><ref refid="structpoint__t" kindref="compound">point_t</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structpoint__t" kindref="compound">point_t</ref></type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Calculate distance between p and q. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="280" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="280" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a2f8cf4d675de4aae5fbc3f57ba47d5c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *idaapi</type>
        <definition>graph_viewer_t* idaapi create_graph_viewer</definition>
        <argsstring>(const char *title, uval_t id, hook_cb_t *callback, void *ud, int title_height, TWidget *parent=NULL)</argsstring>
        <name>create_graph_viewer</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="ida_8hpp_1acf012fe005690e1af26e799617fc98b7" kindref="member">hook_cb_t</ref> *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <param>
          <type>int</type>
          <declname>title_height</declname>
        </param>
        <param>
          <type>TWidget *</type>
          <declname>parent</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a custom graph viewer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the widget title </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>graph id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback to handle graph notifications (<ref refid="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638a" kindref="member">graph_notification_t</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>user data passed to callback </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title_height</parametername>
</parameternamelist>
<parameterdescription>
<para>node title height </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new viewer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1245" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1245" bodyend="1256"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a33c94d1876246325b00d36ae1fea9fde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *idaapi</type>
        <definition>graph_viewer_t* idaapi get_graph_viewer</definition>
        <argsstring>(TWidget *parent)</argsstring>
        <name>get_graph_viewer</name>
        <param>
          <type>TWidget *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
<para>Get custom graph viewer for given form. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1261" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1261" bodyend="1261"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a5df0773b00208be3aa316bfffaa98f63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *idaapi</type>
        <definition>mutable_graph_t* idaapi create_mutable_graph</definition>
        <argsstring>(uval_t id)</argsstring>
        <name>create_mutable_graph</name>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Create a new empty graph with given id. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1266" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1266" bodyend="1266"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a1bbf69747b1dad8589620d7f69d719bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *idaapi</type>
        <definition>mutable_graph_t* idaapi create_disasm_graph</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>create_disasm_graph</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Create a graph for the function that contains &apos;ea&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1271" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1271" bodyend="1271"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1aefabfff7ea927bb442d4bfb80f3eb8d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *idaapi</type>
        <definition>mutable_graph_t* idaapi create_disasm_graph</definition>
        <argsstring>(const rangevec_t &amp;ranges)</argsstring>
        <name>create_disasm_graph</name>
        <param>
          <type>const <ref refid="structrangevec__t" kindref="compound">rangevec_t</ref> &amp;</type>
          <declname>ranges</declname>
        </param>
        <briefdescription>
<para>Create a graph using an arbitrary set of ranges. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1276" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1276" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a4e7070a663be797bb8ff1484ecdfa4ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *idaapi</type>
        <definition>mutable_graph_t* idaapi get_viewer_graph</definition>
        <argsstring>(graph_viewer_t *gv)</argsstring>
        <name>get_viewer_graph</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <briefdescription>
<para>Get graph object for given custom graph viewer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1281" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1281" bodyend="1281"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a004fa6de6d0ea9e2711b927a7311a911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi set_viewer_graph</definition>
        <argsstring>(graph_viewer_t *gv, mutable_graph_t *g)</argsstring>
        <name>set_viewer_graph</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type><ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Set the underlying graph object for the given viewer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1286" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1286" bodyend="1286"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a10b7bfe95168e7494ea83a6d4751506b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi refresh_viewer</definition>
        <argsstring>(graph_viewer_t *gv)</argsstring>
        <name>refresh_viewer</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <briefdescription>
<para>Redraw the graph in the given view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1291" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1291" bodyend="1291"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1af551efa22ddaba173ac7cc6d74c5a83a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi viewer_fit_window</definition>
        <argsstring>(graph_viewer_t *gv)</argsstring>
        <name>viewer_fit_window</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <briefdescription>
<para>Fit graph viewer to its parent form. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1296" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1296" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a53371375deb94eec55451b075b7aec59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int idaapi</type>
        <definition>int idaapi viewer_get_curnode</definition>
        <argsstring>(graph_viewer_t *gv)</argsstring>
        <name>viewer_get_curnode</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <briefdescription>
<para>Get number of currently selected node (-1 if none) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1301" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1301" bodyend="1301"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1aa6dd9196b877d8c6bfd05768806f4bed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi viewer_center_on</definition>
        <argsstring>(graph_viewer_t *gv, int node)</argsstring>
        <name>viewer_center_on</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Center the graph view on the given node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1306" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1306" bodyend="1306"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a4734bb396ceb5fe074a4fb962c7da31e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi viewer_set_gli</definition>
        <argsstring>(graph_viewer_t *gv, const graph_location_info_t *gli, uint32 flags=0)</argsstring>
        <name>viewer_set_gli</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type>const <ref refid="structgraph__location__info__t" kindref="compound">graph_location_info_t</ref> *</type>
          <declname>gli</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set location info for given graph view If flags contains GLICTL_CENTER, then the gli will be set to be the center of the view. Otherwise it will be the top-left. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1312" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1312" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a5db5120b806800f2e9cab9ccb211fb45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi viewer_get_gli</definition>
        <argsstring>(graph_location_info_t *out, graph_viewer_t *gv, uint32 flags=0)</argsstring>
        <name>viewer_get_gli</name>
        <param>
          <type><ref refid="structgraph__location__info__t" kindref="compound">graph_location_info_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get location info for given graph view If flags contains GLICTL_CENTER, then the gli that will be retrieved, will be the one at the center of the view. Otherwise it will be the top-left. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1325" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1325" bodyend="1331"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a9e2134d0c20f221f721ee4954763c419" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi viewer_set_node_info</definition>
        <argsstring>(graph_viewer_t *gv, int n, const node_info_t &amp;ni, uint32 flags)</argsstring>
        <name>viewer_set_node_info</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="structnode__info__t" kindref="compound">node_info_t</ref> &amp;</type>
          <declname>ni</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Set node info for node in given viewer (see <ref refid="graph_8hpp_1a9a33b3a1d3c9a37011d8d56dbd1fdeca" kindref="member">set_node_info()</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1336" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1336" bodyend="1343"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a6fd5e32edbc03622acb9e6173c21278f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi viewer_get_node_info</definition>
        <argsstring>(graph_viewer_t *gv, node_info_t *out, int n)</argsstring>
        <name>viewer_get_node_info</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type><ref refid="structnode__info__t" kindref="compound">node_info_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get node info for node in given viewer (see <ref refid="graph_8hpp_1a9180cd747740ca2f55b61fff3359dca6" kindref="member">get_node_info()</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1348" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1348" bodyend="1354"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1aec726c555b2e3ff7ffc3fa6388e1ab18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi viewer_del_node_info</definition>
        <argsstring>(graph_viewer_t *gv, int n)</argsstring>
        <name>viewer_del_node_info</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Delete node info for node in given viewer (see <ref refid="graph_8hpp_1a7a683b8ccf7d4f98ba51950f99f915fd" kindref="member">del_node_info()</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1359" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1359" bodyend="1362"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a7b6b4dbf2a1d9d2200152ef7957f0896" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi viewer_create_groups</definition>
        <argsstring>(graph_viewer_t *gv, intvec_t *out_group_nodes, const groups_crinfos_t &amp;gi)</argsstring>
        <name>viewer_create_groups</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" kindref="member">intvec_t</ref> *</type>
          <declname>out_group_nodes</declname>
        </param>
        <param>
          <type>const <ref refid="classqvector" kindref="compound">groups_crinfos_t</ref> &amp;</type>
          <declname>gi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will perform an operation similar to what happens when a user manually selects a set of nodes, right-clicks and selects &quot;Create group&quot;. This is a wrapper around mutable_graph_t::create_group that will, in essence:<itemizedlist>
<listitem><para>clone the current graph</para></listitem><listitem><para>for each <ref refid="structgroup__crinfo__t" kindref="compound">group_crinfo_t</ref>, attempt creating group in that new graph</para></listitem><listitem><para>if all were successful, animate to that new graph. <simplesect kind="note"><para>this accepts parameters that allow creating of multiple groups at once; which means only one graph animation will be triggered. </para></simplesect>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1376" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1376" bodyend="1382"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a2ce86735da8bd32f757144dee5ce042e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi viewer_delete_groups</definition>
        <argsstring>(graph_viewer_t *gv, const intvec_t &amp;groups, int new_current=-1)</argsstring>
        <name>viewer_delete_groups</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" kindref="member">intvec_t</ref> &amp;</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_current</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wrapper around mutable_graph_t::delete_group. This function will:<itemizedlist>
<listitem><para>clone the current graph</para></listitem><listitem><para>attempt deleting the groups in that new graph</para></listitem><listitem><para>if successful, animate to that new graph. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1391" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1391" bodyend="1397"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a33ccbc2cc7d0a5eabdc2f3314cfd7301" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi viewer_set_groups_visibility</definition>
        <argsstring>(graph_viewer_t *gv, const intvec_t &amp;groups, bool expand, int new_current=-1)</argsstring>
        <name>viewer_set_groups_visibility</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" kindref="member">intvec_t</ref> &amp;</type>
          <declname>groups</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>expand</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_current</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wrapper around mutable_graph_t::change_visibility. This function will:<itemizedlist>
<listitem><para>clone the current graph</para></listitem><listitem><para>attempt changing visibility of the groups in that new graph</para></listitem><listitem><para>if successful, animate to that new graph. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1406" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1406" bodyend="1414"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a562129a8e29bdf9d9462027a22a725ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi viewer_attach_menu_item</definition>
        <argsstring>(graph_viewer_t *g, const char *name)</argsstring>
        <name>viewer_attach_menu_item</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Attach a previously-registered action to the view&apos;s context menu. See <ref refid="kernwin_8hpp" kindref="compound">kernwin.hpp</ref> for how to register actions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1422" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1422" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1aa34280672acc8d7822b4ce828ee08961" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi viewer_get_selection</definition>
        <argsstring>(graph_viewer_t *gv, screen_graph_selection_t *sgs)</argsstring>
        <name>viewer_get_selection</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type><ref refid="structscreen__graph__selection__t" kindref="compound">screen_graph_selection_t</ref> *</type>
          <declname>sgs</declname>
        </param>
        <briefdescription>
<para>Get currently selected items for graph viewer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1430" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1430" bodyend="1435"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a73957876803ab3946feee2ef6f086f35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int idaapi</type>
        <definition>int idaapi viewer_set_titlebar_height</definition>
        <argsstring>(graph_viewer_t *gv, int height)</argsstring>
        <name>viewer_set_titlebar_height</name>
        <param>
          <type><ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref> *</type>
          <declname>gv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Set height of node title bars (<ref refid="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638aaaa5518609f9cd4f2a84e5880be31f587" kindref="member">grcode_set_titlebar_height</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1440" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1440" bodyend="1443"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a1f3337111f08d4a141ee4058c2b9dc90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi delete_mutable_graph</definition>
        <argsstring>(mutable_graph_t *g)</argsstring>
        <name>delete_mutable_graph</name>
        <param>
          <type><ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete graph object. <simplesect kind="warning"><para>use this only if you are dealing with <ref refid="classmutable__graph__t" kindref="compound">mutable_graph_t</ref> instances that have not been used together with a <ref refid="graph_8hpp_1a6a4e00bdf5d8ad6ff4a8930ba922b067" kindref="member">graph_viewer_t</ref>. If you have called <ref refid="graph_8hpp_1a004fa6de6d0ea9e2711b927a7311a911" kindref="member">set_viewer_graph()</ref> with your graph, the graph&apos;s lifecycle will be managed by the viewer, and you shouldn&apos;t interfere with it </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1453" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1453" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a0dad3f8415c4b64d4468ae8e7f59dbf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__graph__place__t" kindref="compound">user_graph_place_t</ref> *</type>
        <definition>user_graph_place_t* create_user_graph_place</definition>
        <argsstring>(int node, int lnnum)</argsstring>
        <name>create_user_graph_place</name>
        <param>
          <type>int</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lnnum</declname>
        </param>
        <briefdescription>
<para>Get a copy of a <ref refid="structuser__graph__place__t" kindref="compound">user_graph_place_t</ref> (returns a pointer to static storage) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" line="1502" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp" bodystart="1502" bodyend="1502"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Graph view management. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/graph.hpp"/>
  </compounddef>
</doxygen>
