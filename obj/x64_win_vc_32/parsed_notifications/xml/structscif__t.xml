<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structscif__t" kind="struct" language="C++" prot="public">
    <compoundname>scif_t</compoundname>
    <basecompoundref refid="classvdloc__t" prot="public" virt="non-virtual">vdloc_t</basecompoundref>
    <includes refid="hexrays_8hpp" local="no">hexrays.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structscif__t_1a00eb3f13dfb3eb695cf3e649fed29ccf" prot="public" static="no" mutable="no">
        <type><ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *</type>
        <definition>mbl_array_t* scif_t::mba</definition>
        <argsstring></argsstring>
        <name>mba</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the parent <ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> object. Some operations may convert a scattered operand into something simpler, (a stack operand, for example). We will need to create <ref refid="structstkvar__ref__t" kindref="compound">stkvar_ref_t</ref> at that moment, this is why we need this pointer. See notes for <ref refid="structlvar__ref__t_1a479c3683633430bbd38a57fbb82d4c24" kindref="member">lvar_ref_t::mba</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2174" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structscif__t_1ad14ceb3ded29dc0862aa2714e413812f" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref></type>
        <definition>qstring scif_t::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Usually scattered operands are created from a function prototype, which has the name information. We preserve it and use it to name the corresponding local variable. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2179" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structscif__t_1a68a11e7c3f8b2c8a65d34b10eb941312" prot="public" static="no" mutable="no">
        <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref></type>
        <definition>tinfo_t scif_t::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scattered operands always have type info assigned to them because without it we won&apos;t be able to manipulte them. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2183" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structscif__t_1a5eee493d11f5ba52089bb2d457aa55fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>scif_t::scif_t</definition>
        <argsstring>(mbl_array_t *_mba, qstring *n, tinfo_t *tif)</argsstring>
        <name>scif_t</name>
        <param>
          <type><ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *</type>
          <declname>_mba</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *</type>
          <declname>tif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2185" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2185" bodyend="2189"/>
      </memberdef>
      <memberdef kind="function" id="structscif__t_1a3532847cf8827a6702dc56bb21aca7a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structscif__t" kindref="compound">scif_t</ref> &amp;</type>
        <definition>scif_t&amp; scif_t::operator=</definition>
        <argsstring>(const vdloc_t &amp;loc)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classvdloc__t" kindref="compound">vdloc_t</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2190" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2190" bodyend="2194"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Scattered operand info. Used for mop_sc. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3205">
        <label>scif_t</label>
        <link refid="structscif__t"/>
        <childnode refid="3206" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3206">
        <label>vdloc_t</label>
        <link refid="classvdloc__t"/>
        <childnode refid="3207" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3207">
        <label>argloc_t</label>
        <link refid="classargloc__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3243">
        <label>ivl_tpl&lt; uval_t &gt;</label>
        <link refid="structivl__tpl"/>
      </node>
      <node id="3223">
        <label>bitset_t</label>
        <link refid="classbitset__t"/>
      </node>
      <node id="3221">
        <label>mlist_t</label>
        <link refid="structmlist__t"/>
        <childnode refid="3218" relation="usage">
          <edgelabel>mem</edgelabel>
        </childnode>
        <childnode refid="3222" relation="usage">
          <edgelabel>reg</edgelabel>
        </childnode>
      </node>
      <node id="3241">
        <label>ivl_with_name_t</label>
        <link refid="structivl__with__name__t"/>
        <childnode refid="3242" relation="usage">
          <edgelabel>ivl</edgelabel>
        </childnode>
      </node>
      <node id="3234">
        <label>tinfo_t</label>
        <link refid="classtinfo__t"/>
      </node>
      <node id="3230">
        <label>mop_addr_t</label>
        <link refid="classmop__addr__t"/>
        <childnode refid="3228" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3253">
        <label>netnode</label>
        <link refid="classnetnode"/>
      </node>
      <node id="3235">
        <label>qvector&lt; mop_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3218">
        <label>ivlset_t</label>
        <link refid="structivlset__t"/>
        <childnode refid="3219" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3226">
        <label>mblock_t</label>
        <link refid="classmblock__t"/>
        <childnode refid="3214" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="3221" relation="usage">
          <edgelabel>maybuse</edgelabel>
          <edgelabel>dnu</edgelabel>
          <edgelabel>maybdef</edgelabel>
          <edgelabel>mustbuse</edgelabel>
          <edgelabel>mustbdef</edgelabel>
          <edgelabel>dead_at_start</edgelabel>
        </childnode>
        <childnode refid="3224" relation="usage">
          <edgelabel>succset</edgelabel>
          <edgelabel>predset</edgelabel>
        </childnode>
        <childnode refid="3227" relation="usage">
          <edgelabel>head</edgelabel>
          <edgelabel>tail</edgelabel>
        </childnode>
        <childnode refid="3226" relation="usage">
          <edgelabel>nextb</edgelabel>
          <edgelabel>prevb</edgelabel>
        </childnode>
      </node>
      <node id="3252">
        <label>rangevec_base_t</label>
        <link refid="classqvector"/>
      </node>
      <node id="3238">
        <label>operand_locator_t</label>
        <link refid="structoperand__locator__t"/>
      </node>
      <node id="3220">
        <label>qvector&lt; ivl_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3239">
        <label>mcases_t</label>
        <link refid="classmcases__t"/>
        <childnode refid="3224" relation="usage">
          <edgelabel>targets</edgelabel>
        </childnode>
      </node>
      <node id="3233">
        <label>qvector&lt; mcallarg_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3245">
        <label>func_t</label>
        <link refid="classfunc__t"/>
        <childnode refid="3246" relation="public-inheritance">
        </childnode>
        <childnode refid="3247" relation="usage">
          <edgelabel>regargs</edgelabel>
        </childnode>
        <childnode refid="3248" relation="usage">
          <edgelabel>points</edgelabel>
        </childnode>
        <childnode refid="3246" relation="usage">
          <edgelabel>tails</edgelabel>
        </childnode>
        <childnode refid="3249" relation="usage">
          <edgelabel>regvars</edgelabel>
        </childnode>
        <childnode refid="3250" relation="usage">
          <edgelabel>llabels</edgelabel>
        </childnode>
      </node>
      <node id="3228">
        <label>mop_t</label>
        <link refid="classmop__t"/>
        <childnode refid="3208" relation="usage">
          <edgelabel>scif</edgelabel>
        </childnode>
        <childnode refid="3229" relation="usage">
          <edgelabel>fpc</edgelabel>
        </childnode>
        <childnode refid="3230" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="3231" relation="usage">
          <edgelabel>pair</edgelabel>
        </childnode>
        <childnode refid="3232" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
        <childnode refid="3227" relation="usage">
          <edgelabel>d</edgelabel>
        </childnode>
        <childnode refid="3236" relation="usage">
          <edgelabel>l</edgelabel>
        </childnode>
        <childnode refid="3237" relation="usage">
          <edgelabel>nnn</edgelabel>
        </childnode>
        <childnode refid="3239" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="3240" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
      </node>
      <node id="3231">
        <label>mop_pair_t</label>
        <link refid="classmop__pair__t"/>
        <childnode refid="3228" relation="usage">
          <edgelabel>hop</edgelabel>
          <edgelabel>lop</edgelabel>
        </childnode>
      </node>
      <node id="3247">
        <label>regarg_t</label>
        <link refid="structregarg__t"/>
      </node>
      <node id="3229">
        <label>fnumber_t</label>
        <link refid="structfnumber__t"/>
      </node>
      <node id="3214">
        <label>mbl_array_t</label>
        <link refid="classmbl__array__t"/>
        <childnode refid="3215" relation="usage">
          <edgelabel>vars</edgelabel>
        </childnode>
        <childnode refid="3217" relation="usage">
          <edgelabel>label</edgelabel>
          <edgelabel>error_strarg</edgelabel>
        </childnode>
        <childnode refid="3218" relation="usage">
          <edgelabel>gotoff_stkvars</edgelabel>
          <edgelabel>restricted_memory</edgelabel>
          <edgelabel>aliased_memory</edgelabel>
        </childnode>
        <childnode refid="3221" relation="usage">
          <edgelabel>spoiled_list</edgelabel>
          <edgelabel>nodel_memory</edgelabel>
        </childnode>
        <childnode refid="3224" relation="usage">
          <edgelabel>argidx</edgelabel>
        </childnode>
        <childnode refid="3225" relation="usage">
          <edgelabel>idb_spoiled</edgelabel>
        </childnode>
        <childnode refid="3226" relation="usage">
          <edgelabel>blocks</edgelabel>
          <edgelabel>natural</edgelabel>
        </childnode>
        <childnode refid="3222" relation="usage">
          <edgelabel>consumed_argregs</edgelabel>
        </childnode>
        <childnode refid="3241" relation="usage">
          <edgelabel>std_ivls</edgelabel>
        </childnode>
        <childnode refid="3234" relation="usage">
          <edgelabel>idb_type</edgelabel>
        </childnode>
        <childnode refid="3244" relation="usage">
          <edgelabel>mbr</edgelabel>
        </childnode>
        <childnode refid="3253" relation="usage">
          <edgelabel>idb_node</edgelabel>
        </childnode>
        <childnode refid="3254" relation="usage">
          <edgelabel>notes</edgelabel>
        </childnode>
        <childnode refid="3242" relation="usage">
          <edgelabel>aliased_args</edgelabel>
          <edgelabel>aliased_vars</edgelabel>
        </childnode>
      </node>
      <node id="3232">
        <label>mcallinfo_t</label>
        <link refid="classmcallinfo__t"/>
        <childnode refid="3218" relation="usage">
          <edgelabel>visible_memory</edgelabel>
        </childnode>
        <childnode refid="3221" relation="usage">
          <edgelabel>pass_regs</edgelabel>
          <edgelabel>spoiled</edgelabel>
          <edgelabel>dead_regs</edgelabel>
          <edgelabel>return_regs</edgelabel>
        </childnode>
        <childnode refid="3233" relation="usage">
          <edgelabel>args</edgelabel>
        </childnode>
        <childnode refid="3234" relation="usage">
          <edgelabel>return_type</edgelabel>
        </childnode>
        <childnode refid="3235" relation="usage">
          <edgelabel>retregs</edgelabel>
        </childnode>
        <childnode refid="3210" relation="usage">
          <edgelabel>return_argloc</edgelabel>
        </childnode>
      </node>
      <node id="3244">
        <label>mba_ranges_t</label>
        <link refid="structmba__ranges__t"/>
        <childnode refid="3245" relation="usage">
          <edgelabel>pfn</edgelabel>
        </childnode>
        <childnode refid="3251" relation="usage">
          <edgelabel>ranges</edgelabel>
        </childnode>
      </node>
      <node id="3219">
        <label>ivlset_tpl&lt; ivl_t, uval_t &gt;</label>
        <link refid="classivlset__tpl"/>
        <childnode refid="3220" relation="usage">
          <edgelabel>bag</edgelabel>
        </childnode>
      </node>
      <node id="3208">
        <label>scif_t</label>
        <link refid="structscif__t"/>
        <childnode refid="3209" relation="public-inheritance">
        </childnode>
        <childnode refid="3214" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="3217" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="3234" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="3224">
        <label>qvector&lt; int &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3248">
        <label>stkpnt_t</label>
        <link refid="structstkpnt__t"/>
      </node>
      <node id="3217">
        <label>_qstring&lt; char &gt;</label>
        <link refid="class__qstring"/>
      </node>
      <node id="3227">
        <label>minsn_t</label>
        <link refid="classminsn__t"/>
        <childnode refid="3227" relation="usage">
          <edgelabel>prev</edgelabel>
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="3228" relation="usage">
          <edgelabel>l</edgelabel>
          <edgelabel>r</edgelabel>
          <edgelabel>d</edgelabel>
        </childnode>
      </node>
      <node id="3211">
        <label>scattered_aloc_t</label>
        <link refid="classscattered__aloc__t"/>
        <childnode refid="3212" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3212">
        <label>qvector&lt; argpart_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3246">
        <label>range_t</label>
        <link refid="structrange__t"/>
      </node>
      <node id="3209">
        <label>vdloc_t</label>
        <link refid="classvdloc__t"/>
        <childnode refid="3210" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3249">
        <label>regvar_t</label>
        <link refid="structregvar__t"/>
        <childnode refid="3246" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3254">
        <label>qvector&lt; hexwarn_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3237">
        <label>mnumber_t</label>
        <link refid="structmnumber__t"/>
        <childnode refid="3238" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3215">
        <label>lvars_t</label>
        <link refid="structlvars__t"/>
        <childnode refid="3216" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3210">
        <label>argloc_t</label>
        <link refid="classargloc__t"/>
        <childnode refid="3211" relation="usage">
          <edgelabel>dist</edgelabel>
        </childnode>
        <childnode refid="3213" relation="usage">
          <edgelabel>rrel</edgelabel>
        </childnode>
      </node>
      <node id="3250">
        <label>llabel_t</label>
        <link refid="structllabel__t"/>
      </node>
      <node id="3236">
        <label>lvar_ref_t</label>
        <link refid="structlvar__ref__t"/>
        <childnode refid="3214" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="3216">
        <label>qvector&lt; lvar_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3240">
        <label>stkvar_ref_t</label>
        <link refid="structstkvar__ref__t"/>
        <childnode refid="3214" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="3225">
        <label>qvector&lt; reg_info_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3213">
        <label>rrel_t</label>
        <link refid="structrrel__t"/>
      </node>
      <node id="3222">
        <label>rlist_t</label>
        <link refid="classrlist__t"/>
        <childnode refid="3223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3242">
        <label>ivl_t</label>
        <link refid="structivl__t"/>
        <childnode refid="3243" relation="public-inheritance">
        </childnode>
        <childnode refid="3242" relation="usage">
          <edgelabel>allmem</edgelabel>
        </childnode>
      </node>
      <node id="3251">
        <label>rangevec_t</label>
        <link refid="structrangevec__t"/>
        <childnode refid="3252" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2168" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2167" bodyend="2195"/>
    <listofallmembers>
      <member refid="classargloc__t_1acb840052124d1a8e6ae5efa08a204e3b" prot="public" virt="non-virtual"><scope>scif_t</scope><name>_consume_rrel</name></member>
      <member refid="classargloc__t_1a3dfa2229415365cf37b233a7d0d98ff3" prot="public" virt="non-virtual"><scope>scif_t</scope><name>_consume_scattered</name></member>
      <member refid="classargloc__t_1a063de254b872c8922e7c33eb46ab2df4" prot="public" virt="non-virtual"><scope>scif_t</scope><name>_set_badloc</name></member>
      <member refid="classargloc__t_1ac02b16373e5d22a52b1bfefc5ade42ee" prot="public" virt="non-virtual"><scope>scif_t</scope><name>_set_biggest</name></member>
      <member refid="classargloc__t_1afdedaf76a0ce7fdb8e4e47bcd088ecec" prot="public" virt="non-virtual"><scope>scif_t</scope><name>_set_custom</name></member>
      <member refid="classargloc__t_1a984d38dd99ff2d1f68ce2f3a2a901d86" prot="public" virt="non-virtual"><scope>scif_t</scope><name>_set_ea</name></member>
      <member refid="classvdloc__t_1a29f212ece283d859438f6895d7d363e5" prot="public" virt="non-virtual"><scope>scif_t</scope><name>_set_reg1</name></member>
      <member refid="classargloc__t_1a58237cf6cee6722e197d9457d94928d5" prot="public" virt="non-virtual" ambiguityscope="argloc_t::"><scope>scif_t</scope><name>_set_reg1</name></member>
      <member refid="classargloc__t_1a480a4404bb72c23595de136b92d107cc" prot="public" virt="non-virtual"><scope>scif_t</scope><name>_set_reg2</name></member>
      <member refid="classargloc__t_1ab28bd32ace467412c0a6b7975214e40a" prot="public" virt="non-virtual"><scope>scif_t</scope><name>_set_stkoff</name></member>
      <member refid="classargloc__t_1a41717a651b5e5d035101cd3c93f9fa16" prot="public" virt="non-virtual"><scope>scif_t</scope><name>advance</name></member>
      <member refid="classargloc__t_1aadfaa7892946d785788519bb39c1534c" prot="public" virt="non-virtual"><scope>scif_t</scope><name>argloc_t</name></member>
      <member refid="classargloc__t_1a4408c6d67670411345ac64af0691c6bb" prot="public" virt="non-virtual"><scope>scif_t</scope><name>argloc_t</name></member>
      <member refid="classargloc__t_1ac42816deece5c2172b5fe41e033bcf29" prot="public" virt="non-virtual"><scope>scif_t</scope><name>atype</name></member>
      <member refid="classargloc__t_1abf4bc576016f72bd939593585ea53aa8" prot="public" virt="non-virtual"><scope>scif_t</scope><name>biggest</name></member>
      <member refid="classargloc__t_1ace26fa1159679dcd2d5783d8e750452d" prot="public" virt="non-virtual"><scope>scif_t</scope><name>biggest_t</name></member>
      <member refid="classargloc__t_1a7e13c6e7484602833aa8aa0ce7268099" prot="public" virt="non-virtual"><scope>scif_t</scope><name>calc_offset</name></member>
      <member refid="classargloc__t_1ab0aa2f889b27c9a07f130de2f1425c50" prot="public" virt="non-virtual"><scope>scif_t</scope><name>consume_rrel</name></member>
      <member refid="classargloc__t_1a3992daf6842d575fe08f60fa9d505888" prot="public" virt="non-virtual"><scope>scif_t</scope><name>consume_scattered</name></member>
      <member refid="classargloc__t_1a83287f7a120fab6d7bd15b1cba6d9f22" prot="public" virt="non-virtual"><scope>scif_t</scope><name>custom</name></member>
      <member refid="classargloc__t_1a7722314907d2243f82fa2a74c01fda2d" prot="public" virt="non-virtual"><scope>scif_t</scope><name>dist</name></member>
      <member refid="classvdloc__t_1ad655d9bd34cf088f68c6cdce0fd101e2" prot="public" virt="non-virtual"><scope>scif_t</scope><name>dstr</name></member>
      <member refid="classargloc__t_1acf30976b8b40ce02b509e17aedeff0cf" prot="public" virt="non-virtual" ambiguityscope="argloc_t::"><scope>scif_t</scope><name>dstr</name></member>
      <member refid="classargloc__t_1aab3d4342fb5b4967a6fb0728bf78c3c2" prot="public" virt="non-virtual"><scope>scif_t</scope><name>get_biggest</name></member>
      <member refid="classargloc__t_1a1e752bd5d152da565d83c638e82b8b79" prot="public" virt="non-virtual"><scope>scif_t</scope><name>get_custom</name></member>
      <member refid="classargloc__t_1a3270b34bd11357a768ad789542a9f3f0" prot="public" virt="non-virtual"><scope>scif_t</scope><name>get_ea</name></member>
      <member refid="classargloc__t_1ae10277794370820a815f6d1029068370" prot="public" virt="non-virtual"><scope>scif_t</scope><name>get_reginfo</name></member>
      <member refid="classargloc__t_1a748efdf1fedc447f58d01a30416c85e9" prot="public" virt="non-virtual"><scope>scif_t</scope><name>get_rrel</name></member>
      <member refid="classargloc__t_1a2aa9933c1c4b950b3df1d630d29d36c5" prot="public" virt="non-virtual"><scope>scif_t</scope><name>get_rrel</name></member>
      <member refid="classvdloc__t_1af3ee4d1e7bce4ee32654fe2c565c3ec0" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_aliasable</name></member>
      <member refid="classargloc__t_1a089880492a1389eb87ae04ab1480a907" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_badloc</name></member>
      <member refid="classargloc__t_1adab4c54526269844ffc579ec0d472494" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_custom</name></member>
      <member refid="classargloc__t_1a26c9d0f1d53027a8e39dc1380dc7263b" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_ea</name></member>
      <member refid="classargloc__t_1a7939d2038b31a06159e38a1e693e9df1" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_fragmented</name></member>
      <member refid="classargloc__t_1a6e5a3e96f9c3fd1f70b0461c95d12a72" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_mixed_scattered</name></member>
      <member refid="classargloc__t_1adac20266ce431d9d4cc7d56a148df57f" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_reg</name></member>
      <member refid="classargloc__t_1a1109690340938b4864dad4e11d00fed2" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_reg1</name></member>
      <member refid="classargloc__t_1aabdb8d4a549c14f243ef07732bbc7135" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_reg2</name></member>
      <member refid="classargloc__t_1aaf24568905e2fb3766c0a1dee00990c8" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_rrel</name></member>
      <member refid="classargloc__t_1a6ea656106a29aeb48763914af3978ce3" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_scattered</name></member>
      <member refid="classargloc__t_1ac04cb0b927680386beb21e64feeec9c2" prot="public" virt="non-virtual"><scope>scif_t</scope><name>is_stkoff</name></member>
      <member refid="structscif__t_1a00eb3f13dfb3eb695cf3e649fed29ccf" prot="public" virt="non-virtual"><scope>scif_t</scope><name>mba</name></member>
      <member refid="structscif__t_1ad14ceb3ded29dc0862aa2714e413812f" prot="public" virt="non-virtual"><scope>scif_t</scope><name>name</name></member>
      <member refid="structscif__t_1a3532847cf8827a6702dc56bb21aca7a6" prot="public" virt="non-virtual"><scope>scif_t</scope><name>operator=</name></member>
      <member refid="classargloc__t_1a15ee4a5904426f2b2fdfac6d83b937a5" prot="public" virt="non-virtual" ambiguityscope="vdloc_t::"><scope>scif_t</scope><name>operator=</name></member>
      <member refid="classvdloc__t_1a58e46bc4ddf4652f72dda51d44b92d39" prot="public" virt="non-virtual"><scope>scif_t</scope><name>reg1</name></member>
      <member refid="classargloc__t_1a085753e69bcf12f7cb3bc72e9079879c" prot="public" virt="non-virtual"><scope>scif_t</scope><name>reg2</name></member>
      <member refid="classargloc__t_1a76f950e66699174fe7a68df7758e594a" prot="public" virt="non-virtual"><scope>scif_t</scope><name>reginfo</name></member>
      <member refid="classargloc__t_1ada80c12e32ba686010624a9de20f8a0f" prot="public" virt="non-virtual" ambiguityscope="argloc_t::"><scope>scif_t</scope><name>regoff</name></member>
      <member refid="classargloc__t_1a1fa43bd01e8b77284574b98124f57936" prot="public" virt="non-virtual"><scope>scif_t</scope><name>rrel</name></member>
      <member refid="classargloc__t_1adc377d1c2fe5da59677a33d34fefefe6" prot="public" virt="non-virtual"><scope>scif_t</scope><name>scattered</name></member>
      <member refid="classargloc__t_1a41cf655822fbd23d57e1885faf1aad0c" prot="public" virt="non-virtual"><scope>scif_t</scope><name>scattered</name></member>
      <member refid="structscif__t_1a5eee493d11f5ba52089bb2d457aa55fb" prot="public" virt="non-virtual"><scope>scif_t</scope><name>scif_t</name></member>
      <member refid="classargloc__t_1a229efc8f038020677c414eb12d14d10f" prot="public" virt="non-virtual"><scope>scif_t</scope><name>set_badloc</name></member>
      <member refid="classargloc__t_1aa5293c701de3bc80bca2bd0864897371" prot="public" virt="non-virtual"><scope>scif_t</scope><name>set_ea</name></member>
      <member refid="classvdloc__t_1ae93d695241526625b428786acd8c980a" prot="public" virt="non-virtual"><scope>scif_t</scope><name>set_reg1</name></member>
      <member refid="classargloc__t_1a2001e49056d880235a4455e783cef1d3" prot="public" virt="non-virtual" ambiguityscope="argloc_t::"><scope>scif_t</scope><name>set_reg1</name></member>
      <member refid="classargloc__t_1a0a12b3f8a9cd1de1b1cebce66e59d3f6" prot="public" virt="non-virtual"><scope>scif_t</scope><name>set_reg2</name></member>
      <member refid="classargloc__t_1a15c65726be540d974c861cb8efa64b2c" prot="public" virt="non-virtual"><scope>scif_t</scope><name>set_stkoff</name></member>
      <member refid="classargloc__t_1ad716d5ea1bd867d97613e3b077dce441" prot="public" virt="non-virtual"><scope>scif_t</scope><name>stkoff</name></member>
      <member refid="classargloc__t_1ae3d306162b4386dcc3046532107fdea4" prot="public" virt="non-virtual"><scope>scif_t</scope><name>sval</name></member>
      <member refid="classargloc__t_1a4e1755b0a9fd2c6ae2812b2141b9db3f" prot="public" virt="non-virtual"><scope>scif_t</scope><name>swap</name></member>
      <member refid="structscif__t_1a68a11e7c3f8b2c8a65d34b10eb941312" prot="public" virt="non-virtual"><scope>scif_t</scope><name>type</name></member>
      <member refid="classargloc__t_1afb19fb5c127000a0b667e57d26eeef09" prot="public" virt="non-virtual"><scope>scif_t</scope><name>~argloc_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
