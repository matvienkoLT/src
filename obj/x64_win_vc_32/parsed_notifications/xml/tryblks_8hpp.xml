<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="tryblks_8hpp" kind="file" language="C++">
    <compoundname>tryblks.hpp</compoundname>
    <innerclass refid="structtry__handler__t" prot="public">try_handler_t</innerclass>
    <innerclass refid="structseh__t" prot="public">seh_t</innerclass>
    <innerclass refid="structcatch__t" prot="public">catch_t</innerclass>
    <innerclass refid="classtryblk__t" prot="public">tryblk_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="tryblks_8hpp_1ab61ade51e5c74c57e956edb60f81aa94" prot="public" static="no">
        <name>SEH_CONTINUE</name>
        <initializer><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="56" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tryblks_8hpp_1af41d0ed354cdaf2115d2cd28e0cd9dd6" prot="public" static="no">
        <name>SEH_SEARCH</name>
        <initializer>ea_t(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="57" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tryblks_8hpp_1af4d6fa62a3e739be6084933ce812d5b3" prot="public" static="no">
        <name>SEH_HANDLE</name>
        <initializer>ea_t(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="58" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tryblks_8hpp_1a4fda643a4c6151d4226e784ba50417e8" prot="public" static="no">
        <name>CATCH_ID_ALL</name>
        <initializer><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="74" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tryblks_8hpp_1ae68cfa5b68bd6854df1e8441c663321c" prot="public" static="no">
        <name>CATCH_ID_CLEANUP</name>
        <initializer><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref>(-2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="75" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tryblks_8hpp_1a68eb41cb0f75390e48c5e2f910f07005" prot="public" static="no">
        <name>TB_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="90" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tryblks_8hpp_1a9973d50b2ad0316d8da238e8de78e51d" prot="public" static="no">
        <name>TB_SEH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="91" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="tryblks_8hpp_1a3620ef4303a5de8dac9164498e49811e" prot="public" static="no">
        <name>TB_CPP</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="92" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_b_e_r_r___1gaa91b25d317fea9b75eddade7f80a31ed" prot="public" static="no">
        <name>TBERR_OK</name>
        <initializer>0</initializer>
        <briefdescription>
<para>ok </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="200" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_b_e_r_r___1ga9b856a63e7f3266532e266bf28a1d1b6" prot="public" static="no">
        <name>TBERR_START</name>
        <initializer>1</initializer>
        <briefdescription>
<para>bad start address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="201" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_b_e_r_r___1gac62a20bd1e0cf8f21b0e7a0246e8eac6" prot="public" static="no">
        <name>TBERR_END</name>
        <initializer>2</initializer>
        <briefdescription>
<para>bad end address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="202" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_b_e_r_r___1ga899139978e4d227f9fa06882df4b092a" prot="public" static="no">
        <name>TBERR_ORDER</name>
        <initializer>3</initializer>
        <briefdescription>
<para>bad address order </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="203" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_b_e_r_r___1gabf4b0aed951b1b3a3ac1958eae7ab3e4" prot="public" static="no">
        <name>TBERR_EMPTY</name>
        <initializer>4</initializer>
        <briefdescription>
<para>empty try block </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="204" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_b_e_r_r___1ga1a49393109c29fd0aa86d7356d53fe49" prot="public" static="no">
        <name>TBERR_KIND</name>
        <initializer>5</initializer>
        <briefdescription>
<para>illegal try block kind </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="205" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_b_e_r_r___1ga2f3e69ab1ec9092bad7cdf0b4e206242" prot="public" static="no">
        <name>TBERR_NO_CATCHES</name>
        <initializer>6</initializer>
        <briefdescription>
<para>no catch blocks at all </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="206" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_b_e_r_r___1gaa8d7ecf55f2de806a7a67a467cd38882" prot="public" static="no">
        <name>TBERR_INTERSECT</name>
        <initializer>7</initializer>
        <briefdescription>
<para>range would intersect inner tryblk </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="207" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="tryblks_8hpp_1ac1471c0e48ac61234cafc181cb13efcb" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structcatch__t" kindref="compound">catch_t</ref> &gt;</type>
        <definition>typedef qvector&lt;catch_t&gt; catchvec_t</definition>
        <argsstring></argsstring>
        <name>catchvec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="80" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="tryblks_8hpp_1a5192a0b6cd284f52f59a5796d2c692c9" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classtryblk__t" kindref="compound">tryblk_t</ref> &gt;</type>
        <definition>typedef qvector&lt;tryblk_t&gt; tryblks_t</definition>
        <argsstring></argsstring>
        <name>tryblks_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="175" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tryblks_8hpp_1a9c06115ee0c3d4cb246d3bed2075b4b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export get_tryblks</definition>
        <argsstring>(tryblks_t *tbv, const range_t &amp;range)</argsstring>
        <name>get_tryblks</name>
        <param>
          <type><ref refid="classqvector" kindref="compound">tryblks_t</ref> *</type>
          <declname>tbv</declname>
        </param>
        <param>
          <type>const <ref refid="structrange__t" kindref="compound">range_t</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Retrieve try block information from the specified address range. Try blocks are sorted by starting address and their nest levels calculated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tbv</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer; may be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>address range to change </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of found try blocks </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tryblks_8hpp_1ad4a30d6a925ce8aef453e6fa67e21db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export del_tryblks</definition>
        <argsstring>(const range_t &amp;range)</argsstring>
        <name>del_tryblks</name>
        <param>
          <type>const <ref refid="structrange__t" kindref="compound">range_t</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete try block information in the specified range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>the range to be cleared </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tryblks_8hpp_1af0962379452305a40759b8512e0daa1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export add_tryblk</definition>
        <argsstring>(const tryblk_t &amp;tb)</argsstring>
        <name>add_tryblk</name>
        <param>
          <type>const <ref refid="classtryblk__t" kindref="compound">tryblk_t</ref> &amp;</type>
          <declname>tb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add one try block information. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tb</parametername>
</parameternamelist>
<parameterdescription>
<para>try block to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error code; 0 means good </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="tryblks_8hpp_1a93a7cd3328cc80e7dbbb15eb4c4bda0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman ea_t ida_export</type>
        <definition>idaman ea_t ida_export find_syseh</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>find_syseh</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the start address of the system eh region including the argument. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>search address </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>start address of surrounding tryblk, otherwise BADADDR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp" line="214" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Architecture independent exception handling info. </para>    </briefdescription>
    <detaileddescription>
<para>Try blocks have the following general properties:<itemizedlist>
<listitem><para>An try block specifies a possibly fragmented guarded code region.</para></listitem><listitem><para>Each try block has always at least one catch/except block description</para></listitem><listitem><para>Each catch block contains its boundaries and a filter.</para></listitem><listitem><para>Additionally a catch block can hold sp adjustment and the offset to the exception object offset (C++).</para></listitem><listitem><para>Try blocks can be nested. Nesting is automatically calculated at the retrieval time.</para></listitem><listitem><para>There may be (nested) multiple try blocks starting at the same address.</para></listitem></itemizedlist>
</para><para>See examples in tests/input/src/eh_tests. </para>    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/tryblks.hpp"/>
  </compounddef>
</doxygen>
