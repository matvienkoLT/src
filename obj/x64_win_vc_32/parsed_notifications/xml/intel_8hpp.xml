<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="intel_8hpp" kind="file" language="C++">
    <compoundname>intel.hpp</compoundname>
    <includes refid="ua_8hpp" local="no">ua.hpp</includes>
    <includes refid="typeinf_8hpp" local="no">typeinf.hpp</includes>
    <includes refid="allins_8hpp" local="no">allins.hpp</includes>
    <incdepgraph>
      <node id="772">
        <label>sys/stat.h</label>
      </node>
      <node id="756">
        <label>stdarg.h</label>
      </node>
      <node id="759">
        <label>assert.h</label>
      </node>
      <node id="753">
        <label>ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="754" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
      </node>
      <node id="755">
        <label>stdlib.h</label>
      </node>
      <node id="749">
        <label>obj/x64_linux_gcc_32_opt/idasdk/intel.hpp</label>
        <link refid="intel_8hpp"/>
        <childnode refid="750" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
      </node>
      <node id="750">
        <label>ua.hpp</label>
        <link refid="ua_8hpp"/>
        <childnode refid="751" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="775" relation="include">
        </childnode>
        <childnode refid="776" relation="include">
        </childnode>
      </node>
      <node id="784">
        <label>bitrange.hpp</label>
        <link refid="bitrange_8hpp"/>
      </node>
      <node id="767">
        <label>io.h</label>
      </node>
      <node id="770">
        <label>fcntl.h</label>
      </node>
      <node id="773">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="765">
        <label>malloc.h</label>
      </node>
      <node id="764">
        <label>string</label>
      </node>
      <node id="780">
        <label>idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="781" relation="include">
        </childnode>
        <childnode refid="777" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="783" relation="include">
        </childnode>
        <childnode refid="750" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
      </node>
      <node id="769">
        <label>map</label>
      </node>
      <node id="768">
        <label>direct.h</label>
      </node>
      <node id="757">
        <label>stddef.h</label>
      </node>
      <node id="777">
        <label>nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="753" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
      </node>
      <node id="752">
        <label>lines.hpp</label>
        <link refid="lines_8hpp"/>
        <childnode refid="753" relation="include">
        </childnode>
      </node>
      <node id="786">
        <label>name.hpp</label>
        <link refid="name_8hpp"/>
        <childnode refid="753" relation="include">
        </childnode>
      </node>
      <node id="760">
        <label>limits.h</label>
      </node>
      <node id="771">
        <label>sys/types.h</label>
      </node>
      <node id="766">
        <label>string.h</label>
      </node>
      <node id="763">
        <label>new</label>
      </node>
      <node id="775">
        <label>xref.hpp</label>
        <link refid="xref_8hpp"/>
      </node>
      <node id="783">
        <label>funcs.hpp</label>
        <link refid="funcs_8hpp"/>
        <childnode refid="774" relation="include">
        </childnode>
        <childnode refid="776" relation="include">
        </childnode>
      </node>
      <node id="754">
        <label>pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="755" relation="include">
        </childnode>
        <childnode refid="756" relation="include">
        </childnode>
        <childnode refid="757" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
        <childnode refid="759" relation="include">
        </childnode>
        <childnode refid="760" relation="include">
        </childnode>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="763" relation="include">
        </childnode>
        <childnode refid="764" relation="include">
        </childnode>
        <childnode refid="765" relation="include">
        </childnode>
        <childnode refid="766" relation="include">
        </childnode>
        <childnode refid="767" relation="include">
        </childnode>
        <childnode refid="768" relation="include">
        </childnode>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="773" relation="include">
        </childnode>
      </node>
      <node id="782">
        <label>segment.hpp</label>
        <link refid="segment_8hpp"/>
        <childnode refid="753" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
      </node>
      <node id="762">
        <label>time.h</label>
      </node>
      <node id="781">
        <label>fpro.h</label>
        <link refid="fpro_8h"/>
        <childnode refid="754" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
      </node>
      <node id="785">
        <label>config.hpp</label>
        <link refid="config_8hpp_source"/>
      </node>
      <node id="776">
        <label>bytes.hpp</label>
        <link refid="bytes_8hpp"/>
        <childnode refid="777" relation="include">
        </childnode>
        <childnode refid="752" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
      </node>
      <node id="761">
        <label>ctype.h</label>
      </node>
      <node id="774">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
      </node>
      <node id="779">
        <label>typeinf.hpp</label>
        <link refid="typeinf_8hpp"/>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
      </node>
      <node id="778">
        <label>netnode.hpp</label>
        <link refid="netnode_8hpp"/>
        <childnode refid="774" relation="include">
        </childnode>
      </node>
      <node id="751">
        <label>kernwin.hpp</label>
        <link refid="kernwin_8hpp"/>
      </node>
      <node id="758">
        <label>stdio.h</label>
      </node>
      <node id="787">
        <label>allins.hpp</label>
        <link refid="allins_8hpp_source"/>
      </node>
    </incdepgraph>
    <innerclass refid="structfbase__reg__t" prot="public">fbase_reg_t</innerclass>
    <innerclass refid="structpushreg__t" prot="public">pushreg_t</innerclass>
    <innerclass refid="structpushinfo__t" prot="public">pushinfo_t</innerclass>
    <innerclass refid="structmmtype__t" prot="public">mmtype_t</innerclass>
    <innernamespace refid="namespacepc__module__t">pc_module_t</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="intel_8hpp_1a3c2a45af081ddc44edd6bf0afd2c5535" prot="public" static="no">
        <name>PROC_MAXOP</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="14" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a2d9f6969cbbfe03918f4eaa77a71415a" prot="public" static="no">
        <name>aux_lock</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="23" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a7d377d1e84c574b4fd5347040eba7d33" prot="public" static="no">
        <name>aux_rep</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="24" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ad5cde3e015fa66459c797430e88523bd" prot="public" static="no">
        <name>aux_repne</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="25" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a57e8f7d77a41ee58fd4274e55c934ded" prot="public" static="no">
        <name>aux_use32</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="26" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a6a69d56b13460f2798b7e5c0c763da94" prot="public" static="no">
        <name>aux_use64</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="27" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ac44f4ae93c8cf7afea6e23777441d861" prot="public" static="no">
        <name>aux_large</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="28" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a14d907a0e78bbbb91cb9facc99022dbc" prot="public" static="no">
        <name>aux_short</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="29" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a76c84d5208fa7d0310ea75bc828bc865" prot="public" static="no">
        <name>aux_sgpref</name>
        <initializer>0x00000080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="30" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ab1dfc4ff0784c7a4eaac27f3e57d7eec" prot="public" static="no">
        <name>aux_oppref</name>
        <initializer>0x00000100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="31" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ad10c62fbed80571e4acb34509851c240" prot="public" static="no">
        <name>aux_adpref</name>
        <initializer>0x00000200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="32" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aa57063589f7f914e34149b576bf592b5" prot="public" static="no">
        <name>aux_basess</name>
        <initializer>0x00000400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="33" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a248f27e763a92f0a20912b4a75e5e192" prot="public" static="no">
        <name>aux_natop</name>
        <initializer>0x00000800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="34" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ad54ee902e309fa3a4529b31844ced160" prot="public" static="no">
        <name>aux_natad</name>
        <initializer>0x00001000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="35" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a5b21c943882bec012641e86649a9cb24" prot="public" static="no">
        <name>aux_fpemu</name>
        <initializer>0x00002000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="36" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a91455465e139bdc998f525bbe2e828ed" prot="public" static="no">
        <name>aux_vexpr</name>
        <initializer>0x00004000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="37" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ae1616ab5a76b8ed25ce0fbb641a0ac89" prot="public" static="no">
        <name>aux_bnd</name>
        <initializer>0x00008000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="38" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a5bf312ba8edd09c1b8897f707749dbac" prot="public" static="no">
        <name>aux_evex</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="39" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a150e6a102b97535dea97c379075009e0" prot="public" static="no">
        <name>aux_xop</name>
        <initializer>0x00020000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="40" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ab32330b7bd1e7b34d08c900f8005f0ce" prot="public" static="no">
        <name>aux_xacquire</name>
        <initializer>0x00040000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="41" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a68b70d9b4edffa80d100d3825c6fa077" prot="public" static="no">
        <name>aux_xrelease</name>
        <initializer>0x00080000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="42" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aafb0f3396448b6289522db3c6925c1ab" prot="public" static="no">
        <name>o_trreg</name>
        <initializer><ref refid="group__o___1ga93c65fe52df27c2cf286579834e89f1c" kindref="member">o_idpspec0</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="46" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a0ef661b619c4f9a631cffc82b648242c" prot="public" static="no">
        <name>o_dbreg</name>
        <initializer><ref refid="group__o___1ga28544d70e5118d18bc443b1551bfb0d4" kindref="member">o_idpspec1</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="47" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1af39b709ea42128f379ec80310689987c" prot="public" static="no">
        <name>o_crreg</name>
        <initializer><ref refid="group__o___1ga6aeffb56e320e7815d2fa9d2788f7512" kindref="member">o_idpspec2</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="48" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a6a3ca177c7576b220d59316c68252825" prot="public" static="no">
        <name>o_fpreg</name>
        <initializer><ref refid="group__o___1ga38b52acb452efd50718bcc910bc9dce7" kindref="member">o_idpspec3</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="49" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a95998455bb2e0e4433a217ee98105c20" prot="public" static="no">
        <name>o_mmxreg</name>
        <initializer><ref refid="group__o___1ga8ea529384422fe137b199e9d849182c0" kindref="member">o_idpspec4</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="50" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a94f86e2d3e0f6519b6f26fbb5a5a0dbd" prot="public" static="no">
        <name>o_xmmreg</name>
        <initializer><ref refid="group__o___1ga610f9018ae82af4151f4270fca95be68" kindref="member">o_idpspec5</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="51" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ab35f3536f1f856550e9d1b0e4f2bd8d4" prot="public" static="no">
        <name>o_ymmreg</name>
        <initializer><ref refid="group__o___1ga610f9018ae82af4151f4270fca95be68" kindref="member">o_idpspec5</ref>+1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="52" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ac444dc43c48d0a344e0ce415a37b874f" prot="public" static="no">
        <name>o_zmmreg</name>
        <initializer><ref refid="group__o___1ga610f9018ae82af4151f4270fca95be68" kindref="member">o_idpspec5</ref>+2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="53" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1abfdf09eaf6231dac351be8bd66eb7a13" prot="public" static="no">
        <name>o_kreg</name>
        <initializer><ref refid="group__o___1ga610f9018ae82af4151f4270fca95be68" kindref="member">o_idpspec5</ref>+3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="54" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1acb7b82b4d6e60b158ebab7f26a372c73" prot="public" static="no">
        <name>segrg</name>
        <initializer>specval_shorts.high</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="61" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1acfdf85ee301d54126483f78d34c2f4cc" prot="public" static="no">
        <name>SEGREG_IMM</name>
        <initializer>0xFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="62" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ab1e8dab85d13d5a1a5a408a89cefe6af" prot="public" static="no">
        <name>segsel</name>
        <initializer>specval_shorts.low</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="65" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1acbdcc8de0ca5bfcbd7c31d248cc247f6" prot="public" static="no">
        <name>hasSIB</name>
        <initializer>specflag1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="66" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a3acaf0a06e17963fa238ef6171b0174d" prot="public" static="no">
        <name>sib</name>
        <initializer>specflag2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="67" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a9d36eb6766ee05709478bd8fe6b0ccb7" prot="public" static="no">
        <name>rex</name>
        <initializer>insnpref</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="68" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a5d7b404aef0343558efeae54014eece7" prot="public" static="no">
        <name>evex_flags</name>
        <initializer>Op6.specflag2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="72" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a66bce1d7b35cfb0fdc52dd03e0393f64" prot="public" static="no">
        <name>cr_suff</name>
        <initializer>specflag1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="74" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a75f78bf9761be10d2acd3fe73dc8ea2f" prot="public" static="no">
        <name>AFIDP_PUSH</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="815" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="815" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a377e986f5bba7434c53a5dc94970d2d9" prot="public" static="no">
        <name>AFIDP_NOP</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="816" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a8dee1bcfa9189cf088562a89e7ccdec2" prot="public" static="no">
        <name>AFIDP_MOVOFF</name>
        <initializer>0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="818" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="818" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a0dcc7d2590c5c58f348f56f564751592" prot="public" static="no">
        <name>AFIDP_MOVOFF2</name>
        <initializer>0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="821" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ae37cf4c007ebbb99342a68f8410c7e3d" prot="public" static="no">
        <name>AFIDP_ZEROINS</name>
        <initializer>0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="824" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ac409843114038608ddc811a1d14f5eea" prot="public" static="no">
        <name>AFIDP_BRTTI</name>
        <initializer>0x0020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="829" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="829" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a159153eda4036b3bc96cf6092855497a" prot="public" static="no">
        <name>AFIDP_UNKRTTI</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="830" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="830" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a0842f629a7e2fc20e9f50e08c7aacb8b" prot="public" static="no">
        <name>AFIDP_EXPFUNC</name>
        <initializer>0x0080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="831" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aa3918572a753aa5d08b3b1242816dca7" prot="public" static="no">
        <name>AFIDP_DIFBASE</name>
        <initializer>0x0100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="833" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="833" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a2a447cc3c95084e0d3219b536e344a9c" prot="public" static="no">
        <name>AFIDP_NOPREF</name>
        <initializer>0x0200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="834" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="834" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a419bfc578bd41d94d06f0917094054ea" prot="public" static="no">
        <name>AFIDP_NOVXD</name>
        <initializer>0x0400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="835" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="835" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a354abaabc8cbe30b456d990f51eb788c" prot="public" static="no">
        <name>AFIDP_NOFPEMU</name>
        <initializer>0x0800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="836" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="836" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1af8c9b650c6c92b4e9937904a12f0da03" prot="public" static="no">
        <name>AFIDP_SHOWRIP</name>
        <initializer>0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="837" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="837" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1af9750f5d7405046bd8a2f80595565cd2" prot="public" static="no">
        <name>AFIDP_NOSEH</name>
        <initializer>0x2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="838" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="838" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a6047e51fef71ba9a06565e0167d238a0" prot="public" static="no">
        <name>AFIDP_INT3STOP</name>
        <initializer>0x4000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="839" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="839" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a8ccf4086bc63d36bad65c478406b54e2" prot="public" static="no">
        <name>PRF_NONE</name>
        <initializer>0x0000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="917" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="917" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a7e976cdea82f1803a9b184c43d70a308" prot="public" static="no">
        <name>PRF_MOVE</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="918" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="918" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a864100c6b82cc5f2a09c63b4bedb1065" prot="public" static="no">
        <name>PRF_SPILL</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="919" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="919" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1af577ba6a5956466c231545adac51fe25" prot="public" static="no">
        <name>PRF_MASK</name>
        <initializer>(PRF_MOVE | PRF_SPILL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="920" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="920" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aedfe917ba349e0bfcc63f5714d5da5db" prot="public" static="no">
        <name>PINF_SEHCALL</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="927" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="927" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1add2e2365d3a92d3815a6f13110bc7d8f" prot="public" static="no">
        <name>PINF_SEHMAN</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="928" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="928" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ac21a36441bdeed4d96e6557f1b12143d" prot="public" static="no">
        <name>PINF_COOKIE</name>
        <initializer>0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="929" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="929" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a4d56879b83348d430d593dd85390063e" prot="public" static="no">
        <name>PINF_ALIGNED</name>
        <initializer>0x0008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="930" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a6380c0ce1f0f3f4c8d41dc1b2a4adf52" prot="public" static="no">
        <name>PINF_VARARG</name>
        <initializer>0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="931" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="931" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a6fdae128fabbbadc5ad778c4d39fecad" prot="public" static="no">
        <name>PINF_BPOFF</name>
        <initializer>0x0020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="932" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="932" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aa2244551c1619a5edaea5fc6a186ebb9" prot="public" static="no">
        <name>PINF_HAVE_SSIZE</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="933" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="933" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a855b887e6fe5604a94114e405a776fdb" prot="public" static="no">
        <name>PINF_PSI_FLAGS</name>
        <initializer>0x0080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="934" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="934" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a70d4ac05be121435eb8c83095096d715" prot="public" static="no">
        <name>EH_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="953" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="953" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aaf0aefaabcecba69f45cdbabea19d99c" prot="public" static="no">
        <name>EH_VCSEH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="954" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="954" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a2bdc82b18a090f06c92124c6778ca15b" prot="public" static="no">
        <name>EH_VCCPPEH</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="955" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="955" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a3f7437b4d35b6d488c1319e6b23fef0f" prot="public" static="no">
        <name>_PT_486p</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1169" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1af236203559d62f355b6900534f829872" prot="public" static="no">
        <name>_PT_486r</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1170" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1af9b3b82a422ebbbfd305c9090599464e" prot="public" static="no">
        <name>_PT_386p</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1171" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a6b4070c24cea6481cad5291eb1db2d3d" prot="public" static="no">
        <name>_PT_386r</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1172" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aa9a86f390e0b942f23ed9e56f33c7474" prot="public" static="no">
        <name>_PT_286p</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1173" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a65c84ee434559f558aa83c31840fa084" prot="public" static="no">
        <name>_PT_286r</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1174" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a9c20e0d02b9906eac787360bb6c69afc" prot="public" static="no">
        <name>_PT_086</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1175" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a0eafe8bd5ce12e612ae4d8213f2417d2" prot="public" static="no">
        <name>_PT_586p</name>
        <initializer>0x00000080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1176" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a02f00a8ffbf3a471fc6cd6c3a12e47e7" prot="public" static="no">
        <name>_PT_586r</name>
        <initializer>0x00000100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1177" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a83d522efef0e61b7415482a3cb8cec0a" prot="public" static="no">
        <name>_PT_686r</name>
        <initializer>0x00000200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1178" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ad531ac02ac8c5a472d97c5b11a995570" prot="public" static="no">
        <name>_PT_686p</name>
        <initializer>0x00000400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1179" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1afffb6ceaee72adc8680326b42d3bcd68" prot="public" static="no">
        <name>_PT_mmx</name>
        <initializer>0x00000800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1180" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a134bb1775c60428bee56c153da576978" prot="public" static="no">
        <name>_PT_pii</name>
        <initializer>0x00001000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1181" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ab7f485ed3a6a6d7f895cb243efa00355" prot="public" static="no">
        <name>_PT_3d</name>
        <initializer>0x00002000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1182" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a49b739705e8ce5b23d267ae26b12c629" prot="public" static="no">
        <name>_PT_piii</name>
        <initializer>0x00004000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1183" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a6ccb31914343766b95dccab98f1a6a34" prot="public" static="no">
        <name>_PT_k7</name>
        <initializer>0x00008000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1184" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a5ca267f94ba352efec86a3f35855eb31" prot="public" static="no">
        <name>_PT_p4</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1185" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aa8fb34d7a6be39515a7bf4c7aaf23d3f" prot="public" static="no">
        <name>_PT_sse3</name>
        <initializer>0x00020000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1186" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a4926aaab3cb41ea862b4b60159134075" prot="public" static="no">
        <name>_PT_sse4</name>
        <initializer>0x00040000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1187" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ac69360b6dd03b962c279ce9787cee5a4" prot="public" static="no">
        <name>PT_sse4</name>
        <initializer>_PT_sse4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1193" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a11c96f3ed74c30eb41305c6d791d3044" prot="public" static="no">
        <name>PT_sse3</name>
        <initializer>(_PT_sse3 | _PT_sse4 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1194" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aaefc3c40659a6fa3d9d98738d0709c38" prot="public" static="no">
        <name>PT_p4</name>
        <initializer>( PT_sse3 | _PT_p4   )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1195" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ab90005dd6b18f32c50b6ada62a1a8053" prot="public" static="no">
        <name>PT_k7</name>
        <initializer>( PT_p4   | _PT_k7   )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1196" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a84e019b24665ca590a848e357d2deb14" prot="public" static="no">
        <name>PT_piii</name>
        <initializer>( PT_k7   | _PT_piii )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1197" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a406dc2b6e0c33d6a456e8c89da228b27" prot="public" static="no">
        <name>PT_k62</name>
        <initializer>( PT_piii | _PT_3d   )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1198" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a0da097dc3241cbde0f68e228fe0266b9" prot="public" static="no">
        <name>PT_3d</name>
        <initializer>_PT_3d</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1199" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a7f331f37d02e57c67ea2320260e7e158" prot="public" static="no">
        <name>PT_pii</name>
        <initializer>( PT_piii | _PT_pii  )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1200" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a385b013fbea72f4717aab4b56304993c" prot="public" static="no">
        <name>PT_mmx</name>
        <initializer>(_PT_mmx  | _PT_3d   )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1201" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a98faea83c33ff5f6c07b6c5b86917a62" prot="public" static="no">
        <name>PT_686p</name>
        <initializer>( PT_pii  | _PT_686p )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1202" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a6f7401dcb6ebd2693e310d1d9f630aed" prot="public" static="no">
        <name>PT_686r</name>
        <initializer>( PT_686p | _PT_686r )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1203" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ae8066df3f28a4e895cc59785b4810319" prot="public" static="no">
        <name>PT_586p</name>
        <initializer>( PT_686r | _PT_586p )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1204" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a81404bd1820225f83aab14a2ce66488f" prot="public" static="no">
        <name>PT_586r</name>
        <initializer>( PT_586p | _PT_586r )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1205" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a4b4a9c2dd7455a82d762212d2a9be973" prot="public" static="no">
        <name>PT_486p</name>
        <initializer>( PT_586r | _PT_486p )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1206" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a21294565e841473e1f0e05befb8e4bf9" prot="public" static="no">
        <name>PT_486r</name>
        <initializer>( PT_486p | _PT_486r )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1207" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a05828e3476571a2b9fb33b4b68f7ada0" prot="public" static="no">
        <name>PT_386p</name>
        <initializer>( PT_486r | _PT_386p )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1208" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aacb4f406159ca20d7199f4c4accaee75" prot="public" static="no">
        <name>PT_386r</name>
        <initializer>( PT_386p | _PT_386r )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1209" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a2ae508d5ab5dc4b73e5182c9f5c50d25" prot="public" static="no">
        <name>PT_286p</name>
        <initializer>( PT_386r | _PT_286p )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1210" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1af02e742fecfe8083bcb4ae59d0584ca9" prot="public" static="no">
        <name>PT_286r</name>
        <initializer>( PT_286p | _PT_286r )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1211" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ac94288964af24a8704bf55544d07e645" prot="public" static="no">
        <name>PT_086</name>
        <initializer>( PT_286r | _PT_086  )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1212" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a2bf5bf6010807af7007740d465175fcf" prot="public" static="no">
        <name>PT_ismmx</name>
        <initializer>(_PT_mmx            )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1218" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a4d47e5b8949f0f8904d6243edf29a0ec" prot="public" static="no">
        <name>PT_is686</name>
        <initializer>(_PT_686r | _PT_686p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1219" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a3cc8661fa0767887a972411424a10e52" prot="public" static="no">
        <name>PT_is586</name>
        <initializer>(_PT_586r | _PT_586p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1220" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a26cfe2425ae5a61f9fc02b21ef1ad00b" prot="public" static="no">
        <name>PT_is486</name>
        <initializer>(_PT_486r | _PT_486p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1221" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1ae09e17e0616599be68124a585eb67de3" prot="public" static="no">
        <name>PT_is386</name>
        <initializer>(_PT_386r | _PT_386p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1222" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1aec6f1ca792844ba55db5f37cd1b21e09" prot="public" static="no">
        <name>PT_is286</name>
        <initializer>(_PT_286r | _PT_286p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1223" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intel_8hpp_1a3bb4477913737a1a2750c4d41f9eb34a" prot="public" static="no">
        <name>PT_is086</name>
        <initializer>(_PT_086)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1224" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620f" prot="public" static="no">
        <name>RegNo</name>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fad7f7be362e50ce358444067df2cd0015" prot="public">
          <name>R_none</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa7861955cbba36fd0d173ce2d18799c79" prot="public">
          <name>R_ax</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fafa4ef35ef270632668e64cd9c29e9b56" prot="public">
          <name>R_cx</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa32169b5a03efd0a942c286c8b585aef5" prot="public">
          <name>R_dx</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa2ba0db51d83d6213cd67eb403d78447d" prot="public">
          <name>R_bx</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa3d176680252afc749e2915d03d4c8871" prot="public">
          <name>R_sp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa1cb0157fd47af44d13baa045960a4ce5" prot="public">
          <name>R_bp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fad6128f362eb79c9daaa1187f3b3538ab" prot="public">
          <name>R_si</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab6be7b26621717fb982b86eaedc0511e" prot="public">
          <name>R_di</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fae0c432ef609bf645a2e9168f38953d72" prot="public">
          <name>R_r8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa2bdcd3d10a55f52d9586a14965ac6489" prot="public">
          <name>R_r9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa964658d60fe513a17878cf965c570f65" prot="public">
          <name>R_r10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fadd4b543ab78dc336c024931200fe9ec9" prot="public">
          <name>R_r11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa6ff88d6955921f0acfb23aaa0c2f6e2f" prot="public">
          <name>R_r12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa31fa50177b3ed391a0eca377cf5c0d66" prot="public">
          <name>R_r13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faeb2e1cc6431ff17909198684f2662b13" prot="public">
          <name>R_r14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa796a3f35858c33b37ab5ef6bfeff8b4d" prot="public">
          <name>R_r15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa808296741df7fd5c97d3d03c64ea7782" prot="public">
          <name>R_al</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa3e92f361558b0748847266ebe2757710" prot="public">
          <name>R_cl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fac89e33ac3c671c79362c4bf1740521ca" prot="public">
          <name>R_dl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fad7ab046c6c14595d8304c66649548143" prot="public">
          <name>R_bl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa7bb85f64e3c2f7287e140560d7e82040" prot="public">
          <name>R_ah</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa76c8775e18beb265c5a2f87df1538a30" prot="public">
          <name>R_ch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faded9644afbd59d4b67647ef6dda8cd92" prot="public">
          <name>R_dh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fac0877b96767b457e05b77eddbdd4eb04" prot="public">
          <name>R_bh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faa2212883c98d1fb3fb2bb7c8c3e9b88a" prot="public">
          <name>R_spl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa2cb544f552dafcd5ebee22f2ac7294aa" prot="public">
          <name>R_bpl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fadf94ef9564741ce7ae31304909426396" prot="public">
          <name>R_sil</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa8206e4bad78e760c24e390457a946477" prot="public">
          <name>R_dil</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa59922dd00d939a5aeedfdaaf35a8536e" prot="public">
          <name>R_ip</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faadbd320e7dde3fce857dc744b8334b1c" prot="public">
          <name>R_es</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faffc5056cf2ddd00ad762f36355c73e7d" prot="public">
          <name>R_cs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa11de4f591563a18cd347a02efce53511" prot="public">
          <name>R_ss</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa624fbdf532ab967487ff1b70da1fbe44" prot="public">
          <name>R_ds</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa21f4c70294e540ad6caffdacb802c332" prot="public">
          <name>R_fs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa2a0e5c1902e2ce8723da7e3105d95e8d" prot="public">
          <name>R_gs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa87df73ad936676b17ad6b377d40536c4" prot="public">
          <name>R_cf</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faea9c3aa2affb02cd6516eaac2280b3ab" prot="public">
          <name>R_zf</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fac56f6b7583e70f079086a409b8b224d0" prot="public">
          <name>R_sf</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab391c863776aa751f88e93e388b9423a" prot="public">
          <name>R_of</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf39a2c11643e4cb64e986ac7bda2f8aa" prot="public">
          <name>R_pf</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa69288754b998d9d73d689e5c44f707d1" prot="public">
          <name>R_af</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fac5c030857b7059a641208601a8e9fd58" prot="public">
          <name>R_tf</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa0b8e61149b23ee6e7b395e6fa67b26d3" prot="public">
          <name>R_if</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fafae2ab68060e00767d265e2f9486ebd3" prot="public">
          <name>R_df</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab9357806d13eda70b77c6922fd1d6049" prot="public">
          <name>R_efl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faa3e4872032d08575b83fda4ce37acf2a" prot="public">
          <name>R_st0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf627b2df492d484dbbe9e0461f43d62d" prot="public">
          <name>R_st1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab9c864f8cdae754fc59550505b3c7a60" prot="public">
          <name>R_st2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa1865bd8c11a50d1e598ac3ef70b18760" prot="public">
          <name>R_st3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf7852a4b2d19b275cb06c946d6bec7ae" prot="public">
          <name>R_st4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf9a9d82435d8af96b83b4973ab166782" prot="public">
          <name>R_st5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa433ef0f1ab82298413c94faf71fa2635" prot="public">
          <name>R_st6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faa5f638b7ce63f68632a49d90f7a375f6" prot="public">
          <name>R_st7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa5a5a6c587aa15ac14ab095e4c8fa205f" prot="public">
          <name>R_fpctrl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa0e92d951a29ba2496d42e7870af91fd1" prot="public">
          <name>R_fpstat</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf981bbe37514dfa261add7c74f6f4cfa" prot="public">
          <name>R_fptags</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fadb1374ed1796319abcc90b216d807eef" prot="public">
          <name>R_mm0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa381399e46654500078965ef7c92c35b0" prot="public">
          <name>R_mm1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faff124026faaee8aaae22b779128d9b5a" prot="public">
          <name>R_mm2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab3cffe31a0944086e09255cab87aa997" prot="public">
          <name>R_mm3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa0a8bb4b5129f206a8b7b06bf0f8a76a6" prot="public">
          <name>R_mm4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa7aa23f544a3844ee88c15904a4adb397" prot="public">
          <name>R_mm5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa10e7723e16be930d4efcb134e442fa82" prot="public">
          <name>R_mm6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fae98476c1054607f5dbc6a7a294e7432b" prot="public">
          <name>R_mm7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faacbe49218bc379d8a2927e32805405e2" prot="public">
          <name>R_xmm0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faedde08de071212d652afb0e204ce7974" prot="public">
          <name>R_xmm1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa231a32384922497bbea2c36b37ad4271" prot="public">
          <name>R_xmm2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa7c7cc6c4b898fd3f80d821f1b765cc1b" prot="public">
          <name>R_xmm3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab47c72104bca4e52350a5ca2648f98fb" prot="public">
          <name>R_xmm4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa862a191c22479a5956ead844d9706fa3" prot="public">
          <name>R_xmm5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa08c18f4b22b7fd2ba265bf5529ad813c" prot="public">
          <name>R_xmm6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa5b70b36701da0f5de53f34ae8b7f4075" prot="public">
          <name>R_xmm7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa8e68cb7a7f925b958118f6b99e343ca7" prot="public">
          <name>R_xmm8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fae81963b03c3486fc662bae7b21f925b9" prot="public">
          <name>R_xmm9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faa590721ce89bc5ee76c6eb4e4ff67bf1" prot="public">
          <name>R_xmm10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab760c26980eb47384dc74c77a3db1286" prot="public">
          <name>R_xmm11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa64e58c2ec4ceae1ab15f6b60470d068c" prot="public">
          <name>R_xmm12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fabea42acd7421bcab5ac54c9401be9cdf" prot="public">
          <name>R_xmm13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab03e520d203876fd7bc66c72284ab16d" prot="public">
          <name>R_xmm14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab28c2f139e06168c516f2b20c1e60f95" prot="public">
          <name>R_xmm15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fafc53b478a0e31e22c7f63a9a113c6c07" prot="public">
          <name>R_mxcsr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa2fe85858ab979adbbf7e364425294838" prot="public">
          <name>R_ymm0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faa4d768b6968e428897c182fefc47c291" prot="public">
          <name>R_ymm1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fafe6e6a12bfac183d16b0e3b1464097d3" prot="public">
          <name>R_ymm2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa3e2484e711d223eb7ea7debb60d1b09e" prot="public">
          <name>R_ymm3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa85de590f02fc9d9849d4eb83e0041c7f" prot="public">
          <name>R_ymm4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab214edf2033914368a6189cf9de4fe2d" prot="public">
          <name>R_ymm5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf0b1269e439a65701d20d368cbe85982" prot="public">
          <name>R_ymm6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa537e1a5b6df4f6a1096b7094657e4d39" prot="public">
          <name>R_ymm7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa873594a29e14872415db74a5da8ba877" prot="public">
          <name>R_ymm8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fadf5557bc16d7204e026c7b91c4659335" prot="public">
          <name>R_ymm9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa4c0cec4c12e2122ea9b020b8eaec1cb4" prot="public">
          <name>R_ymm10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa795a3df2a04a1cf20465e04f9bd9e14b" prot="public">
          <name>R_ymm11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab29a1b37b7ff61f29f3b2dc0c1fcd004" prot="public">
          <name>R_ymm12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa6441d4220c9d202742ab78a7765ac4b0" prot="public">
          <name>R_ymm13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa3902570f523835cfdafa53050faafaa8" prot="public">
          <name>R_ymm14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa24ef03650e7aef2dbaa81d5b0a95bd3d" prot="public">
          <name>R_ymm15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faed64b65942974524a84a6f9bf49cdabb" prot="public">
          <name>R_bnd0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa259937abad64bede9aad8f2cedea3761" prot="public">
          <name>R_bnd1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faffda5826a5844057da04736925934f90" prot="public">
          <name>R_bnd2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa1cf80ba5aac5beab46f190260e565401" prot="public">
          <name>R_bnd3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa0bd808e0cd24e843536e77559f3d3aa3" prot="public">
          <name>R_xmm16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faee9abcc5fa4ccb5def48458672e3a2f9" prot="public">
          <name>R_xmm17</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf969ef672c9cd8aef7b7b07a5a76f0a9" prot="public">
          <name>R_xmm18</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa0a1942a418ce9b6676108c2c015538bd" prot="public">
          <name>R_xmm19</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faaedcaca632caca35c9de1f6e76f6cff3" prot="public">
          <name>R_xmm20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fad86f321a9db781cd3216b399c5cebea4" prot="public">
          <name>R_xmm21</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fae3c4216cdcb8c4642222119a53c30e2a" prot="public">
          <name>R_xmm22</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa4755a7104558b896ee88367e875aea88" prot="public">
          <name>R_xmm23</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fad29f3ecb3e9e1972a6a96813f2b4c64a" prot="public">
          <name>R_xmm24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa0eb68c08279df3fac2dd4aca6fdfff23" prot="public">
          <name>R_xmm25</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faddce8bb768c54318a439be392bfa59a8" prot="public">
          <name>R_xmm26</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa5900602ca0307b9f11f03e0f6d475b67" prot="public">
          <name>R_xmm27</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa264662cfe40bdfa7dfc65eaf4905bfd3" prot="public">
          <name>R_xmm28</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa2338ae18c6eaf4770db03905de2d4bd2" prot="public">
          <name>R_xmm29</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fae19e256d178c6edb71cd36bff1121c2e" prot="public">
          <name>R_xmm30</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa09de540ca41e75191342a040a6a95f2f" prot="public">
          <name>R_xmm31</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa47a31cd1c7b28be5f72cecb6d4b8ba0d" prot="public">
          <name>R_ymm16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faaaaae745a26d17ebf3c82b44b3f8f50f" prot="public">
          <name>R_ymm17</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa54462b5b7cb46565bbcb43fad066bb51" prot="public">
          <name>R_ymm18</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa0355186262ed1a8746e638279bbe9189" prot="public">
          <name>R_ymm19</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa5cf8cbeb91343edeb7d62297d2100fbf" prot="public">
          <name>R_ymm20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fae88613eaea7aa660ab4415b374c1d6a3" prot="public">
          <name>R_ymm21</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faecb9db9efe48ac94c92c64273657feb2" prot="public">
          <name>R_ymm22</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa6f430149e2dcca96103251158ab1676c" prot="public">
          <name>R_ymm23</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa8cb30a47fea82b2af3071ba6b911c826" prot="public">
          <name>R_ymm24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa27040f9b2bbc03cfc2278463238a0bff" prot="public">
          <name>R_ymm25</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fadb92b3e247f7f8c0148e5c9790016493" prot="public">
          <name>R_ymm26</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa80e2ff69f7dd8508a63a2af4ba9c0c3e" prot="public">
          <name>R_ymm27</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa0118867148fa14ed831e24a0d247f121" prot="public">
          <name>R_ymm28</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fad9e91ba07f29d3f83d322f05035a7595" prot="public">
          <name>R_ymm29</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faa468ded5ad63caebd13bb562f7bcc62e" prot="public">
          <name>R_ymm30</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa1603b28bc00b03395cabfb22ac5e3b20" prot="public">
          <name>R_ymm31</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa18b461243498a9d50428b984dd55dd07" prot="public">
          <name>R_zmm0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa5b8d4a23d38f630e598a860e0bce763f" prot="public">
          <name>R_zmm1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fac238a3e3fee4eca899f7896521d06e33" prot="public">
          <name>R_zmm2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faa8e56be3385f9b337b8cb4d251679cb6" prot="public">
          <name>R_zmm3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fac60417bf3554cb8760382f4df654d35d" prot="public">
          <name>R_zmm4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa364b48d2843183a714a3dc70d5d18b73" prot="public">
          <name>R_zmm5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fabb45a9fc98e9a7f878ec693ec2a7061f" prot="public">
          <name>R_zmm6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa9fa154852bce58edb645bd59140c46c9" prot="public">
          <name>R_zmm7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fae0f5aab489cb8791b5a9d5eb3d0c4450" prot="public">
          <name>R_zmm8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faedb4e2916bf3cdfdac65b0efda7bdea5" prot="public">
          <name>R_zmm9</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fabaa07d92cb3bedd28b44b9c819afcf49" prot="public">
          <name>R_zmm10</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa6bcc61e25dc5269a29b168cdb22b8991" prot="public">
          <name>R_zmm11</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf906ae1a528017fb7c7a1efbd1ffa52e" prot="public">
          <name>R_zmm12</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa6ca2459e807142cc50e0e515b378afb9" prot="public">
          <name>R_zmm13</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf38e5833755ede4ad34b1ba289d63fdf" prot="public">
          <name>R_zmm14</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faf3e4e72e975f9da62b7fecc4834e13e4" prot="public">
          <name>R_zmm15</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa781b1bb123ecd0d6b6aa37b98109bbc6" prot="public">
          <name>R_zmm16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa21f64b6b38c5a988b808141ad9340463" prot="public">
          <name>R_zmm17</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fad2caafe4d1520d86eb9a6c55febfeddb" prot="public">
          <name>R_zmm18</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa91c2bd2e740593f2bdd66be43500c229" prot="public">
          <name>R_zmm19</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa600a8d9e70872f0ea19c839d17c6a4af" prot="public">
          <name>R_zmm20</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa4029afd4b384028a3558596d50076de2" prot="public">
          <name>R_zmm21</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab88774abd26f46ea0ef81244d7082a7a" prot="public">
          <name>R_zmm22</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab9e243c050edd6fe12f6cdc80ede42e1" prot="public">
          <name>R_zmm23</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa8423932dfebc5b55316f6bf3de6f4135" prot="public">
          <name>R_zmm24</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faa031a311e5e4bb30a2a229aed3bb9504" prot="public">
          <name>R_zmm25</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa5ef4f6f1d9fc48653e8ca7359099de13" prot="public">
          <name>R_zmm26</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab4ce82e9f20fa2f603019e8af5248636" prot="public">
          <name>R_zmm27</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faccd0ec697c7473c78de52f5489b9237b" prot="public">
          <name>R_zmm28</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa04503a82512f7e32571bca3864e060f3" prot="public">
          <name>R_zmm29</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fadb3b0546cb436b06d0d581362eb78347" prot="public">
          <name>R_zmm30</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faaaaa28bab2a6c3995bb21498ea833fed" prot="public">
          <name>R_zmm31</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa349a657784fa42d85d1d7d8e5ebbf122" prot="public">
          <name>R_k0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa31bdb8c27852a7142851640982c785fc" prot="public">
          <name>R_k1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fae25de1c35d704f96a2048cfea1dfd9b8" prot="public">
          <name>R_k2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fab746a8628bf3f690e9f02688651891ee" prot="public">
          <name>R_k3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa59ddb344b9f17f1ac12762cb6b9c9378" prot="public">
          <name>R_k4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa7e3073390dea23be85b03748df86495e" prot="public">
          <name>R_k5</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620faa94984287a66f79f7dd4943550a418d9" prot="public">
          <name>R_k6</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fae04b23fbd05dd0cbcea1195de555a499" prot="public">
          <name>R_k7</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a4242ca1456ce9a1ccaa5185ba12c620fa12dc40150bb258767e301731b4b4f10d" prot="public">
          <name>R_last</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="93" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="92" bodyend="289"/>
      </memberdef>
      <memberdef kind="enum" id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327" prot="public" static="no">
        <name>spec_func_type_t</name>
        <enumvalue id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327a437041d0d75837cefd8367c59b2e872b" prot="public">
          <name>SF_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327a623185186ad549adeae19167f98aa133" prot="public">
          <name>SF_EH_PROLOG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327a83e344030de51e3afed49b743ee4e148" prot="public">
          <name>SF_SEH_PROLOG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327abcde4b3080e1519418f13778518acca9" prot="public">
          <name>SF_SEH_EPILOG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327a22a896595ef8636dac360b42785596e9" prot="public">
          <name>SF_ALLOCA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327a61a6d9bfc5cf4b93e5de15c705ba984b" prot="public">
          <name>SF_CHK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327afb268f96f8e6a963997bdcc615e240d2" prot="public">
          <name>SF_SYSINIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327aca60babdc51b1d85b7a7e4c6c990777a" prot="public">
          <name>SF_EH_EPILOG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intel_8hpp_1a713e827fc318f03cedb47acb5fb0b327ac253fd63bf36a6a9c48118bd237fec90" prot="public">
          <name>SF_LSTRCATN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="995" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="994" bodyend="1005"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="intel_8hpp_1a50d036aaa958ec43473f7b5380e64eef" prot="public" static="no">
        <type>short</type>
        <definition>typedef short regnum_t</definition>
        <argsstring></argsstring>
        <name>regnum_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="90" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="intel_8hpp_1ad07b331869d1a97ad579e7e8b0616600" prot="public" static="no">
        <type>const <ref refid="structregval__t" kindref="compound">regval_t</ref> &amp;idaapi</type>
        <definition>typedef const regval_t&amp; idaapi getreg_t(const char *name, const regval_t *regvalues)</definition>
        <argsstring>(const char *name, const regval_t *regvalues)</argsstring>
        <name>getreg_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1024" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1024" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="intel_8hpp_1a3d75f1f67e314074d80772302715b5f7" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int EVEX_R</definition>
        <argsstring></argsstring>
        <name>EVEX_R</name>
        <initializer>= 0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="77" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1ac3534c824ee43d3151fc8188424e7eb6" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int EVEX_L</definition>
        <argsstring></argsstring>
        <name>EVEX_L</name>
        <initializer>= 0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="78" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a5989430edcf3500a96109c07441a14c5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int EVEX_z</definition>
        <argsstring></argsstring>
        <name>EVEX_z</name>
        <initializer>= 0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="79" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1acf1a3cb227b3e1b2f26bd860f0233f27" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int EVEX_b</definition>
        <argsstring></argsstring>
        <name>EVEX_b</name>
        <initializer>= 0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="80" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a5a8261f2463359ed3d6201fed8a06255" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int EVEX_V</definition>
        <argsstring></argsstring>
        <name>EVEX_V</name>
        <initializer>= 0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="81" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1af8818563ac5a03ffcbf18422d42d1b9e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int REX_W</definition>
        <argsstring></argsstring>
        <name>REX_W</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="84" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a00e9bd0a4678e87f90a59346ba4f30dd" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int REX_R</definition>
        <argsstring></argsstring>
        <name>REX_R</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="85" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a5266921d994194a9464f9d994c162fca" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int REX_X</definition>
        <argsstring></argsstring>
        <name>REX_X</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="86" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a9324777c55df7f60999189567d2d7818" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int REX_B</definition>
        <argsstring></argsstring>
        <name>REX_B</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="87" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a704132130e6beca75d5ebe4b2f28c721" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int VEX_L</definition>
        <argsstring></argsstring>
        <name>VEX_L</name>
        <initializer>= 0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="88" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a4b8ebf60fc49ed0f971198674a26b931" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int INDEX_NONE</definition>
        <argsstring></argsstring>
        <name>INDEX_NONE</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="648" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="648" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a1a1cf8f0c2fd57eed545403b4585b125" prot="public" static="no" mutable="no">
        <type><ref refid="classnetnode" kindref="compound">netnode</ref></type>
        <definition>netnode intel_node</definition>
        <argsstring></argsstring>
        <name>intel_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="739" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a9ccecabed9e382bbdd2bddd0a17d6575" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char callee_tag</definition>
        <argsstring></argsstring>
        <name>callee_tag</name>
        <initializer>= &apos;A&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="757" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="757" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1abfb06ac917690a04ae3d959c26767294" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char fbase_tag</definition>
        <argsstring></argsstring>
        <name>fbase_tag</name>
        <initializer>= &apos;b&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="758" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1afc5d144b5768545653a5ed3d9940712f" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char frame_tag</definition>
        <argsstring></argsstring>
        <name>frame_tag</name>
        <initializer>= &apos;f&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="759" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a378e624d0ba1081a862695e7fd0afd04" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char purge_tag</definition>
        <argsstring></argsstring>
        <name>purge_tag</name>
        <initializer>= &apos;p&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="760" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1aa0f707fd0bcf26c5b74c6d3fefed6376" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char ret_tag</definition>
        <argsstring></argsstring>
        <name>ret_tag</name>
        <initializer>= &apos;r&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="761" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1ac46eeadd3ce60c3ca06fafd1adecb7d2" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char pushinfo_tag</definition>
        <argsstring></argsstring>
        <name>pushinfo_tag</name>
        <initializer>= &apos;s&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="762" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a853634aefc0c02f93f47adef264dba74" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char is_ptr_tag</definition>
        <argsstring></argsstring>
        <name>is_ptr_tag</name>
        <initializer>= &apos;P&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="763" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1ad0ed44d3a260651311fdb8135370176c" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char finally_tag</definition>
        <argsstring></argsstring>
        <name>finally_tag</name>
        <initializer>= &apos;F&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="764" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a46adb0b885d419ce05acf3ef52019033" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char handler_tag</definition>
        <argsstring></argsstring>
        <name>handler_tag</name>
        <initializer>= &apos;h&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="765" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a8e04fa6e52ce9f5389e17caf0ccb16e5" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char vxd_tag1</definition>
        <argsstring></argsstring>
        <name>vxd_tag1</name>
        <initializer>= &apos;V&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="766" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1a4fdf40a3422368f55aba1fcaad110aca" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char vxd_tag2</definition>
        <argsstring></argsstring>
        <name>vxd_tag2</name>
        <initializer>= &apos;W&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="767" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intel_8hpp_1aaaa76185ed7d884a3f1d2c9a73c702de" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 idpflags</definition>
        <argsstring></argsstring>
        <name>idpflags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="813" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="intel_8hpp_1a0a1df47a88aded50d59e92a4956b5351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CASSERT</definition>
        <argsstring>(PROC_MAXOP&lt;=UA_MAXOP)</argsstring>
        <name>CASSERT</name>
        <param>
          <type>PROC_MAXOP&lt;=</type>
          <declname>UA_MAXOP</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="15" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1adfff6a3c71e25733765e93c1e2128d35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tasm_ideal</definition>
        <argsstring>(void)</argsstring>
        <name>tasm_ideal</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="19" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a364170876b3acaf6cf392d8722a218f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CASSERT</definition>
        <argsstring>(R_last==173)</argsstring>
        <name>CASSERT</name>
        <param>
          <type>R_last</type>
          <defval>=173</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a01be50716d0b4399b1f1eab9f4c4855a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_segreg</definition>
        <argsstring>(int r)</argsstring>
        <name>is_segreg</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="293" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="293" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a73ebed214b64e5a7dd581e0e95031aaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_fpureg</definition>
        <argsstring>(int r)</argsstring>
        <name>is_fpureg</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="294" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a309af580a14db1f0c704c590f219c8c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_mmxreg</definition>
        <argsstring>(int r)</argsstring>
        <name>is_mmxreg</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="295" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="295" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a6be09038778b0abff17bdfbcda56d85c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_xmmreg</definition>
        <argsstring>(int r)</argsstring>
        <name>is_xmmreg</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="296" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a17643a75b9cae15d68b99631ce80d1db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_ymmreg</definition>
        <argsstring>(int r)</argsstring>
        <name>is_ymmreg</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="297" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a50971aedd68ca953f251c798cdc7fe49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cvt_to_wholereg</definition>
        <argsstring>(int _reg, bool allow_high_byte_regs)</argsstring>
        <name>cvt_to_wholereg</name>
        <param>
          <type>int</type>
          <declname>_reg</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_high_byte_regs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a9504678802beace1ad39c17ce155d0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int calc_dbg_reg_index</definition>
        <argsstring>(const char *name)</argsstring>
        <name>calc_dbg_reg_index</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a0df2a258a24018b2b164e92e2e36eae2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool insn_jcc</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>insn_jcc</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="304" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="304" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ab803a4772b75920dc3b1ed99c781bba6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool insn_default_opsize_64</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>insn_default_opsize_64</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="344" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="344" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1aa05a6061dcba3d60b4202bef6f11947c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mode16</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>mode16</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="387" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="387" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a238ad2024ab0e3866db3a517ab39826f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mode32</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>mode32</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="388" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="388" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1aedd553d724397fa95c3291fa21616529" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mode64</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>mode64</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="389" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="389" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a7e25b412f52b4888707122bae3f58981" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool natad</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>natad</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="390" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="390" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a7ebc32ff33f18519615d6faaf49ade13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool natop</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>natop</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="391" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="391" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1abbf780e8b47c7472301c94587accfcf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vexpr</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>vexpr</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="392" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="392" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a31def976228c516b8e90e406f236dbc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool evexpr</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>evexpr</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="393" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="393" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a46959297f9567af98266c0dcb9e6ec7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xopexpr</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>xopexpr</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="394" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="394" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a606c71855455eb08498013a3e12beed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ad16</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>ad16</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="396" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="396" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1abdab0c509b016e89af103152952687be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ad32</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>ad32</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="402" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="402" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ab3845c9823fbe671aac207bad74a9666" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ad64</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>ad64</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="410" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="410" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ad71e3843f24eae66bd54b68438939a05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool op16</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>op16</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="421" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="421" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a5cfb8c242a5dcc919a1b6eb945f1d13f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool op32</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>op32</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="429" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="429" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ae8983e4c86b1a112248c5e9a2e241a59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool op64</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>op64</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="437" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="437" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a9026f575301a0fd92ac7df7b56da94f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool op256</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>op256</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="449" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="449" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a5691933ce6ccd2e5ad0b35faf499bcf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool op512</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>op512</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="457" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="457" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a431daf84019e8497251f16f77677e861" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_vsib</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>is_vsib</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="462" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="462" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1af41ff8f8ac7b0b48f7e973c4d77ce878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>regnum_t</type>
        <definition>regnum_t vsib_index_fixreg</definition>
        <argsstring>(const insn_t &amp;insn, regnum_t index)</argsstring>
        <name>vsib_index_fixreg</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>regnum_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="506" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="506" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1afe8ffb09b0e84692c1d3d5228a480e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int sib_base</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x)</argsstring>
        <name>sib_base</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="569" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="569" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a901e79f79550d1a3dcde42f453628890" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>regnum_t</type>
        <definition>regnum_t sib_index</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x)</argsstring>
        <name>sib_index</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="581" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="581" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a4cd7c9d9af7e3ec14903659f4422d435" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int sib_scale</definition>
        <argsstring>(const op_t &amp;x)</argsstring>
        <name>sib_scale</name>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="597" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="597" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a622175da49912c7f8fa88b5666b4e7d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int x86_base</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x)</argsstring>
        <name>x86_base</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="606" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a47eb9769510481943101b305e0474994" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int x86_base_reg</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x)</argsstring>
        <name>x86_base_reg</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="613" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="613" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a02ace85a445a0bc9f04bc6e3846f7e89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int x86_index</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x)</argsstring>
        <name>x86_index</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="650" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="650" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1afd8773ea84c68dee26b6fb733d290ce9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int x86_index_reg</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x)</argsstring>
        <name>x86_index_reg</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="655" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="655" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1af24f61c2dffbb4fc4a12e6c7a32ed734" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int x86_scale</definition>
        <argsstring>(const op_t &amp;x)</argsstring>
        <name>x86_scale</name>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="684" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="684" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a32ca790e4c44f9fb59869ab922e499ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int has_displ</definition>
        <argsstring>(const op_t &amp;x)</argsstring>
        <name>has_displ</name>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="690" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="690" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ab9eb490442487f3932ecf468f2e35ac5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_tls_segpref</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>has_tls_segpref</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="696" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="696" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a649e4b1a783b94214fcbd259bad32914" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mem_as_displ</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x)</argsstring>
        <name>mem_as_displ</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="705" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="705" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ade6a2af22a0ef72b68c0fae052e140c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_stack_ref</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x, int breg)</argsstring>
        <name>is_stack_ref</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>breg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="716" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a1e0a6b411b6af1a5c97a4adf85edfae8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>op_dtype_t</type>
        <definition>op_dtype_t address_dtype</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>address_dtype</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="719" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="719" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a485b3967bb85f6024744575e3749aa27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>op_dtype_t</type>
        <definition>op_dtype_t operand_dtype</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>operand_dtype</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="725" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="725" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a56c75cb321e3119856db895a8bb4fff9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_io_insn</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>is_io_insn</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="730" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="730" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a5171c1e371cccc00aadd0851615a1ba4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_callee</definition>
        <argsstring>(ea_t ea, ea_t callee)</argsstring>
        <name>set_callee</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>callee</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="769" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="769" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a5835d0ee37a5660dfe3440e60f4de83b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t get_callee</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>get_callee</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="770" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="770" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1af844c7f6733ec8be970b2a230070affb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void del_callee</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_callee</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="771" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="771" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1adb365a848e056829477945fa8a19e763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_fbase_reg</definition>
        <argsstring>(fbase_reg_t *fbr, ea_t ea, func_t *pfn, bool try_old_fbr=false)</argsstring>
        <name>get_fbase_reg</name>
        <param>
          <type><ref refid="structfbase__reg__t" kindref="compound">fbase_reg_t</ref> *</type>
          <declname>fbr</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>try_old_fbr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="785" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1aba1205f10143b8d69c0f47b53de74ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_fbase_reg</definition>
        <argsstring>(ea_t ea, const fbase_reg_t &amp;fbr, bool overwrite=true)</argsstring>
        <name>set_fbase_reg</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>const <ref refid="structfbase__reg__t" kindref="compound">fbase_reg_t</ref> &amp;</type>
          <declname>fbr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>overwrite</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="790" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a9b8073e1a7353ae2931e6a0a98c9e78e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_ret_target</definition>
        <argsstring>(ea_t ea, ea_t *target)</argsstring>
        <name>get_ret_target</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>ea_t *</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="794" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="794" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a1c58da2d679d488ed3b16ea096dc401b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_ret_target</definition>
        <argsstring>(ea_t ea, ea_t target)</argsstring>
        <name>set_ret_target</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="803" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="803" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a8b453400e9a810fdd764862af6011da0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void del_ret_target</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>del_ret_target</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="808" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="808" bodyend="811"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a143abcaa0ecd5dddf3cc693dab8a866a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_push</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_push</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="843" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="843" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a3e5d759bf55c4dd7e2de44c8722bd716" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_nop</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_nop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="844" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="844" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ae7f9c4898312d5844667c187ad1cc851" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_movoff</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_movoff</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="845" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="845" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ad512cb8bab8f27d7531cd29063cfd422" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_movoff2</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_movoff2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="846" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="846" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ad3efc2675b77d94312244f0e6998073f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_zeroins</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_zeroins</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="847" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="847" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a1ded3d25569e008edb453be3443f907f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_brtti</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_brtti</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="848" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="848" bodyend="848"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a984298e9e2fe205905f8d55f6240f77d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_urtti</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_urtti</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="849" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="849" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a7cfee01201a0fadc9d3a392a72b1a850" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_fexp</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_fexp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="850" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="850" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a87d96eb7750aae378aa26bb5ff9b81a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_difbase</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_difbase</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="851" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="851" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a33b7ccc1bbc6d8f60c7e15e0257090f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_nopref</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_nopref</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="852" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="852" bodyend="852"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a1b1663ebc198d3f43415ae40f4374bae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_vxd</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_vxd</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="853" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="853" bodyend="853"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ac43c4c706400e4350b3c4ab4abc972d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_fpemu</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_fpemu</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="854" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="854" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a73b6740d07fbc54ed61cdee8f26437c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_showrip</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_showrip</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="855" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="855" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ae6294c2599f3207e1231c605d4bb4d3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_seh</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_seh</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="856" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="856" bodyend="856"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1aae48a7ad54776b8794a06aa2314bd044" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool should_af_int3stop</definition>
        <argsstring>(void)</argsstring>
        <name>should_af_int3stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="857" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="857" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a32f09d82fbb815bb12027401ba0e6e64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_arith_lea</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x)</argsstring>
        <name>is_arith_lea</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="862" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="862" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a6fd583395ed47a5e81670b6d83fc26e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_forbidden_imul_flag</definition>
        <argsstring>(const insn_t &amp;insn, const op_t &amp;x, flags_t F)</argsstring>
        <name>is_forbidden_imul_flag</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a55dd00e03168fb5180830e87ef0a2c57" kindref="member">flags_t</ref></type>
          <declname>F</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="870" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="870" bodyend="875"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a57c1d12a4efa44e145a152e87a4395d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_push_ecx</definition>
        <argsstring>(uchar b)</argsstring>
        <name>is_push_ecx</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="877" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="877" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a98d850aedd65e844cb3221fe199af983" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_push_eax</definition>
        <argsstring>(uchar b)</argsstring>
        <name>is_push_eax</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="882" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="882" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a557188dc08aa229aceb81fa2420fb70d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_push_edx</definition>
        <argsstring>(uchar b)</argsstring>
        <name>is_push_edx</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="887" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="887" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ad40083a1ccd058ac54449e41c4dc546d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_push_ebx</definition>
        <argsstring>(uchar b)</argsstring>
        <name>is_push_ebx</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="892" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="892" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a1394d21eb722e2a77ea5e57505ff8fa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_volatile_reg</definition>
        <argsstring>(int r)</argsstring>
        <name>is_volatile_reg</name>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="897" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="897" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a9902033c1e519188025acc84a0dfe452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>spec_func_type_t</type>
        <definition>spec_func_type_t get_spec_func_type</definition>
        <argsstring>(const insn_t &amp;insn, ea_t callee, sval_t *p_delta)</argsstring>
        <name>get_spec_func_type</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>callee</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref> *</type>
          <declname>p_delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1007" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1aed48d78df41c588581e06ddb70d6a707" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_msabi</definition>
        <argsstring>(void)</argsstring>
        <name>is_msabi</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1012" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1012" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a3713ec92c3c626c7765bc58e0c56890a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int pc_shadow_area_size</definition>
        <argsstring>()</argsstring>
        <name>pc_shadow_area_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1018" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1018" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a572eb189f4203dfc9e1ac83c6400a7fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isProtected</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>isProtected</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1227" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1227" bodyend="1236"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a045dd57cedb369d1208d9b0411b53739" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isAMD</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>isAMD</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1238" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1238" bodyend="1238"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a4aa1dde7ad1b9e6682b730d8218e34e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isp4</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>isp4</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1239" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1239" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a98afc8abde8e83c768cba3257c366a83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isp3</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>isp3</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1240" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1240" bodyend="1240"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a9a313f6e929dfa9d78dd0d0bec503d97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is3dnow</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>is3dnow</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1241" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1241" bodyend="1241"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a8363f5f0ba07bfbd87cd7e4b44b4a428" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ismmx</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>ismmx</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1242" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1242" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a1ff842b0ca8d12c730f6ea8d454f6e76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isp2</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>isp2</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1243" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1243" bodyend="1243"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1adf9889d30f798d413044184dc9bb078c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is686</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>is686</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1244" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1244" bodyend="1244"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1ad156dddcc116674b1c3e04eff6399e93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is586</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>is586</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1245" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1245" bodyend="1245"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a56a40ef3b16b6591ce7bce698137f99e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is486</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>is486</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1246" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1246" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1a57daed46bf06a0143710bac0ba8d5c02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is386</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>is386</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1247" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1247" bodyend="1247"/>
      </memberdef>
      <memberdef kind="function" id="intel_8hpp_1adc7d7a6b2f7180fd4ecbfa0f882bd2fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is286</definition>
        <argsstring>(uint32 type)</argsstring>
        <name>is286</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" line="1248" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp" bodystart="1248" bodyend="1248"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/intel.hpp"/>
  </compounddef>
</doxygen>
