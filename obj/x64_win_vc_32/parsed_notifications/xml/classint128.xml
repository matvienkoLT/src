<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classint128" kind="class" language="C++" prot="public">
    <compoundname>int128</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classint128_1a80ae32bb7195e26998a44dcb25dec397" prot="private" static="no" mutable="no">
        <type>ulonglong</type>
        <definition>ulonglong int128::l</definition>
        <argsstring></argsstring>
        <name>l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="119" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classint128_1abdb74a526f174e788cd6bc892b4ed9b1" prot="private" static="no" mutable="no">
        <type>longlong</type>
        <definition>longlong int128::h</definition>
        <argsstring></argsstring>
        <name>h</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="120" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classint128_1a4c0ad808d866f80efa054eaf149e3ef7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class uint128</definition>
        <argsstring></argsstring>
        <name>uint128</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="121" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1aefecb5b80faf55ec60cbd911fda58ad2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend ulonglong</type>
        <definition>ulonglong low</definition>
        <argsstring>(const int128 &amp;x)</argsstring>
        <name>low</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="130" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1af5cec5ef94af89884681f6351158c7e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend ulonglong</type>
        <definition>ulonglong high</definition>
        <argsstring>(const int128 &amp;x)</argsstring>
        <name>high</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="131" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1a39e33578763792ab9cd00246b4a7eae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator+</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ae6e7937d360d29b10eef1f45e8e2a9ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator-</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ac6cc950efe680fd3112bee6ed5d17734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator/</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1a7bf5456c2694ee3ea8d8594a4b3950d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator%</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="135" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ae951f1dc0ecc37307ba42783643b023e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator*</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="136" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1a379e7d6c49e821f86f1bda6dc963bdcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator|</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator|</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="137" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1adc13db438cfbc6aa42a3a3afc63eeacc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator&amp;</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator &amp;</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="138" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1a24c95b53b0e175c7fb13727a61f8b6e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator^</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator^</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="139" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ac4b410ed4d5beaa26034845f30306e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator&gt;&gt;</definition>
        <argsstring>(const int128 &amp;x, int cnt)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="140" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ad1c5a8c9446a26477cc841db03954962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator&lt;&lt;</definition>
        <argsstring>(const int128 &amp;x, int cnt)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1a3c37f4ea04578cffe9f26d68d7b2953c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator+</definition>
        <argsstring>(const int128 &amp;x)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="154" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ae38548728b76ba6f75adc5c8fe1ad35b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator-</definition>
        <argsstring>(const int128 &amp;x)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1a3414a97cb59530a710dca72c08219ee4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classint128" kindref="compound">int128</ref></type>
        <definition>int128 operator~</definition>
        <argsstring>(const int128 &amp;x)</argsstring>
        <name>operator~</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="156" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ab57c51dba646b8d9e6439a23ecce334f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator==</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="157" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1a080063915183805a7fb0d0abcf452c8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator!=</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="158" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ad7990cacc387a48e446b1c80f144c54a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator&gt;</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="159" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1a72efa9da252819ba9a066142fdab6405" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator&lt;</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="160" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ac90522ca56510eafbb6b34fd6e016e69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator&gt;=</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="161" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="friend" id="classint128_1ad66feb457c30894836e6603bfd7df029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator&lt;=</definition>
        <argsstring>(const int128 &amp;x, const int128 &amp;y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="162" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classint128_1a1dd27a513ba209741a3e7ec7169579c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>int128::int128</definition>
        <argsstring>(void)</argsstring>
        <name>int128</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="123" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1a0e16027605964af2efc67862dc934c07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>int128::int128</definition>
        <argsstring>(uint x)</argsstring>
        <name>int128</name>
        <param>
          <type><ref refid="pro_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="124" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1acd7883dd681524e4b061da299924c523" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>int128::int128</definition>
        <argsstring>(int x)</argsstring>
        <name>int128</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="125" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1a48025e74d33214438d6e34d2d80b8859" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>int128::int128</definition>
        <argsstring>(ulonglong x)</argsstring>
        <name>int128</name>
        <param>
          <type>ulonglong</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="126" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1a2089266c1c9d516c6b1d8f152df71aa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>int128::int128</definition>
        <argsstring>(longlong x)</argsstring>
        <name>int128</name>
        <param>
          <type>longlong</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="127" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1aa937aef506ff202442c5a34c78068917" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>int128::int128</definition>
        <argsstring>(ulonglong ll, ulonglong hh)</argsstring>
        <name>int128</name>
        <param>
          <type>ulonglong</type>
          <declname>ll</declname>
        </param>
        <param>
          <type>ulonglong</type>
          <declname>hh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="128" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1ac7b460596a01d3c714ecc5f441ad586a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>int128::int128</definition>
        <argsstring>(const uint128 &amp;x)</argsstring>
        <name>int128</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="129" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1aaf90b4d6abddcb0ff1233d98914d4e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator+=</definition>
        <argsstring>(const int128 &amp;y)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1a1889b4e167d52b80e8cc2923e63559b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator-=</definition>
        <argsstring>(const int128 &amp;y)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1ae8f2459ec65b5de5f4fcc4f91bbfef6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator/=</definition>
        <argsstring>(const int128 &amp;y)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1aa03ae99af23e9d6bdc6ea956d4882e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator%=</definition>
        <argsstring>(const int128 &amp;y)</argsstring>
        <name>operator%=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1af85be759d6497e41e5f62d0612d8f418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator*=</definition>
        <argsstring>(const int128 &amp;y)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1ab83d96039c67509ed3dd481430dd6fe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator|=</definition>
        <argsstring>(const int128 &amp;y)</argsstring>
        <name>operator|=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1ac8179d61e1e0e0a99346699fa9c54ce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator&amp;=</definition>
        <argsstring>(const int128 &amp;y)</argsstring>
        <name>operator &amp;=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1a70524a8ffac6d614d6278b2a49ddfabc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator^=</definition>
        <argsstring>(const int128 &amp;y)</argsstring>
        <name>operator^=</name>
        <param>
          <type>const <ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1ad6c131bfe5cc13e1dc7c85172150dd5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator&gt;&gt;=</definition>
        <argsstring>(int cnt)</argsstring>
        <name>operator&gt;&gt;=</name>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1a60e36953676f9d01de07863840287784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator&lt;&lt;=</definition>
        <argsstring>(int cnt)</argsstring>
        <name>operator&lt;&lt;=</name>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1af848784ebf8db2889070b7aa758c108e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classint128_1a5339c1d98fb9060eedb4d05d5254b70b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classint128" kindref="compound">int128</ref> &amp;</type>
        <definition>int128&amp; int128::operator--</definition>
        <argsstring>(void)</argsstring>
        <name>operator--</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="153" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="118" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="117" bodyend="163"/>
    <listofallmembers>
      <member refid="classint128_1abdb74a526f174e788cd6bc892b4ed9b1" prot="private" virt="non-virtual"><scope>int128</scope><name>h</name></member>
      <member refid="classint128_1af5cec5ef94af89884681f6351158c7e4" prot="public" virt="non-virtual"><scope>int128</scope><name>high</name></member>
      <member refid="classint128_1a1dd27a513ba209741a3e7ec7169579c8" prot="public" virt="non-virtual"><scope>int128</scope><name>int128</name></member>
      <member refid="classint128_1a0e16027605964af2efc67862dc934c07" prot="public" virt="non-virtual"><scope>int128</scope><name>int128</name></member>
      <member refid="classint128_1acd7883dd681524e4b061da299924c523" prot="public" virt="non-virtual"><scope>int128</scope><name>int128</name></member>
      <member refid="classint128_1a48025e74d33214438d6e34d2d80b8859" prot="public" virt="non-virtual"><scope>int128</scope><name>int128</name></member>
      <member refid="classint128_1a2089266c1c9d516c6b1d8f152df71aa3" prot="public" virt="non-virtual"><scope>int128</scope><name>int128</name></member>
      <member refid="classint128_1aa937aef506ff202442c5a34c78068917" prot="public" virt="non-virtual"><scope>int128</scope><name>int128</name></member>
      <member refid="classint128_1ac7b460596a01d3c714ecc5f441ad586a" prot="public" virt="non-virtual"><scope>int128</scope><name>int128</name></member>
      <member refid="classint128_1a80ae32bb7195e26998a44dcb25dec397" prot="private" virt="non-virtual"><scope>int128</scope><name>l</name></member>
      <member refid="classint128_1aefecb5b80faf55ec60cbd911fda58ad2" prot="public" virt="non-virtual"><scope>int128</scope><name>low</name></member>
      <member refid="classint128_1adc13db438cfbc6aa42a3a3afc63eeacc" prot="public" virt="non-virtual"><scope>int128</scope><name>operator &amp;</name></member>
      <member refid="classint128_1ac8179d61e1e0e0a99346699fa9c54ce9" prot="public" virt="non-virtual"><scope>int128</scope><name>operator &amp;=</name></member>
      <member refid="classint128_1a080063915183805a7fb0d0abcf452c8c" prot="public" virt="non-virtual"><scope>int128</scope><name>operator!=</name></member>
      <member refid="classint128_1a7bf5456c2694ee3ea8d8594a4b3950d3" prot="public" virt="non-virtual"><scope>int128</scope><name>operator%</name></member>
      <member refid="classint128_1aa03ae99af23e9d6bdc6ea956d4882e0e" prot="public" virt="non-virtual"><scope>int128</scope><name>operator%=</name></member>
      <member refid="classint128_1ae951f1dc0ecc37307ba42783643b023e" prot="public" virt="non-virtual"><scope>int128</scope><name>operator*</name></member>
      <member refid="classint128_1af85be759d6497e41e5f62d0612d8f418" prot="public" virt="non-virtual"><scope>int128</scope><name>operator*=</name></member>
      <member refid="classint128_1a39e33578763792ab9cd00246b4a7eae5" prot="public" virt="non-virtual"><scope>int128</scope><name>operator+</name></member>
      <member refid="classint128_1a3c37f4ea04578cffe9f26d68d7b2953c" prot="public" virt="non-virtual"><scope>int128</scope><name>operator+</name></member>
      <member refid="classint128_1af848784ebf8db2889070b7aa758c108e" prot="public" virt="non-virtual"><scope>int128</scope><name>operator++</name></member>
      <member refid="classint128_1aaf90b4d6abddcb0ff1233d98914d4e2b" prot="public" virt="non-virtual"><scope>int128</scope><name>operator+=</name></member>
      <member refid="classint128_1ae6e7937d360d29b10eef1f45e8e2a9ef" prot="public" virt="non-virtual"><scope>int128</scope><name>operator-</name></member>
      <member refid="classint128_1ae38548728b76ba6f75adc5c8fe1ad35b" prot="public" virt="non-virtual"><scope>int128</scope><name>operator-</name></member>
      <member refid="classint128_1a5339c1d98fb9060eedb4d05d5254b70b" prot="public" virt="non-virtual"><scope>int128</scope><name>operator--</name></member>
      <member refid="classint128_1a1889b4e167d52b80e8cc2923e63559b5" prot="public" virt="non-virtual"><scope>int128</scope><name>operator-=</name></member>
      <member refid="classint128_1ac6cc950efe680fd3112bee6ed5d17734" prot="public" virt="non-virtual"><scope>int128</scope><name>operator/</name></member>
      <member refid="classint128_1ae8f2459ec65b5de5f4fcc4f91bbfef6d" prot="public" virt="non-virtual"><scope>int128</scope><name>operator/=</name></member>
      <member refid="classint128_1a72efa9da252819ba9a066142fdab6405" prot="public" virt="non-virtual"><scope>int128</scope><name>operator&lt;</name></member>
      <member refid="classint128_1ad1c5a8c9446a26477cc841db03954962" prot="public" virt="non-virtual"><scope>int128</scope><name>operator&lt;&lt;</name></member>
      <member refid="classint128_1a60e36953676f9d01de07863840287784" prot="public" virt="non-virtual"><scope>int128</scope><name>operator&lt;&lt;=</name></member>
      <member refid="classint128_1ad66feb457c30894836e6603bfd7df029" prot="public" virt="non-virtual"><scope>int128</scope><name>operator&lt;=</name></member>
      <member refid="classint128_1ab57c51dba646b8d9e6439a23ecce334f" prot="public" virt="non-virtual"><scope>int128</scope><name>operator==</name></member>
      <member refid="classint128_1ad7990cacc387a48e446b1c80f144c54a" prot="public" virt="non-virtual"><scope>int128</scope><name>operator&gt;</name></member>
      <member refid="classint128_1ac90522ca56510eafbb6b34fd6e016e69" prot="public" virt="non-virtual"><scope>int128</scope><name>operator&gt;=</name></member>
      <member refid="classint128_1ac4b410ed4d5beaa26034845f30306e39" prot="public" virt="non-virtual"><scope>int128</scope><name>operator&gt;&gt;</name></member>
      <member refid="classint128_1ad6c131bfe5cc13e1dc7c85172150dd5f" prot="public" virt="non-virtual"><scope>int128</scope><name>operator&gt;&gt;=</name></member>
      <member refid="classint128_1a24c95b53b0e175c7fb13727a61f8b6e4" prot="public" virt="non-virtual"><scope>int128</scope><name>operator^</name></member>
      <member refid="classint128_1a70524a8ffac6d614d6278b2a49ddfabc" prot="public" virt="non-virtual"><scope>int128</scope><name>operator^=</name></member>
      <member refid="classint128_1a379e7d6c49e821f86f1bda6dc963bdcf" prot="public" virt="non-virtual"><scope>int128</scope><name>operator|</name></member>
      <member refid="classint128_1ab83d96039c67509ed3dd481430dd6fe6" prot="public" virt="non-virtual"><scope>int128</scope><name>operator|=</name></member>
      <member refid="classint128_1a3414a97cb59530a710dca72c08219ee4" prot="public" virt="non-virtual"><scope>int128</scope><name>operator~</name></member>
      <member refid="classint128_1a4c0ad808d866f80efa054eaf149e3ef7" prot="private" virt="non-virtual"><scope>int128</scope><name>uint128</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
