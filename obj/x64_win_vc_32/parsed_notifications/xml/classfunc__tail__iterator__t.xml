<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classfunc__tail__iterator__t" kind="class" language="C++" prot="public">
    <compoundname>func_tail_iterator_t</compoundname>
    <includes refid="funcs_8hpp" local="no">funcs.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfunc__tail__iterator__t_1a274b7034ce2f425655e5cb72b61aa605" prot="private" static="no" mutable="no">
        <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
        <definition>func_t* func_tail_iterator_t::pfn</definition>
        <argsstring></argsstring>
        <name>pfn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="651" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="651" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfunc__tail__iterator__t_1aae0da82ef155b284d5091088a791a950" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int func_tail_iterator_t::idx</definition>
        <argsstring></argsstring>
        <name>idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="652" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfunc__tail__iterator__t_1a7a1703a173964b48e5b177fc6a839bd7" prot="private" static="no" mutable="no">
        <type><ref refid="structrange__t" kindref="compound">range_t</ref></type>
        <definition>range_t func_tail_iterator_t::seglim</definition>
        <argsstring></argsstring>
        <name>seglim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="653" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a8842abc923ef129b8eb257a59089d169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>func_tail_iterator_t::func_tail_iterator_t</definition>
        <argsstring>(void)</argsstring>
        <name>func_tail_iterator_t</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="655" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="655" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1ab7a494bfa18edb3e45552a292959fd47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>func_tail_iterator_t::func_tail_iterator_t</definition>
        <argsstring>(func_t *_pfn, ea_t ea=BADADDR)</argsstring>
        <name>func_tail_iterator_t</name>
        <param>
          <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
          <declname>_pfn</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="656" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="656" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a31a27842a3571b2cf02ac1d8251fac7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>func_tail_iterator_t::~func_tail_iterator_t</definition>
        <argsstring>(void)</argsstring>
        <name>~func_tail_iterator_t</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="657" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="657" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a88c1c8a0a601cda0b4732bd77823dd98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool func_tail_iterator_t::set</definition>
        <argsstring>(func_t *_pfn, ea_t ea=BADADDR)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
          <declname>_pfn</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="663" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="663" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a027a9594448bf9e22b175776efd8da7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool func_tail_iterator_t::set_ea</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_ea</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="664" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="664" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a0ecd932a94bbcbf4e6f8c92d5a5cbff6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool func_tail_iterator_t::set_range</definition>
        <argsstring>(ea_t ea1, ea_t ea2)</argsstring>
        <name>set_range</name>
        <param>
          <type>ea_t</type>
          <declname>ea1</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="666" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="666" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a2c067f10fc24cb2c40390ba99347fe12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structrange__t" kindref="compound">range_t</ref> &amp;</type>
        <definition>const range_t&amp; func_tail_iterator_t::chunk</definition>
        <argsstring>(void) const</argsstring>
        <name>chunk</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="674" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="674" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a87102fb6779712dbae687930ab258a67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool func_tail_iterator_t::first</definition>
        <argsstring>(void)</argsstring>
        <name>first</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="680" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="680" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a1212e3aed3cb6c2690ab3a0fed2c0de2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool func_tail_iterator_t::last</definition>
        <argsstring>(void)</argsstring>
        <name>last</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="681" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="681" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a55c71fe8f6d4cece46974c2465261a77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool func_tail_iterator_t::next</definition>
        <argsstring>(void)</argsstring>
        <name>next</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="682" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="682" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a13983366a8cda5268e67cadc99745fde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool func_tail_iterator_t::prev</definition>
        <argsstring>(void)</argsstring>
        <name>prev</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="683" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="683" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="classfunc__tail__iterator__t_1a16d7a874351f8e9b55acde54b4d07c1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool func_tail_iterator_t::main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="684" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="684" bodyend="684"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class to enumerate all function tails sorted by addresses. Enumeration is started with main(), first(), or last(). If first() is used, the function entry chunk will be excluded from the enumeration. Otherwise it will be included in the enumeration (for main() and last()). The loop may continue until the next() or prev() function returns false. These functions return false when the enumeration is over. The tail chunks are always sorted by their addresses.</para><para>Sample code: <programlisting><codeline><highlight class="normal">func_tail_iterator_t<sp/>fti(pfn);</highlight></codeline>
<codeline><highlight class="normal">for<sp/>(<sp/>bool<sp/>ok=fti.first();<sp/>ok;<sp/>ok=fti.next()<sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>range_t<sp/>&amp;a<sp/>=<sp/>fti.chunk();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>....</highlight></codeline>
</programlisting></para><para>If the &apos;ea&apos; parameter is used in the constructor, then the iterator is positioned at the chunk containing the specified &apos;ea&apos;. Otherwise it is positioned at the function entry chunk. If &apos;pfn&apos; is specified as NULL then the set() function will fail, but it is still possible to use the class. In this case the iteration will be limited by the segment boundaries. The function main chunk is locked during the iteration. It is also possible to enumerate one single arbitrary range using set_range() This function is mainly designed to be used from <ref refid="classfunc__item__iterator__t" kindref="compound">func_item_iterator_t</ref>. </para>    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" line="649" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp" bodystart="648" bodyend="685"/>
    <listofallmembers>
      <member refid="classfunc__tail__iterator__t_1a2c067f10fc24cb2c40390ba99347fe12" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>chunk</name></member>
      <member refid="classfunc__tail__iterator__t_1a87102fb6779712dbae687930ab258a67" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>first</name></member>
      <member refid="classfunc__tail__iterator__t_1a8842abc923ef129b8eb257a59089d169" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>func_tail_iterator_t</name></member>
      <member refid="classfunc__tail__iterator__t_1ab7a494bfa18edb3e45552a292959fd47" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>func_tail_iterator_t</name></member>
      <member refid="classfunc__tail__iterator__t_1aae0da82ef155b284d5091088a791a950" prot="private" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>idx</name></member>
      <member refid="classfunc__tail__iterator__t_1a1212e3aed3cb6c2690ab3a0fed2c0de2" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>last</name></member>
      <member refid="classfunc__tail__iterator__t_1a16d7a874351f8e9b55acde54b4d07c1c" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>main</name></member>
      <member refid="classfunc__tail__iterator__t_1a55c71fe8f6d4cece46974c2465261a77" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>next</name></member>
      <member refid="classfunc__tail__iterator__t_1a274b7034ce2f425655e5cb72b61aa605" prot="private" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>pfn</name></member>
      <member refid="classfunc__tail__iterator__t_1a13983366a8cda5268e67cadc99745fde" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>prev</name></member>
      <member refid="classfunc__tail__iterator__t_1a7a1703a173964b48e5b177fc6a839bd7" prot="private" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>seglim</name></member>
      <member refid="classfunc__tail__iterator__t_1a88c1c8a0a601cda0b4732bd77823dd98" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>set</name></member>
      <member refid="classfunc__tail__iterator__t_1a027a9594448bf9e22b175776efd8da7b" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>set_ea</name></member>
      <member refid="classfunc__tail__iterator__t_1a0ecd932a94bbcbf4e6f8c92d5a5cbff6" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>set_range</name></member>
      <member refid="classfunc__tail__iterator__t_1a31a27842a3571b2cf02ac1d8251fac7c" prot="public" virt="non-virtual"><scope>func_tail_iterator_t</scope><name>~func_tail_iterator_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
