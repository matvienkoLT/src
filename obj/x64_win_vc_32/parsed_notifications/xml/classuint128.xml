<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classuint128" kind="class" language="C++" prot="public">
    <compoundname>uint128</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classuint128_1a4ecf4907a0110ab69393d7d32d68b414" prot="private" static="no" mutable="no">
        <type>ulonglong</type>
        <definition>ulonglong uint128::l</definition>
        <argsstring></argsstring>
        <name>l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="71" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuint128_1ab89a2ea991e12b1d4d1e53c7d3515ec8" prot="private" static="no" mutable="no">
        <type>ulonglong</type>
        <definition>ulonglong uint128::h</definition>
        <argsstring></argsstring>
        <name>h</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="72" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classuint128_1a5b469ab43d939d490a2e74e9da04b541" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class int128</definition>
        <argsstring></argsstring>
        <name>int128</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="73" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a251bc9dbb9e3c5a4e43058e233001dab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend ulonglong</type>
        <definition>ulonglong low</definition>
        <argsstring>(const uint128 &amp;x)</argsstring>
        <name>low</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="81" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a80ca5e0557996f054116e48e6e6784c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend ulonglong</type>
        <definition>ulonglong high</definition>
        <argsstring>(const uint128 &amp;x)</argsstring>
        <name>high</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="82" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a7ca58263b666f38d356b0884b5d08110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator+</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="83" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="170" bodyend="177"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1aa4b2a58249357c2456694b9e0aa733bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator-</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="84" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a14176457acd9651abac44ebb3cb2f2e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator/</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a21eb914f7a308ff621d03d4dcc72c7f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator%</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a1db2b2ec3889c255d70268910870df24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator*</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a1ea8617696bde82d7e7dfbdab61da0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator|</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator|</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="88" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a4afe7f517be8620d2bc709fa3258930c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator&amp;</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator &amp;</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="89" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a850917f5d93b7ff089a88140f83e3838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator^</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator^</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="90" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a9ba3509b0b4f15fbe000d047c52c890d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator&gt;&gt;</definition>
        <argsstring>(const uint128 &amp;x, int cnt)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="91" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a91c95ab69216db9125e7a9a3bf97573f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator&lt;&lt;</definition>
        <argsstring>(const uint128 &amp;x, int cnt)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a3b543189310182c180fb22e212953844" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator+</definition>
        <argsstring>(const uint128 &amp;x)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="105" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a9d18f837063df5065ea376318a485737" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator-</definition>
        <argsstring>(const uint128 &amp;x)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="106" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a26b526e827d69c0f9b6c6eee43819ee7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classuint128" kindref="compound">uint128</ref></type>
        <definition>uint128 operator~</definition>
        <argsstring>(const uint128 &amp;x)</argsstring>
        <name>operator~</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="107" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1aa1f1632b6807994bf12b26fd7e73dc97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator==</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="108" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a16326392fc04b6489b478557ae28ce9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator!=</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="109" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1afacd0bd917dcf7ebe580a7b1be01a249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator&gt;</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="110" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1ac1afc4d8fa4a135b3764fb7cbcf082d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator&lt;</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="111" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1a85e335e2592d6044379dd6e8dcb1f029" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator&gt;=</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="112" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="friend" id="classuint128_1aeeb23c601972fba6adeba7418c734c55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend int</type>
        <definition>int operator&lt;=</definition>
        <argsstring>(const uint128 &amp;x, const uint128 &amp;y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="113" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="113" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classuint128_1a269a14fa58975eee34f735ba62ac3d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uint128::uint128</definition>
        <argsstring>(void)</argsstring>
        <name>uint128</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="75" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a7737ed5b18fec87c08417f7e4b36ed4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uint128::uint128</definition>
        <argsstring>(uint x)</argsstring>
        <name>uint128</name>
        <param>
          <type><ref refid="pro_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="76" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a1e78cb963c6e08a55edfc7d8dc1e95bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uint128::uint128</definition>
        <argsstring>(int x)</argsstring>
        <name>uint128</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="77" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a7bcfe174f4e6a8b2304706d393196118" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uint128::uint128</definition>
        <argsstring>(ulonglong x)</argsstring>
        <name>uint128</name>
        <param>
          <type>ulonglong</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="78" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a379587a45f1dd4ed6254dbd29c7b82c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uint128::uint128</definition>
        <argsstring>(longlong x)</argsstring>
        <name>uint128</name>
        <param>
          <type>longlong</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="79" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a2d8175ff38ef4d8b9b7450a9e1a7b04f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uint128::uint128</definition>
        <argsstring>(ulonglong ll, ulonglong hh)</argsstring>
        <name>uint128</name>
        <param>
          <type>ulonglong</type>
          <declname>ll</declname>
        </param>
        <param>
          <type>ulonglong</type>
          <declname>hh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="80" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a4782b9ce7612cf49ef91e8322edddd31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator+=</definition>
        <argsstring>(const uint128 &amp;y)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="93" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a15288892688a43d4226e99de0f21143a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator-=</definition>
        <argsstring>(const uint128 &amp;y)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="94" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1acf77965ff1dde41719a2ae585e4a032a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator/=</definition>
        <argsstring>(const uint128 &amp;y)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="95" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a36e5d8fb350b74cfa3614b6ca66a6894" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator%=</definition>
        <argsstring>(const uint128 &amp;y)</argsstring>
        <name>operator%=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="96" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1aa544ff613db820b3cdce837770d74bb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator*=</definition>
        <argsstring>(const uint128 &amp;y)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="97" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a5f19d1d4408b8a0dd8a40caa74c322e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator|=</definition>
        <argsstring>(const uint128 &amp;y)</argsstring>
        <name>operator|=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="98" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a5fa1f3415d5e5c2f0300401c051b2291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128&amp; uint128::operator&amp;=</definition>
        <argsstring>(const uint128 &amp;y)</argsstring>
        <name>operator &amp;=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a0f49040e38997546ee071b350a70469b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator^=</definition>
        <argsstring>(const uint128 &amp;y)</argsstring>
        <name>operator^=</name>
        <param>
          <type>const <ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="100" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1ad3085d1a448461e49a8dabf4e7fe017f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator&gt;&gt;=</definition>
        <argsstring>(int cnt)</argsstring>
        <name>operator&gt;&gt;=</name>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="101" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a693b39a056ac73b792edcfaa2b51ff45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator&lt;&lt;=</definition>
        <argsstring>(int cnt)</argsstring>
        <name>operator&lt;&lt;=</name>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="102" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1a84207d379d64d5f43b95b783c66a4cc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="103" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="268" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classuint128_1aaf557d7fd99dd6436fcca2245cca7852" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuint128" kindref="compound">uint128</ref> &amp;</type>
        <definition>uint128 &amp; uint128::operator--</definition>
        <argsstring>(void)</argsstring>
        <name>operator--</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="104" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="276" bodyend="282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" line="70" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/llong.hpp" bodystart="69" bodyend="114"/>
    <listofallmembers>
      <member refid="classuint128_1ab89a2ea991e12b1d4d1e53c7d3515ec8" prot="private" virt="non-virtual"><scope>uint128</scope><name>h</name></member>
      <member refid="classuint128_1a80ca5e0557996f054116e48e6e6784c2" prot="public" virt="non-virtual"><scope>uint128</scope><name>high</name></member>
      <member refid="classuint128_1a5b469ab43d939d490a2e74e9da04b541" prot="private" virt="non-virtual"><scope>uint128</scope><name>int128</name></member>
      <member refid="classuint128_1a4ecf4907a0110ab69393d7d32d68b414" prot="private" virt="non-virtual"><scope>uint128</scope><name>l</name></member>
      <member refid="classuint128_1a251bc9dbb9e3c5a4e43058e233001dab" prot="public" virt="non-virtual"><scope>uint128</scope><name>low</name></member>
      <member refid="classuint128_1a4afe7f517be8620d2bc709fa3258930c" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator &amp;</name></member>
      <member refid="classuint128_1a5fa1f3415d5e5c2f0300401c051b2291" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator &amp;=</name></member>
      <member refid="classuint128_1a16326392fc04b6489b478557ae28ce9f" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator!=</name></member>
      <member refid="classuint128_1a21eb914f7a308ff621d03d4dcc72c7f8" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator%</name></member>
      <member refid="classuint128_1a36e5d8fb350b74cfa3614b6ca66a6894" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator%=</name></member>
      <member refid="classuint128_1a1db2b2ec3889c255d70268910870df24" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator*</name></member>
      <member refid="classuint128_1aa544ff613db820b3cdce837770d74bb6" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator*=</name></member>
      <member refid="classuint128_1a7ca58263b666f38d356b0884b5d08110" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator+</name></member>
      <member refid="classuint128_1a3b543189310182c180fb22e212953844" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator+</name></member>
      <member refid="classuint128_1a84207d379d64d5f43b95b783c66a4cc9" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator++</name></member>
      <member refid="classuint128_1a4782b9ce7612cf49ef91e8322edddd31" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator+=</name></member>
      <member refid="classuint128_1aa4b2a58249357c2456694b9e0aa733bb" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator-</name></member>
      <member refid="classuint128_1a9d18f837063df5065ea376318a485737" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator-</name></member>
      <member refid="classuint128_1aaf557d7fd99dd6436fcca2245cca7852" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator--</name></member>
      <member refid="classuint128_1a15288892688a43d4226e99de0f21143a" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator-=</name></member>
      <member refid="classuint128_1a14176457acd9651abac44ebb3cb2f2e5" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator/</name></member>
      <member refid="classuint128_1acf77965ff1dde41719a2ae585e4a032a" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator/=</name></member>
      <member refid="classuint128_1ac1afc4d8fa4a135b3764fb7cbcf082d8" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator&lt;</name></member>
      <member refid="classuint128_1a91c95ab69216db9125e7a9a3bf97573f" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator&lt;&lt;</name></member>
      <member refid="classuint128_1a693b39a056ac73b792edcfaa2b51ff45" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator&lt;&lt;=</name></member>
      <member refid="classuint128_1aeeb23c601972fba6adeba7418c734c55" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator&lt;=</name></member>
      <member refid="classuint128_1aa1f1632b6807994bf12b26fd7e73dc97" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator==</name></member>
      <member refid="classuint128_1afacd0bd917dcf7ebe580a7b1be01a249" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator&gt;</name></member>
      <member refid="classuint128_1a85e335e2592d6044379dd6e8dcb1f029" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator&gt;=</name></member>
      <member refid="classuint128_1a9ba3509b0b4f15fbe000d047c52c890d" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator&gt;&gt;</name></member>
      <member refid="classuint128_1ad3085d1a448461e49a8dabf4e7fe017f" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator&gt;&gt;=</name></member>
      <member refid="classuint128_1a850917f5d93b7ff089a88140f83e3838" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator^</name></member>
      <member refid="classuint128_1a0f49040e38997546ee071b350a70469b" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator^=</name></member>
      <member refid="classuint128_1a1ea8617696bde82d7e7dfbdab61da0ce" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator|</name></member>
      <member refid="classuint128_1a5f19d1d4408b8a0dd8a40caa74c322e9" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator|=</name></member>
      <member refid="classuint128_1a26b526e827d69c0f9b6c6eee43819ee7" prot="public" virt="non-virtual"><scope>uint128</scope><name>operator~</name></member>
      <member refid="classuint128_1a269a14fa58975eee34f735ba62ac3d1a" prot="public" virt="non-virtual"><scope>uint128</scope><name>uint128</name></member>
      <member refid="classuint128_1a7737ed5b18fec87c08417f7e4b36ed4d" prot="public" virt="non-virtual"><scope>uint128</scope><name>uint128</name></member>
      <member refid="classuint128_1a1e78cb963c6e08a55edfc7d8dc1e95bb" prot="public" virt="non-virtual"><scope>uint128</scope><name>uint128</name></member>
      <member refid="classuint128_1a7bcfe174f4e6a8b2304706d393196118" prot="public" virt="non-virtual"><scope>uint128</scope><name>uint128</name></member>
      <member refid="classuint128_1a379587a45f1dd4ed6254dbd29c7b82c3" prot="public" virt="non-virtual"><scope>uint128</scope><name>uint128</name></member>
      <member refid="classuint128_1a2d8175ff38ef4d8b9b7450a9e1a7b04f" prot="public" virt="non-virtual"><scope>uint128</scope><name>uint128</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
