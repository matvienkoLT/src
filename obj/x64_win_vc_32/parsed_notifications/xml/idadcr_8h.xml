<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="idadcr_8h" kind="file" language="C++">
    <compoundname>idadcr.h</compoundname>
    <includes refid="diskio_8hpp" local="no">diskio.hpp</includes>
    <incdepgraph>
      <node id="640">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idadcr.h</label>
        <link refid="idadcr_8h"/>
        <childnode refid="641" relation="include">
        </childnode>
      </node>
      <node id="642">
        <label>stdio.h</label>
      </node>
      <node id="641">
        <label>diskio.hpp</label>
        <link refid="diskio_8hpp"/>
        <childnode refid="642" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structencrypted__block__t" prot="public">encrypted_block_t</innerclass>
    <innerclass refid="structlicense__info__t" prot="public">license_info_t</innerclass>
    <innerclass refid="structproduct__entry__t" prot="public">product_entry_t</innerclass>
    <innerclass refid="structold__encrypt__block__t" prot="public">old_encrypt_block_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="idadcr_8h_1a44eb26d33eb6c5e235c6cbfa377f60ae" prot="public" static="no">
        <name>ONE_DAY</name>
        <initializer>(60*60*24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="9" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a7fbf50cd1a10e4ad098dbe815804e8ed" prot="public" static="no">
        <name>ONE_MONTH</name>
        <initializer>(30*ONE_DAY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="10" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a0c0af2ee8119c647ce2260559fec7a6a" prot="public" static="no">
        <name>MAGICNUM</name>
        <initializer>0xF0C437A1L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="12" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1aab9758767d77ec0cdbd87f2044e8dabf" prot="public" static="no">
        <name>GUI_MAGICNUM</name>
        <initializer>0xA5FF073DL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="13" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1ac83c0f33cdf81f7165f0fb6e29e83d5d" prot="public" static="no">
        <name>MAGICNUM2</name>
        <initializer>0xFFFFFFFFL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="14" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a9926010ab35769d4e6efb63d992edd92" prot="public" static="no">
        <name>KEY_IDP_WINCE</name>
        <initializer>make_ulonglong(0, 0x80000000L)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="16" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a045fe1f74ad71f13101f13a6ee68da3e" prot="public" static="no">
        <name>PLATFORM_CODE</name>
        <initializer>&apos;W&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="19" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a7a4058257495145f134c1505a1d68712" prot="public" static="no">
        <name>EBFL_LTYPE</name>
        <initializer>0x0003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="40" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a91e97d3eb584f3a11d6d9c886311fbde" prot="public" static="no">
        <name>EBFL_LIC_UNK</name>
        <initializer>0x0000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="41" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a9b3893fc4d035107209cf6ee08991216" prot="public" static="no">
        <name>EBFL_LIC_NAMED</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="42" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a787ca2af31eabd47b446bc6d2e2ea82b" prot="public" static="no">
        <name>EBFL_LIC_COMP</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="43" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1ac385ce5597d7310ff0f63bd1213e3fdd" prot="public" static="no">
        <name>EBFL_LIC_FLOAT</name>
        <initializer>0x0003</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="44" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a41fcbbd2fce4cbc1644e62ba1aa3637d" prot="public" static="no">
        <name>KEY1_IDP_PRO</name>
        <initializer>make_ulonglong(0xFFFFFFFF, 0xFFFFFFFF)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="47" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1ad404be65549b41dd4d30a1ac0629f0d0" prot="public" static="no">
        <name>KEY1_IDP_STA</name>
        <initializer>make_ulonglong(0x447B2FEF, 0xEFBE8901)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="48" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1ac13148d4c68a568ac1f4f407db28edbe" prot="public" static="no">
        <name>KEY2_IDP_PRO</name>
        <initializer>make_ulonglong(0x0000003F, 0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="55" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1abaa87fcec9f5f275f2631d4a9ca57028" prot="public" static="no">
        <name>KEY2_IDP_STA</name>
        <initializer>make_ulonglong(0x00000009, 0x00000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="56" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a574b1c64f1d3c588481a208c1c142af4" prot="public" static="no">
        <name>IDALID_XOR</name>
        <initializer>0xA3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="67" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1af07bba6c00fcb9d6de7d769e99d3de94" prot="public" static="no">
        <name>PLF_DECRYPT</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="147" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1ac80ade8e136924b05cfa5b01eec23594" prot="public" static="no">
        <name>PLF_NOCHECK</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="148" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1ae7b273983b74735ed2b687959ca9dc78" prot="public" static="no">
        <name>PLF_RESERVED</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="149" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1af0a554e3b853ebf26d426249306a63ed" prot="public" static="no">
        <name>PLF_CHECKLC</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="150" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a3f17a2ce710099cea65fe43a05b65694" prot="public" static="no">
        <name>PLF_CHECKOUT</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="151" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a239cea2e6db7235ea589a52dd877a9de" prot="public" static="no">
        <name>PLF_FILTERPR</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="152" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a286eccdc6262de6f4e843c8c6022230a" prot="public" static="no">
        <name>CHECK_EXPIRATION_FAILED</name>
        <initializer>(-2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="155" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a66a0d85ee4256e4b6e418f0c89020a24" prot="public" static="no">
        <name>OLD_KEY_IDP_ALL1</name>
        <initializer>0xFFFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="239" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a5c7026d775d2b3be3d86948ca2371ffb" prot="public" static="no">
        <name>OLD_KEY_IDP_STA1</name>
        <initializer>0x447B2FEF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="240" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a5e6b0ad940c5041750791f516b321b50" prot="public" static="no">
        <name>OLD_KEY_IDP_ALL2</name>
        <initializer>0x007FFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="242" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idadcr_8h_1a675e211cb0d22abfc84d9d0e49cfa60f" prot="public" static="no">
        <name>OLD_KEY_IDP_STA2</name>
        <initializer>0x007E8901</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="243" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7" prot="public" static="no">
        <name>license_parsing_errcode_t</name>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7ab0890578555e18f1516547a25fd08f98" prot="public">
          <name>LPERR_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7a5e63c59c55dc83c5f48b91a9fed93e53" prot="public">
          <name>LPERR_NOFILE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7ace32f34ece2d3ffd361c32a56eae455a" prot="public">
          <name>LPERR_MAGIC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7afd59673d689b5ebbb59250d57429f117" prot="public">
          <name>LPERR_SEATS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7abaf56fe45ce1a143e822a79610544120" prot="public">
          <name>LPERR_SUPPORT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7a0a7b80c87ef11910cc1121a6b99b81f3" prot="public">
          <name>LPERR_EXPIRES</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7a6e329916d2d1a3fa6672ff7c32fa532c" prot="public">
          <name>LPERR_BASE64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7ad23b301442cc0f8eb1184bf5dddc4cca" prot="public">
          <name>LPERR_SIGN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7a67792e6760511ec9b33ee20540434e60" prot="public">
          <name>LPERR_RSA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7a93545f9ac38963687f7fd6c97882d430" prot="public">
          <name>LPERR_HASH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7a185f0cfa23898f916e6eda94c8467c2f" prot="public">
          <name>LPERR_PARAM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7a030a4df96523cd7937d1ae2f60df5820" prot="public">
          <name>LPERR_NOLICENSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idadcr_8h_1a32574ffe52c4fa4b2a4ee2f8cc29dbb7a40ea3b8a9cebc2cd0deb7aa4a3acbe93" prot="public">
          <name>LPERR_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="109" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="108" bodyend="123"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="idadcr_8h_1a5e1be0232c24e8698271a71e4bb34cca" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structproduct__entry__t" kindref="compound">product_entry_t</ref> &gt;</type>
        <definition>typedef qvector&lt;product_entry_t&gt; prodvec_t</definition>
        <argsstring></argsstring>
        <name>prodvec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="106" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="idadcr_8h_1a9911e6029ed50c5998837cde404dfff1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref></type>
        <definition>qstring print_lid</definition>
        <argsstring>(const uchar lid[6])</argsstring>
        <name>print_lid</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>lid</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="28" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a218ddc0d6dd5f60d7a6c606c1c02cf04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* prodname</definition>
        <argsstring>(const char *product)</argsstring>
        <name>prodname</name>
        <param>
          <type>const char *</type>
          <declname>product</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="82" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="82" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a26d4fa4bc7177ed2dc7eb06a1b79dfd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* get_encrypted_ida_key</definition>
        <argsstring>(char *buffer)</argsstring>
        <name>get_encrypted_ida_key</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1ab1636e25bf4fbb9ac8752a259fb1f34f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool decrypt_signature</definition>
        <argsstring>(encrypted_block_t *signature, const void *buffer)</argsstring>
        <name>decrypt_signature</name>
        <param>
          <type><ref refid="structencrypted__block__t" kindref="compound">encrypted_block_t</ref> *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a53ac77880470744898e91d469d5aa25c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export get_license_user</definition>
        <argsstring>(qstring *out)</argsstring>
        <name>get_license_user</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a603845fa81c8fb4172d70384a3da8dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman license_parsing_errcode_t ida_export</type>
        <definition>idaman license_parsing_errcode_t ida_export get_license_info</definition>
        <argsstring>(prodvec_t *prodvec, license_info_t *p_sign, int plf_flags)</argsstring>
        <name>get_license_info</name>
        <param>
          <type><ref refid="classqvector" kindref="compound">prodvec_t</ref> *</type>
          <declname>prodvec</declname>
        </param>
        <param>
          <type><ref refid="structlicense__info__t" kindref="compound">license_info_t</ref> *</type>
          <declname>p_sign</declname>
        </param>
        <param>
          <type>int</type>
          <declname>plf_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a9901dff459317c48189aea02b67f403e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
        <definition>int32 CheckExpiration</definition>
        <argsstring>(bool(*initfunc)(void), int isnewfile)</argsstring>
        <name>CheckExpiration</name>
        <param>
          <type>bool(*)(void)</type>
          <declname>initfunc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>isnewfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a20b1b76dcf97708480f29292aa4b6a46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* get_key_file_path</definition>
        <argsstring>()</argsstring>
        <name>get_key_file_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="158" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="158" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a0b82ec962c6673558cfc3f420d1282ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> license_parsing_errcode_t</type>
        <definition>THREAD_SAFE license_parsing_errcode_t parse_license_file</definition>
        <argsstring>(const bytevec_t &amp;key, prodvec_t *prodvec, qstring *name, license_info_t *signature, uchar hash[16], qstring *errbuf, const uint16 *E, const uint16 *N, int flags)</argsstring>
        <name>parse_license_file</name>
        <param>
          <type>const <ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classqvector" kindref="compound">prodvec_t</ref> *</type>
          <declname>prodvec</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="structlicense__info__t" kindref="compound">license_info_t</ref> *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>hash</declname>
          <array>[16]</array>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref> *</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref> *</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a6a19c1157d550126213543c550a7ad7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool _decrypt_signature</definition>
        <argsstring>(encrypted_block_t *signature, const void *buffer, const uint16 *E, const uint16 *N, bool strict)</argsstring>
        <name>_decrypt_signature</name>
        <param>
          <type><ref refid="structencrypted__block__t" kindref="compound">encrypted_block_t</ref> *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref> *</type>
          <declname>E</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref> *</type>
          <declname>N</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>strict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a76af789578b2bf438acb6519d6ba5e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void show_product</definition>
        <argsstring>(const product_entry_t &amp;pe)</argsstring>
        <name>show_product</name>
        <param>
          <type>const <ref refid="structproduct__entry__t" kindref="compound">product_entry_t</ref> &amp;</type>
          <declname>pe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a309c206a5f2de50285f22e147bb84915" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool parse_prodname</definition>
        <argsstring>(const qstring &amp;fullname, qstring *prod=NULL, char *oscode=NULL, char *plictype=NULL)</argsstring>
        <name>parse_prodname</name>
        <param>
          <type>const <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> &amp;</type>
          <declname>fullname</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>prod</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>char *</type>
          <declname>oscode</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>char *</type>
          <declname>plictype</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="188" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" bodystart="188" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a68f3f79d8eee4987476f1085e2229499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export borrow_license</definition>
        <argsstring>(const qstrvec_t &amp;prods, const char *datestring, qstring *errbuf)</argsstring>
        <name>borrow_license</name>
        <param>
          <type>const <ref refid="pro_8h_1a823b67c620f6cdca97e1d969ea4a9b02" kindref="member">qstrvec_t</ref> &amp;</type>
          <declname>prods</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>datestring</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>errbuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a53f855eb24432b28137c698f0df3c7e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export get_license_attr</definition>
        <argsstring>(int key, void *arg)</argsstring>
        <name>get_license_attr</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a664b640887cc2efbb7449558ac7a3a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export return_license</definition>
        <argsstring>(const qstrvec_t &amp;prods, qstring *errbuf)</argsstring>
        <name>return_license</name>
        <param>
          <type>const <ref refid="pro_8h_1a823b67c620f6cdca97e1d969ea4a9b02" kindref="member">qstrvec_t</ref> &amp;</type>
          <declname>prods</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>errbuf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idadcr_8h_1a614ae621bdf2a44db84716e829e050d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_lmx</definition>
        <argsstring>(const product_entry_t &amp;pe, int major, int minor, char *errbuf, size_t errbufsize)</argsstring>
        <name>check_lmx</name>
        <param>
          <type>const <ref refid="structproduct__entry__t" kindref="compound">product_entry_t</ref> &amp;</type>
          <declname>pe</declname>
        </param>
        <param>
          <type>int</type>
          <declname>major</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minor</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>errbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>errbufsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h" line="258" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/idadcr.h"/>
  </compounddef>
</doxygen>
