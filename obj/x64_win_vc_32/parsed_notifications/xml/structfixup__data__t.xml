<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structfixup__data__t" kind="struct" language="C++" prot="public">
    <compoundname>fixup_data_t</compoundname>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structfixup__data__t_1a448adecee97e418608cde0c9ec7dd4df" prot="protected" static="no" mutable="no">
        <type><ref refid="fixup_8hpp_1ac369f50f71892a7215812ab85eb45860" kindref="member">fixup_type_t</ref></type>
        <definition>fixup_type_t fixup_data_t::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="84" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfixup__data__t_1aa1f751d9b7fe7a3b1d58bbc634b3df1b" prot="protected" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 fixup_data_t::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="85" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfixup__data__t_1a15fa4473b0b3a35c9d04fbd8dad63ffa" prot="protected" static="no" mutable="no">
        <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
        <definition>uval_t fixup_data_t::base</definition>
        <argsstring></argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="86" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfixup__data__t_1a46ee2e53290b0d1d1ae5229e8ce39685" prot="public" static="no" mutable="no">
        <type>sel_t</type>
        <definition>sel_t fixup_data_t::sel</definition>
        <argsstring></argsstring>
        <name>sel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>selector of the target segment. BADSEL means an absolute (zero based) target. <simplesect kind="see"><para><ref refid="group___f_i_x_u_p_f___1ga7d5afa5124de3de63a567b93034e922e" kindref="member">FIXUPF_REL</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="89" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfixup__data__t_1a1e38da9f20c8d3440bac99c8352eddbb" prot="public" static="no" mutable="no">
        <type>ea_t</type>
        <definition>ea_t fixup_data_t::off</definition>
        <argsstring></argsstring>
        <name>off</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>target offset <simplesect kind="note"><para>The target is calculated as <computeroutput><ref refid="structfixup__data__t_1afc6087f8a462e75b8318a986aca28fe3" kindref="member">get_base()</ref> + off</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="93" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfixup__data__t_1ad72aefd19dbdee15007c6a310c31f5b8" prot="public" static="no" mutable="no">
        <type>adiff_t</type>
        <definition>adiff_t fixup_data_t::displacement</definition>
        <argsstring></argsstring>
        <name>displacement</name>
        <briefdescription>
<para>displacement (offset from the target) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="97" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfixup__data__t_1ae9317e7a5b2de9073b9b8953a6d4eecf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fixup_data_t::fixup_data_t</definition>
        <argsstring>()</argsstring>
        <name>fixup_data_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="100" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a4f07af144763a06110e973976e0decff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fixup_data_t::fixup_data_t</definition>
        <argsstring>(fixup_type_t type_, uint32 flags_=0)</argsstring>
        <name>fixup_data_t</name>
        <param>
          <type><ref refid="fixup_8hpp_1ac369f50f71892a7215812ab85eb45860" kindref="member">fixup_type_t</ref></type>
          <declname>type_</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags_</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="107" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a6c34e9f0d573d27beb7f6d82f9c562f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="fixup_8hpp_1ac369f50f71892a7215812ab85eb45860" kindref="member">fixup_type_t</ref></type>
        <definition>fixup_type_t fixup_data_t::get_type</definition>
        <argsstring>(void) const</argsstring>
        <name>get_type</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Fixup type <ref refid="group__fixup__type__t" kindref="compound">Types of fixups</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="116" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1af5e5ce70e688eeb5d26cfa75134a8394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::set_type</definition>
        <argsstring>(fixup_type_t type_)</argsstring>
        <name>set_type</name>
        <param>
          <type><ref refid="fixup_8hpp_1ac369f50f71892a7215812ab85eb45860" kindref="member">fixup_type_t</ref></type>
          <declname>type_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="117" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a19eb9486ade6de92b7dcec8410c8e8ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::set_type_and_flags</definition>
        <argsstring>(fixup_type_t type_, uint32 flags_=0)</argsstring>
        <name>set_type_and_flags</name>
        <param>
          <type><ref refid="fixup_8hpp_1ac369f50f71892a7215812ab85eb45860" kindref="member">fixup_type_t</ref></type>
          <declname>type_</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags_</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="118" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a7acd8a511281770a5a17cba7dc2daf2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fixup_data_t::is_custom</definition>
        <argsstring>(void) const</argsstring>
        <name>is_custom</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para><ref refid="fixup_8hpp_1a3f9c41db199c27607d9643b6e1cf13e7" kindref="member">is_fixup_custom()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="124" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1ab9f2846b578a0f7bab2b330c86b432c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 fixup_data_t::get_flags</definition>
        <argsstring>() const</argsstring>
        <name>get_flags</name>
        <briefdescription>
<para>Fixup flags <ref refid="group___f_i_x_u_p_f__" kindref="compound">Fixup flags</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="127" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a78674e14aa51d432ba8e7e794e721116" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fixup_data_t::is_extdef</definition>
        <argsstring>(void) const</argsstring>
        <name>is_extdef</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="129" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1aad500f91a5841c9795a42f003b6f928d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::set_extdef</definition>
        <argsstring>(void)</argsstring>
        <name>set_extdef</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="130" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1af381dc4783328d6c1f75bba1f28814c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::clr_extdef</definition>
        <argsstring>(void)</argsstring>
        <name>clr_extdef</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="131" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a47829e27bfb86c3bb4bdf7935a394648" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fixup_data_t::is_unused</definition>
        <argsstring>(void) const</argsstring>
        <name>is_unused</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="133" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1ae0a0479797733e7cc5993081a136352f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::set_unused</definition>
        <argsstring>(void)</argsstring>
        <name>set_unused</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="134" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a825e9179b92fcd70d1fec20b419326e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::clr_unused</definition>
        <argsstring>(void)</argsstring>
        <name>clr_unused</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="135" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a3d670dc45d4d66ee066ab17e979d4d57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fixup_data_t::has_base</definition>
        <argsstring>(void) const</argsstring>
        <name>has_base</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Is fixup relative? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="138" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a552e69d524c774710480d3062626f9e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fixup_data_t::was_created</definition>
        <argsstring>(void) const</argsstring>
        <name>was_created</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Is fixup artificial? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="141" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1afc6087f8a462e75b8318a986aca28fe3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t fixup_data_t::get_base</definition>
        <argsstring>() const</argsstring>
        <name>get_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get base of fixup. <simplesect kind="note"><para>The target is calculated as <computeroutput><ref refid="structfixup__data__t_1afc6087f8a462e75b8318a986aca28fe3" kindref="member">get_base()</ref> + off</computeroutput>. </para></simplesect>
<simplesect kind="see"><para><ref refid="group___f_i_x_u_p_f___1ga7d5afa5124de3de63a567b93034e922e" kindref="member">FIXUPF_REL</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="146" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a65d2c1d16ef41efa02a8ebbf9aade23a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::set_base</definition>
        <argsstring>(ea_t new_base)</argsstring>
        <name>set_base</name>
        <param>
          <type>ea_t</type>
          <declname>new_base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set base of fixup. The target should be set before a call of this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="153" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1ae29b0b47ef8c14b608f8207501375756" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::set_sel</definition>
        <argsstring>(const segment_t *seg)</argsstring>
        <name>set_sel</name>
        <param>
          <type>const <ref refid="classsegment__t" kindref="compound">segment_t</ref> *</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="161" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1af5aaf3990e6e9114cc59cca949f67f9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::set_target_sel</definition>
        <argsstring>()</argsstring>
        <name>set_target_sel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set selector of fixup to the target. The target should be set before a call of this function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="168" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="168" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1affe48f279abcc7fe794dff6c34cec769" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fixup_data_t::set</definition>
        <argsstring>(ea_t source) const</argsstring>
        <name>set</name>
        <param>
          <type>ea_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para><ref refid="fixup_8hpp_1a16e38ac5dc6d9ab1620b0dc0dbcd107f" kindref="member">set_fixup()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="177" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1ab1b4f06b51d836b59d08e46fb4cd8419" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fixup_data_t::get</definition>
        <argsstring>(ea_t source)</argsstring>
        <name>get</name>
        <param>
          <type>ea_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para><ref refid="fixup_8hpp_1a86151adf9a021e455eb27a58b9bba553" kindref="member">get_fixup()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="178" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a19c6f5c43cc5a431833ce06390158a0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structfixup__handler__t" kindref="compound">fixup_handler_t</ref> *</type>
        <definition>const fixup_handler_t * fixup_data_t::get_handler</definition>
        <argsstring>() const</argsstring>
        <name>get_handler</name>
        <briefdescription>
<para><ref refid="fixup_8hpp_1ac18e1843b682851009998cc96f221249" kindref="member">get_fixup_handler()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="181" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="348" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1ac03299baf52e94d82d5cdc15eeaf2bec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * fixup_data_t::get_desc</definition>
        <argsstring>(qstring *buf, ea_t source) const</argsstring>
        <name>get_desc</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para><ref refid="fixup_8hpp_1ae1a3cf324852ff00e0a124a2274d6c32" kindref="member">get_fixup_desc()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="184" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1addaa298e979094e11ef049fcd781dbaa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int fixup_data_t::calc_size</definition>
        <argsstring>() const</argsstring>
        <name>calc_size</name>
        <briefdescription>
<para><ref refid="fixup_8hpp_1a8e045ed2795cce5645c2b795a189d558" kindref="member">calc_fixup_size()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="188" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a7d69113e8c2ea0a5fd56dacf1100f775" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
        <definition>uval_t fixup_data_t::get_value</definition>
        <argsstring>(ea_t ea) const</argsstring>
        <name>get_value</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para><ref refid="fixup_8hpp_1ae68a51805b27c4eae6e0b8efa2a32880" kindref="member">get_fixup_value()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="189" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="structfixup__data__t_1a48573549055de6bfdc756f8c11808378" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fixup_data_t::patch_value</definition>
        <argsstring>(ea_t ea) const</argsstring>
        <name>patch_value</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para><ref refid="fixup_8hpp_1a2a07510903124f52ac5c9fd57496a4b2" kindref="member">patch_fixup_value()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="190" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="343" bodyend="346"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" line="82" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp" bodystart="81" bodyend="193"/>
    <listofallmembers>
      <member refid="structfixup__data__t_1a15fa4473b0b3a35c9d04fbd8dad63ffa" prot="protected" virt="non-virtual"><scope>fixup_data_t</scope><name>base</name></member>
      <member refid="structfixup__data__t_1addaa298e979094e11ef049fcd781dbaa" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>calc_size</name></member>
      <member refid="structfixup__data__t_1af381dc4783328d6c1f75bba1f28814c8" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>clr_extdef</name></member>
      <member refid="structfixup__data__t_1a825e9179b92fcd70d1fec20b419326e3" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>clr_unused</name></member>
      <member refid="structfixup__data__t_1ad72aefd19dbdee15007c6a310c31f5b8" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>displacement</name></member>
      <member refid="structfixup__data__t_1ae9317e7a5b2de9073b9b8953a6d4eecf" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>fixup_data_t</name></member>
      <member refid="structfixup__data__t_1a4f07af144763a06110e973976e0decff" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>fixup_data_t</name></member>
      <member refid="structfixup__data__t_1aa1f751d9b7fe7a3b1d58bbc634b3df1b" prot="protected" virt="non-virtual"><scope>fixup_data_t</scope><name>flags</name></member>
      <member refid="structfixup__data__t_1ab1b4f06b51d836b59d08e46fb4cd8419" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>get</name></member>
      <member refid="structfixup__data__t_1afc6087f8a462e75b8318a986aca28fe3" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>get_base</name></member>
      <member refid="structfixup__data__t_1ac03299baf52e94d82d5cdc15eeaf2bec" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>get_desc</name></member>
      <member refid="structfixup__data__t_1ab9f2846b578a0f7bab2b330c86b432c0" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>get_flags</name></member>
      <member refid="structfixup__data__t_1a19c6f5c43cc5a431833ce06390158a0c" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>get_handler</name></member>
      <member refid="structfixup__data__t_1a6c34e9f0d573d27beb7f6d82f9c562f8" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>get_type</name></member>
      <member refid="structfixup__data__t_1a7d69113e8c2ea0a5fd56dacf1100f775" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>get_value</name></member>
      <member refid="structfixup__data__t_1a3d670dc45d4d66ee066ab17e979d4d57" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>has_base</name></member>
      <member refid="structfixup__data__t_1a7acd8a511281770a5a17cba7dc2daf2b" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>is_custom</name></member>
      <member refid="structfixup__data__t_1a78674e14aa51d432ba8e7e794e721116" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>is_extdef</name></member>
      <member refid="structfixup__data__t_1a47829e27bfb86c3bb4bdf7935a394648" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>is_unused</name></member>
      <member refid="structfixup__data__t_1a1e38da9f20c8d3440bac99c8352eddbb" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>off</name></member>
      <member refid="structfixup__data__t_1a48573549055de6bfdc756f8c11808378" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>patch_value</name></member>
      <member refid="structfixup__data__t_1a46ee2e53290b0d1d1ae5229e8ce39685" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>sel</name></member>
      <member refid="structfixup__data__t_1affe48f279abcc7fe794dff6c34cec769" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>set</name></member>
      <member refid="structfixup__data__t_1a65d2c1d16ef41efa02a8ebbf9aade23a" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>set_base</name></member>
      <member refid="structfixup__data__t_1aad500f91a5841c9795a42f003b6f928d" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>set_extdef</name></member>
      <member refid="structfixup__data__t_1ae29b0b47ef8c14b608f8207501375756" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>set_sel</name></member>
      <member refid="structfixup__data__t_1af5aaf3990e6e9114cc59cca949f67f9e" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>set_target_sel</name></member>
      <member refid="structfixup__data__t_1af5e5ce70e688eeb5d26cfa75134a8394" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>set_type</name></member>
      <member refid="structfixup__data__t_1a19eb9486ade6de92b7dcec8410c8e8ff" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>set_type_and_flags</name></member>
      <member refid="structfixup__data__t_1ae0a0479797733e7cc5993081a136352f" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>set_unused</name></member>
      <member refid="structfixup__data__t_1a448adecee97e418608cde0c9ec7dd4df" prot="protected" virt="non-virtual"><scope>fixup_data_t</scope><name>type</name></member>
      <member refid="structfixup__data__t_1a552e69d524c774710480d3062626f9e2" prot="public" virt="non-virtual"><scope>fixup_data_t</scope><name>was_created</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
