<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group__seg__name" kind="group">
    <compoundname>seg_name</compoundname>
    <title>Segment names</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__seg__name_1ga3d5103bc9a9467bf76955237678ebe1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export set_segm_name</definition>
        <argsstring>(segment_t *s, const char *name, int flags=0)</argsstring>
        <name>set_segm_name</name>
        <param>
          <type><ref refid="classsegment__t" kindref="compound">segment_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename segment. The new name is validated (see validate_name). A segment always has a name. If you hadn&apos;t specified a name, the kernel will assign it &quot;seg###&quot; name where ### is segment number. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to segment (may be NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>new segment name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>ADDSEG_IDBENC or 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ok, name is good and segment is renamed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>failure, name is bad or segment is NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="1009" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__seg__name_1ga338226d1af237de04e3ca6c941560afe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman ssize_t ida_export get_segm_name</definition>
        <argsstring>(qstring *buf, const segment_t *s, int flags=0)</argsstring>
        <name>get_segm_name</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const <ref refid="classsegment__t" kindref="compound">segment_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get true segment name by pointer to segment. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer. can not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to segment </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>0-return name as is; 1-substitute bad symbols with _ 1 corresponds to GN_VISIBLE </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size of segment name (-1 if s==NULL) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="1022" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__seg__name_1ga9664611338c9701b54dd1f0e4915a7d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> idaapi</type>
        <definition>ssize_t idaapi get_visible_segm_name</definition>
        <argsstring>(qstring *buf, const segment_t *s)</argsstring>
        <name>get_visible_segm_name</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const <ref refid="classsegment__t" kindref="compound">segment_t</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get segment name by pointer to segment. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer. can not be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to segment </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size of segment name (-1 if s==NULL) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="1030" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="1030" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="group__seg__name_1gafbbbb4017cfa20f887d0b6f0fe01693f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
        <definition>ssize_t get_segm_expr</definition>
        <argsstring>(qstring *buf, ea_t from, sel_t sel)</argsstring>
        <name>get_segm_expr</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>from</declname>
        </param>
        <param>
          <type>sel_t</type>
          <declname>sel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get colored segment name expression in the form (segname + displacement). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer to hold segment expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>linear address of instruction operand or data referring to the name. This address will be used to get fixup information, so it should point to exact position of operand in the instruction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sel</parametername>
</parameternamelist>
<parameterdescription>
<para>value to convert to segment expression </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size of segment expression or -1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="1045" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Various ways to retrieve the name of a segment </para>    </detaileddescription>
  </compounddef>
</doxygen>
