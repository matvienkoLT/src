<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="idp_8hpp" kind="file" language="C++">
    <compoundname>idp.hpp</compoundname>
    <includes refid="fpro_8h" local="no">fpro.h</includes>
    <includes refid="nalt_8hpp" local="no">nalt.hpp</includes>
    <includes refid="segment_8hpp" local="no">segment.hpp</includes>
    <includes refid="funcs_8hpp" local="no">funcs.hpp</includes>
    <includes refid="ua_8hpp" local="no">ua.hpp</includes>
    <includes refid="bitrange_8hpp" local="no">bitrange.hpp</includes>
    <includes refid="config_8hpp" local="no">config.hpp</includes>
    <includedby refid="dbg_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp</includedby>
    <includedby refid="frame_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/frame.hpp</includedby>
    <includedby refid="typeinf_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp</includedby>
    <includedby refid="hexrays_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</includedby>
    <includedby refid="graph_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</includedby>
    <includedby refid="expr_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/expr.hpp</includedby>
    <incdepgraph>
      <node id="696">
        <label>sys/stat.h</label>
      </node>
      <node id="680">
        <label>stdarg.h</label>
      </node>
      <node id="683">
        <label>assert.h</label>
      </node>
      <node id="699">
        <label>ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
      </node>
      <node id="679">
        <label>stdlib.h</label>
      </node>
      <node id="706">
        <label>ua.hpp</label>
        <link refid="ua_8hpp"/>
        <childnode refid="707" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
      </node>
      <node id="709">
        <label>bitrange.hpp</label>
        <link refid="bitrange_8hpp"/>
      </node>
      <node id="691">
        <label>io.h</label>
      </node>
      <node id="694">
        <label>fcntl.h</label>
      </node>
      <node id="697">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="689">
        <label>malloc.h</label>
      </node>
      <node id="688">
        <label>string</label>
      </node>
      <node id="693">
        <label>map</label>
      </node>
      <node id="676">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
      </node>
      <node id="692">
        <label>direct.h</label>
      </node>
      <node id="681">
        <label>stddef.h</label>
      </node>
      <node id="698">
        <label>nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
      </node>
      <node id="705">
        <label>lines.hpp</label>
        <link refid="lines_8hpp"/>
        <childnode refid="699" relation="include">
        </childnode>
      </node>
      <node id="684">
        <label>limits.h</label>
      </node>
      <node id="695">
        <label>sys/types.h</label>
      </node>
      <node id="690">
        <label>string.h</label>
      </node>
      <node id="687">
        <label>new</label>
      </node>
      <node id="708">
        <label>xref.hpp</label>
        <link refid="xref_8hpp"/>
      </node>
      <node id="703">
        <label>funcs.hpp</label>
        <link refid="funcs_8hpp"/>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
      </node>
      <node id="678">
        <label>pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
      </node>
      <node id="702">
        <label>segment.hpp</label>
        <link refid="segment_8hpp"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
      </node>
      <node id="686">
        <label>time.h</label>
      </node>
      <node id="677">
        <label>fpro.h</label>
        <link refid="fpro_8h"/>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
      </node>
      <node id="710">
        <label>config.hpp</label>
        <link refid="config_8hpp_source"/>
      </node>
      <node id="704">
        <label>bytes.hpp</label>
        <link refid="bytes_8hpp"/>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
      </node>
      <node id="685">
        <label>ctype.h</label>
      </node>
      <node id="700">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
      </node>
      <node id="701">
        <label>netnode.hpp</label>
        <link refid="netnode_8hpp"/>
        <childnode refid="700" relation="include">
        </childnode>
      </node>
      <node id="707">
        <label>kernwin.hpp</label>
        <link refid="kernwin_8hpp"/>
      </node>
      <node id="682">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="717">
        <label>obj/x64_linux_gcc_32_opt/idasdk/intel.hpp</label>
        <link refid="intel_8hpp_source"/>
      </node>
      <node id="720">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ida_highlighter.hpp</label>
        <link refid="ida__highlighter_8hpp_source"/>
      </node>
      <node id="711">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="712" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="712">
        <label>obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp</label>
        <link refid="dbg_8hpp"/>
      </node>
      <node id="718">
        <label>obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</label>
        <link refid="graph_8hpp"/>
      </node>
      <node id="721">
        <label>obj/x64_linux_gcc_32_opt/idasdk/tstfeat.hpp</label>
        <link refid="tstfeat_8hpp_source"/>
      </node>
      <node id="719">
        <label>obj/x64_linux_gcc_32_opt/idasdk/expr.hpp</label>
        <link refid="expr_8hpp"/>
        <childnode refid="720" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
      </node>
      <node id="713">
        <label>obj/x64_linux_gcc_32_opt/idasdk/frame.hpp</label>
        <link refid="frame_8hpp"/>
      </node>
      <node id="714">
        <label>obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp</label>
        <link refid="typeinf_8hpp"/>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
        <childnode refid="717" relation="include">
        </childnode>
      </node>
      <node id="716">
        <label>obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</label>
        <link refid="hexrays_8hpp_source"/>
      </node>
      <node id="715">
        <label>obj/x64_linux_gcc_32_opt/idasdk/lumina.hpp</label>
        <link refid="lumina_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbytes__t" prot="public">bytes_t</innerclass>
    <innerclass refid="structinstruc__t" prot="public">instruc_t</innerclass>
    <innerclass refid="structasm__t" prot="public">asm_t</innerclass>
    <innerclass refid="structprocessor__t" prot="public">processor_t</innerclass>
    <innerclass refid="structreg__info__t" prot="public">reg_info_t</innerclass>
    <innernamespace refid="namespaceidb__event">idb_event</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="idp_8hpp_1af4b4e4966302754b758c8cc16f964a15" prot="public" static="no">
        <name>IDP_INTERFACE_VERSION</name>
        <initializer>700</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The interface version number. <simplesect kind="note"><para>see also <ref refid="pro_8h_1a4f56c6c22937f8cd0caadb330c96ab20" kindref="member">IDA_SDK_VERSION</ref> from <ref refid="pro_8h" kindref="compound">pro.h</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="41" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga1d6543d4600a0d208f6b4c466a2394b0" prot="public" static="no">
        <name>CF_STOP</name>
        <initializer>0x00001</initializer>
        <briefdescription>
<para>next instruction </para>        </briefdescription>
        <detaileddescription>
<para>Instruction doesn&apos;t pass execution to the </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="63" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga1629b52b2450f8665eb71648e377d3fe" prot="public" static="no">
        <name>CF_CALL</name>
        <initializer>0x00002</initializer>
        <briefdescription>
<para>CALL instruction (should make a procedure here) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="65" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gaa0473eca46d640d94212f378c7988f68" prot="public" static="no">
        <name>CF_CHG1</name>
        <initializer>0x00004</initializer>
        <briefdescription>
<para>The instruction modifies the first operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="66" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gaedfa5241b0024453e3eb0f8e48645667" prot="public" static="no">
        <name>CF_CHG2</name>
        <initializer>0x00008</initializer>
        <briefdescription>
<para>The instruction modifies the second operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="67" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga0aade4b83f5c48411d0767d4c299a699" prot="public" static="no">
        <name>CF_CHG3</name>
        <initializer>0x00010</initializer>
        <briefdescription>
<para>The instruction modifies the third operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="68" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gabf64c54459932fb0f131303516884401" prot="public" static="no">
        <name>CF_CHG4</name>
        <initializer>0x00020</initializer>
        <briefdescription>
<para>The instruction modifies 4 operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="69" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga9681cb84e3b334d900a2c2f1c497533f" prot="public" static="no">
        <name>CF_CHG5</name>
        <initializer>0x00040</initializer>
        <briefdescription>
<para>The instruction modifies 5 operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="70" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gaaba6f7c37994358283af54fc3467b1e9" prot="public" static="no">
        <name>CF_CHG6</name>
        <initializer>0x00080</initializer>
        <briefdescription>
<para>The instruction modifies 6 operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="71" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gac8eb94b87477ea6e5b98c32c911e96b0" prot="public" static="no">
        <name>CF_USE1</name>
        <initializer>0x00100</initializer>
        <briefdescription>
<para>The instruction uses value of the first operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="72" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gad583aa7ea6018590706dcb3d9a6c36c8" prot="public" static="no">
        <name>CF_USE2</name>
        <initializer>0x00200</initializer>
        <briefdescription>
<para>The instruction uses value of the second operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="73" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gaf368f97ba9028af8de9c17357b83411b" prot="public" static="no">
        <name>CF_USE3</name>
        <initializer>0x00400</initializer>
        <briefdescription>
<para>The instruction uses value of the third operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="74" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga8864275efe42cf68cef15ccc40dadbac" prot="public" static="no">
        <name>CF_USE4</name>
        <initializer>0x00800</initializer>
        <briefdescription>
<para>The instruction uses value of the 4 operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="75" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga34bc121252c0356520cf786f7a7f5a8a" prot="public" static="no">
        <name>CF_USE5</name>
        <initializer>0x01000</initializer>
        <briefdescription>
<para>The instruction uses value of the 5 operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="76" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga2e0803341bfaa5ca8218dab44f0a8422" prot="public" static="no">
        <name>CF_USE6</name>
        <initializer>0x02000</initializer>
        <briefdescription>
<para>The instruction uses value of the 6 operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="77" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gafd76ed40dfacb78082bc6f5683375379" prot="public" static="no">
        <name>CF_JUMP</name>
        <initializer>0x04000</initializer>
        <briefdescription>
<para>jump or call (thus needs additional analysis) </para>        </briefdescription>
        <detaileddescription>
<para>The instruction passes execution using indirect </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="78" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga61c38cff266cc3b1855f46045b1d812a" prot="public" static="no">
        <name>CF_SHFT</name>
        <initializer>0x08000</initializer>
        <briefdescription>
<para>Bit-shift instruction (shl,shr...) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="80" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga5afe6b1c045008da7c9fd81c7701a921" prot="public" static="no">
        <name>CF_HLL</name>
        <initializer>0x10000</initializer>
        <briefdescription>
<para>language function. </para>        </briefdescription>
        <detaileddescription>
<para>Instruction may be present in a high level </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="81" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gacee1bd453003d8d7d65cc1581cce622b" prot="public" static="no">
        <name>CF_CHG7</name>
        <initializer>0x020000</initializer>
        <briefdescription>
<para>The instruction modifies the 7th operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="83" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gaf521ab2319749e2db6904338a59a7348" prot="public" static="no">
        <name>CF_CHG8</name>
        <initializer>0x040000</initializer>
        <briefdescription>
<para>The instruction modifies the 8th operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="84" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1ga347b80bf083d45df03a3ba7444ec70f0" prot="public" static="no">
        <name>CF_USE7</name>
        <initializer>0x080000</initializer>
        <briefdescription>
<para>The instruction uses value of the 7th operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="85" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_f___1gab53e36c99f69e7c9de95a2c4379821f4" prot="public" static="no">
        <name>CF_USE8</name>
        <initializer>0x100000</initializer>
        <briefdescription>
<para>The instruction uses value of the 8th operand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="86" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga844fc7df15d713f1b4809f78c7ad2eb5" prot="public" static="no">
        <name>AS_OFFST</name>
        <initializer>0x00000001L</initializer>
        <briefdescription>
<para>offsets are &apos;offset xxx&apos; ? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="156" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga8773f0a90cb87a28f3b84080d3956625" prot="public" static="no">
        <name>AS_COLON</name>
        <initializer>0x00000002L</initializer>
        <briefdescription>
<para>create colons after data names ? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="157" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga3d706d958b5cbfdc37da83fe5a312947" prot="public" static="no">
        <name>AS_UDATA</name>
        <initializer>0x00000004L</initializer>
        <briefdescription>
<para>can use &apos;?&apos; in data directives </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="158" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga26c6d9e4ae183059b0bd1c0050b99c69" prot="public" static="no">
        <name>AS_2CHRE</name>
        <initializer>0x00000008L</initializer>
        <briefdescription>
<para>double char constants are: "xy </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="160" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga2149957915669f6f74349b52600a11f4" prot="public" static="no">
        <name>AS_NCHRE</name>
        <initializer>0x00000010L</initializer>
        <briefdescription>
<para>char constants are: &apos;x </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="161" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga2a206e41379a06c4fa6c14d7eb8d0f4f" prot="public" static="no">
        <name>AS_N2CHR</name>
        <initializer>0x00000020L</initializer>
        <briefdescription>
<para>can&apos;t have 2 byte char consts </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="162" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gae31e42bad6ee54ff5ece2552365a5ab3" prot="public" static="no">
        <name>AS_1TEXT</name>
        <initializer>0x00000040L</initializer>
        <briefdescription>
<para>1 text per line, no bytes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="165" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gae7011ec3b89b08edabf520bd46005319" prot="public" static="no">
        <name>AS_NHIAS</name>
        <initializer>0x00000080L</initializer>
        <briefdescription>
<para>no characters with high bit </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="166" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gafbb4b6b5600dcf8c6ccc7c92a366808c" prot="public" static="no">
        <name>AS_NCMAS</name>
        <initializer>0x00000100L</initializer>
        <briefdescription>
<para>no commas in ascii directives </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="167" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gaa5b37ce368ea89728ab2dc52eb78e4ba" prot="public" static="no">
        <name>AS_HEXFM</name>
        <initializer>0x00000E00L</initializer>
        <briefdescription>
<para>mask - hex number format </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="169" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gaf22d00b95adbbf0142077d77a71ca8c0" prot="public" static="no">
        <name>ASH_HEXF0</name>
        <initializer>0x00000000L</initializer>
        <briefdescription>
<para>34h </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="170" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga789ba79f27a16c4b324c157f1a142af1" prot="public" static="no">
        <name>ASH_HEXF1</name>
        <initializer>0x00000200L</initializer>
        <briefdescription>
<para>h&apos;34 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="171" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gafde8a561633c351bb6f443ef413a44ed" prot="public" static="no">
        <name>ASH_HEXF2</name>
        <initializer>0x00000400L</initializer>
        <briefdescription>
<para>34 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="172" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga91ab9d2cb5ed3f10fbb3801ece52d4d8" prot="public" static="no">
        <name>ASH_HEXF3</name>
        <initializer>0x00000600L</initializer>
        <briefdescription>
<para>0x34 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="173" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gaff323ec13d551aa17fb6af081246df96" prot="public" static="no">
        <name>ASH_HEXF4</name>
        <initializer>0x00000800L</initializer>
        <briefdescription>
<para>$34 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="174" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gaf96a9f3d0e96740c40a610903bd2ecf5" prot="public" static="no">
        <name>ASH_HEXF5</name>
        <initializer>0x00000A00L</initializer>
        <briefdescription>
<para>&lt;^R &gt; (radix) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="175" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga14643ce556c2383e5e72ced79fd450bf" prot="public" static="no">
        <name>AS_DECFM</name>
        <initializer>0x00003000L</initializer>
        <briefdescription>
<para>mask - decimal number format </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="176" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga6e892f55bdf298ab5e0b1c490d6bd737" prot="public" static="no">
        <name>ASD_DECF0</name>
        <initializer>0x00000000L</initializer>
        <briefdescription>
<para>34 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="177" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga6a060412771fd600167299151eb2fa22" prot="public" static="no">
        <name>ASD_DECF1</name>
        <initializer>0x00001000L</initializer>
        <briefdescription>
<para>#34 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="178" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga57c938cfcc8d65213e65c7280a16e4ef" prot="public" static="no">
        <name>ASD_DECF2</name>
        <initializer>0x00002000L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><orderedlist>
<listitem></listitem></orderedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="179" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga4d724c404f85245c59e1decc2eddd941" prot="public" static="no">
        <name>ASD_DECF3</name>
        <initializer>0x00003000L</initializer>
        <briefdescription>
<para>.34 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="180" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gad414cc5b0b6f064d3fbf0d2447b9651d" prot="public" static="no">
        <name>AS_OCTFM</name>
        <initializer>0x0001C000L</initializer>
        <briefdescription>
<para>mask - octal number format </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="181" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gacc6e55f0a9f200cce88a58fa2f7d671d" prot="public" static="no">
        <name>ASO_OCTF0</name>
        <initializer>0x00000000L</initializer>
        <briefdescription>
<para>123o </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="182" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gac7c2e2fc1b3ce6237f414e0019e68906" prot="public" static="no">
        <name>ASO_OCTF1</name>
        <initializer>0x00004000L</initializer>
        <briefdescription>
<para>0123 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="183" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gab5a836c6f5697badc7f9c6bc7f2e9742" prot="public" static="no">
        <name>ASO_OCTF2</name>
        <initializer>0x00008000L</initializer>
        <briefdescription>
<para>123 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="184" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gadc16b0f1ad65d7e94efbc4c08ef98f34" prot="public" static="no">
        <name>ASO_OCTF3</name>
        <initializer>0x0000C000L</initializer>
        <briefdescription>
<para>@123 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="185" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga7b8f4b472ab72b4e370aa5aa47284013" prot="public" static="no">
        <name>ASO_OCTF4</name>
        <initializer>0x00010000L</initializer>
        <briefdescription>
<para>o&apos;123 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="186" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gafa1e84d35e64a75bc1d59b765e7544cc" prot="public" static="no">
        <name>ASO_OCTF5</name>
        <initializer>0x00014000L</initializer>
        <briefdescription>
<para>123q </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="187" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga07e50d055b24de247d923534e120f07f" prot="public" static="no">
        <name>ASO_OCTF6</name>
        <initializer>0x00018000L</initializer>
        <briefdescription>
<para>~123 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="188" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga6945b0ae3344c429a39993f9ae2c4282" prot="public" static="no">
        <name>ASO_OCTF7</name>
        <initializer>0x0001C000L</initializer>
        <briefdescription>
<para>q&apos;123 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="189" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gaea6b95c101706e7988f6d49b8509cdd8" prot="public" static="no">
        <name>AS_BINFM</name>
        <initializer>0x000E0000L</initializer>
        <briefdescription>
<para>mask - binary number format </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="190" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gafb453c515e32b9935b0adcbe873bb871" prot="public" static="no">
        <name>ASB_BINF0</name>
        <initializer>0x00000000L</initializer>
        <briefdescription>
<para>010101b </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="191" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gab18b77f94611fd63d2d97519eac8c370" prot="public" static="no">
        <name>ASB_BINF1</name>
        <initializer>0x00020000L</initializer>
        <briefdescription>
<para>^B010101 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="192" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga5fcdaecb0ebdfcfcf38c261556b424b9" prot="public" static="no">
        <name>ASB_BINF2</name>
        <initializer>0x00040000L</initializer>
        <briefdescription>
<para>%010101 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="193" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga04dfcb36e2322773e8d5454c351d2425" prot="public" static="no">
        <name>ASB_BINF3</name>
        <initializer>0x00060000L</initializer>
        <briefdescription>
<para>0b1010101 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="194" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga21c469a71d2945e318d29af61721bd7c" prot="public" static="no">
        <name>ASB_BINF4</name>
        <initializer>0x00080000L</initializer>
        <briefdescription>
<para>b&apos;1010101 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="195" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1gab2e01cc6cd8897218035dfb870e42913" prot="public" static="no">
        <name>ASB_BINF5</name>
        <initializer>0x000A0000L</initializer>
        <briefdescription>
<para>b&apos;1010101&apos; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="196" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga44ad4039ab67661230bb87e64c69bbda" prot="public" static="no">
        <name>AS_UNEQU</name>
        <initializer>0x00100000L</initializer>
        <briefdescription>
<para>replace undefined data items with EQU (for ANTA&apos;s A80) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="198" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga1dd9b63488395612839f5ebfc9e17f24" prot="public" static="no">
        <name>AS_ONEDUP</name>
        <initializer>0x00200000L</initializer>
        <briefdescription>
<para>One array definition per line. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="199" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga6754f916c55cb56cc22e6e4925b25354" prot="public" static="no">
        <name>AS_NOXRF</name>
        <initializer>0x00400000L</initializer>
        <briefdescription>
<para>Disable xrefs during the output file generation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="200" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga9c545ee6f465574342d791255e9654ff" prot="public" static="no">
        <name>AS_XTRNTYPE</name>
        <initializer>0x00800000L</initializer>
        <briefdescription>
<para>Assembler understands type of extern symbols as &quot;:type&quot; suffix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="201" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga355703d68baa8b50b6f49b10f7e77557" prot="public" static="no">
        <name>AS_RELSUP</name>
        <initializer>0x01000000L</initializer>
        <briefdescription>
<para>Checkarg: &apos;and&apos;,&apos;or&apos;,&apos;xor&apos; operations with addresses are possible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="202" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga16fb3d110261d82a98aa1e96bbedc568" prot="public" static="no">
        <name>AS_LALIGN</name>
        <initializer>0x02000000L</initializer>
        <briefdescription>
<para>Labels at &quot;align&quot; keyword are supported. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="203" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga6d8e31a3e1c483f448d17bcb7bf0a589" prot="public" static="no">
        <name>AS_NOCODECLN</name>
        <initializer>0x04000000L</initializer>
        <briefdescription>
<para>don&apos;t create colons after code names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="204" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga19df51c3d5fb12056bba5da54af8f52d" prot="public" static="no">
        <name>AS_NOSPACE</name>
        <initializer>0x10000000L</initializer>
        <briefdescription>
<para>No spaces in expressions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="205" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga64424aafb0d80645a6d36607a831fc88" prot="public" static="no">
        <name>AS_ALIGN2</name>
        <initializer>0x20000000L</initializer>
        <briefdescription>
<para>(.align 5 means to align at 32byte boundary) </para>        </briefdescription>
        <detaileddescription>
<para>.align directive expects an exponent rather than a power of 2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="206" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga5ec02c532f491ae26ff3cd02a2fdc207" prot="public" static="no">
        <name>AS_ASCIIC</name>
        <initializer>0x40000000L</initializer>
        <briefdescription>
<para>(\n,\x01 and similar) </para>        </briefdescription>
        <detaileddescription>
<para>ascii directive accepts C-like escape sequences </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="208" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s___1ga33c4cf0f794294ad0d85267de92aec5a" prot="public" static="no">
        <name>AS_ASCIIZ</name>
        <initializer>0x80000000L</initializer>
        <briefdescription>
<para>ascii directive inserts implicit zero byte at the end </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="210" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s2___1ga362e9f862b540aad5f6982c02d889e01" prot="public" static="no">
        <name>AS2_BRACE</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>Use braces for all expressions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="292" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s2___1ga4ccba57a47f33b95619c57267f33c25c" prot="public" static="no">
        <name>AS2_STRINV</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>(For processors with bytes bigger than 8 bits) </para>        </briefdescription>
        <detaileddescription>
<para>Invert meaning of {wide_high_byte_first} for text strings </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="293" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s2___1ga59e4b4a9d1332dbc72f92f3b6de12fc4" prot="public" static="no">
        <name>AS2_BYTE1CHAR</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>Meaningful only for wide byte processors. </para>        </briefdescription>
        <detaileddescription>
<para>One symbol per processor byte </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="295" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s2___1ga3d53a4fbbf6eafd721b06873f68afbf1" prot="public" static="no">
        <name>AS2_IDEALDSCR</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Description of struc/union is in the &apos;reverse&apos; form (keyword before name) the same as in borland tasm ideal </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="297" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s2___1gaa14b9cdc087693e937eca01771861e95" prot="public" static="no">
        <name>AS2_TERSESTR</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
<para>NAME&lt;fld,fld,...&gt; is supported. </para>        </briefdescription>
        <detaileddescription>
<para>&apos;terse&apos; structure initialization form </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="300" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s2___1gace49abd1ffff42cae630128144b15f35" prot="public" static="no">
        <name>AS2_COLONSUF</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>addresses may have &quot;:xx&quot; suffix this suffix must be ignored when extracting the address under the cursor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="302" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s2___1ga6d7de2664b172d30b87b48fce73e5319" prot="public" static="no">
        <name>AS2_YWORD</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
<para>a_yword field is present and valid </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="305" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga8a28feee92f90b567ec43fea64205f1f" prot="public" static="no">
        <name>PLFM_386</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Intel 80x86. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="354" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga041ffc16e8983f8dc3ae30230f50ba36" prot="public" static="no">
        <name>PLFM_Z80</name>
        <initializer>1</initializer>
        <briefdescription>
<para>8085, Z80 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="355" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga68e653ca78c2d217ce9b8a068591910c" prot="public" static="no">
        <name>PLFM_I860</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Intel 860. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="356" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga020c47df6ff856fa0682592fecc7b330" prot="public" static="no">
        <name>PLFM_8051</name>
        <initializer>3</initializer>
        <briefdescription>
<para>8051 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="357" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga73e0842c8ba7fbc6f7bc9acab156ce7b" prot="public" static="no">
        <name>PLFM_TMS</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Texas Instruments TMS320C5x. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="358" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga780aa404b8e795f496626b16c64ef690" prot="public" static="no">
        <name>PLFM_6502</name>
        <initializer>5</initializer>
        <briefdescription>
<para>6502 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="359" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gad9dc22d9dab8dc8d55a96b7321ea471a" prot="public" static="no">
        <name>PLFM_PDP</name>
        <initializer>6</initializer>
        <briefdescription>
<para>PDP11. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="360" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gaab43fffb18f53e35be367d5d1ff79110" prot="public" static="no">
        <name>PLFM_68K</name>
        <initializer>7</initializer>
        <briefdescription>
<para>Motorola 680x0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="361" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga496da3ce08d3eb7412bf56c092ef3430" prot="public" static="no">
        <name>PLFM_JAVA</name>
        <initializer>8</initializer>
        <briefdescription>
<para>Java. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="362" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga544d008551413d352a7db6cd4b1b9757" prot="public" static="no">
        <name>PLFM_6800</name>
        <initializer>9</initializer>
        <briefdescription>
<para>Motorola 68xx. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="363" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga9ad786d6c8f18a387d068bfe02011002" prot="public" static="no">
        <name>PLFM_ST7</name>
        <initializer>10</initializer>
        <briefdescription>
<para>SGS-Thomson ST7. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="364" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga78eecf65337ecc482e527a8f12fe0597" prot="public" static="no">
        <name>PLFM_MC6812</name>
        <initializer>11</initializer>
        <briefdescription>
<para>Motorola 68HC12. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="365" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga7c98d193a96ab5a14d970a8dc25287a7" prot="public" static="no">
        <name>PLFM_MIPS</name>
        <initializer>12</initializer>
        <briefdescription>
<para>MIPS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="366" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga4e589aa67b0421c1b96f78663a7a8c6e" prot="public" static="no">
        <name>PLFM_ARM</name>
        <initializer>13</initializer>
        <briefdescription>
<para>Advanced RISC Machines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="367" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga73b00b1994d7fdfe1a19a35c84a60e7b" prot="public" static="no">
        <name>PLFM_TMSC6</name>
        <initializer>14</initializer>
        <briefdescription>
<para>Texas Instruments TMS320C6x. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="368" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga2dde3beedc0081c8d7e677f70ecd27ae" prot="public" static="no">
        <name>PLFM_PPC</name>
        <initializer>15</initializer>
        <briefdescription>
<para>PowerPC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="369" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga5422179e6a93e9cca2510b3d39afc7e3" prot="public" static="no">
        <name>PLFM_80196</name>
        <initializer>16</initializer>
        <briefdescription>
<para>Intel 80196. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="370" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga3c455ddcd6d142772f2f0b29c768cdbe" prot="public" static="no">
        <name>PLFM_Z8</name>
        <initializer>17</initializer>
        <briefdescription>
<para>Z8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="371" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga0df1e523de5a2c4846356db83bca228e" prot="public" static="no">
        <name>PLFM_SH</name>
        <initializer>18</initializer>
        <briefdescription>
<para>Renesas (formerly Hitachi) SuperH. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="372" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga5628e051ce22e38a584d8598c6e05d15" prot="public" static="no">
        <name>PLFM_NET</name>
        <initializer>19</initializer>
        <briefdescription>
<para>Microsoft Visual Studio.Net. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="373" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gaff674a25411aac59f1e9c820cc42348e" prot="public" static="no">
        <name>PLFM_AVR</name>
        <initializer>20</initializer>
        <briefdescription>
<para>Atmel 8-bit RISC processor(s) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="374" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga0cdc36f19ed41ee8b45f6f0f94078193" prot="public" static="no">
        <name>PLFM_H8</name>
        <initializer>21</initializer>
        <briefdescription>
<para>Hitachi H8/300, H8/2000. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="375" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga60ce2a3f06a03101ed376ea8e759e1cb" prot="public" static="no">
        <name>PLFM_PIC</name>
        <initializer>22</initializer>
        <briefdescription>
<para>Microchip&apos;s PIC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="376" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gad052ff173eb67f9724b0ef5662995703" prot="public" static="no">
        <name>PLFM_SPARC</name>
        <initializer>23</initializer>
        <briefdescription>
<para>SPARC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="377" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga5e6cbbbb99d28bc0f73e508bc7518459" prot="public" static="no">
        <name>PLFM_ALPHA</name>
        <initializer>24</initializer>
        <briefdescription>
<para>DEC Alpha. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="378" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga790a87af4d90c0584d806fe0a46000f1" prot="public" static="no">
        <name>PLFM_HPPA</name>
        <initializer>25</initializer>
        <briefdescription>
<para>Hewlett-Packard PA-RISC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="379" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga4526f9cf6ffec52b4f068b4ae3376071" prot="public" static="no">
        <name>PLFM_H8500</name>
        <initializer>26</initializer>
        <briefdescription>
<para>Hitachi H8/500. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="380" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga1e610726e47ca9b8e716ba5ae8e1384a" prot="public" static="no">
        <name>PLFM_TRICORE</name>
        <initializer>27</initializer>
        <briefdescription>
<para>Tasking Tricore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="381" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga04b74d19d87512f51bd142f903462d5b" prot="public" static="no">
        <name>PLFM_DSP56K</name>
        <initializer>28</initializer>
        <briefdescription>
<para>Motorola DSP5600x. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="382" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gacf7a0950783cc9b415d5b821dfad9f35" prot="public" static="no">
        <name>PLFM_C166</name>
        <initializer>29</initializer>
        <briefdescription>
<para>Siemens C166 family. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="383" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga4ac77c2d588a7554076b9c355f0d365f" prot="public" static="no">
        <name>PLFM_ST20</name>
        <initializer>30</initializer>
        <briefdescription>
<para>SGS-Thomson ST20. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="384" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gab04639b21221f3051ae7400bb14383d4" prot="public" static="no">
        <name>PLFM_IA64</name>
        <initializer>31</initializer>
        <briefdescription>
<para>Intel Itanium IA64. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="385" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga07a253338d9bf54af679945a8e790e94" prot="public" static="no">
        <name>PLFM_I960</name>
        <initializer>32</initializer>
        <briefdescription>
<para>Intel 960. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="386" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga52644bc035e0c9e160a9528980791b05" prot="public" static="no">
        <name>PLFM_F2MC</name>
        <initializer>33</initializer>
        <briefdescription>
<para>Fujistu F2MC-16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="387" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gaebd058bab8c7ab5c8e6920dadd9919ee" prot="public" static="no">
        <name>PLFM_TMS320C54</name>
        <initializer>34</initializer>
        <briefdescription>
<para>Texas Instruments TMS320C54xx. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="388" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga0ea49fbc45a7619ea4a443045d664e90" prot="public" static="no">
        <name>PLFM_TMS320C55</name>
        <initializer>35</initializer>
        <briefdescription>
<para>Texas Instruments TMS320C55xx. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="389" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga2a50c862f10e47db262707ae827a8971" prot="public" static="no">
        <name>PLFM_TRIMEDIA</name>
        <initializer>36</initializer>
        <briefdescription>
<para>Trimedia. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="390" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gaf91fc19a2edc346da66934d02effe700" prot="public" static="no">
        <name>PLFM_M32R</name>
        <initializer>37</initializer>
        <briefdescription>
<para>Mitsubishi 32bit RISC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="391" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gab90b6eb35352d61eb04edf003b5de795" prot="public" static="no">
        <name>PLFM_NEC_78K0</name>
        <initializer>38</initializer>
        <briefdescription>
<para>NEC 78K0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="392" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga64d4197c4b5eba17c94effba81439df9" prot="public" static="no">
        <name>PLFM_NEC_78K0S</name>
        <initializer>39</initializer>
        <briefdescription>
<para>NEC 78K0S. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="393" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga3c38ec0cd126b0fc8b25806a38696bc4" prot="public" static="no">
        <name>PLFM_M740</name>
        <initializer>40</initializer>
        <briefdescription>
<para>Mitsubishi 8bit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="394" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga493a48164c388fa51ed388993450b286" prot="public" static="no">
        <name>PLFM_M7700</name>
        <initializer>41</initializer>
        <briefdescription>
<para>Mitsubishi 16bit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="395" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga90ea710438cfd26630ed6db9f6ad454b" prot="public" static="no">
        <name>PLFM_ST9</name>
        <initializer>42</initializer>
        <briefdescription>
<para>ST9+. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="396" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gae185de8cf3bf2f6381a1369cc1928aa5" prot="public" static="no">
        <name>PLFM_FR</name>
        <initializer>43</initializer>
        <briefdescription>
<para>Fujitsu FR Family. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="397" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga16495db71585dc8ac7d1a5f2090d07fe" prot="public" static="no">
        <name>PLFM_MC6816</name>
        <initializer>44</initializer>
        <briefdescription>
<para>Motorola 68HC16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="398" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga8bca6c222989ff0001d09ccd1ae2fec8" prot="public" static="no">
        <name>PLFM_M7900</name>
        <initializer>45</initializer>
        <briefdescription>
<para>Mitsubishi 7900. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="399" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga75292872c1b4b6b1f2ece5ce2c6360ea" prot="public" static="no">
        <name>PLFM_TMS320C3</name>
        <initializer>46</initializer>
        <briefdescription>
<para>Texas Instruments TMS320C3. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="400" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga4a0ba8fe6c399ff97e6385333a7161e1" prot="public" static="no">
        <name>PLFM_KR1878</name>
        <initializer>47</initializer>
        <briefdescription>
<para>Angstrem KR1878. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="401" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gaa6661abe4d9e270d9cc70f6b41d2ab39" prot="public" static="no">
        <name>PLFM_AD218X</name>
        <initializer>48</initializer>
        <briefdescription>
<para>Analog Devices ADSP 218X. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="402" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga6ccd6f85e0b733f022dd1e25cb47a24f" prot="public" static="no">
        <name>PLFM_OAKDSP</name>
        <initializer>49</initializer>
        <briefdescription>
<para>Atmel OAK DSP. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="403" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga4505f0b1f1d3b7143a35b45bd25c7bec" prot="public" static="no">
        <name>PLFM_TLCS900</name>
        <initializer>50</initializer>
        <briefdescription>
<para>Toshiba TLCS-900. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="404" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga8466c5022a6725f8bf8a151cf5bac853" prot="public" static="no">
        <name>PLFM_C39</name>
        <initializer>51</initializer>
        <briefdescription>
<para>Rockwell C39. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="405" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gaab31dec59df1619346fbd5db2e9bf627" prot="public" static="no">
        <name>PLFM_CR16</name>
        <initializer>52</initializer>
        <briefdescription>
<para>NSC CR16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="406" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gaa58386b816ab863f5c6bce88720a4e2a" prot="public" static="no">
        <name>PLFM_MN102L00</name>
        <initializer>53</initializer>
        <briefdescription>
<para>Panasonic MN10200. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="407" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga73ee91456d64c651188c8c2c97ce07b6" prot="public" static="no">
        <name>PLFM_TMS320C1X</name>
        <initializer>54</initializer>
        <briefdescription>
<para>Texas Instruments TMS320C1x. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="408" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga8b3619859cbbd3789d23cb76afcd16d9" prot="public" static="no">
        <name>PLFM_NEC_V850X</name>
        <initializer>55</initializer>
        <briefdescription>
<para>NEC V850 and V850ES/E1/E2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="409" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga1ad789c609ec3e08cf9c84ec5c0cd3df" prot="public" static="no">
        <name>PLFM_SCR_ADPT</name>
        <initializer>56</initializer>
        <briefdescription>
<para>Processor module adapter for processor modules written in scripting languages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="410" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gafff839f29b763bd5c7cad5f191ce51f6" prot="public" static="no">
        <name>PLFM_EBC</name>
        <initializer>57</initializer>
        <briefdescription>
<para>EFI Bytecode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="411" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gaf5c3a4e6600ba52526da4d647b3b061f" prot="public" static="no">
        <name>PLFM_MSP430</name>
        <initializer>58</initializer>
        <briefdescription>
<para>Texas Instruments MSP430. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="412" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga77e9795ed70edf6f78d9fb26a57073fd" prot="public" static="no">
        <name>PLFM_SPU</name>
        <initializer>59</initializer>
        <briefdescription>
<para>Cell Broadband Engine Synergistic Processor Unit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="413" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga93e0c469258a8b4678e3e47100470a05" prot="public" static="no">
        <name>PLFM_DALVIK</name>
        <initializer>60</initializer>
        <briefdescription>
<para>Android Dalvik Virtual Machine. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="414" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga09dd39a4731f17901a6145cd18633bbd" prot="public" static="no">
        <name>PLFM_65C816</name>
        <initializer>61</initializer>
        <briefdescription>
<para>65802/65816 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="415" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga693de435cdf6ec6d4c5ab8084f25bcb4" prot="public" static="no">
        <name>PLFM_M16C</name>
        <initializer>62</initializer>
        <briefdescription>
<para>Renesas M16C. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="416" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga889bb0b26d9fd79b7800f07fbe5add21" prot="public" static="no">
        <name>PLFM_ARC</name>
        <initializer>63</initializer>
        <briefdescription>
<para>Argonaut RISC Core. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="417" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga61e3f351d31765f7913d7f3ad457bd91" prot="public" static="no">
        <name>PLFM_UNSP</name>
        <initializer>64</initializer>
        <briefdescription>
<para>SunPlus unSP. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="418" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga1e6c0a785398e94fdec065a323ef8ab5" prot="public" static="no">
        <name>PLFM_TMS320C28</name>
        <initializer>65</initializer>
        <briefdescription>
<para>Texas Instruments TMS320C28x. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="419" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga5b8c4fb5fded8afcddadedb97adcaa07" prot="public" static="no">
        <name>PLFM_DSP96K</name>
        <initializer>66</initializer>
        <briefdescription>
<para>Motorola DSP96000. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="420" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1ga45b4f21cda309e869a2b40a05be07974" prot="public" static="no">
        <name>PLFM_SPC700</name>
        <initializer>67</initializer>
        <briefdescription>
<para>Sony SPC700. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="421" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gac11f7e22033ee07cdd2d9f6a5e3588ee" prot="public" static="no">
        <name>PLFM_AD2106X</name>
        <initializer>68</initializer>
        <briefdescription>
<para>Analog Devices ADSP 2106X. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="422" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_l_f_m___1gac5c78af7b27882848bafb62dfc5a1d00" prot="public" static="no">
        <name>PLFM_PIC16</name>
        <initializer>69</initializer>
        <briefdescription>
<para>Microchip&apos;s 16-bit PIC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="423" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1gaa5d76a1fe1338a80404a0ca7a7ced6d0" prot="public" static="no">
        <name>PR_SEGS</name>
        <initializer>0x000001</initializer>
        <briefdescription>
<para>has segment registers? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="430" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1gab86fc012cafb2de8b39fefc055941d17" prot="public" static="no">
        <name>PR_USE32</name>
        <initializer>0x000002</initializer>
        <briefdescription>
<para>supports 32-bit addressing? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="431" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga91a0359d79ef2256ffb0b29ae7e481cb" prot="public" static="no">
        <name>PR_DEFSEG32</name>
        <initializer>0x000004</initializer>
        <briefdescription>
<para>segments are 32-bit by default </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="432" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga16a6eaf5e27931be9adaef229a0a89b2" prot="public" static="no">
        <name>PR_RNAMESOK</name>
        <initializer>0x000008</initializer>
        <briefdescription>
<para>allow user register names for location names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="433" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1gac0adf66749fa3f827da80d71c9e1b62d" prot="public" static="no">
        <name>PR_ADJSEGS</name>
        <initializer>0x000020</initializer>
        <briefdescription>
<para>IDA may adjust segments&apos; starting/ending addresses. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="437" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga7c8f815382515d079ab0201477d23ed6" prot="public" static="no">
        <name>PR_DEFNUM</name>
        <initializer>0x0000C0</initializer>
        <briefdescription>
<para>mask - default number representation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="438" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga2ad344d34eb948ce286b2e0026a8bb8e" prot="public" static="no">
        <name>PRN_HEX</name>
        <initializer>0x000000</initializer>
        <briefdescription>
<para>hex </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="439" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga70838a2ce7fae967c51724f971695d5d" prot="public" static="no">
        <name>PRN_OCT</name>
        <initializer>0x000040</initializer>
        <briefdescription>
<para>octal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="440" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga7f6168c2bdfe0cc96f95ecf7c2a812ab" prot="public" static="no">
        <name>PRN_DEC</name>
        <initializer>0x000080</initializer>
        <briefdescription>
<para>decimal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="441" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga8b4c2b52b39d0f7a734bd9e6ce96fb58" prot="public" static="no">
        <name>PRN_BIN</name>
        <initializer>0x0000C0</initializer>
        <briefdescription>
<para>binary </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="442" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga2ce1603bd4c7104e7201614d1dba2f24" prot="public" static="no">
        <name>PR_WORD_INS</name>
        <initializer>0x000100</initializer>
        <briefdescription>
<para>instruction codes are grouped 2bytes in binary line prefix </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="443" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga5bafa5d3b2bcf045308fcf2f18255930" prot="public" static="no">
        <name>PR_NOCHANGE</name>
        <initializer>0x000200</initializer>
        <briefdescription>
<para>(display only) </para>        </briefdescription>
        <detaileddescription>
<para>The user can&apos;t change segments and code/data attributes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="444" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga45e925da1c9281d0de02882a5c995b9d" prot="public" static="no">
        <name>PR_ASSEMBLE</name>
        <initializer>0x000400</initializer>
        <briefdescription>
<para>Module has a built-in assembler and will react to ev_assemble. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="446" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1gaa9dfe3f396330c7a1bbeffcc7c755b8b" prot="public" static="no">
        <name>PR_ALIGN</name>
        <initializer>0x000800</initializer>
        <briefdescription>
<para>All data items should be aligned properly. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="447" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga257f9d36eb8bf8c36a28e014f3deedc5" prot="public" static="no">
        <name>PR_TYPEINFO</name>
        <initializer>0x001000</initializer>
        <briefdescription>
<para>ALL OF THEM SHOULD BE IMPLEMENTED! </para>        </briefdescription>
        <detaileddescription>
<para>the processor module supports type information callbacks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="448" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga4641211435ce736ed30c9ff0a558cf01" prot="public" static="no">
        <name>PR_USE64</name>
        <initializer>0x002000</initializer>
        <briefdescription>
<para>supports 64-bit addressing? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="450" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga06f27f877639085b4108573bb54641fc" prot="public" static="no">
        <name>PR_SGROTHER</name>
        <initializer>0x004000</initializer>
        <briefdescription>
<para>the segment registers don&apos;t contain the segment selectors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="451" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga6bd7458e91aaf2970f7e6e82b87b0c67" prot="public" static="no">
        <name>PR_STACK_UP</name>
        <initializer>0x008000</initializer>
        <briefdescription>
<para>the stack grows up </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="452" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga6fb7856387fc2ee4fffb45a71d508bbe" prot="public" static="no">
        <name>PR_BINMEM</name>
        <initializer>0x010000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the processor module provides correct segmentation for binary files (i.e. it creates additional segments) The kernel will not ask the user to specify the RAM/ROM sizes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="453" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1gae0bb1c2c29e8035420366f21f5503485" prot="public" static="no">
        <name>PR_SEGTRANS</name>
        <initializer>0x020000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the processor module supports the segment translation feature (meaning it calculates the code addresses using the <ref refid="ua_8hpp_1a1ef618838a811385a5f2564bcab4e762" kindref="member">map_code_ea()</ref> function) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="456" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga884adc60ef0e7236192b78ec4f900f0e" prot="public" static="no">
        <name>PR_CHK_XREF</name>
        <initializer>0x040000</initializer>
        <briefdescription>
<para>don&apos;t allow near xrefs between segments with different bases </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="459" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1gaa60a49252dd2c4925d30b53f9dae1cd8" prot="public" static="no">
        <name>PR_NO_SEGMOVE</name>
        <initializer>0x080000</initializer>
        <briefdescription>
<para>(i.e. the user can&apos;t move segments) </para>        </briefdescription>
        <detaileddescription>
<para>the processor module doesn&apos;t support <ref refid="group__seg__man_1gab3c11fbdf0ac345cb618b8b0ad3ef04c" kindref="member">move_segm()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="460" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga4bad99f470ddf7643783e7f212084c07" prot="public" static="no">
        <name>PR_USE_ARG_TYPES</name>
        <initializer>0x200000</initializer>
        <briefdescription>
<para>use {use_arg_types} callback </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="464" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1gaf96c8c11c1d33bf6b8b45cd0c596b9a9" prot="public" static="no">
        <name>PR_SCALE_STKVARS</name>
        <initializer>0x400000</initializer>
        <briefdescription>
<para>use {get_stkvar_scale} callback </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="465" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga6baecd2746e817d53817c9fa12a9aed1" prot="public" static="no">
        <name>PR_DELAYED</name>
        <initializer>0x800000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>has delayed jumps and calls if this flag is set, {is_basic_block_end}, {has_delay_slot} should be implemented </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="466" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga14e56b92183c6058d318b7382fc0380e" prot="public" static="no">
        <name>PR_ALIGN_INSN</name>
        <initializer>0x1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allow ida to create alignment instructions arbitrarily. Since these instructions might lead to other wrong instructions and spoil the listing, IDA does not create them by default anymore </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="469" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga5fbd4b03256088198824f6d375caeb54" prot="public" static="no">
        <name>PR_PURGING</name>
        <initializer>0x2000000</initializer>
        <briefdescription>
<para>there are calling conventions which may purge bytes from the stack </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="472" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga9dc1ba3bdeb3d6172abfeec192c9a251" prot="public" static="no">
        <name>PR_CNDINSNS</name>
        <initializer>0x4000000</initializer>
        <briefdescription>
<para>has conditional instructions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="473" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga196de44585ee70b23e01cb9266aff600" prot="public" static="no">
        <name>PR_USE_TBYTE</name>
        <initializer>0x8000000</initializer>
        <briefdescription>
<para><ref refid="group__tf__float_1ga34f394b71c9b27c46560178e0054f79b" kindref="member">BTMT_SPECFLT</ref> means _TBYTE type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="474" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga51211ffe0d08c32dece2d318a462e139" prot="public" static="no">
        <name>PR_DEFSEG64</name>
        <initializer>0x10000000</initializer>
        <briefdescription>
<para>segments are 64-bit by default </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="475" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r___1ga4913326d5444a3b89230193409eac155" prot="public" static="no">
        <name>PR_OUTER</name>
        <initializer>0x20000000</initializer>
        <briefdescription>
<para>has outer operands (currently only mc68k) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="476" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r2___1ga50901ac40fe5f487dcdb5416068d9455" prot="public" static="no">
        <name>PR2_MAPPINGS</name>
        <initializer>0x000001</initializer>
        <briefdescription>
<para>the processor module uses memory mapping </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="483" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r2___1ga38f9a5aea4bda90f219fa34a3cb673fa" prot="public" static="no">
        <name>PR2_IDP_OPTS</name>
        <initializer>0x000002</initializer>
        <briefdescription>
<para>the module has processor-specific configuration options </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="484" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r2___1ga7b7717577032679cceccf35a750347be" prot="public" static="no">
        <name>PR2_REALCVT</name>
        <initializer>0x000004</initializer>
        <briefdescription>
<para>the module has &apos;realcvt&apos; event implementation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="485" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r2___1ga74011fc50648b8677793f813c74c023e" prot="public" static="no">
        <name>PR2_THUMB_BIT</name>
        <initializer>0x000008</initializer>
        <briefdescription>
<para>bit0 of code addresses has special meaning (arm thumb) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="486" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idp_8hpp_1a6005e6e5927ea4b1ea6df0cf98636dda" prot="public" static="no">
        <name>CUSTOM_INSN_ITYPE</name>
        <initializer>0x8000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Custom instruction codes defined by processor extension plugins must be greater than or equal to this </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="542" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="idp_8hpp_1a062e4611e8876c7b1608cbecab0d94ed" prot="public" static="no">
        <name>REG_SPOIL</name>
        <initializer>0x80000000L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>processor_t::use_regarg_type uses this bit in the return value to indicate that the register value has been spoiled </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="546" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_p___f_p___s_p_1gaa8faaf6fd7b5f76a89476e84fc26af3b" prot="public" static="no">
        <name>OP_FP_BASED</name>
        <initializer>0x00000000</initializer>
        <briefdescription>
<para>operand is FP based </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="1612" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="1612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_p___f_p___s_p_1ga6d3a36bd2b55e71020e3fa26a01b9445" prot="public" static="no">
        <name>OP_SP_BASED</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>operand is SP based </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="1613" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="1613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_p___f_p___s_p_1ga4fd18c0c2d6e4e9fde9dfc68bf38f11a" prot="public" static="no">
        <name>OP_SP_ADD</name>
        <initializer>0x00000000</initializer>
        <briefdescription>
<para>operand value is added to the pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="1614" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="1614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_p___f_p___s_p_1ga544932c940d6d92ddcc125eb8eff230f" prot="public" static="no">
        <name>OP_SP_SUB</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>operand value is subtracted from the pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="1615" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="1615" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="idp_8hpp_1a1231ea935a9e9f66dead251e225096f4" prot="public" static="no">
        <name>setproc_level_t</name>
        <enumvalue id="idp_8hpp_1a1231ea935a9e9f66dead251e225096f4a4c0caf27cadc42a36ad178d966d5debc" prot="public">
          <name>SETPROC_IDB</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>set processor type for old idb </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idp_8hpp_1a1231ea935a9e9f66dead251e225096f4a16b87551337d1287e147c8064400f2f6" prot="public">
          <name>SETPROC_LOADER</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>set processor type for new idb; if the user has specified a compatible processor, return success without changing it. if failure, call <ref refid="loader_8hpp_1ac5e3189d54cc0c34924fb28ebacbbbc3" kindref="member">loader_failure()</ref> </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="idp_8hpp_1a1231ea935a9e9f66dead251e225096f4aff85e9216b82ed8880a81d159d21c841" prot="public">
          <name>SETPROC_LOADER_NON_FATAL</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>the same as SETPROC_LOADER but non-fatal failures. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="idp_8hpp_1a1231ea935a9e9f66dead251e225096f4ac8b7621d0cb8d23bca872911b442d920" prot="public">
          <name>SETPROC_USER</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>set user-specified processor used for -p and manual processor change at later time </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags passed as &apos;level&apos; parameter to <ref refid="idp_8hpp_1a2e01ca60cc6559ab1dbbfbb9562d6870" kindref="member">set_processor_type()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2287" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="2286" bodyend="2296"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="idp_8hpp_1a008673ba94d6d666e4d4106d88f830cc" prot="public" static="no">
        <type>int</type>
        <definition>typedef int help_t</definition>
        <argsstring></argsstring>
        <name>help_t</name>
        <briefdescription>
<para>help screen number </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="31" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="idp_8hpp_1a1e42d23df3fb79ce131a227e4898b570" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structreg__info__t" kindref="compound">reg_info_t</ref> &gt;</type>
        <definition>typedef qvector&lt;reg_info_t&gt; reginfovec_t</definition>
        <argsstring></argsstring>
        <name>reginfovec_t</name>
        <briefdescription>
<para>vector of register info objects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2251" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="2250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="idp_8hpp_1a1b22cd8cccc4c04160172a9fdc95626b" prot="public" static="no" mutable="no">
        <type>idaman <ref refid="structprocessor__t" kindref="compound">processor_t</ref> ida_export_data</type>
        <definition>idaman processor_t ida_export_data ph</definition>
        <argsstring></argsstring>
        <name>ph</name>
        <briefdescription>
<para>current processor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="1720" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="1720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="idp_8hpp_1a85a34894aa9b4ac8adf0a654edd2ab91" prot="public" static="no" mutable="no">
        <type>idaman <ref refid="structasm__t" kindref="compound">asm_t</ref> ida_export_data</type>
        <definition>idaman asm_t ida_export_data ash</definition>
        <argsstring></argsstring>
        <name>ash</name>
        <briefdescription>
<para>current assembler </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="1721" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="1721" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="idp_8hpp_1a8b44d6040307f43759321a17c97fa428" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool has_cf_chg</definition>
        <argsstring>(uint32 feature, uint opnum)</argsstring>
        <name>has_cf_chg</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>opnum</declname>
        </param>
        <briefdescription>
<para>Does an instruction with the specified feature modify the i-th operand? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="93" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="93" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1aeec472d10fb9ffce75cc2921fc8bbaf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool has_cf_use</definition>
        <argsstring>(uint32 feature, uint opnum)</argsstring>
        <name>has_cf_use</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>opnum</declname>
        </param>
        <briefdescription>
<para>Does an instruction with the specified feature use a value of the i-th operand? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="107" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="107" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1ab7641949fadc24363d210d3b25346d99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export has_insn_feature</definition>
        <argsstring>(int icode, uint32 bit)</argsstring>
        <name>has_insn_feature</name>
        <param>
          <type>int</type>
          <declname>icode</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>bit</declname>
        </param>
        <briefdescription>
<para>Does the specified instruction have the specified feature? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1abe56331714c4d2ccd81699cd4e05a41b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export is_call_insn</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>is_call_insn</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
<para>Is the instruction a &quot;call&quot;? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1aa2b85ea6671b6c1a04baf5778cdd1b73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export is_ret_insn</definition>
        <argsstring>(const insn_t &amp;insn, bool strict=true)</argsstring>
        <name>is_ret_insn</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>strict</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Is the instruction a &quot;return&quot;? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a8b9337907e6cdf6de461ecebe5fa8061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export is_indirect_jump_insn</definition>
        <argsstring>(const insn_t &amp;insn)</argsstring>
        <name>is_indirect_jump_insn</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <briefdescription>
<para>Is the instruction an indirect jump? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a7e2d90b18360d517fee7acda121dc439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export is_basic_block_end</definition>
        <argsstring>(const insn_t &amp;insn, bool call_insn_stops_block)</argsstring>
        <name>is_basic_block_end</name>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>call_insn_stops_block</declname>
        </param>
        <briefdescription>
<para>Is the instruction the end of a basic block? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a52f6854de24406d6daaa8783efe05427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CASSERT</definition>
        <argsstring>(sizeof(processor_t)==104)</argsstring>
        <name>CASSERT</name>
        <param>
          <type>sizeof(<ref refid="structprocessor__t" kindref="compound">processor_t</ref>)</type>
          <defval>=104</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="1713" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a8bb3f5c15f5b8b8e9da26a7a216aef2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export str2reg</definition>
        <argsstring>(const char *p)</argsstring>
        <name>str2reg</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get any reg number (-1 on error) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a0fd0a2914e9e1fe193175e78a5a6cdeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export is_align_insn</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>is_align_insn</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the instruction at &apos;ea&apos; looks like an alignment instruction, return its length in bytes. Otherwise return 0. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a5c968785a71a177d955498b0a4b0c7b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman ssize_t ida_export get_reg_name</definition>
        <argsstring>(qstring *buf, int reg, size_t width, int reghi=-1)</argsstring>
        <name>get_reg_name</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reghi</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get text representation of a register. For most processors this function will just return {reg_names}[reg]. If the processor module has implemented processor_t::get_reg_name, it will be used instead <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>internal register number as defined in the processor module </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>register width in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reghi</parametername>
</parameternamelist>
<parameterdescription>
<para>if specified, then this function will return the register pair </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of register name in bytes or -1 if failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a095c8aa3c0a85dcd73d22f14a996838c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* get_reg_info</definition>
        <argsstring>(const char *regname, bitrange_t *bitrange)</argsstring>
        <name>get_reg_info</name>
        <param>
          <type>const char *</type>
          <declname>regname</declname>
        </param>
        <param>
          <type><ref refid="classbitrange__t" kindref="compound">bitrange_t</ref> *</type>
          <declname>bitrange</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get register information - useful for registers like al, ah, dil, etc. <simplesect kind="return"><para>NULL no such register </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2219" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="2219" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1aff4f4ed80770a7c6a55292db27f3768e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export parse_reg_name</definition>
        <argsstring>(reg_info_t *ri, const char *regname)</argsstring>
        <name>parse_reg_name</name>
        <param>
          <type><ref refid="structreg__info__t" kindref="compound">reg_info_t</ref> *</type>
          <declname>ri</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>regname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get register info by name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">ri</parametername>
</parameternamelist>
<parameterdescription>
<para>result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>regname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of register </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a077c76d94811926b7bfb19d7d9bc9d70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t sizeof_ldbl</definition>
        <argsstring>(void)</argsstring>
        <name>sizeof_ldbl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get size of long double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2280" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="2280" bodyend="2283"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a2e01ca60cc6559ab1dbbfbb9562d6870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export set_processor_type</definition>
        <argsstring>(const char *procname, setproc_level_t level)</argsstring>
        <name>set_processor_type</name>
        <param>
          <type>const char *</type>
          <declname>procname</declname>
        </param>
        <param>
          <type><ref refid="idp_8hpp_1a1231ea935a9e9f66dead251e225096f4" kindref="member">setproc_level_t</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set target processor type. Once a processor module is loaded, it can not be replaced until we close the idb. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>procname</parametername>
</parameternamelist>
<parameterdescription>
<para>name of processor type (one of names present in {psnames}) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>SETPROC_ </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a18d22bf27ea59871fc7115739bd20119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman char *ida_export</type>
        <definition>idaman char* ida_export get_idp_name</definition>
        <argsstring>(char *buf, size_t bufsize)</argsstring>
        <name>get_idp_name</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get name of the current processor module. The name is derived from the file name. For example, for IBM PC the module is named &quot;pc.w32&quot; (windows version), then the module name is &quot;PC&quot; (uppercase). If no processor module is loaded, this function will return NULL <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>the output buffer, should be at least #QMAXFILE length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a215a901a77723a95f8ba7c515ced5cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export set_target_assembler</definition>
        <argsstring>(int asmnum)</argsstring>
        <name>set_target_assembler</name>
        <param>
          <type>int</type>
          <declname>asmnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set target assembler. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>asmnum</parametername>
</parameternamelist>
<parameterdescription>
<para>number of assembler in the current processor module </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1aa595a9302be708292c6b0732770b98e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool delay_slot_insn</definition>
        <argsstring>(ea_t *ea, bool *bexec, bool *fexec)</argsstring>
        <name>delay_slot_insn</name>
        <param>
          <type>ea_t *</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>bexec</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>fexec</declname>
        </param>
        <briefdescription>
<para>Helper function to get the delay slot instruction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2328" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="2328" bodyend="2345"/>
      </memberdef>
      <memberdef kind="function" id="idp_8hpp_1a0f993b37b961f654cf6660ab6f47c16c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gen_idb_event</definition>
        <argsstring>(idb_event::event_code_t code,...)</argsstring>
        <name>gen_idb_event</name>
        <param>
          <type><ref refid="namespaceidb__event_1a0feb6e648b4e6e3f0ed954abea672784" kindref="member">idb_event::event_code_t</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>the kernel will use this function to generate idb_events </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="2733" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="2733" bodyend="2739"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains definition of the interface to IDP modules. </para>    </briefdescription>
    <detaileddescription>
<para>The interface consists of 2 structures:<itemizedlist>
<listitem><para>definition of target assembler: <ref refid="idp_8hpp_1a85a34894aa9b4ac8adf0a654edd2ab91" kindref="member">ash</ref></para></listitem><listitem><para>definition of current processor: <ref refid="idp_8hpp_1a1b22cd8cccc4c04160172a9fdc95626b" kindref="member">ph</ref></para></listitem></itemizedlist>
</para><para>These structures contain information about processor features, function pointers, etc. </para>    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp"/>
  </compounddef>
</doxygen>
