<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structcall__stack__info__t" kind="struct" language="C++" prot="public">
    <compoundname>call_stack_info_t</compoundname>
    <includes refid="idd_8hpp" local="no">idd.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structcall__stack__info__t_1a171b344afd9a5527cd250f562c063cca" prot="public" static="no" mutable="no">
        <type>ea_t</type>
        <definition>ea_t call_stack_info_t::callea</definition>
        <argsstring></argsstring>
        <name>callea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the address of the call instruction. for the 0th frame this is usually just the current value of EIP. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" line="574" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcall__stack__info__t_1a7b559dff58deb91b9846b939bef47a5a" prot="public" static="no" mutable="no">
        <type>ea_t</type>
        <definition>ea_t call_stack_info_t::funcea</definition>
        <argsstring></argsstring>
        <name>funcea</name>
        <briefdescription>
<para>the address of the called function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" line="576" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcall__stack__info__t_1afc978ddd6a8ff82a2fd0e3d45b510b96" prot="public" static="no" mutable="no">
        <type>ea_t</type>
        <definition>ea_t call_stack_info_t::fp</definition>
        <argsstring></argsstring>
        <name>fp</name>
        <briefdescription>
<para>the value of the frame pointer of the called function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" line="577" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcall__stack__info__t_1a3969f6213677912fcf8427112f39e382" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool call_stack_info_t::funcok</definition>
        <argsstring></argsstring>
        <name>funcok</name>
        <briefdescription>
<para>is the function present? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" line="578" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" bodystart="578" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcall__stack__info__t_1a06ac9a13fe213d0ffcaa9a5ad8019d2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool call_stack_info_t::operator==</definition>
        <argsstring>(const call_stack_info_t &amp;r) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structcall__stack__info__t" kindref="compound">call_stack_info_t</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" line="579" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" bodystart="579" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="structcall__stack__info__t_1a531bb87a48a042332995d1738f507580" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool call_stack_info_t::operator!=</definition>
        <argsstring>(const call_stack_info_t &amp;r) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structcall__stack__info__t" kindref="compound">call_stack_info_t</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" line="586" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" bodystart="586" bodyend="586"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Call stack trace information. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" line="573" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idd.hpp" bodystart="572" bodyend="587"/>
    <listofallmembers>
      <member refid="structcall__stack__info__t_1a171b344afd9a5527cd250f562c063cca" prot="public" virt="non-virtual"><scope>call_stack_info_t</scope><name>callea</name></member>
      <member refid="structcall__stack__info__t_1afc978ddd6a8ff82a2fd0e3d45b510b96" prot="public" virt="non-virtual"><scope>call_stack_info_t</scope><name>fp</name></member>
      <member refid="structcall__stack__info__t_1a7b559dff58deb91b9846b939bef47a5a" prot="public" virt="non-virtual"><scope>call_stack_info_t</scope><name>funcea</name></member>
      <member refid="structcall__stack__info__t_1a3969f6213677912fcf8427112f39e382" prot="public" virt="non-virtual"><scope>call_stack_info_t</scope><name>funcok</name></member>
      <member refid="structcall__stack__info__t_1a531bb87a48a042332995d1738f507580" prot="public" virt="non-virtual"><scope>call_stack_info_t</scope><name>operator!=</name></member>
      <member refid="structcall__stack__info__t_1a06ac9a13fe213d0ffcaa9a5ad8019d2d" prot="public" virt="non-virtual"><scope>call_stack_info_t</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
