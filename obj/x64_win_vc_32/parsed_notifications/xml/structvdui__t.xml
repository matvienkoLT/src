<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structvdui__t" kind="struct" language="C++" prot="public">
    <compoundname>vdui_t</compoundname>
    <includes refid="hexrays_8hpp" local="no">hexrays.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structvdui__t_1ad2b4476a057e7338c8a3988d73815c8e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int vdui_t::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group___v_d_u_i__" kindref="compound">Properties of pseudocode window</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6987" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6987" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1a839097c1db02b5a4ff3e5f54fd5ff732" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int vdui_t::view_idx</definition>
        <argsstring></argsstring>
        <name>view_idx</name>
        <briefdescription>
<para>pseudocode window index (0..) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7009" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1a028dfeaa1d96e018980fac2798808e58" prot="public" static="no" mutable="no">
        <type>TWidget *</type>
        <definition>TWidget* vdui_t::ct</definition>
        <argsstring></argsstring>
        <name>ct</name>
        <briefdescription>
<para>pseudocode view </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7010" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1a2da4d91b72c7a1d1cd73b1f6cc681848" prot="public" static="no" mutable="no">
        <type>TWidget *</type>
        <definition>TWidget* vdui_t::toplevel</definition>
        <argsstring></argsstring>
        <name>toplevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7011" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7011" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1a7e1af7c6f0566b9f6c572546082a053a" prot="public" static="no" mutable="no">
        <type><ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *</type>
        <definition>mbl_array_t* vdui_t::mba</definition>
        <argsstring></argsstring>
        <name>mba</name>
        <briefdescription>
<para>pointer to underlying microcode </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7013" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1abf6ff9196c48228afeb814c86ea09224" prot="public" static="no" mutable="no">
        <type><ref refid="classqrefcnt__t" kindref="compound">cfuncptr_t</ref></type>
        <definition>cfuncptr_t vdui_t::cfunc</definition>
        <argsstring></argsstring>
        <name>cfunc</name>
        <briefdescription>
<para>pointer to function object </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7014" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1a10782c031d415cda0ec3e2ef48f64f0a" prot="public" static="no" mutable="no">
        <type><ref refid="group___m_e_r_r___1ga124713999eb84ddba531f5c2e9eedcab" kindref="member">merror_t</ref></type>
        <definition>merror_t vdui_t::last_code</definition>
        <argsstring></argsstring>
        <name>last_code</name>
        <briefdescription>
<para>result of the last user action. See <ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7015" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1a69e5a764048364706d8fb3ab14dbc1fa" prot="public" static="no" mutable="no">
        <type><ref refid="structctext__position__t" kindref="compound">ctext_position_t</ref></type>
        <definition>ctext_position_t vdui_t::cpos</definition>
        <argsstring></argsstring>
        <name>cpos</name>
        <briefdescription>
<para>Current ctext position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7018" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7018" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1a2e406d398e4e9639204656a734cfcc88" prot="public" static="no" mutable="no">
        <type><ref refid="structctree__item__t" kindref="compound">ctree_item_t</ref></type>
        <definition>ctree_item_t vdui_t::head</definition>
        <argsstring></argsstring>
        <name>head</name>
        <briefdescription>
<para>First ctree item on the current line (for block comments) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7019" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7019" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1a57f77793ae9929335c575ca24f03241a" prot="public" static="no" mutable="no">
        <type><ref refid="structctree__item__t" kindref="compound">ctree_item_t</ref></type>
        <definition>ctree_item_t vdui_t::item</definition>
        <argsstring></argsstring>
        <name>item</name>
        <briefdescription>
<para>Current ctree item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7020" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7020" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structvdui__t_1aef7b498b3f7026280b9e5752dbe36ed6" prot="public" static="no" mutable="no">
        <type><ref refid="structctree__item__t" kindref="compound">ctree_item_t</ref></type>
        <definition>ctree_item_t vdui_t::tail</definition>
        <argsstring></argsstring>
        <name>tail</name>
        <briefdescription>
<para>Tail ctree item on the current line (for indented comments) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7021" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7021" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structvdui__t_1a43a01a09a5c33439a43e6dbab2ed2097" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vdui_t::visible</definition>
        <argsstring>(void) const</argsstring>
        <name>visible</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is the pseudocode window visible? if not, it might be invisible or destroyed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6998" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6998" bodyend="6998"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1ac22538042e4f70c329cc5f5d8cbe220b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vdui_t::valid</definition>
        <argsstring>(void) const</argsstring>
        <name>valid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does the pseudocode window contain valid code? It can become invalid if the function type gets changed in IDA. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7001" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7001" bodyend="7001"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a7939acf5516ea03e08d4200464c6321b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vdui_t::locked</definition>
        <argsstring>(void) const</argsstring>
        <name>locked</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does the pseudocode window contain valid code? We lock windows before modifying them </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7004" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7004" bodyend="7004"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a79a353fb2c70830b0c1d1a44986eba0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vdui_t::set_visible</definition>
        <argsstring>(bool v)</argsstring>
        <name>set_visible</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7005" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7005" bodyend="7005"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a18341ee185f334ab4c627a308b81ba53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vdui_t::set_valid</definition>
        <argsstring>(bool v)</argsstring>
        <name>set_valid</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7006" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7006" bodyend="7006"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1affdcfade5c199d1771192861f1b2a695" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool vdui_t::set_locked</definition>
        <argsstring>(bool v)</argsstring>
        <name>set_locked</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7007" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11345" bodyend="11348"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a0424d4195f9322700a4a559a7d37b4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>vdui_t::vdui_t</definition>
        <argsstring>(void)</argsstring>
        <name>vdui_t</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7023" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a90e071c55e25c1bffcbc76933d156249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void __fastcall hexapi</type>
        <definition>void __fastcall vdui_t::refresh_view</definition>
        <argsstring>(bool redo_mba)</argsstring>
        <name>refresh_view</name>
        <param>
          <type>bool</type>
          <declname>redo_mba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refresh pseudocode window. This is the highest level refresh function. It causes the most profound refresh possible and can lead to redecompilation of the current function. Please consider using <ref refid="structvdui__t_1a736c952a9401001762e734d5a53de726" kindref="member">refresh_ctext()</ref> if you need a more superficial refresh. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>redo_mba</parametername>
</parameternamelist>
<parameterdescription>
<para>true means to redecompile the current function<linebreak/>
 false means to rebuild ctree without regenerating microcode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="structvdui__t_1a736c952a9401001762e734d5a53de726" kindref="member">refresh_ctext()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7033" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11351" bodyend="11354"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a736c952a9401001762e734d5a53de726" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void __fastcall hexapi</type>
        <definition>void __fastcall vdui_t::refresh_ctext</definition>
        <argsstring>(bool activate=true)</argsstring>
        <name>refresh_ctext</name>
        <param>
          <type>bool</type>
          <declname>activate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refresh pseudocode window. This function refreshes the pseudocode window by regenerating its text from <ref refid="structcfunc__t" kindref="compound">cfunc_t</ref>. Use it after modifying <ref refid="structcfunc__t" kindref="compound">cfunc_t</ref> from a plugin. <simplesect kind="see"><para><ref refid="structvdui__t_1a90e071c55e25c1bffcbc76933d156249" kindref="member">refresh_view()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7039" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11357" bodyend="11360"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a989d94b3584912639d53956e7eb659e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void vdui_t::switch_to</definition>
        <argsstring>(cfuncptr_t f, bool activate)</argsstring>
        <name>switch_to</name>
        <param>
          <type><ref refid="classqrefcnt__t" kindref="compound">cfuncptr_t</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>activate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display the specified pseudocode. This function replaces the pseudocode window contents with the specified <ref refid="structcfunc__t" kindref="compound">cfunc_t</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the function to display. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>activate</parametername>
</parameternamelist>
<parameterdescription>
<para>should the pseudocode window get focus? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7046" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11363" bodyend="11366"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a571cc13b727e4e646d6dfbe8e3a7d0eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vdui_t::in_ctree</definition>
        <argsstring>(void) const</argsstring>
        <name>in_ctree</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Is the current item a statement? </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>false if the cursor is in the local variable/type declaration area<linebreak/>
 true if the cursor is in the statement area </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7051" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7051" bodyend="7051"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1af0bd8a93e4ced4c69c709128f3ce580f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcnumber__t" kindref="compound">cnumber_t</ref> *__fastcall hexapi</type>
        <definition>cnumber_t *__fastcall vdui_t::get_number</definition>
        <argsstring>(void)</argsstring>
        <name>get_number</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current number. If the current item is a number, return pointer to it. <simplesect kind="return"><para>NULL if the current item is not a number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7056" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11369" bodyend="11372"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a0bbc4a6d0bc71a3830e239b866282948" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int __fastcall hexapi</type>
        <definition>int __fastcall vdui_t::get_current_label</definition>
        <argsstring>(void)</argsstring>
        <name>get_current_label</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current label. If there is a label under the cursor, return its number. <simplesect kind="return"><para>-1 if there is no label under the cursor. prereq: <ref refid="structvdui__t_1a7b5be4a134aeb567b1f786b50e77640e" kindref="member">get_current_item()</ref> has been called </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7062" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11375" bodyend="11378"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1afe21504edaf16fe87c793291edb00c95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void __fastcall hexapi</type>
        <definition>void __fastcall vdui_t::clear</definition>
        <argsstring>(void)</argsstring>
        <name>clear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear the pseudocode window. It deletes the current function and microcode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7066" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11381" bodyend="11384"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a74825c543b93b1f0dde7c1ed38245f73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::refresh_cpos</definition>
        <argsstring>(input_device_t idv)</argsstring>
        <name>refresh_cpos</name>
        <param>
          <type><ref refid="group__vdui_1ga57493d56aec72d0d539dced15a738c50" kindref="member">input_device_t</ref></type>
          <declname>idv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refresh the current position. This function refreshes the <ref refid="structvdui__t_1a69e5a764048364706d8fb3ab14dbc1fa" kindref="member">cpos</ref> field. <simplesect kind="return"><para>false if failed </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idv</parametername>
</parameternamelist>
<parameterdescription>
<para>keyboard or mouse </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7072" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11387" bodyend="11390"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a7b5be4a134aeb567b1f786b50e77640e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::get_current_item</definition>
        <argsstring>(input_device_t idv)</argsstring>
        <name>get_current_item</name>
        <param>
          <type><ref refid="group__vdui_1ga57493d56aec72d0d539dced15a738c50" kindref="member">input_device_t</ref></type>
          <declname>idv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current item. This function refreshes the <ref refid="structvdui__t_1a69e5a764048364706d8fb3ab14dbc1fa" kindref="member">cpos</ref>, <ref refid="structvdui__t_1a57f77793ae9929335c575ca24f03241a" kindref="member">item</ref>, <ref refid="structvdui__t_1aef7b498b3f7026280b9e5752dbe36ed6" kindref="member">tail</ref> fields. <simplesect kind="return"><para>false if failed </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idv</parametername>
</parameternamelist>
<parameterdescription>
<para>keyboard or mouse </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="structcfunc__t_1a3b0bca6c157187d0dfbe5d3e9dc134db" kindref="member">cfunc_t::get_line_item()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7079" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11393" bodyend="11396"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1ae6f524b7e5cbe5373775e59e6704c477" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::ui_rename_lvar</definition>
        <argsstring>(lvar_t *v)</argsstring>
        <name>ui_rename_lvar</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename local variable. This function displays a dialog box and allows the user to rename a local variable. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to local variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7085" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11399" bodyend="11402"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a354ad7d11249b223c73cefdfb172d556" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::rename_lvar</definition>
        <argsstring>(lvar_t *v, const char *name, bool is_user_name)</argsstring>
        <name>rename_lvar</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_user_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename local variable. This function permanently renames a local variable. <simplesect kind="return"><para>false if failed </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to local variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>new variable name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_user_name</parametername>
</parameternamelist>
<parameterdescription>
<para>use true to save the new name into the database </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7093" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11405" bodyend="11408"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1acec9006f3a35c9dd241e7978c0923454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::ui_set_call_type</definition>
        <argsstring>(const cexpr_t *e)</argsstring>
        <name>ui_set_call_type</name>
        <param>
          <type>const <ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set type of a function call This function displays a dialog box and allows the user to change the type of a function call <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to call expression </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7100" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11411" bodyend="11414"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a0fa2c4bf9fa463aa3251b47e9749b60f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::ui_set_lvar_type</definition>
        <argsstring>(lvar_t *v)</argsstring>
        <name>ui_set_lvar_type</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set local variable type. This function displays a dialog box and allows the user to change the type of a local variable. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to local variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7107" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11417" bodyend="11420"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1ab6aed5fdd5ff033466fcc57c5dcb7e22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::set_lvar_type</definition>
        <argsstring>(lvar_t *v, const tinfo_t &amp;type)</argsstring>
        <name>set_lvar_type</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set local variable type. This function permanently sets a local variable type and clears NOPTR flag if it was set before by function &apos;set_noptr_lvar&apos; <simplesect kind="return"><para>false if failed </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to local variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>new variable type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7115" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11423" bodyend="11426"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a3964ce3928002eecfaf5d4977d34b402" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::set_noptr_lvar</definition>
        <argsstring>(lvar_t *v)</argsstring>
        <name>set_noptr_lvar</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inform that local variable should have a non-pointer type This function permanently sets a corresponding variable flag (NOPTR) and removes type if it was set before by function &apos;set_lvar_type&apos; <simplesect kind="return"><para>false if failed </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to local variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7122" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11429" bodyend="11432"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a391c3fd38769d29596eb4a2aeee0cf8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::ui_edit_lvar_cmt</definition>
        <argsstring>(lvar_t *v)</argsstring>
        <name>ui_edit_lvar_cmt</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set local variable comment. This function displays a dialog box and allows the user to edit the comment of a local variable. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to local variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7129" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11435" bodyend="11438"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a3a6e2a0f3d0909e73303b4c7d77f067f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::set_lvar_cmt</definition>
        <argsstring>(lvar_t *v, const char *cmt)</argsstring>
        <name>set_lvar_cmt</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set local variable comment. This function permanently sets a variable comment. <simplesect kind="return"><para>false if failed </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to local variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmt</parametername>
</parameternamelist>
<parameterdescription>
<para>new comment </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7136" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11441" bodyend="11444"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a26a23f84a15edb66edc57bde9e20f558" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::ui_map_lvar</definition>
        <argsstring>(lvar_t *v)</argsstring>
        <name>ui_map_lvar</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map a local variable to another. This function displays a variable list and allows the user to select mapping. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to local variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7142" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11447" bodyend="11450"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a3cad63c002d2f304d8e4f72808544540" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::ui_unmap_lvar</definition>
        <argsstring>(lvar_t *v)</argsstring>
        <name>ui_unmap_lvar</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmap a local variable. This function displays list of variables mapped to the specified variable and allows the user to select a variable to unmap. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to local variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7149" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11453" bodyend="11456"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a54136ba8e2f99f7d15315ae1d9ae8004" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::map_lvar</definition>
        <argsstring>(lvar_t *from, lvar_t *to)</argsstring>
        <name>map_lvar</name>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map a local variable to another. This function permanently maps one lvar to another. All occurrences of the mapped variable are replaced by the new variable <simplesect kind="return"><para>false if failed </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>the variable being mapped </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>the variable to map to. if NULL, unmaps the variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7157" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11459" bodyend="11462"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a7351a0c3e92baa74b966e6c73af9e601" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::set_strmem_type</definition>
        <argsstring>(struc_t *sptr, member_t *mptr)</argsstring>
        <name>set_strmem_type</name>
        <param>
          <type><ref refid="classstruc__t" kindref="compound">struc_t</ref> *</type>
          <declname>sptr</declname>
        </param>
        <param>
          <type><ref refid="classmember__t" kindref="compound">member_t</ref> *</type>
          <declname>mptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set structure field type. This function displays a dialog box and allows the user to change the type of a structure field. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to structure member </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7165" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11465" bodyend="11468"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a8a9a860e4c607522e75773dec5537bf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::rename_strmem</definition>
        <argsstring>(struc_t *sptr, member_t *mptr)</argsstring>
        <name>rename_strmem</name>
        <param>
          <type><ref refid="classstruc__t" kindref="compound">struc_t</ref> *</type>
          <declname>sptr</declname>
        </param>
        <param>
          <type><ref refid="classmember__t" kindref="compound">member_t</ref> *</type>
          <declname>mptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename structure field. This function displays a dialog box and allows the user to rename a structure field. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to structure member </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7173" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11471" bodyend="11474"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1aa4f5caee3ae75b152706b441c3c22b83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::set_global_type</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>set_global_type</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set global item type. This function displays a dialog box and allows the user to change the type of a global item (data or function). <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the global item </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7180" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11477" bodyend="11480"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1ab17a75c5ab4ecdb661ed550224d2c0bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::rename_global</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>rename_global</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename global item. This function displays a dialog box and allows the user to rename a global item (data or function). <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>address of the global item </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7187" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11483" bodyend="11486"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a009fc6700cd144fc3715fcc7f8bc12dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::rename_label</definition>
        <argsstring>(int label)</argsstring>
        <name>rename_label</name>
        <param>
          <type>int</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rename a label. This function displays a dialog box and allows the user to rename a statement label. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>label number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7194" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11489" bodyend="11492"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1aa03a1d21ec56d55cb8f58f7ead37e458" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::jump_enter</definition>
        <argsstring>(input_device_t idv, int omflags)</argsstring>
        <name>jump_enter</name>
        <param>
          <type><ref refid="group__vdui_1ga57493d56aec72d0d539dced15a738c50" kindref="member">input_device_t</ref></type>
          <declname>idv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>omflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Process the Enter key. This function jumps to the definition of the item under the cursor. If the current item is a function, it will be decompiled. If the current item is a global data, its disassemly text will be displayed. <simplesect kind="return"><para>false if failed </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idv</parametername>
</parameternamelist>
<parameterdescription>
<para>what cursor must be used, the keyboard or the mouse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>omflags</parametername>
</parameternamelist>
<parameterdescription>
<para>OM_NEWWIN: new pseudocode window will open, 0: reuse the existing window </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7203" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11495" bodyend="11498"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a5aa453c12e9e8f7ff09eb5cac8120e6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::ctree_to_disasm</definition>
        <argsstring>(void)</argsstring>
        <name>ctree_to_disasm</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Jump to disassembly. This function jumps to the address in the disassembly window which corresponds to the current item. The current item is determined based on the current keyboard cursor position. <simplesect kind="return"><para>false if failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7210" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11501" bodyend="11504"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a64ce9884f595db85b777bcee6514ff48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>cmt_type_t __fastcall hexapi</type>
        <definition>cmt_type_t __fastcall vdui_t::calc_cmt_type</definition>
        <argsstring>(size_t lnnum, cmt_type_t cmttype) const</argsstring>
        <name>calc_cmt_type</name>
        <param>
          <type>size_t</type>
          <declname>lnnum</declname>
        </param>
        <param>
          <type>cmt_type_t</type>
          <declname>cmttype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the specified line can have a comment. Due to the coordinate system for comments (<ulink url="http://www.hexblog.com/?p=60">http://www.hexblog.com/?p=60</ulink>) some function lines can not have comments. This function checks if a comment can be attached to the specified line. <simplesect kind="return"><para>possible comment types </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lnnum</parametername>
</parameternamelist>
<parameterdescription>
<para>line number (0 based) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmttype</parametername>
</parameternamelist>
<parameterdescription>
<para>comment types to check </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7219" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11507" bodyend="11510"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a79675cd2374b98c09ada21144ae46435" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::edit_cmt</definition>
        <argsstring>(const treeloc_t &amp;loc)</argsstring>
        <name>edit_cmt</name>
        <param>
          <type>const <ref refid="structtreeloc__t" kindref="compound">treeloc_t</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Edit an indented comment. This function displays a dialog box and allows the user to edit the comment for the specified ctree location. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>comment location </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7226" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11513" bodyend="11516"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1ae86a31dd589052a37eb8f15ccfd96681" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::edit_func_cmt</definition>
        <argsstring>(void)</argsstring>
        <name>edit_func_cmt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Edit a function comment. This function displays a dialog box and allows the user to edit the function comment. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7232" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11519" bodyend="11522"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a466a994ac66acbd87d102453d3d5b2b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::del_orphan_cmts</definition>
        <argsstring>(void)</argsstring>
        <name>del_orphan_cmts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete all orphan comments. Delete all orphan comments and refresh the screen. <simplesect kind="return"><para>true </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7237" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11525" bodyend="11528"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a81ce1c2fa089ae4d09f2c9167a07d973" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::set_num_radix</definition>
        <argsstring>(int base)</argsstring>
        <name>set_num_radix</name>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change number base. This function changes the current number representation. <simplesect kind="return"><para>false if failed </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>number radix (10 or 16)<linebreak/>
 0 means a character constant </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7244" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11531" bodyend="11534"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1aaf52ad6afd2ae557515e789ade7317e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::set_num_enum</definition>
        <argsstring>(void)</argsstring>
        <name>set_num_enum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert number to symbolic constant. This function displays a dialog box and allows the user to select a symbolic constant to represent the number. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7250" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11537" bodyend="11540"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1ad588947452988159e88d96449a5a34d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::set_num_stroff</definition>
        <argsstring>(void)</argsstring>
        <name>set_num_stroff</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert number to structure field offset. Currently not implemented. <simplesect kind="return"><para>false if failed or cancelled </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7255" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11543" bodyend="11546"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a87b10d90e99369e3c7eea863546e6f0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::invert_sign</definition>
        <argsstring>(void)</argsstring>
        <name>invert_sign</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Negate a number. This function negates the current number. <simplesect kind="return"><para>false if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7260" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11549" bodyend="11552"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1abc7d92313aa2dbcfd6135d08497846d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::invert_bits</definition>
        <argsstring>(void)</argsstring>
        <name>invert_bits</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bitwise negate a number. This function inverts all bits of the current number. <simplesect kind="return"><para>false if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7265" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11555" bodyend="11558"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a73d1351c339661c898945bcca66059e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::collapse_item</definition>
        <argsstring>(bool hide)</argsstring>
        <name>collapse_item</name>
        <param>
          <type>bool</type>
          <declname>hide</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Collapse/uncollapse item. This function collapses the current item. <simplesect kind="return"><para>false if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7270" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11561" bodyend="11564"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a94f43146c742db2531853d17b77eff6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::collapse_lvars</definition>
        <argsstring>(bool hide)</argsstring>
        <name>collapse_lvars</name>
        <param>
          <type>bool</type>
          <declname>hide</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Collapse/uncollapse local variable declarations. <simplesect kind="return"><para>false if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7274" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11567" bodyend="11570"/>
      </memberdef>
      <memberdef kind="function" id="structvdui__t_1a40657970e54b0cc105ca0378702c01d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool __fastcall hexapi</type>
        <definition>bool __fastcall vdui_t::split_item</definition>
        <argsstring>(bool split)</argsstring>
        <name>split_item</name>
        <param>
          <type>bool</type>
          <declname>split</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Split/unsplit item. This function splits the current assignment expression. <simplesect kind="return"><para>false if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7279" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11573" bodyend="11576"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Information about the pseudocode window. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3800">
        <label>ivl_tpl&lt; uval_t &gt;</label>
        <link refid="structivl__tpl"/>
      </node>
      <node id="3774">
        <label>bitset_t</label>
        <link refid="classbitset__t"/>
      </node>
      <node id="3818">
        <label>cinsn_t</label>
        <link refid="structcinsn__t"/>
        <childnode refid="3819" relation="public-inheritance">
        </childnode>
        <childnode refid="3820" relation="usage">
          <edgelabel>cexpr</edgelabel>
        </childnode>
        <childnode refid="3826" relation="usage">
          <edgelabel>cwhile</edgelabel>
        </childnode>
        <childnode refid="3829" relation="usage">
          <edgelabel>cswitch</edgelabel>
        </childnode>
        <childnode refid="3832" relation="usage">
          <edgelabel>cfor</edgelabel>
        </childnode>
        <childnode refid="3833" relation="usage">
          <edgelabel>cdo</edgelabel>
        </childnode>
        <childnode refid="3834" relation="usage">
          <edgelabel>casm</edgelabel>
        </childnode>
        <childnode refid="3836" relation="usage">
          <edgelabel>cblock</edgelabel>
        </childnode>
        <childnode refid="3838" relation="usage">
          <edgelabel>creturn</edgelabel>
        </childnode>
        <childnode refid="3839" relation="usage">
          <edgelabel>cif</edgelabel>
        </childnode>
        <childnode refid="3840" relation="usage">
          <edgelabel>cgoto</edgelabel>
        </childnode>
      </node>
      <node id="3816">
        <label>qvector&lt; simpleline_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3772">
        <label>mlist_t</label>
        <link refid="structmlist__t"/>
        <childnode refid="3769" relation="usage">
          <edgelabel>mem</edgelabel>
        </childnode>
        <childnode refid="3773" relation="usage">
          <edgelabel>reg</edgelabel>
        </childnode>
      </node>
      <node id="3798">
        <label>ivl_with_name_t</label>
        <link refid="structivl__with__name__t"/>
        <childnode refid="3799" relation="usage">
          <edgelabel>ivl</edgelabel>
        </childnode>
      </node>
      <node id="3786">
        <label>tinfo_t</label>
        <link refid="classtinfo__t"/>
      </node>
      <node id="3841">
        <label>treeloc_t</label>
        <link refid="structtreeloc__t"/>
      </node>
      <node id="3836">
        <label>cblock_t</label>
        <link refid="structcblock__t"/>
        <childnode refid="3837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3837">
        <label>qlist&lt; cinsn_t &gt;</label>
        <link refid="classqlist"/>
      </node>
      <node id="3788">
        <label>mop_addr_t</label>
        <link refid="classmop__addr__t"/>
        <childnode refid="3779" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3810">
        <label>netnode</label>
        <link refid="classnetnode"/>
      </node>
      <node id="3843">
        <label>lvar_locator_t</label>
        <link refid="structlvar__locator__t"/>
        <childnode refid="3781" relation="usage">
          <edgelabel>location</edgelabel>
        </childnode>
      </node>
      <node id="3830">
        <label>ccases_t</label>
        <link refid="structccases__t"/>
        <childnode refid="3831" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3792">
        <label>qvector&lt; mop_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3769">
        <label>ivlset_t</label>
        <link refid="structivlset__t"/>
        <childnode refid="3770" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3823">
        <label>carglist_t</label>
        <link refid="structcarglist__t"/>
        <childnode refid="3824" relation="public-inheritance">
        </childnode>
        <childnode refid="3786" relation="usage">
          <edgelabel>functype</edgelabel>
        </childnode>
      </node>
      <node id="3777">
        <label>mblock_t</label>
        <link refid="classmblock__t"/>
        <childnode refid="3765" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="3772" relation="usage">
          <edgelabel>maybuse</edgelabel>
          <edgelabel>dnu</edgelabel>
          <edgelabel>maybdef</edgelabel>
          <edgelabel>mustbuse</edgelabel>
          <edgelabel>mustbdef</edgelabel>
          <edgelabel>dead_at_start</edgelabel>
        </childnode>
        <childnode refid="3775" relation="usage">
          <edgelabel>succset</edgelabel>
          <edgelabel>predset</edgelabel>
        </childnode>
        <childnode refid="3778" relation="usage">
          <edgelabel>head</edgelabel>
          <edgelabel>tail</edgelabel>
        </childnode>
        <childnode refid="3777" relation="usage">
          <edgelabel>nextb</edgelabel>
          <edgelabel>prevb</edgelabel>
        </childnode>
      </node>
      <node id="3809">
        <label>rangevec_base_t</label>
        <link refid="classqvector"/>
      </node>
      <node id="3832">
        <label>cfor_t</label>
        <link refid="structcfor__t"/>
        <childnode refid="3827" relation="public-inheritance">
        </childnode>
        <childnode refid="3820" relation="usage">
          <edgelabel>step</edgelabel>
          <edgelabel>init</edgelabel>
        </childnode>
      </node>
      <node id="3795">
        <label>operand_locator_t</label>
        <link refid="structoperand__locator__t"/>
      </node>
      <node id="3821">
        <label>cnumber_t</label>
        <link refid="structcnumber__t"/>
        <childnode refid="3822" relation="usage">
          <edgelabel>nf</edgelabel>
        </childnode>
      </node>
      <node id="3771">
        <label>qvector&lt; ivl_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3815">
        <label>qvector&lt; citem_t * &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3796">
        <label>mcases_t</label>
        <link refid="classmcases__t"/>
        <childnode refid="3775" relation="usage">
          <edgelabel>targets</edgelabel>
        </childnode>
      </node>
      <node id="3791">
        <label>qvector&lt; mcallarg_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3826">
        <label>cwhile_t</label>
        <link refid="structcwhile__t"/>
        <childnode refid="3827" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3838">
        <label>creturn_t</label>
        <link refid="structcreturn__t"/>
        <childnode refid="3828" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3812">
        <label>ctext_position_t</label>
        <link refid="structctext__position__t"/>
      </node>
      <node id="3802">
        <label>func_t</label>
        <link refid="classfunc__t"/>
        <childnode refid="3803" relation="public-inheritance">
        </childnode>
        <childnode refid="3804" relation="usage">
          <edgelabel>regargs</edgelabel>
        </childnode>
        <childnode refid="3805" relation="usage">
          <edgelabel>points</edgelabel>
        </childnode>
        <childnode refid="3803" relation="usage">
          <edgelabel>tails</edgelabel>
        </childnode>
        <childnode refid="3806" relation="usage">
          <edgelabel>regvars</edgelabel>
        </childnode>
        <childnode refid="3807" relation="usage">
          <edgelabel>llabels</edgelabel>
        </childnode>
      </node>
      <node id="3779">
        <label>mop_t</label>
        <link refid="classmop__t"/>
        <childnode refid="3780" relation="usage">
          <edgelabel>scif</edgelabel>
        </childnode>
        <childnode refid="3787" relation="usage">
          <edgelabel>fpc</edgelabel>
        </childnode>
        <childnode refid="3788" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="3789" relation="usage">
          <edgelabel>pair</edgelabel>
        </childnode>
        <childnode refid="3790" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
        <childnode refid="3778" relation="usage">
          <edgelabel>d</edgelabel>
        </childnode>
        <childnode refid="3793" relation="usage">
          <edgelabel>l</edgelabel>
        </childnode>
        <childnode refid="3794" relation="usage">
          <edgelabel>nnn</edgelabel>
        </childnode>
        <childnode refid="3796" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="3797" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
      </node>
      <node id="3817">
        <label>qvector&lt; T &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3835">
        <label>eavec_t</label>
        <link refid="classqvector"/>
      </node>
      <node id="3813">
        <label>ctree_item_t</label>
        <link refid="structctree__item__t"/>
        <childnode refid="3814" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
        <childnode refid="3820" relation="usage">
          <edgelabel>e</edgelabel>
        </childnode>
        <childnode refid="3841" relation="usage">
          <edgelabel>loc</edgelabel>
        </childnode>
        <childnode refid="3818" relation="usage">
          <edgelabel>i</edgelabel>
        </childnode>
        <childnode refid="3842" relation="usage">
          <edgelabel>l</edgelabel>
        </childnode>
        <childnode refid="3819" relation="usage">
          <edgelabel>it</edgelabel>
        </childnode>
      </node>
      <node id="3789">
        <label>mop_pair_t</label>
        <link refid="classmop__pair__t"/>
        <childnode refid="3779" relation="usage">
          <edgelabel>hop</edgelabel>
          <edgelabel>lop</edgelabel>
        </childnode>
      </node>
      <node id="3825">
        <label>var_ref_t</label>
        <link refid="structvar__ref__t"/>
        <childnode refid="3765" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="3834">
        <label>casm_t</label>
        <link refid="structcasm__t"/>
        <childnode refid="3835" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3804">
        <label>regarg_t</label>
        <link refid="structregarg__t"/>
      </node>
      <node id="3820">
        <label>cexpr_t</label>
        <link refid="structcexpr__t"/>
        <childnode refid="3819" relation="public-inheritance">
        </childnode>
        <childnode refid="3820" relation="usage">
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
          <edgelabel>z</edgelabel>
        </childnode>
        <childnode refid="3787" relation="usage">
          <edgelabel>fpc</edgelabel>
        </childnode>
        <childnode refid="3821" relation="usage">
          <edgelabel>n</edgelabel>
        </childnode>
        <childnode refid="3823" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="3786" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
        <childnode refid="3818" relation="usage">
          <edgelabel>insn</edgelabel>
        </childnode>
        <childnode refid="3825" relation="usage">
          <edgelabel>v</edgelabel>
        </childnode>
      </node>
      <node id="3831">
        <label>qvector&lt; ccase_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3822">
        <label>number_format_t</label>
        <link refid="structnumber__format__t"/>
        <childnode refid="3768" relation="usage">
          <edgelabel>type_name</edgelabel>
        </childnode>
      </node>
      <node id="3787">
        <label>fnumber_t</label>
        <link refid="structfnumber__t"/>
      </node>
      <node id="3765">
        <label>mbl_array_t</label>
        <link refid="classmbl__array__t"/>
        <childnode refid="3766" relation="usage">
          <edgelabel>vars</edgelabel>
        </childnode>
        <childnode refid="3768" relation="usage">
          <edgelabel>label</edgelabel>
          <edgelabel>error_strarg</edgelabel>
        </childnode>
        <childnode refid="3769" relation="usage">
          <edgelabel>gotoff_stkvars</edgelabel>
          <edgelabel>restricted_memory</edgelabel>
          <edgelabel>aliased_memory</edgelabel>
        </childnode>
        <childnode refid="3772" relation="usage">
          <edgelabel>spoiled_list</edgelabel>
          <edgelabel>nodel_memory</edgelabel>
        </childnode>
        <childnode refid="3775" relation="usage">
          <edgelabel>argidx</edgelabel>
        </childnode>
        <childnode refid="3776" relation="usage">
          <edgelabel>idb_spoiled</edgelabel>
        </childnode>
        <childnode refid="3777" relation="usage">
          <edgelabel>blocks</edgelabel>
          <edgelabel>natural</edgelabel>
        </childnode>
        <childnode refid="3773" relation="usage">
          <edgelabel>consumed_argregs</edgelabel>
        </childnode>
        <childnode refid="3798" relation="usage">
          <edgelabel>std_ivls</edgelabel>
        </childnode>
        <childnode refid="3786" relation="usage">
          <edgelabel>idb_type</edgelabel>
        </childnode>
        <childnode refid="3801" relation="usage">
          <edgelabel>mbr</edgelabel>
        </childnode>
        <childnode refid="3810" relation="usage">
          <edgelabel>idb_node</edgelabel>
        </childnode>
        <childnode refid="3811" relation="usage">
          <edgelabel>notes</edgelabel>
        </childnode>
        <childnode refid="3799" relation="usage">
          <edgelabel>aliased_args</edgelabel>
          <edgelabel>aliased_vars</edgelabel>
        </childnode>
      </node>
      <node id="3790">
        <label>mcallinfo_t</label>
        <link refid="classmcallinfo__t"/>
        <childnode refid="3769" relation="usage">
          <edgelabel>visible_memory</edgelabel>
        </childnode>
        <childnode refid="3772" relation="usage">
          <edgelabel>pass_regs</edgelabel>
          <edgelabel>spoiled</edgelabel>
          <edgelabel>dead_regs</edgelabel>
          <edgelabel>return_regs</edgelabel>
        </childnode>
        <childnode refid="3791" relation="usage">
          <edgelabel>args</edgelabel>
        </childnode>
        <childnode refid="3786" relation="usage">
          <edgelabel>return_type</edgelabel>
        </childnode>
        <childnode refid="3792" relation="usage">
          <edgelabel>retregs</edgelabel>
        </childnode>
        <childnode refid="3782" relation="usage">
          <edgelabel>return_argloc</edgelabel>
        </childnode>
      </node>
      <node id="3801">
        <label>mba_ranges_t</label>
        <link refid="structmba__ranges__t"/>
        <childnode refid="3802" relation="usage">
          <edgelabel>pfn</edgelabel>
        </childnode>
        <childnode refid="3808" relation="usage">
          <edgelabel>ranges</edgelabel>
        </childnode>
      </node>
      <node id="3770">
        <label>ivlset_tpl&lt; ivl_t, uval_t &gt;</label>
        <link refid="classivlset__tpl"/>
        <childnode refid="3771" relation="usage">
          <edgelabel>bag</edgelabel>
        </childnode>
      </node>
      <node id="3829">
        <label>cswitch_t</label>
        <link refid="structcswitch__t"/>
        <childnode refid="3828" relation="public-inheritance">
        </childnode>
        <childnode refid="3830" relation="usage">
          <edgelabel>cases</edgelabel>
        </childnode>
        <childnode refid="3821" relation="usage">
          <edgelabel>mvnf</edgelabel>
        </childnode>
      </node>
      <node id="3780">
        <label>scif_t</label>
        <link refid="structscif__t"/>
        <childnode refid="3781" relation="public-inheritance">
        </childnode>
        <childnode refid="3765" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="3768" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="3786" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="3775">
        <label>qvector&lt; int &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3805">
        <label>stkpnt_t</label>
        <link refid="structstkpnt__t"/>
      </node>
      <node id="3768">
        <label>_qstring&lt; char &gt;</label>
        <link refid="class__qstring"/>
      </node>
      <node id="3824">
        <label>qvector&lt; carg_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3778">
        <label>minsn_t</label>
        <link refid="classminsn__t"/>
        <childnode refid="3778" relation="usage">
          <edgelabel>prev</edgelabel>
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="3779" relation="usage">
          <edgelabel>l</edgelabel>
          <edgelabel>r</edgelabel>
          <edgelabel>d</edgelabel>
        </childnode>
      </node>
      <node id="3842">
        <label>lvar_t</label>
        <link refid="classlvar__t"/>
        <childnode refid="3843" relation="public-inheritance">
        </childnode>
        <childnode refid="3768" relation="usage">
          <edgelabel>cmt</edgelabel>
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="3786" relation="usage">
          <edgelabel>tif</edgelabel>
        </childnode>
      </node>
      <node id="3819">
        <label>citem_t</label>
        <link refid="structcitem__t"/>
      </node>
      <node id="3764">
        <label>vdui_t</label>
        <link refid="structvdui__t"/>
        <childnode refid="3765" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="3812" relation="usage">
          <edgelabel>cpos</edgelabel>
        </childnode>
        <childnode refid="3813" relation="usage">
          <edgelabel>head</edgelabel>
          <edgelabel>tail</edgelabel>
          <edgelabel>item</edgelabel>
        </childnode>
        <childnode refid="3844" relation="usage">
          <edgelabel>cfunc</edgelabel>
        </childnode>
      </node>
      <node id="3783">
        <label>scattered_aloc_t</label>
        <link refid="classscattered__aloc__t"/>
        <childnode refid="3784" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3784">
        <label>qvector&lt; argpart_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3803">
        <label>range_t</label>
        <link refid="structrange__t"/>
      </node>
      <node id="3781">
        <label>vdloc_t</label>
        <link refid="classvdloc__t"/>
        <childnode refid="3782" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3806">
        <label>regvar_t</label>
        <link refid="structregvar__t"/>
        <childnode refid="3803" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3844">
        <label>qrefcnt_t&lt; cfunc_t &gt;</label>
        <link refid="classqrefcnt__t"/>
      </node>
      <node id="3811">
        <label>qvector&lt; hexwarn_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3794">
        <label>mnumber_t</label>
        <link refid="structmnumber__t"/>
        <childnode refid="3795" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3766">
        <label>lvars_t</label>
        <link refid="structlvars__t"/>
        <childnode refid="3767" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3782">
        <label>argloc_t</label>
        <link refid="classargloc__t"/>
        <childnode refid="3783" relation="usage">
          <edgelabel>dist</edgelabel>
        </childnode>
        <childnode refid="3785" relation="usage">
          <edgelabel>rrel</edgelabel>
        </childnode>
      </node>
      <node id="3840">
        <label>cgoto_t</label>
        <link refid="structcgoto__t"/>
      </node>
      <node id="3807">
        <label>llabel_t</label>
        <link refid="structllabel__t"/>
      </node>
      <node id="3793">
        <label>lvar_ref_t</label>
        <link refid="structlvar__ref__t"/>
        <childnode refid="3765" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="3767">
        <label>qvector&lt; lvar_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3797">
        <label>stkvar_ref_t</label>
        <link refid="structstkvar__ref__t"/>
        <childnode refid="3765" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="3776">
        <label>qvector&lt; reg_info_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="3785">
        <label>rrel_t</label>
        <link refid="structrrel__t"/>
      </node>
      <node id="3833">
        <label>cdo_t</label>
        <link refid="structcdo__t"/>
        <childnode refid="3827" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3828">
        <label>ceinsn_t</label>
        <link refid="structceinsn__t"/>
        <childnode refid="3820" relation="usage">
          <edgelabel>expr</edgelabel>
        </childnode>
      </node>
      <node id="3773">
        <label>rlist_t</label>
        <link refid="classrlist__t"/>
        <childnode refid="3774" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3839">
        <label>cif_t</label>
        <link refid="structcif__t"/>
        <childnode refid="3828" relation="public-inheritance">
        </childnode>
        <childnode refid="3818" relation="usage">
          <edgelabel>ithen</edgelabel>
          <edgelabel>ielse</edgelabel>
        </childnode>
      </node>
      <node id="3827">
        <label>cloop_t</label>
        <link refid="structcloop__t"/>
        <childnode refid="3828" relation="public-inheritance">
        </childnode>
        <childnode refid="3818" relation="usage">
          <edgelabel>body</edgelabel>
        </childnode>
      </node>
      <node id="3799">
        <label>ivl_t</label>
        <link refid="structivl__t"/>
        <childnode refid="3800" relation="public-inheritance">
        </childnode>
        <childnode refid="3799" relation="usage">
          <edgelabel>allmem</edgelabel>
        </childnode>
      </node>
      <node id="3814">
        <label>cfunc_t</label>
        <link refid="structcfunc__t"/>
        <childnode refid="3815" relation="usage">
          <edgelabel>treeitems</edgelabel>
        </childnode>
        <childnode refid="3765" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="3816" relation="usage">
          <edgelabel>sv</edgelabel>
        </childnode>
        <childnode refid="3817" relation="usage">
          <edgelabel>argidx</edgelabel>
        </childnode>
        <childnode refid="3818" relation="usage">
          <edgelabel>body</edgelabel>
        </childnode>
      </node>
      <node id="3808">
        <label>rangevec_t</label>
        <link refid="structrangevec__t"/>
        <childnode refid="3809" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6986" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6985" bodyend="7281"/>
    <listofallmembers>
      <member refid="structvdui__t_1a64ce9884f595db85b777bcee6514ff48" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>calc_cmt_type</name></member>
      <member refid="structvdui__t_1abf6ff9196c48228afeb814c86ea09224" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>cfunc</name></member>
      <member refid="structvdui__t_1afe21504edaf16fe87c793291edb00c95" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>clear</name></member>
      <member refid="structvdui__t_1a73d1351c339661c898945bcca66059e4" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>collapse_item</name></member>
      <member refid="structvdui__t_1a94f43146c742db2531853d17b77eff6e" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>collapse_lvars</name></member>
      <member refid="structvdui__t_1a69e5a764048364706d8fb3ab14dbc1fa" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>cpos</name></member>
      <member refid="structvdui__t_1a028dfeaa1d96e018980fac2798808e58" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>ct</name></member>
      <member refid="structvdui__t_1a5aa453c12e9e8f7ff09eb5cac8120e6e" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>ctree_to_disasm</name></member>
      <member refid="structvdui__t_1a466a994ac66acbd87d102453d3d5b2b4" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>del_orphan_cmts</name></member>
      <member refid="structvdui__t_1a79675cd2374b98c09ada21144ae46435" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>edit_cmt</name></member>
      <member refid="structvdui__t_1ae86a31dd589052a37eb8f15ccfd96681" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>edit_func_cmt</name></member>
      <member refid="structvdui__t_1ad2b4476a057e7338c8a3988d73815c8e" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>flags</name></member>
      <member refid="structvdui__t_1a7b5be4a134aeb567b1f786b50e77640e" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>get_current_item</name></member>
      <member refid="structvdui__t_1a0bbc4a6d0bc71a3830e239b866282948" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>get_current_label</name></member>
      <member refid="structvdui__t_1af0bd8a93e4ced4c69c709128f3ce580f" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>get_number</name></member>
      <member refid="structvdui__t_1a2e406d398e4e9639204656a734cfcc88" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>head</name></member>
      <member refid="structvdui__t_1a571cc13b727e4e646d6dfbe8e3a7d0eb" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>in_ctree</name></member>
      <member refid="structvdui__t_1abc7d92313aa2dbcfd6135d08497846d9" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>invert_bits</name></member>
      <member refid="structvdui__t_1a87b10d90e99369e3c7eea863546e6f0d" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>invert_sign</name></member>
      <member refid="structvdui__t_1a57f77793ae9929335c575ca24f03241a" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>item</name></member>
      <member refid="structvdui__t_1aa03a1d21ec56d55cb8f58f7ead37e458" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>jump_enter</name></member>
      <member refid="structvdui__t_1a10782c031d415cda0ec3e2ef48f64f0a" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>last_code</name></member>
      <member refid="structvdui__t_1a7939acf5516ea03e08d4200464c6321b" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>locked</name></member>
      <member refid="structvdui__t_1a54136ba8e2f99f7d15315ae1d9ae8004" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>map_lvar</name></member>
      <member refid="structvdui__t_1a7e1af7c6f0566b9f6c572546082a053a" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>mba</name></member>
      <member refid="structvdui__t_1a74825c543b93b1f0dde7c1ed38245f73" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>refresh_cpos</name></member>
      <member refid="structvdui__t_1a736c952a9401001762e734d5a53de726" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>refresh_ctext</name></member>
      <member refid="structvdui__t_1a90e071c55e25c1bffcbc76933d156249" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>refresh_view</name></member>
      <member refid="structvdui__t_1ab17a75c5ab4ecdb661ed550224d2c0bc" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>rename_global</name></member>
      <member refid="structvdui__t_1a009fc6700cd144fc3715fcc7f8bc12dd" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>rename_label</name></member>
      <member refid="structvdui__t_1a354ad7d11249b223c73cefdfb172d556" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>rename_lvar</name></member>
      <member refid="structvdui__t_1a8a9a860e4c607522e75773dec5537bf5" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>rename_strmem</name></member>
      <member refid="structvdui__t_1aa4f5caee3ae75b152706b441c3c22b83" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_global_type</name></member>
      <member refid="structvdui__t_1affdcfade5c199d1771192861f1b2a695" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_locked</name></member>
      <member refid="structvdui__t_1a3a6e2a0f3d0909e73303b4c7d77f067f" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_lvar_cmt</name></member>
      <member refid="structvdui__t_1ab6aed5fdd5ff033466fcc57c5dcb7e22" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_lvar_type</name></member>
      <member refid="structvdui__t_1a3964ce3928002eecfaf5d4977d34b402" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_noptr_lvar</name></member>
      <member refid="structvdui__t_1aaf52ad6afd2ae557515e789ade7317e1" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_num_enum</name></member>
      <member refid="structvdui__t_1a81ce1c2fa089ae4d09f2c9167a07d973" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_num_radix</name></member>
      <member refid="structvdui__t_1ad588947452988159e88d96449a5a34d7" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_num_stroff</name></member>
      <member refid="structvdui__t_1a7351a0c3e92baa74b966e6c73af9e601" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_strmem_type</name></member>
      <member refid="structvdui__t_1a18341ee185f334ab4c627a308b81ba53" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_valid</name></member>
      <member refid="structvdui__t_1a79a353fb2c70830b0c1d1a44986eba0e" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>set_visible</name></member>
      <member refid="structvdui__t_1a40657970e54b0cc105ca0378702c01d1" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>split_item</name></member>
      <member refid="structvdui__t_1a989d94b3584912639d53956e7eb659e0" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>switch_to</name></member>
      <member refid="structvdui__t_1aef7b498b3f7026280b9e5752dbe36ed6" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>tail</name></member>
      <member refid="structvdui__t_1a2da4d91b72c7a1d1cd73b1f6cc681848" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>toplevel</name></member>
      <member refid="structvdui__t_1a391c3fd38769d29596eb4a2aeee0cf8f" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>ui_edit_lvar_cmt</name></member>
      <member refid="structvdui__t_1a26a23f84a15edb66edc57bde9e20f558" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>ui_map_lvar</name></member>
      <member refid="structvdui__t_1ae6f524b7e5cbe5373775e59e6704c477" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>ui_rename_lvar</name></member>
      <member refid="structvdui__t_1acec9006f3a35c9dd241e7978c0923454" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>ui_set_call_type</name></member>
      <member refid="structvdui__t_1a0fa2c4bf9fa463aa3251b47e9749b60f" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>ui_set_lvar_type</name></member>
      <member refid="structvdui__t_1a3cad63c002d2f304d8e4f72808544540" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>ui_unmap_lvar</name></member>
      <member refid="structvdui__t_1ac22538042e4f70c329cc5f5d8cbe220b" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>valid</name></member>
      <member refid="structvdui__t_1a0424d4195f9322700a4a559a7d37b4b5" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>vdui_t</name></member>
      <member refid="structvdui__t_1a839097c1db02b5a4ff3e5f54fd5ff732" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>view_idx</name></member>
      <member refid="structvdui__t_1a43a01a09a5c33439a43e6dbab2ed2097" prot="public" virt="non-virtual"><scope>vdui_t</scope><name>visible</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
