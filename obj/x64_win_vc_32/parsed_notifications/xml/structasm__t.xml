<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structasm__t" kind="struct" language="C++" prot="public">
    <compoundname>asm_t</compoundname>
    <includes refid="idp_8hpp" local="no">idp.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structasm__t_1a8d77b70483b269fe19595559f6a5f74c" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 asm_t::flag</definition>
        <argsstring></argsstring>
        <name>flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group___a_s__" kindref="compound">Assembler feature bits</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="152" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a4e8ab72bbf5da7cf54ab7942155cddf3" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref></type>
        <definition>uint16 asm_t::uflag</definition>
        <argsstring></argsstring>
        <name>uflag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>user defined flags (local only for IDP) you may define and use your own bits </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="212" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1abcb6fd40ce09a8d0e493257e8a991b96" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Assembler name (displayed in menus) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="214" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a2f25b639e5afdecfbf67ad18720d8ee3" prot="public" static="no" mutable="no">
        <type><ref refid="idp_8hpp_1a008673ba94d6d666e4d4106d88f830cc" kindref="member">help_t</ref></type>
        <definition>help_t asm_t::help</definition>
        <argsstring></argsstring>
        <name>help</name>
        <briefdescription>
<para>Help screen number, 0 - no help. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="215" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1aa1b1e6d47530b060bacd27bf8c9e3db6" prot="public" static="no" mutable="no">
        <type>const char *const  *</type>
        <definition>const char* const* asm_t::header</definition>
        <argsstring></argsstring>
        <name>header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array of automatically generated header lines they appear at the start of disassembled text </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="216" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a76b0d042d2a469b917c6e3519c165420" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::origin</definition>
        <argsstring></argsstring>
        <name>origin</name>
        <briefdescription>
<para>org directive </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="218" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a31b2b3c19d5d14a096dc77e95352aea5" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <briefdescription>
<para>end directive </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="219" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a16ca5f524fd0e2b10321bad4ab24adb3" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::cmnt</definition>
        <argsstring></argsstring>
        <name>cmnt</name>
        <briefdescription>
<para>comment string (see also cmnt2) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="220" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1abb1c53fa90cfc572f22e301bf247344d" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char asm_t::ascsep</definition>
        <argsstring></argsstring>
        <name>ascsep</name>
        <briefdescription>
<para>string literal delimiter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="221" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1af2c661c1d3a0a94909fcd4822389ec61" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char asm_t::accsep</definition>
        <argsstring></argsstring>
        <name>accsep</name>
        <briefdescription>
<para>char constant delimiter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="222" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a412ca7f69871d3c410b1ba81258b9a03" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::esccodes</definition>
        <argsstring></argsstring>
        <name>esccodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>special chars that can not appear as is in string and char literals </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="223" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1ae20ec98607a59e0eb288843319b511f9" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_ascii</definition>
        <argsstring></argsstring>
        <name>a_ascii</name>
        <briefdescription>
<para>string literal directive </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="227" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a5f71b6a62119e9ba390ce89add08c2f8" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_byte</definition>
        <argsstring></argsstring>
        <name>a_byte</name>
        <briefdescription>
<para>byte directive </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="228" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a62aa9da1c09970bd7f6ba732cf933014" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_word</definition>
        <argsstring></argsstring>
        <name>a_word</name>
        <briefdescription>
<para>word directive </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="229" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a55d03d4c6cc11abe6d3c054cd31e08ef" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_dword</definition>
        <argsstring></argsstring>
        <name>a_dword</name>
        <briefdescription>
<para>NULL if not allowed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="230" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a7bdda0b41e922b963f3cd2dfc787183a" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_qword</definition>
        <argsstring></argsstring>
        <name>a_qword</name>
        <briefdescription>
<para>NULL if not allowed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="231" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a0948c37df173dc4f52bb1985358cfe67" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_oword</definition>
        <argsstring></argsstring>
        <name>a_oword</name>
        <briefdescription>
<para>NULL if not allowed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="232" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a89736cf92f579a6d60dbdc0417f45e37" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_float</definition>
        <argsstring></argsstring>
        <name>a_float</name>
        <briefdescription>
<para>float; 4bytes; NULL if not allowed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="233" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a437cd16a8050fa43e13f636437cdb346" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_double</definition>
        <argsstring></argsstring>
        <name>a_double</name>
        <briefdescription>
<para>double; 8bytes; NULL if not allowed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="234" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a8bb6b6dcd51fbc50cc03fa5feeff39aa" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_tbyte</definition>
        <argsstring></argsstring>
        <name>a_tbyte</name>
        <briefdescription>
<para>long double; NULL if not allowed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="235" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1aad7ab04bf27dacf97072eae688afb664" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_packreal</definition>
        <argsstring></argsstring>
        <name>a_packreal</name>
        <briefdescription>
<para>packed decimal real NULL if not allowed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="236" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1acad3d0180bc61888d4735088ea25d56a" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_dups</definition>
        <argsstring></argsstring>
        <name>a_dups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array keyword. the following sequences may appear:<itemizedlist>
<listitem><para>#h header</para></listitem><listitem><para>#d size</para></listitem><listitem><para>#v value</para></listitem><listitem><para>#s(b,w,l,q,f,d,o) size specifiers for byte,word, dword,qword, float,double,oword </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="237" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a3c8718b635ed2d5310a404a5ec22761e" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_bss</definition>
        <argsstring></argsstring>
        <name>a_bss</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>uninitialized data directive should include &apos;s&apos; for the size of data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="246" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a3042df9963ce9d43ece910d73f06f55c" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_equ</definition>
        <argsstring></argsstring>
        <name>a_equ</name>
        <briefdescription>
<para>&apos;equ&apos; Used if AS_UNEQU is set </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="249" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a9b0d610ca72b783f552aef20f8f7b9d0" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_seg</definition>
        <argsstring></argsstring>
        <name>a_seg</name>
        <briefdescription>
<para>&apos;seg &apos; prefix (example: push seg seg001) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="250" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a3d479cc4e469f745a23d555a2cda1215" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_curip</definition>
        <argsstring></argsstring>
        <name>a_curip</name>
        <briefdescription>
<para>current IP (instruction pointer) symbol in assembler </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="252" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1aca913f94c5266cb5bc064faa88b7b219" prot="public" static="no" mutable="no">
        <type>void(idaapi *</type>
        <definition>void(idaapi * asm_t::out_func_header) (outctx_t &amp;ctx, func_t *)</definition>
        <argsstring>)(outctx_t &amp;ctx, func_t *)</argsstring>
        <name>out_func_header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate function header lines. If NULL, then function headers are displayed as normal lines </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="256" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a542b813bc31162c94952e900177b9271" prot="public" static="no" mutable="no">
        <type>void(idaapi *</type>
        <definition>void(idaapi * asm_t::out_func_footer) (outctx_t &amp;ctx, func_t *)</definition>
        <argsstring>)(outctx_t &amp;ctx, func_t *)</argsstring>
        <name>out_func_footer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate function footer lines. If NULL, then a comment line is displayed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="260" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a3b08b1b95082aa3d6b4cb87fd5197d9d" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_public</definition>
        <argsstring></argsstring>
        <name>a_public</name>
        <briefdescription>
<para>&quot;public&quot; name keyword. NULL-use default, &quot;&quot;-do not generate </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="262" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a90440a6a0552c4b789698951750e6aab" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_weak</definition>
        <argsstring></argsstring>
        <name>a_weak</name>
        <briefdescription>
<para>&quot;weak&quot; name keyword. NULL-use default, &quot;&quot;-do not generate </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="263" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1abf693a46e7cb9135be43f53d65efe64f" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_extrn</definition>
        <argsstring></argsstring>
        <name>a_extrn</name>
        <briefdescription>
<para>&quot;extern&quot; name keyword </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="264" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a08e84af17d505ae5dadd0e2a4133ac10" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_comdef</definition>
        <argsstring></argsstring>
        <name>a_comdef</name>
        <briefdescription>
<para>&quot;comm&quot; (communal variable) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="265" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1ae08ad25d9fa7734d6fc26bf6e747d22e" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref>(idaapi *</type>
        <definition>ssize_t(idaapi * asm_t::get_type_name) (qstring *buf, flags_t flag, ea_t ea_or_id)</definition>
        <argsstring>)(qstring *buf, flags_t flag, ea_t ea_or_id)</argsstring>
        <name>get_type_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get name of type of item at ea or id. (i.e. one of: byte,word,dword,near,far,etc...) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="269" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a1660514e448c3411163556fdbfc631e5" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_align</definition>
        <argsstring></argsstring>
        <name>a_align</name>
        <briefdescription>
<para>&quot;align&quot; keyword </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="274" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1ab8e2a8ed7c319f0329ed8f9e2db0ffa6" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char asm_t::lbrace</definition>
        <argsstring></argsstring>
        <name>lbrace</name>
        <briefdescription>
<para>left brace used in complex expressions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="276" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1ad9f35f4b8726d189884598294fe19b9a" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char asm_t::rbrace</definition>
        <argsstring></argsstring>
        <name>rbrace</name>
        <briefdescription>
<para>right brace used in complex expressions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="277" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a81b51e42842dc2520396a078c81708cc" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_mod</definition>
        <argsstring></argsstring>
        <name>a_mod</name>
        <briefdescription>
<para>% mod assembler time operation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="279" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1aba07f051485e3c4d9fbe50a4b44a460f" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_band</definition>
        <argsstring></argsstring>
        <name>a_band</name>
        <briefdescription>
<para>&amp; bit and assembler time operation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="280" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1af6b76dfdd597f36a1f6abf7e033f31ad" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_bor</definition>
        <argsstring></argsstring>
        <name>a_bor</name>
        <briefdescription>
<para>| bit or assembler time operation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="281" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a5a6fdfbfe556b3359623a38360fbdd1b" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_xor</definition>
        <argsstring></argsstring>
        <name>a_xor</name>
        <briefdescription>
<para>^ bit xor assembler time operation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="282" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1ae81e274837415d05b80bbd09a41e3499" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_bnot</definition>
        <argsstring></argsstring>
        <name>a_bnot</name>
        <briefdescription>
<para>~ bit not assembler time operation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="283" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a69ff320d997150f84a8168d60260cbe1" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_shl</definition>
        <argsstring></argsstring>
        <name>a_shl</name>
        <briefdescription>
<para>&lt;&lt; shift left assembler time operation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="284" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a7e392515f903965d7916aa886123fb5e" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_shr</definition>
        <argsstring></argsstring>
        <name>a_shr</name>
        <briefdescription>
<para><blockquote><para><blockquote><para>shift right assembler time operation </para></blockquote></para></blockquote></para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="285" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a26f664e6d486a9a56d2d19b51b28a9fc" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_sizeof_fmt</definition>
        <argsstring></argsstring>
        <name>a_sizeof_fmt</name>
        <briefdescription>
<para>size of type (format string) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="286" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a66f796e6f7040043382b5c47415d810c" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 asm_t::flag2</definition>
        <argsstring></argsstring>
        <name>flag2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group___a_s2__" kindref="compound">Secondary assembler feature bits</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="288" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a561ddd506e7c3fa27f4da19ac3fce71c" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::cmnt2</definition>
        <argsstring></argsstring>
        <name>cmnt2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>comment close string (usually NULL) this is used to denote a string which closes comments, for example, if the comments are represented with (* ... *) then cmnt = &quot;(*&quot; and cmnt2 = &quot;*)&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="308" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a1d0b5a4a4a7528062577695057cabb32" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::low8</definition>
        <argsstring></argsstring>
        <name>low8</name>
        <briefdescription>
<para>low8 operation, should contain s for the operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="313" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a2fc73b26fb177f26db4566e72a511148" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::high8</definition>
        <argsstring></argsstring>
        <name>high8</name>
        <briefdescription>
<para>high8 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="314" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1aca46fe59aecdd6a91728c32e3b6bb843" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::low16</definition>
        <argsstring></argsstring>
        <name>low16</name>
        <briefdescription>
<para>low16 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="315" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a81ab4fe14d740aed64b14a156ab6e49a" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::high16</definition>
        <argsstring></argsstring>
        <name>high16</name>
        <briefdescription>
<para>high16 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="316" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a908a83232590a577b0bd959719f8c8d2" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_include_fmt</definition>
        <argsstring></argsstring>
        <name>a_include_fmt</name>
        <briefdescription>
<para>the include directive (format string) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="317" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a4fb79b191f01f2e2ff55a7f810e11cf0" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_vstruc_fmt</definition>
        <argsstring></argsstring>
        <name>a_vstruc_fmt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if a named item is a structure and displayed in the verbose (multiline) form then display the name as printf(a_strucname_fmt, typename) (for asms with type checking, e.g. tasm ideal) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="318" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a4b254d55ee1e8599c7ce10cea5472575" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_rva</definition>
        <argsstring></argsstring>
        <name>a_rva</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&apos;rva&apos; keyword for image based offsets (see <ref refid="group___r_e_f_i_n_f_o___1ga173c52e7587909ab4bd29237437ed421" kindref="member">REFINFO_RVAOFF</ref>) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="322" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structasm__t_1a27c18aed51ed053700fd3339f5bdd823" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* asm_t::a_yword</definition>
        <argsstring></argsstring>
        <name>a_yword</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>32-byte (256-bit) data; NULL if not allowed requires <ref refid="group___a_s2___1ga6d7de2664b172d30b87b48fce73e5319" kindref="member">AS2_YWORD</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="324" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="324" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Describes the target assembler. An IDP module may have several target assemblers. In this case you should create a structure for each supported assembler. </para>    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" line="151" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/idp.hpp" bodystart="150" bodyend="326"/>
    <listofallmembers>
      <member refid="structasm__t_1a1660514e448c3411163556fdbfc631e5" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_align</name></member>
      <member refid="structasm__t_1ae20ec98607a59e0eb288843319b511f9" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_ascii</name></member>
      <member refid="structasm__t_1aba07f051485e3c4d9fbe50a4b44a460f" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_band</name></member>
      <member refid="structasm__t_1ae81e274837415d05b80bbd09a41e3499" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_bnot</name></member>
      <member refid="structasm__t_1af6b76dfdd597f36a1f6abf7e033f31ad" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_bor</name></member>
      <member refid="structasm__t_1a3c8718b635ed2d5310a404a5ec22761e" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_bss</name></member>
      <member refid="structasm__t_1a5f71b6a62119e9ba390ce89add08c2f8" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_byte</name></member>
      <member refid="structasm__t_1a08e84af17d505ae5dadd0e2a4133ac10" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_comdef</name></member>
      <member refid="structasm__t_1a3d479cc4e469f745a23d555a2cda1215" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_curip</name></member>
      <member refid="structasm__t_1a437cd16a8050fa43e13f636437cdb346" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_double</name></member>
      <member refid="structasm__t_1acad3d0180bc61888d4735088ea25d56a" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_dups</name></member>
      <member refid="structasm__t_1a55d03d4c6cc11abe6d3c054cd31e08ef" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_dword</name></member>
      <member refid="structasm__t_1a3042df9963ce9d43ece910d73f06f55c" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_equ</name></member>
      <member refid="structasm__t_1abf693a46e7cb9135be43f53d65efe64f" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_extrn</name></member>
      <member refid="structasm__t_1a89736cf92f579a6d60dbdc0417f45e37" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_float</name></member>
      <member refid="structasm__t_1a908a83232590a577b0bd959719f8c8d2" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_include_fmt</name></member>
      <member refid="structasm__t_1a81b51e42842dc2520396a078c81708cc" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_mod</name></member>
      <member refid="structasm__t_1a0948c37df173dc4f52bb1985358cfe67" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_oword</name></member>
      <member refid="structasm__t_1aad7ab04bf27dacf97072eae688afb664" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_packreal</name></member>
      <member refid="structasm__t_1a3b08b1b95082aa3d6b4cb87fd5197d9d" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_public</name></member>
      <member refid="structasm__t_1a7bdda0b41e922b963f3cd2dfc787183a" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_qword</name></member>
      <member refid="structasm__t_1a4b254d55ee1e8599c7ce10cea5472575" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_rva</name></member>
      <member refid="structasm__t_1a9b0d610ca72b783f552aef20f8f7b9d0" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_seg</name></member>
      <member refid="structasm__t_1a69ff320d997150f84a8168d60260cbe1" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_shl</name></member>
      <member refid="structasm__t_1a7e392515f903965d7916aa886123fb5e" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_shr</name></member>
      <member refid="structasm__t_1a26f664e6d486a9a56d2d19b51b28a9fc" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_sizeof_fmt</name></member>
      <member refid="structasm__t_1a8bb6b6dcd51fbc50cc03fa5feeff39aa" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_tbyte</name></member>
      <member refid="structasm__t_1a4fb79b191f01f2e2ff55a7f810e11cf0" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_vstruc_fmt</name></member>
      <member refid="structasm__t_1a90440a6a0552c4b789698951750e6aab" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_weak</name></member>
      <member refid="structasm__t_1a62aa9da1c09970bd7f6ba732cf933014" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_word</name></member>
      <member refid="structasm__t_1a5a6fdfbfe556b3359623a38360fbdd1b" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_xor</name></member>
      <member refid="structasm__t_1a27c18aed51ed053700fd3339f5bdd823" prot="public" virt="non-virtual"><scope>asm_t</scope><name>a_yword</name></member>
      <member refid="structasm__t_1af2c661c1d3a0a94909fcd4822389ec61" prot="public" virt="non-virtual"><scope>asm_t</scope><name>accsep</name></member>
      <member refid="structasm__t_1abb1c53fa90cfc572f22e301bf247344d" prot="public" virt="non-virtual"><scope>asm_t</scope><name>ascsep</name></member>
      <member refid="structasm__t_1a16ca5f524fd0e2b10321bad4ab24adb3" prot="public" virt="non-virtual"><scope>asm_t</scope><name>cmnt</name></member>
      <member refid="structasm__t_1a561ddd506e7c3fa27f4da19ac3fce71c" prot="public" virt="non-virtual"><scope>asm_t</scope><name>cmnt2</name></member>
      <member refid="structasm__t_1a31b2b3c19d5d14a096dc77e95352aea5" prot="public" virt="non-virtual"><scope>asm_t</scope><name>end</name></member>
      <member refid="structasm__t_1a412ca7f69871d3c410b1ba81258b9a03" prot="public" virt="non-virtual"><scope>asm_t</scope><name>esccodes</name></member>
      <member refid="structasm__t_1a8d77b70483b269fe19595559f6a5f74c" prot="public" virt="non-virtual"><scope>asm_t</scope><name>flag</name></member>
      <member refid="structasm__t_1a66f796e6f7040043382b5c47415d810c" prot="public" virt="non-virtual"><scope>asm_t</scope><name>flag2</name></member>
      <member refid="structasm__t_1ae08ad25d9fa7734d6fc26bf6e747d22e" prot="public" virt="non-virtual"><scope>asm_t</scope><name>get_type_name</name></member>
      <member refid="structasm__t_1aa1b1e6d47530b060bacd27bf8c9e3db6" prot="public" virt="non-virtual"><scope>asm_t</scope><name>header</name></member>
      <member refid="structasm__t_1a2f25b639e5afdecfbf67ad18720d8ee3" prot="public" virt="non-virtual"><scope>asm_t</scope><name>help</name></member>
      <member refid="structasm__t_1a81ab4fe14d740aed64b14a156ab6e49a" prot="public" virt="non-virtual"><scope>asm_t</scope><name>high16</name></member>
      <member refid="structasm__t_1a2fc73b26fb177f26db4566e72a511148" prot="public" virt="non-virtual"><scope>asm_t</scope><name>high8</name></member>
      <member refid="structasm__t_1ab8e2a8ed7c319f0329ed8f9e2db0ffa6" prot="public" virt="non-virtual"><scope>asm_t</scope><name>lbrace</name></member>
      <member refid="structasm__t_1aca46fe59aecdd6a91728c32e3b6bb843" prot="public" virt="non-virtual"><scope>asm_t</scope><name>low16</name></member>
      <member refid="structasm__t_1a1d0b5a4a4a7528062577695057cabb32" prot="public" virt="non-virtual"><scope>asm_t</scope><name>low8</name></member>
      <member refid="structasm__t_1abcb6fd40ce09a8d0e493257e8a991b96" prot="public" virt="non-virtual"><scope>asm_t</scope><name>name</name></member>
      <member refid="structasm__t_1a76b0d042d2a469b917c6e3519c165420" prot="public" virt="non-virtual"><scope>asm_t</scope><name>origin</name></member>
      <member refid="structasm__t_1a542b813bc31162c94952e900177b9271" prot="public" virt="non-virtual"><scope>asm_t</scope><name>out_func_footer</name></member>
      <member refid="structasm__t_1aca913f94c5266cb5bc064faa88b7b219" prot="public" virt="non-virtual"><scope>asm_t</scope><name>out_func_header</name></member>
      <member refid="structasm__t_1ad9f35f4b8726d189884598294fe19b9a" prot="public" virt="non-virtual"><scope>asm_t</scope><name>rbrace</name></member>
      <member refid="structasm__t_1a4e8ab72bbf5da7cf54ab7942155cddf3" prot="public" virt="non-virtual"><scope>asm_t</scope><name>uflag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
