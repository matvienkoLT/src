<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="kernwin_8hpp" kind="file" language="C++">
    <compoundname>kernwin.hpp</compoundname>
    <includedby refid="regex_8h" local="no">obj/x64_linux_gcc_32_opt/idasdk/regex.h</includedby>
    <includedby refid="lumina_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/lumina.hpp</includedby>
    <includedby refid="dbg_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp</includedby>
    <includedby refid="ua_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/ua.hpp</includedby>
    <includedby refid="vm_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/vm.hpp</includedby>
    <includedby refid="hexrays_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</includedby>
    <includedby refid="graph_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</includedby>
    <invincdepgraph>
      <node id="831">
        <label>obj/x64_linux_gcc_32_opt/idasdk/intel.hpp</label>
        <link refid="intel_8hpp_source"/>
      </node>
      <node id="825">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ua.hpp</label>
        <link refid="ua_8hpp"/>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="827" relation="include">
        </childnode>
        <childnode refid="831" relation="include">
        </childnode>
        <childnode refid="836" relation="include">
        </childnode>
      </node>
      <node id="822">
        <label>obj/x64_linux_gcc_32_opt/idasdk/regex.h</label>
        <link refid="regex_8h_source"/>
      </node>
      <node id="834">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ida_highlighter.hpp</label>
        <link refid="ida__highlighter_8hpp_source"/>
      </node>
      <node id="836">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idd.hpp</label>
        <link refid="idd_8hpp"/>
        <childnode refid="824" relation="include">
        </childnode>
      </node>
      <node id="827">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="824" relation="include">
        </childnode>
        <childnode refid="828" relation="include">
        </childnode>
        <childnode refid="829" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
      </node>
      <node id="824">
        <label>obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp</label>
        <link refid="dbg_8hpp"/>
      </node>
      <node id="826">
        <label>obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp</label>
        <link refid="jumptable_8hpp_source"/>
      </node>
      <node id="832">
        <label>obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</label>
        <link refid="graph_8hpp"/>
      </node>
      <node id="837">
        <label>obj/x64_linux_gcc_32_opt/idasdk/vm.hpp</label>
        <link refid="vm_8hpp_source"/>
        <childnode refid="838" relation="include">
        </childnode>
      </node>
      <node id="835">
        <label>obj/x64_linux_gcc_32_opt/idasdk/tstfeat.hpp</label>
        <link refid="tstfeat_8hpp_source"/>
      </node>
      <node id="833">
        <label>obj/x64_linux_gcc_32_opt/idasdk/expr.hpp</label>
        <link refid="expr_8hpp"/>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="835" relation="include">
        </childnode>
      </node>
      <node id="828">
        <label>obj/x64_linux_gcc_32_opt/idasdk/frame.hpp</label>
        <link refid="frame_8hpp"/>
      </node>
      <node id="829">
        <label>obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp</label>
        <link refid="typeinf_8hpp"/>
        <childnode refid="823" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="831" relation="include">
        </childnode>
      </node>
      <node id="838">
        <label>obj/x64_linux_gcc_32_opt/idasdk/va.hpp</label>
        <link refid="va_8hpp_source"/>
      </node>
      <node id="821">
        <label>obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp</label>
        <link refid="kernwin_8hpp"/>
        <childnode refid="822" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
        <childnode refid="824" relation="include">
        </childnode>
        <childnode refid="825" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
      </node>
      <node id="830">
        <label>obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</label>
        <link refid="hexrays_8hpp_source"/>
      </node>
      <node id="823">
        <label>obj/x64_linux_gcc_32_opt/idasdk/lumina.hpp</label>
        <link refid="lumina_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="unioncallui__t" prot="public">callui_t</innerclass>
    <innerclass refid="classplace__t" prot="public">place_t</innerclass>
    <innerclass refid="structsimpleline__t" prot="public">simpleline_t</innerclass>
    <innerclass refid="classsimpleline__place__t" prot="public">simpleline_place_t</innerclass>
    <innerclass refid="classidaplace__t" prot="public">idaplace_t</innerclass>
    <innerclass refid="classenumplace__t" prot="public">enumplace_t</innerclass>
    <innerclass refid="classstructplace__t" prot="public">structplace_t</innerclass>
    <innerclass refid="structhexplace__gen__t" prot="public">hexplace_gen_t</innerclass>
    <innerclass refid="classhexplace__t" prot="public">hexplace_t</innerclass>
    <innerclass refid="classtwinpos__t" prot="public">twinpos_t</innerclass>
    <innerclass refid="classtwinline__t" prot="public">twinline_t</innerclass>
    <innerclass refid="classlinearray__t" prot="public">linearray_t</innerclass>
    <innerclass refid="structchooser__item__attrs__t" prot="public">chooser_item_attrs_t</innerclass>
    <innerclass refid="structchooser__base__t" prot="public">chooser_base_t</innerclass>
    <innerclass refid="structchooser__t" prot="public">chooser_t</innerclass>
    <innerclass refid="structchooser__t_1_1cbret__t" prot="public">chooser_t::cbret_t</innerclass>
    <innerclass refid="structchooser__multi__t" prot="public">chooser_multi_t</innerclass>
    <innerclass refid="structtextctrl__info__t" prot="public">textctrl_info_t</innerclass>
    <innerclass refid="structrenderer__pos__info__t" prot="public">renderer_pos_info_t</innerclass>
    <innerclass refid="unionview__mouse__event__location__t" prot="public">view_mouse_event_location_t</innerclass>
    <innerclass refid="structview__mouse__event__t" prot="public">view_mouse_event_t</innerclass>
    <innerclass refid="classlocchange__md__t" prot="public">locchange_md_t</innerclass>
    <innerclass refid="structcli__t" prot="public">cli_t</innerclass>
    <innerclass refid="structexec__request__t" prot="public">exec_request_t</innerclass>
    <innerclass refid="classui__request__t" prot="public">ui_request_t</innerclass>
    <innerclass refid="classui__requests__t" prot="public">ui_requests_t</innerclass>
    <innerclass refid="structaction__ctx__base__t" prot="public">action_ctx_base_t</innerclass>
    <innerclass refid="structaction__handler__t" prot="public">action_handler_t</innerclass>
    <innerclass refid="structaction__desc__t" prot="public">action_desc_t</innerclass>
    <innerclass refid="classcustom__viewer__handlers__t" prot="public">custom_viewer_handlers_t</innerclass>
    <innerclass refid="struct____qtimer__t" prot="public">__qtimer_t</innerclass>
    <innerclass refid="structform__actions__t" prot="public">form_actions_t</innerclass>
    <innerclass refid="structaddon__info__t" prot="public">addon_info_t</innerclass>
    <innerclass refid="structstrarray__t" prot="public">strarray_t</innerclass>
      <sectiondef kind="user-defined">
      <header>Chooser title</header>
      <description><para>prefixes to be used in the chooser title </para></description>
      <memberdef kind="define" id="kernwin_8hpp_1a31944d3a559bc46323268463cc3c2566" prot="public" static="no">
        <name>CHOOSER_NOMAINMENU</name>
        <initializer>&quot;NOMAINMENU\n&quot;</initializer>
        <briefdescription>
<para>do not display main menu </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2294" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a6cb112072c105c08ec425f29529ff98c" prot="public" static="no">
        <name>CHOOSER_NOSTATUSBAR</name>
        <initializer>&quot;NOSTATUSBAR\n&quot;</initializer>
        <briefdescription>
<para>do not display status bar (obsolete. Use CH_NO_STATUS_BAR instead) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2295" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2295" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___s_e_t_m_e_n_u___1ga349e32e770b941ea7d68ec39ac33980e" prot="public" static="no">
        <name>SETMENU_POSMASK</name>
        <initializer>0x3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="141" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_e_t_m_e_n_u___1gab7ce6fd8f9e8784ef881217e088cec9d" prot="public" static="no">
        <name>SETMENU_INS</name>
        <initializer>0x0</initializer>
        <briefdescription>
<para>add menu item before the specified path (default) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="142" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_e_t_m_e_n_u___1gabae5051c0892d2f7c076225ce55745be" prot="public" static="no">
        <name>SETMENU_APP</name>
        <initializer>0x1</initializer>
        <briefdescription>
<para>add menu item after the specified path </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="143" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_e_t_m_e_n_u___1gab05ac9ef60e9d4f781fe69ee5be55068" prot="public" static="no">
        <name>SETMENU_FIRST</name>
        <initializer>0x2</initializer>
        <briefdescription>
<para>add item to the beginning of menu </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="144" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_r_e_a_t_e_t_b___1ga611ac6cdd40e95d4aaf8323813335aa8" prot="public" static="no">
        <name>CREATETB_ADV</name>
        <initializer>0x1</initializer>
        <briefdescription>
<para>toolbar is for &apos;advanced mode&apos; only </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="150" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_f___1ga575085d5a3dd9badccf4ada0c3352b1e" prot="public" static="no">
        <name>HIF_IDENTIFIER</name>
        <initializer>0x1</initializer>
        <briefdescription>
<para>text is an identifier (i.e., when searching for the current highlight, SEARCH_IDENT will be used) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="157" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_f___1ga1233c27b78cc1a473d8bdcb4cef543b4" prot="public" static="no">
        <name>HIF_REGISTER</name>
        <initializer>0x2</initializer>
        <briefdescription>
<para>text represents a register (aliases/subregisters will be highlit as well) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="158" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_f___1ga815bbc9407529deb25e8e77c125a47a4" prot="public" static="no">
        <name>HIF_LOCKED</name>
        <initializer>0x4</initializer>
        <briefdescription>
<para>locked; clicking/moving the cursor around doesn&apos;t change the highlight </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="159" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a1155373d3e23fa6f2240223e0c7deb00" prot="public" static="no">
        <name>REG_HINTS_MARKER</name>
        <initializer><ref refid="group__color__esc_1ga7e7b37340d6b5aac6e89d97af3de57b8" kindref="member">SCOLOR_ON</ref> &quot;\xFF&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="162" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1ae2bee86883f015eb404a2374510d5ccc" prot="public" static="no">
        <name>REG_HINTS_MARKER_LEN</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="163" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a86605560b882b3e68969f21825b97ff7" prot="public" static="no">
        <name>SRCDBG_HINTS_MARKER</name>
        <initializer><ref refid="group__color__esc_1ga7e7b37340d6b5aac6e89d97af3de57b8" kindref="member">SCOLOR_ON</ref> &quot;\xFE&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="164" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a35c13e17926e47ef7c99dfb5b54cce2d" prot="public" static="no">
        <name>SRCDBG_HINTS_MARKER_LEN</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="165" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_c_h_k___1gac9445aeab0d1469ee14d4c0859570c56" prot="public" static="no">
        <name>IDCHK_OK</name>
        <initializer>0</initializer>
        <briefdescription>
<para>ok </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="322" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_c_h_k___1ga88c35e41dd97643b0479563457591b9d" prot="public" static="no">
        <name>IDCHK_ARG</name>
        <initializer>-1</initializer>
        <briefdescription>
<para>bad argument(s) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="323" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_c_h_k___1gad847eddec08c757058dca242f8b6177d" prot="public" static="no">
        <name>IDCHK_KEY</name>
        <initializer>-2</initializer>
        <briefdescription>
<para>bad hotkey name </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="324" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_c_h_k___1gae72cd145f7411d9438fac56b72c2e1f8" prot="public" static="no">
        <name>IDCHK_MAX</name>
        <initializer>-3</initializer>
        <briefdescription>
<para>too many IDC hotkeys </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="325" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___o_p_e_n_1ga9948be782391ac59be3fe080ce56f956" prot="public" static="no">
        <name>WOPN_TAB</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>will be inserted into its own, new floating area </para>        </briefdescription>
        <detaileddescription>
<para>attached by default to a tab. If not specified, the widget </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="395" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___o_p_e_n_1ga20b20c7da29c10aab581e1a1cf4b9121" prot="public" static="no">
        <name>WOPN_RESTORE</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if the widget was the only widget in a floating area the last time it was closed, it will be restored as floating, with the same position+size as before </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="397" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___o_p_e_n_1ga918e9e6bc7908dcff2cf7831b2666b0f" prot="public" static="no">
        <name>WOPN_PERSIST</name>
        <initializer>0x40</initializer>
        <briefdescription>
<para>widget will remain available when starting or stopping debugger sessions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="400" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___o_p_e_n_1ga101c9554be4ff4f8644f6c923a85229c" prot="public" static="no">
        <name>WOPN_CLOSED_BY_ESC</name>
        <initializer>0x80</initializer>
        <briefdescription>
<para>override idagui.cfg:CLOSED_BY_ESC: esc will close </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="401" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___o_p_e_n_1ga7bf2f364048df698bf0d5558fd53df54" prot="public" static="no">
        <name>WOPN_NOT_CLOSED_BY_ESC</name>
        <initializer>0x100</initializer>
        <briefdescription>
<para>override idagui.cfg:CLOSED_BY_ESC: esc will not close </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="402" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___o_p_e_n_1gacc5d8da32a60ce55ec63bf362dc794ea" prot="public" static="no">
        <name>WOPN_SZHINT</name>
        <initializer>0x200</initializer>
        <briefdescription>
<para>determine the best geometry (Qt only) </para>        </briefdescription>
        <detaileddescription>
<para>when floating (i.e., not tabbed), use the widget&apos;s size hint to </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="403" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___c_l_o_s_e_1gab9c1336622354734d3e05853579ca3a7" prot="public" static="no">
        <name>WCLS_SAVE</name>
        <initializer>0x1</initializer>
        <briefdescription>
<para>save state in desktop config </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="412" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___c_l_o_s_e_1ga6de62f3deb72b11b9507cce87bb641d0" prot="public" static="no">
        <name>WCLS_NO_CONTEXT</name>
        <initializer>0x2</initializer>
        <briefdescription>
<para>don&apos;t change the current context (useful for toolbars) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="413" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___c_l_o_s_e_1ga3b3564065d819ee3b15e6d576ab289f4" prot="public" static="no">
        <name>WCLS_DONT_SAVE_SIZE</name>
        <initializer>0x4</initializer>
        <briefdescription>
<para>don&apos;t save size of the window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="414" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___w_i_d_g_e_t___c_l_o_s_e_1ga49fb268963df84ea3282168162ee1361" prot="public" static="no">
        <name>WCLS_CLOSE_LATER</name>
        <initializer>0x8</initializer>
        <briefdescription>
<para>assign the deletion of the form to the UI loop ///&lt; </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="415" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_p___1gae86cd026ea1dde2457e0fcc3a9801554" prot="public" static="no">
        <name>DP_LEFT</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>Dock src_form to the left of dest_form. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="561" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_p___1gad4ca815250fd18e9506f3b42d768e938" prot="public" static="no">
        <name>DP_TOP</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>Dock src_form above dest_form. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="562" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_p___1gaea9208d1e2a6a1b8509bf0d36fe08f1e" prot="public" static="no">
        <name>DP_RIGHT</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>Dock src_form to the right of dest_form. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="563" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_p___1ga3722b55f7f04886e6c27e8f5acbbda79" prot="public" static="no">
        <name>DP_BOTTOM</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>Dock src_form below dest_form. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="564" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_p___1ga7f72d7be6e32763dfd5c05909408f4f3" prot="public" static="no">
        <name>DP_INSIDE</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>Create a new tab bar with both src_form and dest_form. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="565" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_p___1ga1a9aef721c12d099600e96b273388282" prot="public" static="no">
        <name>DP_TAB</name>
        <initializer>0x0040</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Place src_form into a tab next to dest_form, if dest_form is in a tab bar (otherwise the same as <ref refid="group___d_p___1ga7f72d7be6e32763dfd5c05909408f4f3" kindref="member">DP_INSIDE</ref>) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="566" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_p___1ga4d297c0b7d0818cba3d2ca8ef0e1721d" prot="public" static="no">
        <name>DP_BEFORE</name>
        <initializer>0x0020</initializer>
        <briefdescription>
<para>used with <ref refid="group___d_p___1ga7f72d7be6e32763dfd5c05909408f4f3" kindref="member">DP_INSIDE</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>place src_form before dst_form in the tab bar instead of after </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="569" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_p___1gab48690b1fb06e72a4f149232e242b3eb" prot="public" static="no">
        <name>DP_FLOATING</name>
        <initializer>0x0080</initializer>
        <briefdescription>
<para>Make src_form floating. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="571" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_d_v_f___1ga29c145fca34075c4c814138587c6897c" prot="public" static="no">
        <name>CDVF_NOLINES</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>don&apos;t show line numbers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="611" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_d_v_f___1ga139e7af0e8018b0f3140aa318327d675" prot="public" static="no">
        <name>CDVF_LINEICONS</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>icons can be drawn over the line control </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="612" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_d_v_f___1gaecbbe4c1973474e1bbc19ade601631f3" prot="public" static="no">
        <name>CDVF_STATUSBAR</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>keep the status bar in the custom viewer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="613" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_v_f___1ga650d2a3bd7bb3bc4f43d226568349477" prot="public" static="no">
        <name>SVF_COPY_LINES</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>keep a local copy of &apos;*lines&apos; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="657" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_v_f___1ga1dc97fec4b96c123ab8c74d393ab95e1" prot="public" static="no">
        <name>SVF_LINES_BYPTR</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>remember the &apos;lines&apos; ptr. do not make a copy of &apos;*lines&apos; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="658" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1ac07aba068a5857ab49c99419b10041ba" prot="public" static="no">
        <name>CVNF_LAZY</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>try and move the cursor to a line displaying the <ref refid="classplace__t" kindref="compound">place_t</ref> if possible. This might disregard the Y position in case of success </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="803" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="803" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a733aedce464288ad64f984c8b3907f17" prot="public" static="no">
        <name>CVNF_JUMP</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
<para><ref refid="classlochist__t" kindref="compound">lochist_t</ref> before going to the new location </para>        </briefdescription>
        <detaileddescription>
<para>push the current position in this viewer&apos;s </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="806" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a1b4d7e08e1984e0db33ee28d96fc7bd6" prot="public" static="no">
        <name>CVNF_ACT</name>
        <initializer>(1 &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>activate (i.e., switch to) the viewer. Activation is performed before the new <ref refid="structlochist__entry__t" kindref="compound">lochist_entry_t</ref> instance is actually copied to the viewer&apos;s <ref refid="classlochist__t" kindref="compound">lochist_t</ref> (otherwise, if the viewer was invisible its on_location_changed() handler wouldn&apos;t be called.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="808" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="808" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a434cacb2070f8026bc9fe5d2be7d30e0" prot="public" static="no">
        <name>DEFAULT_PLACE_LNNUM</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1347" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1aa3b15dcf56cdcc1f888eba5c673ae3f6" prot="public" static="no">
        <name>define_place_exported_functions</name>
        <param><defname>classname</defname></param>
        <initializer>class classname;                                                                                        \
idaman void        ida_export classname ## __print(const classname *, <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *, void*);                \
idaman <ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>      ida_export classname ## __touval(const classname *,void*);                           \
idaman <ref refid="classplace__t" kindref="compound">place_t</ref> *   ida_export classname ## __clone(const classname *);                                  \
idaman void        ida_export classname ## __copyfrom(classname *,const <ref refid="classplace__t" kindref="compound">place_t</ref>*);                      \
idaman <ref refid="classplace__t" kindref="compound">place_t</ref> *   ida_export classname ## __makeplace(const classname *,void*,<ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref>,int);             \
idaman int         ida_export classname ## __compare(const classname *,const <ref refid="classplace__t" kindref="compound">place_t</ref>*);                 \
idaman void        ida_export classname ## __adjust(classname *,void*);                                 \
idaman bool        ida_export classname ## __prev(classname *,void*);                                   \
idaman bool        ida_export classname ## __next(classname *,void*);                                   \
idaman bool        ida_export classname ## __beginning(const classname *,void*);                        \
idaman bool        ida_export classname ## __ending(const classname *,void*);                           \
idaman int         ida_export classname ## __generate(                                                  \
        const classname *,                                                                              \
        <ref refid="pro_8h_1a823b67c620f6cdca97e1d969ea4a9b02" kindref="member">qstrvec_t</ref>*,                                                                                     \
        int*,                                                                               \
        <ref refid="kernwin_8hpp_1a051016ac92685c95d47a7c1850c19632" kindref="member">color_t</ref>*,                                                                                       \
        <ref refid="pro_8h_1a3df5040891132e50157aee66affdf1de" kindref="member">bgcolor_t</ref>*,                                                                                     \
        void*,                                                                                          \
        int);                                                                               \
idaman void        ida_export classname ## __serialize(const classname *, <ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> *out);              \
idaman bool        ida_export classname ## __deserialize(classname *, const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **, const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *);   \
idaman int         ida_export classname ## __id(const classname *);                                     \
idaman const char *ida_export classname ## __name(const classname *);                                   \
idaman ea_t        ida_export classname ## __toea(const classname *);                                   \
idaman <ref refid="classplace__t" kindref="compound">place_t</ref> *   ida_export classname ## __enter(const classname *, <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> *);                        \
idaman void        ida_export classname ## __leave(const classname *, <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref>);                          \
idaman bool        ida_export classname ## __rebase(classname *, const <ref refid="structsegm__move__infos__t" kindref="compound">segm_move_infos_t</ref> &amp;);</initializer>
        <briefdescription>
<para>Helper to define exported functions for <ref refid="classplace__t" kindref="compound">place_t</ref> implementations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1355" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a530eb70142ea373ff78bc9c615417647" prot="public" static="no">
        <name>define_place_virtual_functions</name>
        <param><defname>class</defname></param>
        <briefdescription>
<para>Helper to define virtual functions in <ref refid="classplace__t" kindref="compound">place_t</ref> implementations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1387" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a30c0f9687b3f1e92b9b73f42245e775a" prot="public" static="no">
        <name>HEXPLACE_COLOR_EDITED</name>
        <initializer><ref refid="group___c_o_l_o_r___1gaf4f5b2ccf54e99565011d5c8dc552533" kindref="member">COLOR_SYMBOL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1571" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a1bc2a1e971c7d026047416e4ae1018b8" prot="public" static="no">
        <name>HEXPLACE_COLOR_PATCHED</name>
        <initializer><ref refid="group___c_o_l_o_r___1ga950298d6bbb40f6b9e2afed88dd85bcf" kindref="member">COLOR_VOIDOP</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1572" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a7aa3a46710b4781b84be4e202885189f" prot="public" static="no">
        <name>HEXPLACE_COLOR_SHOWSPACES</name>
        <initializer><ref refid="group___c_o_l_o_r___1ga2f760d88659ab6bdd8ec2381457ef9a1" kindref="member">COLOR_RESERVED1</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1573" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1adf2dc52c3573910d33cbc8aa313df239" prot="public" static="no">
        <name>PCF_EA_CAPABLE</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1659" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1ad0c0fe9c03de9bbbb127785e77189f95" prot="public" static="no">
        <name>DECLARE_LINEARRAY_HELPERS</name>
        <param><defname>decl</defname></param>
        <initializer>decl void  ida_export linearray_t_ctr(<ref refid="classlinearray__t" kindref="compound">linearray_t</ref> *, void *ud); \
decl void  ida_export linearray_t_dtr(<ref refid="classlinearray__t" kindref="compound">linearray_t</ref> *); \
decl int   ida_export linearray_t_set_place(<ref refid="classlinearray__t" kindref="compound">linearray_t</ref> *, const <ref refid="classplace__t" kindref="compound">place_t</ref> *new_at); \
decl bool  ida_export linearray_t_beginning(const <ref refid="classlinearray__t" kindref="compound">linearray_t</ref> *); \
decl bool  ida_export linearray_t_ending(const <ref refid="classlinearray__t" kindref="compound">linearray_t</ref> *); \
decl const <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *ida_export linearray_t_down(<ref refid="classlinearray__t" kindref="compound">linearray_t</ref> *); \
decl const <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *ida_export linearray_t_up(<ref refid="classlinearray__t" kindref="compound">linearray_t</ref> *);</initializer>
        <briefdescription>
<para>Helper for declaring member functions of the <ref refid="classlinearray__t" kindref="compound">linearray_t</ref> class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1856" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gacfa68f805687da98f473e662ddbc7c4c" prot="public" static="no">
        <name>BWN_UNKNOWN</name>
        <initializer>-1</initializer>
        <briefdescription>
<para>unknown window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1977" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1977" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga00e0b0613d6ae816a62a2c89d6d56c2a" prot="public" static="no">
        <name>BWN_EXPORTS</name>
        <initializer>0</initializer>
        <briefdescription>
<para>exports </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1978" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1978" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga995618eb695b01635221ccf9c60f3f15" prot="public" static="no">
        <name>BWN_IMPORTS</name>
        <initializer>1</initializer>
        <briefdescription>
<para>imports </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1979" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1979" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gade4e9f41c23263fe2a308436a19e29c6" prot="public" static="no">
        <name>BWN_NAMES</name>
        <initializer>2</initializer>
        <briefdescription>
<para>names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1980" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gaf03baa030d90ed48d6bef8948ac22517" prot="public" static="no">
        <name>BWN_FUNCS</name>
        <initializer>3</initializer>
        <briefdescription>
<para>functions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1981" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1981" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gaed5c02416d4f0a071a253f69e22ea9b4" prot="public" static="no">
        <name>BWN_STRINGS</name>
        <initializer>4</initializer>
        <briefdescription>
<para>strings </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1982" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1982" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gab166b93a84b02ccf3eaa57d55501ae50" prot="public" static="no">
        <name>BWN_SEGS</name>
        <initializer>5</initializer>
        <briefdescription>
<para>segments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1983" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1983" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga3113f254e9f628bc9adb11e4df0e647b" prot="public" static="no">
        <name>BWN_SEGREGS</name>
        <initializer>6</initializer>
        <briefdescription>
<para>segment registers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1984" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1984" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gabb3f753fc19dbb7fba8a7f04327ab59c" prot="public" static="no">
        <name>BWN_SELS</name>
        <initializer>7</initializer>
        <briefdescription>
<para>selectors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1985" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1985" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga3fc497a7c36e4fcae042cad84b2ce52b" prot="public" static="no">
        <name>BWN_SIGNS</name>
        <initializer>8</initializer>
        <briefdescription>
<para>signatures </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1986" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1986" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gacba9ef77e1dc81ab76ba6e67c440b532" prot="public" static="no">
        <name>BWN_TILS</name>
        <initializer>9</initializer>
        <briefdescription>
<para>type libraries </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1987" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1987" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gac2f2c6a46c6e1b14a9804da087b9414e" prot="public" static="no">
        <name>BWN_LOCTYPS</name>
        <initializer>10</initializer>
        <briefdescription>
<para>local types </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1988" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1988" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga2ac8927ce36d7268458d92af5dd170b8" prot="public" static="no">
        <name>BWN_CALLS</name>
        <initializer>11</initializer>
        <briefdescription>
<para>function calls </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1989" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1989" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gacd9c6dca8e0523b9c56143143502b2f9" prot="public" static="no">
        <name>BWN_PROBS</name>
        <initializer>12</initializer>
        <briefdescription>
<para>problems </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1990" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga61d1d3ca8ce31c0514df4f9a1e5f881a" prot="public" static="no">
        <name>BWN_BPTS</name>
        <initializer>13</initializer>
        <briefdescription>
<para>breakpoints </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1991" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1991" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga8928bd6f78cb17f2399052de132eee7b" prot="public" static="no">
        <name>BWN_THREADS</name>
        <initializer>14</initializer>
        <briefdescription>
<para>threads </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1992" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1992" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga1b2d8d5c61d44c90b4e3197804cb2221" prot="public" static="no">
        <name>BWN_MODULES</name>
        <initializer>15</initializer>
        <briefdescription>
<para>modules </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1993" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1993" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga1dea7f6cc7de359d7fa3e3e3157428d6" prot="public" static="no">
        <name>BWN_TRACE</name>
        <initializer>16</initializer>
        <briefdescription>
<para>trace view </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1994" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1994" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga0c330db82517a02d8039fef692fa3da3" prot="public" static="no">
        <name>BWN_CALL_STACK</name>
        <initializer>17</initializer>
        <briefdescription>
<para>call stack </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1995" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1995" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gad79a98063f3aeab5ac960f2f166a4584" prot="public" static="no">
        <name>BWN_XREFS</name>
        <initializer>18</initializer>
        <briefdescription>
<para>xrefs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1996" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1996" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gac816df26b8277ae3428174581e4c35a6" prot="public" static="no">
        <name>BWN_SEARCH</name>
        <initializer>19</initializer>
        <briefdescription>
<para>search results </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1997" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1997" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga556f5fe9fc67694bf69e668b475e42a8" prot="public" static="no">
        <name>BWN_FRAME</name>
        <initializer>25</initializer>
        <briefdescription>
<para>function frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1998" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1998" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga05d45e050697c0e13adb13c7190fa625" prot="public" static="no">
        <name>BWN_NAVBAND</name>
        <initializer>26</initializer>
        <briefdescription>
<para>navigation band </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1999" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1999" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga481d03dc2cc436709bc96aee6a3b688f" prot="public" static="no">
        <name>BWN_ENUMS</name>
        <initializer>27</initializer>
        <briefdescription>
<para>enumerations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2000" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2000" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga60c0de72bcd7f4c9c960d2f7cfc57b74" prot="public" static="no">
        <name>BWN_STRUCTS</name>
        <initializer>28</initializer>
        <briefdescription>
<para>structures </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2001" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2001" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gad74c8462b04c39534b3d2d84397eede8" prot="public" static="no">
        <name>BWN_DISASM</name>
        <initializer>29</initializer>
        <briefdescription>
<para>disassembly views </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2002" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2002" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gac77b5e691b031a57977ef9b3dae3f651" prot="public" static="no">
        <name>BWN_DUMP</name>
        <initializer>30</initializer>
        <briefdescription>
<para>hex dumps </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2003" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2003" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga5f700a35e3c92fda1530805969c6705e" prot="public" static="no">
        <name>BWN_NOTEPAD</name>
        <initializer>31</initializer>
        <briefdescription>
<para>notepad </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2004" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2004" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga4a79cf5216aba67d269fb23ba9c4cabd" prot="public" static="no">
        <name>BWN_OUTPUT</name>
        <initializer>32</initializer>
        <briefdescription>
<para>the text area, in the output window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2005" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2005" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga17aea9cb90e2f7fa0801696a2eea6bdd" prot="public" static="no">
        <name>BWN_CLI</name>
        <initializer>33</initializer>
        <briefdescription>
<para>the command-line, in the output window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2006" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2006" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gad52eb8b2ee7da229b337baa9792bfd01" prot="public" static="no">
        <name>BWN_WATCH</name>
        <initializer>34</initializer>
        <briefdescription>
<para>the &apos;watches&apos; debugger window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2007" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2007" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga388f8cf4d532826fb0bf635633cdc851" prot="public" static="no">
        <name>BWN_LOCALS</name>
        <initializer>35</initializer>
        <briefdescription>
<para>the &apos;locals&apos; debugger window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2008" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga268df1b930f3a992b543a9f8294e527d" prot="public" static="no">
        <name>BWN_STKVIEW</name>
        <initializer>36</initializer>
        <briefdescription>
<para>the &apos;Stack view&apos; debugger window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2009" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga483ba9ff08fa2acb26854d5e6d60f0e6" prot="public" static="no">
        <name>BWN_CHOOSER</name>
        <initializer>37</initializer>
        <briefdescription>
<para>a non-builtin chooser </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2010" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gadec46fb0e87e2f4dce60c64853d0aa09" prot="public" static="no">
        <name>BWN_SHORTCUTCSR</name>
        <initializer>38</initializer>
        <briefdescription>
<para>the shortcuts chooser (Qt version only) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2011" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2011" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gaba3be18f45cdb9d8429fa06ce4bb5928" prot="public" static="no">
        <name>BWN_SHORTCUTWIN</name>
        <initializer>39</initializer>
        <briefdescription>
<para>the shortcuts window (Qt version only) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2012" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gaf9e213904884e602ccc113f364fbe88d" prot="public" static="no">
        <name>BWN_CPUREGS</name>
        <initializer>40</initializer>
        <briefdescription>
<para>one of the &apos;General registers&apos;, &apos;FPU register&apos;, ... debugger windows </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2013" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga482553633a14ac0ef230827be3868dc2" prot="public" static="no">
        <name>BWN_SO_STRUCTS</name>
        <initializer>41</initializer>
        <briefdescription>
<para>the &apos;Structure offsets&apos; dialog&apos;s &apos;Structures and Unions&apos; panel </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2014" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gafe283123268f8961b3b76dcd518bc07e" prot="public" static="no">
        <name>BWN_SO_OFFSETS</name>
        <initializer>42</initializer>
        <briefdescription>
<para>the &apos;Structure offsets&apos; dialog&apos;s offset panel </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2015" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga6b37820f0c88fc2df0c6737a2a144bbf" prot="public" static="no">
        <name>BWN_CMDPALCSR</name>
        <initializer>43</initializer>
        <briefdescription>
<para>the command palette chooser (Qt version only) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2016" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2016" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gae29f72e60081f5cc5d25fc986108b9b8" prot="public" static="no">
        <name>BWN_CMDPALWIN</name>
        <initializer>44</initializer>
        <briefdescription>
<para>the command palette window (Qt version only) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2017" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2017" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gac4f1621f8ccee025fb78fe68a37a8db1" prot="public" static="no">
        <name>BWN_SNIPPETS</name>
        <initializer>45</initializer>
        <briefdescription>
<para>the &apos;Execute script&apos; window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2018" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2018" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga733e65fce4f79411307eef60c1db724f" prot="public" static="no">
        <name>BWN_CUSTVIEW</name>
        <initializer>46</initializer>
        <briefdescription>
<para>custom viewers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2019" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2019" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gabf06a034c540c6ff2b827b77ca3a45d5" prot="public" static="no">
        <name>BWN_ADDRWATCH</name>
        <initializer>47</initializer>
        <briefdescription>
<para>the &apos;Watch List&apos; window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2020" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2020" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga24a72c6f92f178eb703414d24093c92c" prot="public" static="no">
        <name>BWN_PSEUDOCODE</name>
        <initializer>48</initializer>
        <briefdescription>
<para>hexrays decompiler views </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2021" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga4f2ddbc85244068a0f3e1104123226d4" prot="public" static="no">
        <name>BWN_CALLS_CALLERS</name>
        <initializer>49</initializer>
        <briefdescription>
<para>function calls, callers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2022" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2022" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga46aa1856af14ce7ee520e77f454cfd45" prot="public" static="no">
        <name>BWN_CALLS_CALLEES</name>
        <initializer>50</initializer>
        <briefdescription>
<para>function calls, callees </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2023" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2023" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gae9da7aef1e6e56d8fe8d940e54401291" prot="public" static="no">
        <name>BWN_MDVIEWCSR</name>
        <initializer>51</initializer>
        <briefdescription>
<para>lumina metadata view chooser </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2024" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2024" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga6397eadc3b490ee9d9f34b0a03f41231" prot="public" static="no">
        <name>BWN_STACK</name>
        <initializer><ref refid="group___b_w_n___1ga0c330db82517a02d8039fef692fa3da3" kindref="member">BWN_CALL_STACK</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Alias. Some BWN_* were confusing, and thus have been renamed. This is to ensure bw-compat. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2028" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2028" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1gaf1f7b94dcee441f3e99166f86c44176a" prot="public" static="no">
        <name>BWN_DISASMS</name>
        <initializer><ref refid="group___b_w_n___1gad74c8462b04c39534b3d2d84397eede8" kindref="member">BWN_DISASM</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Alias. Some BWN_* were confusing, and thus have been renamed. This is to ensure bw-compat. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2029" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2029" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga64f43690836005e7e1400fe75dfb59ed" prot="public" static="no">
        <name>BWN_DUMPS</name>
        <initializer><ref refid="group___b_w_n___1gac77b5e691b031a57977ef9b3dae3f651" kindref="member">BWN_DUMP</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Alias. Some BWN_* were confusing, and thus have been renamed. This is to ensure bw-compat. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2030" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2030" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___b_w_n___1ga7524c872700e9521f7e751dd9988e1d2" prot="public" static="no">
        <name>BWN_SEARCHS</name>
        <initializer><ref refid="group___b_w_n___1gac816df26b8277ae3428174581e4c35a6" kindref="member">BWN_SEARCH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Alias. Some BWN_* were confusing, and thus have been renamed. This is to ensure bw-compat. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2031" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2031" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga3cee3d1d82ea5d5a5591abfaebfe3ed3" prot="public" static="no">
        <name>IWID_EXPORTS</name>
        <initializer>(1ULL &lt;&lt; BWN_EXPORTS      )</initializer>
        <briefdescription>
<para>exports (0) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2037" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2037" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga40b95417ef38916a4b3eeb5db0caae2a" prot="public" static="no">
        <name>IWID_IMPORTS</name>
        <initializer>(1ULL &lt;&lt; BWN_IMPORTS      )</initializer>
        <briefdescription>
<para>imports (1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2038" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2038" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga48cfbd434bf4e7b2af2a1e5a9e1dc8e3" prot="public" static="no">
        <name>IWID_NAMES</name>
        <initializer>(1ULL &lt;&lt; BWN_NAMES        )</initializer>
        <briefdescription>
<para>names (2) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2039" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2039" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gaa140d1c0e0b62769dd17fffce62ec4e6" prot="public" static="no">
        <name>IWID_FUNCS</name>
        <initializer>(1ULL &lt;&lt; BWN_FUNCS        )</initializer>
        <briefdescription>
<para>functions (3) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2040" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2040" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gaba87988c82d50ba2cfcfb4fd0f16851d" prot="public" static="no">
        <name>IWID_STRINGS</name>
        <initializer>(1ULL &lt;&lt; BWN_STRINGS      )</initializer>
        <briefdescription>
<para>strings (4) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2041" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2041" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gac327fecd3c8e717fa76e043191540064" prot="public" static="no">
        <name>IWID_SEGS</name>
        <initializer>(1ULL &lt;&lt; BWN_SEGS         )</initializer>
        <briefdescription>
<para>segments (5) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2042" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2042" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga9e9756261bf505ce8a6e076f3f14043a" prot="public" static="no">
        <name>IWID_SEGREGS</name>
        <initializer>(1ULL &lt;&lt; BWN_SEGREGS      )</initializer>
        <briefdescription>
<para>segment registers (6) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2043" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gac026a6cb0d537bab8f632f3d7ca42a74" prot="public" static="no">
        <name>IWID_SELS</name>
        <initializer>(1ULL &lt;&lt; BWN_SELS         )</initializer>
        <briefdescription>
<para>selectors (7) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2044" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2044" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga3ee9c99bb4a8413d1334238ab76f0f03" prot="public" static="no">
        <name>IWID_SIGNS</name>
        <initializer>(1ULL &lt;&lt; BWN_SIGNS        )</initializer>
        <briefdescription>
<para>signatures (8) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2045" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2045" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga0a5edd6347befecd7a94899219080a90" prot="public" static="no">
        <name>IWID_TILS</name>
        <initializer>(1ULL &lt;&lt; BWN_TILS         )</initializer>
        <briefdescription>
<para>type libraries (9) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2046" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2046" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga52a7c9e5a70b7a941b00f959249b96ea" prot="public" static="no">
        <name>IWID_LOCTYPS</name>
        <initializer>(1ULL &lt;&lt; BWN_LOCTYPS      )</initializer>
        <briefdescription>
<para>local types (10) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2047" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2047" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gac19760f8ccfea1c70bb7b7ffba7e01a2" prot="public" static="no">
        <name>IWID_CALLS</name>
        <initializer>(1ULL &lt;&lt; BWN_CALLS        )</initializer>
        <briefdescription>
<para>function calls (11) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2048" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2048" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga8de531afea0729af19b536aaf0e0f6c3" prot="public" static="no">
        <name>IWID_PROBS</name>
        <initializer>(1ULL &lt;&lt; BWN_PROBS        )</initializer>
        <briefdescription>
<para>problems (12) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2049" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2049" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga1daac08bb7aac1f8e8fb8cd60e994b52" prot="public" static="no">
        <name>IWID_BPTS</name>
        <initializer>(1ULL &lt;&lt; BWN_BPTS         )</initializer>
        <briefdescription>
<para>breakpoints (13) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2050" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2050" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga7e17af28d7f47bc446e94f2e84c3530b" prot="public" static="no">
        <name>IWID_THREADS</name>
        <initializer>(1ULL &lt;&lt; BWN_THREADS      )</initializer>
        <briefdescription>
<para>threads (14) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2051" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2051" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga9bf26e055c24a0d6ff8d0b9c96765fcb" prot="public" static="no">
        <name>IWID_MODULES</name>
        <initializer>(1ULL &lt;&lt; BWN_MODULES      )</initializer>
        <briefdescription>
<para>modules (15) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2052" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2052" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gab225219690eb8937b0ff320dbf81bf73" prot="public" static="no">
        <name>IWID_TRACE</name>
        <initializer>(1ULL &lt;&lt; BWN_TRACE        )</initializer>
        <briefdescription>
<para>trace view (16) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2053" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2053" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gaebba8098c248b6be6cbfe848c68931f2" prot="public" static="no">
        <name>IWID_STACK</name>
        <initializer>(1ULL &lt;&lt; BWN_STACK        )</initializer>
        <briefdescription>
<para>call stack (17) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2054" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2054" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gaf7439b8e7f624a575ce68fb9b2ead5a2" prot="public" static="no">
        <name>IWID_XREFS</name>
        <initializer>(1ULL &lt;&lt; BWN_XREFS        )</initializer>
        <briefdescription>
<para>xrefs (18) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2055" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2055" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga7758c589bcc9490e2a22b53297a71489" prot="public" static="no">
        <name>IWID_SEARCHS</name>
        <initializer>(1ULL &lt;&lt; BWN_SEARCH       )</initializer>
        <briefdescription>
<para>search results (19) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2056" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2056" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga036e125321afeaf7862564d4b49d33bd" prot="public" static="no">
        <name>IWID_FRAME</name>
        <initializer>(1ULL &lt;&lt; BWN_FRAME        )</initializer>
        <briefdescription>
<para>function frame (25) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2057" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2057" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga8ca95c2532ff38410908a478864b4769" prot="public" static="no">
        <name>IWID_NAVBAND</name>
        <initializer>(1ULL &lt;&lt; BWN_NAVBAND      )</initializer>
        <briefdescription>
<para>navigation band (26) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2058" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2058" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga8321b24b0f990924e91d333572135bce" prot="public" static="no">
        <name>IWID_ENUMS</name>
        <initializer>(1ULL &lt;&lt; BWN_ENUMS        )</initializer>
        <briefdescription>
<para>enumerations (27) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2059" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2059" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga3ba80a819cb09d788813e47c5287ac5d" prot="public" static="no">
        <name>IWID_STRUCTS</name>
        <initializer>(1ULL &lt;&lt; BWN_STRUCTS      )</initializer>
        <briefdescription>
<para>structures (28) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2060" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2060" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gaf414bcf0e8c8e2328731f5d8037a664f" prot="public" static="no">
        <name>IWID_DISASMS</name>
        <initializer>(1ULL &lt;&lt; BWN_DISASM       )</initializer>
        <briefdescription>
<para>disassembly views (29) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2061" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2061" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga87e656ce6189493549fe7a30b39053c7" prot="public" static="no">
        <name>IWID_DUMPS</name>
        <initializer>(1ULL &lt;&lt; BWN_DUMP         )</initializer>
        <briefdescription>
<para>hex dumps (30) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2062" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2062" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga9f2bcd10245e534349e4a0e6642ddfe5" prot="public" static="no">
        <name>IWID_NOTEPAD</name>
        <initializer>(1ULL &lt;&lt; BWN_NOTEPAD      )</initializer>
        <briefdescription>
<para>notepad (31) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2063" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2063" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga220c305fbcf36961aac9a1a935803fd8" prot="public" static="no">
        <name>IWID_OUTPUT</name>
        <initializer>(1ULL &lt;&lt; BWN_OUTPUT       )</initializer>
        <briefdescription>
<para>output (32) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2064" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2064" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga13c00dd01ecf4a1ff79a83a0a5f371ed" prot="public" static="no">
        <name>IWID_CLI</name>
        <initializer>(1ULL &lt;&lt; BWN_CLI          )</initializer>
        <briefdescription>
<para>input line (33) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2065" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2065" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga875d080918058b5439781cd7d4f15260" prot="public" static="no">
        <name>IWID_WATCH</name>
        <initializer>(1ULL &lt;&lt; BWN_WATCH        )</initializer>
        <briefdescription>
<para>watches (34) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2066" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2066" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga17553cc1ef18a80d6fd2cb67039540a0" prot="public" static="no">
        <name>IWID_LOCALS</name>
        <initializer>(1ULL &lt;&lt; BWN_LOCALS       )</initializer>
        <briefdescription>
<para>locals (35) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2067" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2067" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga1204a1941b6f5087a6c30a4793764420" prot="public" static="no">
        <name>IWID_STKVIEW</name>
        <initializer>(1ULL &lt;&lt; BWN_STKVIEW      )</initializer>
        <briefdescription>
<para>stack view (36) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2068" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2068" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga84400f2de40633fb64682824542bc04d" prot="public" static="no">
        <name>IWID_CHOOSER</name>
        <initializer>(1ULL &lt;&lt; BWN_CHOOSER      )</initializer>
        <briefdescription>
<para>chooser (37) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2069" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2069" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gacec072d8dbae3c931b226ed130c62e14" prot="public" static="no">
        <name>IWID_SHORTCUTCSR</name>
        <initializer>(1ULL &lt;&lt; BWN_SHORTCUTCSR  )</initializer>
        <briefdescription>
<para>shortcuts chooser (38) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2070" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2070" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga8879de043b6952649e7ad898ae841f09" prot="public" static="no">
        <name>IWID_SHORTCUTWIN</name>
        <initializer>(1ULL &lt;&lt; BWN_SHORTCUTWIN  )</initializer>
        <briefdescription>
<para>shortcuts window (39) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2071" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2071" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga922f7c1fc2d7063651e7348ba0c824d5" prot="public" static="no">
        <name>IWID_CPUREGS</name>
        <initializer>(1ULL &lt;&lt; BWN_CPUREGS      )</initializer>
        <briefdescription>
<para>registers (40) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2072" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2072" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga51127f1e3438d32d71b8f57d22f9355d" prot="public" static="no">
        <name>IWID_SO_STRUCTS</name>
        <initializer>(1ULL &lt;&lt; BWN_SO_STRUCTS   )</initializer>
        <briefdescription>
<para>stroff (41) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2073" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2073" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga374fa529c6256cb5ff42ccc389ff5372" prot="public" static="no">
        <name>IWID_SO_OFFSETS</name>
        <initializer>(1ULL &lt;&lt; BWN_SO_OFFSETS   )</initializer>
        <briefdescription>
<para>stroff (42) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2074" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2074" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga40be76b5c7d5d3a18aee6705f13ad4db" prot="public" static="no">
        <name>IWID_CMDPALCSR</name>
        <initializer>(1ULL &lt;&lt; BWN_CMDPALCSR    )</initializer>
        <briefdescription>
<para>command palette (43) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2075" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2075" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga57cbde6bbdd8d623fde1db2305ddbdf6" prot="public" static="no">
        <name>IWID_CMDPALWIN</name>
        <initializer>(1ULL &lt;&lt; BWN_CMDPALWIN    )</initializer>
        <briefdescription>
<para>command palette (44) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2076" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2076" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gaf8294aa93523ab49fafb537e725bfa33" prot="public" static="no">
        <name>IWID_SNIPPETS</name>
        <initializer>(1ULL &lt;&lt; BWN_SNIPPETS     )</initializer>
        <briefdescription>
<para>snippets (45) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2077" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2077" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga392dbd82a77abb62a18af700e0144eb1" prot="public" static="no">
        <name>IWID_CUSTVIEW</name>
        <initializer>(1ULL &lt;&lt; BWN_CUSTVIEW     )</initializer>
        <briefdescription>
<para>custom viewers (46) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2078" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2078" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1gaacb92faddcb4f3052bf5c8b25690c79b" prot="public" static="no">
        <name>IWID_ADDRWATCH</name>
        <initializer>(1ULL &lt;&lt; BWN_ADDRWATCH    )</initializer>
        <briefdescription>
<para>address watches (47) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2079" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2079" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga08fabc5af66a4410be92decce2b2e204" prot="public" static="no">
        <name>IWID_PSEUDOCODE</name>
        <initializer>(1ULL &lt;&lt; BWN_PSEUDOCODE   )</initializer>
        <briefdescription>
<para>decompiler (48) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2080" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga16c8b9597ba1345de4b8260395f75893" prot="public" static="no">
        <name>IWID_CALLS_CALLERS</name>
        <initializer>(1ULL &lt;&lt; BWN_CALLS_CALLERS)</initializer>
        <briefdescription>
<para>funcalls, callers (49) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2081" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga828d244080008730f08e6887db405bed" prot="public" static="no">
        <name>IWID_CALLS_CALLEES</name>
        <initializer>(1ULL &lt;&lt; BWN_CALLS_CALLEES)</initializer>
        <briefdescription>
<para>funcalls, callees (50) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2082" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2082" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga229875d3c91c82935c48cc84748b5cd7" prot="public" static="no">
        <name>IWID_MDVIEWCSR</name>
        <initializer>(1ULL &lt;&lt; BWN_MDVIEWCSR    )</initializer>
        <briefdescription>
<para>lumina md view (51) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2083" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2083" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga4664f7f26e5d969ab32e98519b92b0de" prot="public" static="no">
        <name>IWID_IDAMEMOS</name>
        <initializer>(<ref refid="group___i_w_i_d___1gaf414bcf0e8c8e2328731f5d8037a664f" kindref="member">IWID_DISASMS</ref>|<ref refid="group___i_w_i_d___1ga87e656ce6189493549fe7a30b39053c7" kindref="member">IWID_DUMPS</ref>  )</initializer>
        <briefdescription>
<para>disassembly + hex dump views </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2085" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2085" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_w_i_d___1ga87a0e352bef06338db7129b9e75ec680" prot="public" static="no">
        <name>IWID_ALL</name>
        <initializer>0xFFFFFFFFFFFFFFFF</initializer>
        <briefdescription>
<para>mask </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2086" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2086" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga62d091eb0672a456474c7b5ae16e2b3f" prot="public" static="no">
        <name>IDA_DEBUG_DREFS</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>drefs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2115" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gacb4b5543a27062af4b7dfc66b60cc98a" prot="public" static="no">
        <name>IDA_DEBUG_OFFSET</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>offsets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2116" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gaf0c13eddcb43550f4f837a6c3ed83503" prot="public" static="no">
        <name>IDA_DEBUG_FLIRT</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>flirt </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2117" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gaabf1ce78c9f1349b83869cf339188631" prot="public" static="no">
        <name>IDA_DEBUG_IDP</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
<para>idp module </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2118" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga6cfdbc3ddeb1fcb428608acade54a63a" prot="public" static="no">
        <name>IDA_DEBUG_LDR</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
<para>ldr module </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2119" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gaf0f02c1a7b791a167a2c6da00fb77af2" prot="public" static="no">
        <name>IDA_DEBUG_PLUGIN</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
<para>plugin module </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2120" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga24d9abceb7bb80d04be05745fa124eb0" prot="public" static="no">
        <name>IDA_DEBUG_IDS</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
<para>ids files </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2121" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gab040e81b5bf919fd403a3014cb315e57" prot="public" static="no">
        <name>IDA_DEBUG_CONFIG</name>
        <initializer>0x00000080</initializer>
        <briefdescription>
<para>config file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2122" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga77a972a6c9a5fd28aa0afdb7534470a6" prot="public" static="no">
        <name>IDA_DEBUG_CHECKMEM</name>
        <initializer>0x00000100</initializer>
        <briefdescription>
<para>check heap consistency </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2123" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gaf2c071b03bd3ee4494aa582eb552727d" prot="public" static="no">
        <name>IDA_DEBUG_CHECKARG</name>
        <initializer>0x00000200</initializer>
        <briefdescription>
<para>checkarg </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2124" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga9ac98393431428dc4c9239fed13dd5ac" prot="public" static="no">
        <name>IDA_DEBUG_DEMANGLE</name>
        <initializer>0x00000400</initializer>
        <briefdescription>
<para>demangler </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2125" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gacc426505ad80fc6553a97c7c0a738405" prot="public" static="no">
        <name>IDA_DEBUG_QUEUE</name>
        <initializer>0x00000800</initializer>
        <briefdescription>
<para>queue </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2126" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gae627bec81ddbf8e482d78f193fda6f4b" prot="public" static="no">
        <name>IDA_DEBUG_ROLLBACK</name>
        <initializer>0x00001000</initializer>
        <briefdescription>
<para>rollback </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2127" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga98cfc1017c11dac1553b991a18602560" prot="public" static="no">
        <name>IDA_DEBUG_ALREADY</name>
        <initializer>0x00002000</initializer>
        <briefdescription>
<para>already data or code </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2128" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gaa301af3f59188be1fafe4d33454b5153" prot="public" static="no">
        <name>IDA_DEBUG_TIL</name>
        <initializer>0x00004000</initializer>
        <briefdescription>
<para>type system </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2129" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gab286aa618dc0c630f3cf4126cea6e451" prot="public" static="no">
        <name>IDA_DEBUG_NOTIFY</name>
        <initializer>0x00008000</initializer>
        <briefdescription>
<para>show all notifications </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2130" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga56f40d8c68dee934c830a8a3ad0e3c61" prot="public" static="no">
        <name>IDA_DEBUG_DEBUGGER</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
<para>debugger </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2131" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gaa2bc4ce9a5e89efb770c0548800b38e8" prot="public" static="no">
        <name>IDA_DEBUG_APPCALL</name>
        <initializer>0x00020000</initializer>
        <briefdescription>
<para>appcall </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2132" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gac75a729d02febb8aa91d34d1049d74ad" prot="public" static="no">
        <name>IDA_DEBUG_SRCDBG</name>
        <initializer>0x00040000</initializer>
        <briefdescription>
<para>source debugging </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2133" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga8814944fc370567527611a4a244dc437" prot="public" static="no">
        <name>IDA_DEBUG_ACCESSIBILITY</name>
        <initializer>0x00080000</initializer>
        <briefdescription>
<para>accessibility </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2134" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga9bf07b5dbe78c3c2491129570836529a" prot="public" static="no">
        <name>IDA_DEBUG_NETWORK</name>
        <initializer>0x00100000</initializer>
        <briefdescription>
<para>network </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2135" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1gaba28a66cb30ff8a2e9d671d5d33e869d" prot="public" static="no">
        <name>IDA_DEBUG_INTERNET</name>
        <initializer><ref refid="group___i_d_a___d_e_b_u_g___1ga9bf07b5dbe78c3c2491129570836529a" kindref="member">IDA_DEBUG_NETWORK</ref></initializer>
        <briefdescription>
<para>internet connection (for API backward compatibility) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2136" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga851f8e74f6e32122577a59c397990ca2" prot="public" static="no">
        <name>IDA_DEBUG_SIMPLEX</name>
        <initializer>0x00200000</initializer>
        <briefdescription>
<para>full stack analysis </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2137" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga78a882f3600aae43cf1c707bbfff3500" prot="public" static="no">
        <name>IDA_DEBUG_DBGINFO</name>
        <initializer>0x00400000</initializer>
        <briefdescription>
<para>handling of debug info (e.g. pdb, dwarf) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2138" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga07e47da4230e93ded4ba97012006aa7b" prot="public" static="no">
        <name>IDA_DEBUG_LUMINA</name>
        <initializer>0x00800000</initializer>
        <briefdescription>
<para>lumina related </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2139" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a___d_e_b_u_g___1ga69ad0a8ad2fd8c41b4525ea90efbece8" prot="public" static="no">
        <name>IDA_DEBUG_ALWAYS</name>
        <initializer>0xFFFFFFFF</initializer>
        <briefdescription>
<para>everything </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2140" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1ac608386b0d715010061b23da648111dc" prot="public" static="no">
        <name>deb</name>
        <param><defname>ida_debug_bits</defname></param>
        <param><defname>...</defname></param>
        <initializer>do                                       \
  {                                        \
    if ( (<ref refid="kernwin_8hpp_1a2d9b7e43291ec52f217b47e417579353" kindref="member">debug</ref> &amp; (ida_debug_bits)) != 0 ) \
      <ref refid="kernwin_8hpp_1ae671b2503bec5f749a7c1e802af44335" kindref="member">ida_deb</ref>(__VA_ARGS__);                \
  } while ( false )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2159" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1ab22faaaa54248e125ac54ac08e12d202" prot="public" static="no">
        <name>checkmem</name>
        <param></param>
        <initializer>do {} while (0)</initializer>
        <briefdescription>
<para>Checking heap is not available anymore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2168" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gaf31647eae19a462b07ea4a77058fc883" prot="public" static="no">
        <name>CH_MODAL</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>Modal chooser. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2211" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga6c16727f7ea18c15e4a0026963e0b055" prot="public" static="no">
        <name>CH_KEEP</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The chooser instance&apos;s lifecycle is not tied to the lifecycle of the widget showing its contents. Closing the widget will not destroy the chooser structure. This allows for, e.g., static global chooser instances that don&apos;t need to be allocated on the heap. Also stack-allocated chooser instances must set this bit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2217" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gacfbc3bef12bc19f047a205b136f287c2" prot="public" static="no">
        <name>CH_MULTI</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>Obsolete. </para>        </briefdescription>
        <detaileddescription>
<para>The chooser will allow multi-selection (only for GUI choosers). This bit is set when using the <ref refid="structchooser__multi__t" kindref="compound">chooser_multi_t</ref> structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2220" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gaeef806c1a2500fbbc37da1f6b2bf3ce3" prot="public" static="no">
        <name>CH_MULTI_EDIT</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2222" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gae6c85138f000f0d2ef78ce428a2bcae7" prot="public" static="no">
        <name>CH_NOBTNS</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>do not display ok/cancel/help/search buttons. Meaningful only for gui modal windows because non-modal windows do not have any buttons anyway. Text mode does not have them neither. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2226" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gab3890b823cb1ccce21f56f4941dd5398" prot="public" static="no">
        <name>CH_ATTRS</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
<para>generate ui_get_chooser_item_attrs (gui only) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2228" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga8705c52e147d9ccb98eb03ab206a67d0" prot="public" static="no">
        <name>CH_NOIDB</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
<para>use the chooser before opening the database </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2230" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga5f7ea24f7a031cac19a856f4859c9f0b" prot="public" static="no">
        <name>CH_FORCE_DEFAULT</name>
        <initializer>0x00000080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if a non-modal chooser was already open, change selection to the default one </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2233" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga62f7fbc195fef741214eac449a3021c9" prot="public" static="no">
        <name>CH_CAN_INS</name>
        <initializer>0x00000100</initializer>
        <briefdescription>
<para>allow to insert new items </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2235" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gadd8265aaafdb0168c04d7a4b6db5e5df" prot="public" static="no">
        <name>CH_CAN_DEL</name>
        <initializer>0x00000200</initializer>
        <briefdescription>
<para>allow to delete existing item(s) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2237" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gae42dc8dec30e86cee81fbf3080d10d48" prot="public" static="no">
        <name>CH_CAN_EDIT</name>
        <initializer>0x00000400</initializer>
        <briefdescription>
<para>allow to edit existing item(s) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2239" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gae949484987610e62f2723b05fa02ca08" prot="public" static="no">
        <name>CH_CAN_REFRESH</name>
        <initializer>0x00000800</initializer>
        <briefdescription>
<para>allow to refresh chooser </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2241" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga2ff67f6acbd476f28ca2c4b587480221" prot="public" static="no">
        <name>CH_QFLT</name>
        <initializer>0x00001000</initializer>
        <briefdescription>
<para>open with quick filter enabled and focused </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2244" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga0d8af5e0705fe4ee0407cd1b1ceaca43" prot="public" static="no">
        <name>CH_QFTYP_SHIFT</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2245" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga3dabe055f198551faa57f3e961f83836" prot="public" static="no">
        <name>CH_QFTYP_DEFAULT</name>
        <initializer>0</initializer>
        <briefdescription>
<para>set quick filtering type to the possible existing default for this chooser </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2246" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga726a488b48202a814575c795696fa1e7" prot="public" static="no">
        <name>CH_QFTYP_NORMAL</name>
        <initializer>(1 &lt;&lt; CH_QFTYP_SHIFT)</initializer>
        <briefdescription>
<para>normal (i.e., lexicographical) quick filter type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2247" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga17fea3be2f2a12177a8a2aaeb3c5eef6" prot="public" static="no">
        <name>CH_QFTYP_WHOLE_WORDS</name>
        <initializer>(2 &lt;&lt; CH_QFTYP_SHIFT)</initializer>
        <briefdescription>
<para>whole words quick filter type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2248" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gae2d15458c2e4831e11cb44339b20b8f2" prot="public" static="no">
        <name>CH_QFTYP_REGEX</name>
        <initializer>(3 &lt;&lt; CH_QFTYP_SHIFT)</initializer>
        <briefdescription>
<para>regex quick filter type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2249" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1gac2ae4787227ed37e154cbd698db622dd" prot="public" static="no">
        <name>CH_QFTYP_FUZZY</name>
        <initializer>(4 &lt;&lt; CH_QFTYP_SHIFT)</initializer>
        <briefdescription>
<para>fuzzy search quick filter type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2250" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga1a9ffd34eef054a912cce0a3149bdba3" prot="public" static="no">
        <name>CH_QFTYP_MASK</name>
        <initializer>(0x7 &lt;&lt; CH_QFTYP_SHIFT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2251" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga97e4b9861842525d544563d31707fd9e" prot="public" static="no">
        <name>CH_NO_STATUS_BAR</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
<para>don&apos;t show a status bar </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2254" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga960351891a58f00a2d87e1888ec9be02" prot="public" static="no">
        <name>CH_RESTORE</name>
        <initializer>0x00020000</initializer>
        <briefdescription>
<para>restore floating position if present (equivalent of WOPN_RESTORE) (GUI version only) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2257" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga9175941e28dcb5f81f4c68450abd0b4b" prot="public" static="no">
        <name>CH_BUILTIN_SHIFT</name>
        <initializer>19</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2261" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga46c1588c4fa769266ca2e355ace0c625" prot="public" static="no">
        <name>CH_BUILTIN</name>
        <param><defname>id</defname></param>
        <initializer>((id+1) &lt;&lt; CH_BUILTIN_SHIFT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2262" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h___1ga1238746c85137ef6e89c9e87a65bb31f" prot="public" static="no">
        <name>CH_BUILTIN_MASK</name>
        <initializer>(0x3F &lt;&lt; CH_BUILTIN_SHIFT)</initializer>
        <briefdescription>
<para>Mask for builtin chooser numbers. Plugins should not use them. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2264" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_c_o_l___1ga037703167d31c16e52456b3074b96022" prot="public" static="no">
        <name>CHCOL_PLAIN</name>
        <initializer>0x00000000</initializer>
        <briefdescription>
<para>plain string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2272" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_c_o_l___1gaa2e10881fb27ad73e56ff70fec695180" prot="public" static="no">
        <name>CHCOL_PATH</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
<para>file path </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2273" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_c_o_l___1ga86c3be405453c28a567a38bb14449c90" prot="public" static="no">
        <name>CHCOL_HEX</name>
        <initializer>0x00020000</initializer>
        <briefdescription>
<para>hexadecimal number </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2274" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_c_o_l___1gaff2cdd7afee1e12af001b772b9e14535" prot="public" static="no">
        <name>CHCOL_DEC</name>
        <initializer>0x00030000</initializer>
        <briefdescription>
<para>decimal number </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2275" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_c_o_l___1ga9ef4d8380251ffafb6a843efe89584c2" prot="public" static="no">
        <name>CHCOL_FORMAT</name>
        <initializer>0x00070000</initializer>
        <briefdescription>
<para>column format mask </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2276" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_i_t_e_m___1ga46f6d83d159cddfdd228fb9eec4ff6e6" prot="public" static="no">
        <name>CHITEM_BOLD</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>display the item in bold </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2284" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_i_t_e_m___1ga441cecc28cd637e4a2bf2ba731a3fa37" prot="public" static="no">
        <name>CHITEM_ITALIC</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>display the item in italic </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2285" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_i_t_e_m___1gaaa85fef9517948003800f46bad5c7b3d" prot="public" static="no">
        <name>CHITEM_UNDER</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>underline the item </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2286" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_i_t_e_m___1ga493dc22a43c8442f4ca21643a5a07a28" prot="public" static="no">
        <name>CHITEM_STRIKE</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>strikeout the item </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2287" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_i_t_e_m___1gace35025346d1b912fac437855cb145f8" prot="public" static="no">
        <name>CHITEM_GRAY</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>gray out the item </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2288" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_x_t_f___1gab8a03b2c0265a8b1151c8a3a562a9662" prot="public" static="no">
        <name>TXTF_AUTOINDENT</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>auto-indent on new line </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2743" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_x_t_f___1ga1940140a2495e0487913c72c0add2776" prot="public" static="no">
        <name>TXTF_ACCEPTTABS</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>Tab key inserts &apos;tabsize&apos; spaces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2744" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2744" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_x_t_f___1ga5d068378f2f396210fec95958600fec8" prot="public" static="no">
        <name>TXTF_READONLY</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>text cannot be edited (but can be selected and copied) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2745" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2745" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_x_t_f___1ga1ea243302a00661ed2f412c2c3f2c3fa" prot="public" static="no">
        <name>TXTF_SELECTED</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>shows the field with its text selected </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2746" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_x_t_f___1ga210947a3c4276b68f9376c377b43b7b5" prot="public" static="no">
        <name>TXTF_MODIFIED</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>gets/sets the modified status </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2747" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2747" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_x_t_f___1gaa553e9265dfac781b2f6389d3261d1d8" prot="public" static="no">
        <name>TXTF_FIXEDFONT</name>
        <initializer>0x0020</initializer>
        <briefdescription>
<para>the control uses IDA&apos;s fixed font </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2748" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___t_x_t_f___1ga7cad8ecb7d7c371cac63dd82322ac750" prot="public" static="no">
        <name>TXTF_LINENUMBERS</name>
        <initializer>0x0040</initializer>
        <briefdescription>
<para>the text editor widget should display line numbers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2749" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__add__chooser__command_1gac513bb09268d5a16bea0f81bdba71a15" prot="public" static="no">
        <name>CHOOSER_NO_SELECTION</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>Flags. </para>        </briefdescription>
        <detaileddescription>
<para>enable even if there&apos;s no selected item. <computeroutput>n</computeroutput> will be NO_SELECTION for a callback. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2813" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__add__chooser__command_1ga90b5a1229c0c2de003e4958491c4b992" prot="public" static="no">
        <name>CHOOSER_MULTI_SELECTION</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>enable for multiple selections. A callback of type <computeroutput>chooser_multi_cb_t</computeroutput> will be called for all selected items. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2816" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2816" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__add__chooser__command_1ga279bb390c370299e10efd7df8f7e2675" prot="public" static="no">
        <name>CHOOSER_POPUP_MENU</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>Add command to the popup menu. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2820" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2820" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__add__chooser__command_1ga4c4495be1f66e4e0c60761dfa43f555f" prot="public" static="no">
        <name>CHOOSER_MENU_EDIT</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Values of the <computeroutput>menu_index</computeroutput> parameter. </para>        </briefdescription>
        <detaileddescription>
<para>Obsolete. Please don&apos;t use </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2825" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2825" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__add__chooser__command_1ga79cd090af6c8ef9f3a31df551d727cf4" prot="public" static="no">
        <name>CHOOSER_MENU_JUMP</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Obsolete. Please don&apos;t use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2826" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2826" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__add__chooser__command_1ga5e8891c5348f18d91757991128371df8" prot="public" static="no">
        <name>CHOOSER_MENU_SEARCH</name>
        <initializer>2</initializer>
        <briefdescription>
<para>Obsolete. Please don&apos;t use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2827" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1acb2dfe95e94c5be6dd4dc6b6aa054061" prot="public" static="no">
        <name>VES_SHIFT</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>state &amp; 1 =&gt; Shift is pressed <linebreak/>
state &amp; 2 =&gt; Alt is pressed <linebreak/>
state &amp; 4 =&gt; Ctrl is pressed <linebreak/>
state &amp; 8 =&gt; Mouse left button is pressed <linebreak/>
state &amp; 16 =&gt; Mouse right button is pressed <linebreak/>
state &amp; 32 =&gt; Mouse middle button is pressed <linebreak/>
state &amp; 128 =&gt; Meta is pressed (OSX only) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2903" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2903" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a5f5da035b4812557bce1c662a330e0dc" prot="public" static="no">
        <name>VES_ALT</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2904" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2904" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a043c6547c1fe122f5b7469c89e93a17c" prot="public" static="no">
        <name>VES_CTRL</name>
        <initializer>(1 &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2905" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a9b10ffb5a9fb451cfbe5870a7e5f5ad2" prot="public" static="no">
        <name>VES_MOUSE_LEFT</name>
        <initializer>(1 &lt;&lt; 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2906" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2906" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a24c1959247954d330a247b01b78defc0" prot="public" static="no">
        <name>VES_MOUSE_RIGHT</name>
        <initializer>(1 &lt;&lt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2907" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2907" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a332f40631a160981866bf2d615894cd3" prot="public" static="no">
        <name>VES_MOUSE_MIDDLE</name>
        <initializer>(1 &lt;&lt; 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2908" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2908" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1affba1b433a2340f963e20d126bd027e3" prot="public" static="no">
        <name>VES_META</name>
        <initializer>(1 &lt;&lt; 7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2909" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2909" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1aade68d641b743525bab60001cbc0ba4e" prot="public" static="no">
        <name>LCMD_SYNC</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3176" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_l_i_f___1gadcfa0b5639264b8ee21a6f32b3791743" prot="public" static="no">
        <name>CLIF_QT_AWARE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>keydown event will use Qt key codes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3261" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_f_f___1ga8818e0092b80177e4f30c36b5aea3941" prot="public" static="no">
        <name>MFF_FAST</name>
        <initializer>0x0000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute code as soon as possible. this mode is ok for calling ui related functions that do not query the database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3315" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_f_f___1ga68458cee7f12ec2dc838928e6152460b" prot="public" static="no">
        <name>MFF_READ</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute code only when ida is idle and it is safe to query the database. this mode is recommended only for code that does not modify the database. (nb: ida may be in the middle of executing another user request, for example it may be waiting for him to enter values into a modal dialog box) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3319" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_f_f___1ga9840753b8b1480ce26da1a4c50833782" prot="public" static="no">
        <name>MFF_WRITE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute code only when ida is idle and it is safe to modify the database. in particular, this flag will suspend execution if there is a modal dialog box on the screen this mode can be used to call any ida api function <ref refid="group___m_f_f___1ga9840753b8b1480ce26da1a4c50833782" kindref="member">MFF_WRITE</ref> implies <ref refid="group___m_f_f___1ga68458cee7f12ec2dc838928e6152460b" kindref="member">MFF_READ</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3327" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_f_f___1gac787e0027f186b8d5c754e161a54dfe8" prot="public" static="no">
        <name>MFF_NOWAIT</name>
        <initializer>0x0004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do not wait for the request to be executed. the caller should ensure that the request is not destroyed until the execution completes. if not, the request will be ignored. <ref refid="kernwin_8hpp_1a69761082f4ed4caa6fb527da4bf5268d" kindref="member">execute_sync()</ref> returns the request id in this case. it can be used in <ref refid="kernwin_8hpp_1a89770c465690472e4018421c773feb53" kindref="member">cancel_exec_request()</ref>. This flag can be used to delay the code execution until the next UI loop run even from the main thread. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3334" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_i_j_m_p___1ga79d889b01d7de7f06edc60fbddc11e89" prot="public" static="no">
        <name>UIJMP_ACTIVATE</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>activate the new window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3410" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_i_j_m_p___1ga4b3711ccbb1a14f303627903e0fc9b40" prot="public" static="no">
        <name>UIJMP_DONTPUSH</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>in the navigation history </para>        </briefdescription>
        <detaileddescription>
<para>do not remember the current address </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3411" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_i_j_m_p___1gac5cd3b35b66aaf39888af5b2e833d48d" prot="public" static="no">
        <name>UIJMP_IDAVIEW</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>jump in idaview (by default any eaview is good) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3413" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_c_f___1gafecab65cb98041be47151eb8a3f3232d" prot="public" static="no">
        <name>ACF_HAS_SELECTION</name>
        <initializer>1 &lt;&lt; 0</initializer>
        <briefdescription>
<para>there is currently a valid selection </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3466" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_c_f___1ga05c0a21746032fcf536bb9a8eeebd962" prot="public" static="no">
        <name>ACF_XTRN_EA</name>
        <initializer>1 &lt;&lt; 1</initializer>
        <briefdescription>
<para>cur_ea is in &apos;externs&apos; segment </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3467" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1aba91d222c2507814eefc4793cf2c644a" prot="public" static="no">
        <name>AHF_VERSION</name>
        <initializer>1</initializer>
        <briefdescription>
<para>action handler version (used by <ref refid="structaction__handler__t_1aa50f23a78efd5e14e522d1e94b5569bc" kindref="member">action_handler_t::flags</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3512" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a278d684de5f663bcfb9c904804df146c" prot="public" static="no">
        <name>AHF_VERSION_MASK</name>
        <initializer>0xFF</initializer>
        <briefdescription>
<para>mask for <ref refid="structaction__handler__t_1aa50f23a78efd5e14e522d1e94b5569bc" kindref="member">action_handler_t::flags</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3513" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_d_f___1gad78bf164589f8329a9be1000de7b3e3f" prot="public" static="no">
        <name>ADF_OWN_HANDLER</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>handler is owned by the action; it&apos;ll be destroyed when the action is unregistered. You shouldn&apos;t have to use this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3598" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a9533bce8d799a5eea06c6c772341f84e" prot="public" static="no">
        <name>ACTION_DESC_LITERAL</name>
        <param><defname>name</defname></param>
        <param><defname>label</defname></param>
        <param><defname>handler</defname></param>
        <param><defname>shortcut</defname></param>
        <param><defname>tooltip</defname></param>
        <param><defname>icon</defname></param>
        <initializer>{ sizeof(<ref refid="structaction__desc__t" kindref="compound">action_desc_t</ref>), name, label, handler, &amp;PLUGIN, shortcut, tooltip, icon, 0 }</initializer>
        <briefdescription>
<para>Get an <ref refid="structaction__desc__t" kindref="compound">action_desc_t</ref> instance with your plugin as the owner. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3606" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a2cf1535362257b17d2e235c98ef26699" prot="public" static="no">
        <name>ACTION_DESC_LITERAL_OWNER</name>
        <param><defname>name</defname></param>
        <param><defname>label</defname></param>
        <param><defname>handler</defname></param>
        <param><defname>owner</defname></param>
        <param><defname>shortcut</defname></param>
        <param><defname>tooltip</defname></param>
        <param><defname>icon</defname></param>
        <initializer>{ sizeof(<ref refid="structaction__desc__t" kindref="compound">action_desc_t</ref>), name, label, handler, owner, shortcut, tooltip, icon, 0 }</initializer>
        <briefdescription>
<para>Get an <ref refid="structaction__desc__t" kindref="compound">action_desc_t</ref> instance with a given owner. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3610" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1addaa2331de5afe8e5d826d974f0968d9" prot="public" static="no">
        <name>DYNACTION_DESC_LITERAL</name>
        <param><defname>label</defname></param>
        <param><defname>handler</defname></param>
        <param><defname>shortcut</defname></param>
        <param><defname>tooltip</defname></param>
        <param><defname>icon</defname></param>
        <initializer>{ sizeof(<ref refid="structaction__desc__t" kindref="compound">action_desc_t</ref>), NULL, label, handler, NULL, shortcut, tooltip, icon, <ref refid="group___a_d_f___1gad78bf164589f8329a9be1000de7b3e3f" kindref="member">ADF_OWN_HANDLER</ref> }</initializer>
        <briefdescription>
<para>For <ref refid="kernwin_8hpp_1a0f84b7875d17f46920c7f8aee0f35c16" kindref="member">attach_dynamic_action_to_popup()</ref> only. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3614" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a0e74b12033fd70dc390d10c902351c2e" prot="public" static="no">
        <name>CURPROC_ACTION_OWNER</name>
        <initializer>((const <ref refid="classplugin__t" kindref="compound">plugin_t</ref> *) 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specify that an action belongs to the current processor module. see <ref refid="structaction__desc__t_1a7d0d817d16d0a61a7a6232eeb93838fe" kindref="member">action_desc_t::owner</ref> and <ref refid="kernwin_8hpp_1a2cf1535362257b17d2e235c98ef26699" kindref="member">ACTION_DESC_LITERAL_OWNER</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3634" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a4ac59e0e89c25397e162f53a7df4f831" prot="public" static="no">
        <name>DEF_SET_METHOD</name>
        <param><defname>NAME</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer>inline bool idaapi set_ ## NAME ## _value(int field_id, const TYPE *val)  \
  {                                                                         \
    return _set_field_value(field_id, val);                                 \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper to define functions in <ref refid="structform__actions__t" kindref="compound">form_actions_t</ref> that get/set field values of different types. Please see this file&apos;s source code for specific uses. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6229" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1a2942573e3286d19133bbb75e0c3af335" prot="public" static="no">
        <name>DEF_FIELD_METHOD</name>
        <param><defname>NAME</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer>inline bool idaapi get_ ## NAME ## _value(int field_id, TYPE *val)        \
  {                                                                         \
    return _get_field_value(field_id, val);                                 \
  }                                                                         \
  <ref refid="kernwin_8hpp_1a4ac59e0e89c25397e162f53a7df4f831" kindref="member">DEF_SET_METHOD</ref>(NAME, TYPE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper to define functions in <ref refid="structform__actions__t" kindref="compound">form_actions_t</ref> that get/set field values of different types. Please see this file&apos;s source code for specific uses. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6235" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kernwin_8hpp_1aec69023207139437a06409a519b88817" prot="public" static="no">
        <name>DEF_STR_FIELD_METHOD</name>
        <param><defname>NAME</defname></param>
        <initializer>inline bool idaapi get_ ## NAME ## _value(int field_id, char *buf, const size_t bufsize) \
  {                                                                         \
    return _get_str_field_value(field_id, buf, bufsize);                    \
  }                                                                         \
  <ref refid="kernwin_8hpp_1a4ac59e0e89c25397e162f53a7df4f831" kindref="member">DEF_SET_METHOD</ref>(NAME, char)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper to define functions in <ref refid="structform__actions__t" kindref="compound">form_actions_t</ref> that get/set field values of different types. Please see this file&apos;s source code for specific uses. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6242" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s_k_b_t_n___1ga0b984bdb2f5445b0e399b6a6833c802d" prot="public" static="no">
        <name>ASKBTN_YES</name>
        <initializer>1</initializer>
        <briefdescription>
<para>Yes button. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6325" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s_k_b_t_n___1gaef4451a9f8112fd31f59e8a37d1f3c6e" prot="public" static="no">
        <name>ASKBTN_NO</name>
        <initializer>0</initializer>
        <briefdescription>
<para>No button. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6326" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s_k_b_t_n___1gafd0bbdf5eec4b1aaddb3a4ebbd5fd309" prot="public" static="no">
        <name>ASKBTN_CANCEL</name>
        <initializer>-1</initializer>
        <briefdescription>
<para>Cancel button. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6327" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s_k_b_t_n___1ga25e40a9a57775159dcf569a2e8faf38d" prot="public" static="no">
        <name>ASKBTN_BTN1</name>
        <initializer>1</initializer>
        <briefdescription>
<para>First (Yes) button. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6328" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s_k_b_t_n___1ga82f651b58f13c2fd7a28d3fcf022d0b4" prot="public" static="no">
        <name>ASKBTN_BTN2</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Second (No) button. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6329" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_s_k_b_t_n___1ga38a6340f1408618e3634f818915cde8e" prot="public" static="no">
        <name>ASKBTN_BTN3</name>
        <initializer>-1</initializer>
        <briefdescription>
<para>Third (Cancel) button. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6330" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_s_t___1ga3619a6759f19f19273af06c5f32546d9" prot="public" static="no">
        <name>HIST_SEG</name>
        <initializer>1</initializer>
        <briefdescription>
<para>segment names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6482" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_s_t___1ga586bd9d4b535ecb349d4c904ba703fd4" prot="public" static="no">
        <name>HIST_CMT</name>
        <initializer>2</initializer>
        <briefdescription>
<para>comments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6483" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_s_t___1ga8d9e3e3fbd5f5a3eba7758d9fe87c021" prot="public" static="no">
        <name>HIST_SRCH</name>
        <initializer>3</initializer>
        <briefdescription>
<para>search substrings </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6484" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_s_t___1ga62b790b8074fe5f14858b3853c97dbd3" prot="public" static="no">
        <name>HIST_IDENT</name>
        <initializer>4</initializer>
        <briefdescription>
<para>names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6485" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_s_t___1ga5db360b7dc71a7fb4411e61cdd448cba" prot="public" static="no">
        <name>HIST_FILE</name>
        <initializer>5</initializer>
        <briefdescription>
<para>file names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6486" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_s_t___1ga0eea710a92cc5190f93077acaaf4be34" prot="public" static="no">
        <name>HIST_TYPE</name>
        <initializer>6</initializer>
        <briefdescription>
<para>type declarations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6487" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_s_t___1gace7250711b03531fbe767ede1ebd4df4" prot="public" static="no">
        <name>HIST_CMD</name>
        <initializer>7</initializer>
        <briefdescription>
<para>commands </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6488" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___h_i_s_t___1ga5d862b831bfc52ed521d207b9584a022" prot="public" static="no">
        <name>HIST_DIR</name>
        <initializer>8</initializer>
        <briefdescription>
<para>directory names (text version only) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6489" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_l_n_l___1ga981407121457ab9ec47d4242796c363e" prot="public" static="no">
        <name>CLNL_RTRIM</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
<para>Remove trailing space characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6701" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_l_n_l___1gae7c537f6dc99aef79f813ebc2ae59748" prot="public" static="no">
        <name>CLNL_LTRIM</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
<para>Remove leading space characters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6702" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6702" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_l_n_l___1ga2cccd6016c01267deed6bf132a84cd84" prot="public" static="no">
        <name>CLNL_FINDCMT</name>
        <initializer>(1 &lt;&lt; 2)</initializer>
        <briefdescription>
<para>Search for the comment symbol everywhere in the line, not only at the beginning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6703" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_l_n_l___1ga61c280d09fd8f9e965ad7a70a8329267" prot="public" static="no">
        <name>CLNL_TRIM</name>
        <initializer>(<ref refid="group___c_l_n_l___1ga981407121457ab9ec47d4242796c363e" kindref="member">CLNL_RTRIM</ref>|<ref refid="group___c_l_n_l___1gae7c537f6dc99aef79f813ebc2ae59748" kindref="member">CLNL_LTRIM</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6705" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s2_e_a_o_p_t___1gad33c8ecff62ac3b8e2130b358bebd10c" prot="public" static="no">
        <name>S2EAOPT_NOCALC</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>don&apos;t try to interpret string as IDC (or current extlang) expression </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6775" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__conv_1ga2a279305305bab80e523786467b4b978" prot="public" static="no">
        <name>MAX_NUMBUF</name>
        <initializer>(128+8)</initializer>
        <briefdescription>
<para>16-byte value in binary base (0b00101010...) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6801" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6801" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__conv_1ga6b3db1c24e62b851151ad44961673fe2" prot="public" static="no">
        <name>b2a</name>
        <initializer><ref refid="group__conv_1gaf556e4db77caa513277469f486538021" kindref="member">b2a32</ref></initializer>
        <briefdescription>
<para>shortcut for number-&gt;string conversion, see <ref refid="group__conv_1gaf556e4db77caa513277469f486538021" kindref="member">b2a32()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6859" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__conv_1gaf60881ca3eb98d6591178afcfa89931d" prot="public" static="no">
        <name>btoa</name>
        <initializer><ref refid="group__conv_1ga5c891837ef475e76b295d9a392fee148" kindref="member">btoa32</ref></initializer>
        <briefdescription>
<para>shortcut for number-&gt;string conversion, see <ref refid="group__conv_1ga5c891837ef475e76b295d9a392fee148" kindref="member">btoa32()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6860" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__conv_1gaa9186123d2c0a94a99b6aedddc4d8d95" prot="public" static="no">
        <name>atob</name>
        <initializer><ref refid="group__conv_1gad1f23fd75bbb86f6c99cda4ee3f2901b" kindref="member">atob32</ref></initializer>
        <briefdescription>
<para>shortcut for string-&gt;number conversion, see <ref refid="group__conv_1gad1f23fd75bbb86f6c99cda4ee3f2901b" kindref="member">atob32()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6861" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaaa556c3d3733a425a557a5f457b6aaf9" prot="public" static="no">
        <name>IK_CANCEL</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7454" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gac60bbfe74670031ee26a933096de538c" prot="public" static="no">
        <name>IK_BACK</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7455" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga63394560b17ff9fd21801890fda80df7" prot="public" static="no">
        <name>IK_TAB</name>
        <initializer>0x09</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7456" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga6bfb8361ca1e3729b8113f758800c094" prot="public" static="no">
        <name>IK_CLEAR</name>
        <initializer>0x0C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7457" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaecc49fe83b07d4004d136016187458a4" prot="public" static="no">
        <name>IK_RETURN</name>
        <initializer>0x0D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7458" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gab16e289561ec9b6ed99f653c1e460758" prot="public" static="no">
        <name>IK_SHIFT</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7459" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa575a87974db70543b350a824025c685" prot="public" static="no">
        <name>IK_CONTROL</name>
        <initializer>0x11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7460" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa9c429966b4c32269359d180c54ff615" prot="public" static="no">
        <name>IK_MENU</name>
        <initializer>0x12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7461" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga6370f9fbe3e46a44ee9e1c83fb1d651a" prot="public" static="no">
        <name>IK_PAUSE</name>
        <initializer>0x13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7462" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga02ea13d78ed9adeedc0099f9e88f2884" prot="public" static="no">
        <name>IK_CAPITAL</name>
        <initializer>0x14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7463" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga550b9023ca9257b7bd14a70f79fd4ea4" prot="public" static="no">
        <name>IK_KANA</name>
        <initializer>0x15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7464" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga3d31e3a04d094ce0c25d15d853f437f0" prot="public" static="no">
        <name>IK_ESCAPE</name>
        <initializer>0x1B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7465" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaab37eb0c3b676242a0ccafea268ba2f5" prot="public" static="no">
        <name>IK_MODECHANGE</name>
        <initializer>0x1F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7466" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga67a97a8123e372cb959422d8fce209de" prot="public" static="no">
        <name>IK_SPACE</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7467" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga7f3e3344054e48e9e3cca061ba15c269" prot="public" static="no">
        <name>IK_PRIOR</name>
        <initializer>0x21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7468" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gacd846b166e257eb589d0c298d5868eed" prot="public" static="no">
        <name>IK_NEXT</name>
        <initializer>0x22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7469" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga93389cd11703583cfc60501215b72f8f" prot="public" static="no">
        <name>IK_END</name>
        <initializer>0x23</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7470" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga8376fd6d19b9339e82f7db789dc30d7b" prot="public" static="no">
        <name>IK_HOME</name>
        <initializer>0x24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7471" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa03408032cbfb9ff336948cbd842dcb4" prot="public" static="no">
        <name>IK_LEFT</name>
        <initializer>0x25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7472" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaba4887e685461f83caca1299627602e3" prot="public" static="no">
        <name>IK_UP</name>
        <initializer>0x26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7473" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga4b5b73573a9b6777d3d4a8543366c408" prot="public" static="no">
        <name>IK_RIGHT</name>
        <initializer>0x27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7474" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa6d239f38265227ed0ded61b623f3623" prot="public" static="no">
        <name>IK_DOWN</name>
        <initializer>0x28</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7475" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaab8011d425feac4b33e7b81b4e435bb9" prot="public" static="no">
        <name>IK_SELECT</name>
        <initializer>0x29</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7476" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaeaf74f20205e64eb05d1f88a929b44e1" prot="public" static="no">
        <name>IK_PRINT</name>
        <initializer>0x2A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7477" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa5713549d119de93ded873050d8f75ec" prot="public" static="no">
        <name>IK_EXECUTE</name>
        <initializer>0x2B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7478" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga0cdbbd46dc63dbdd37e7254c5768ac07" prot="public" static="no">
        <name>IK_SNAPSHOT</name>
        <initializer>0x2C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7479" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gafee8d47ab6c7d55f93b59df5c6e7d1e7" prot="public" static="no">
        <name>IK_INSERT</name>
        <initializer>0x2D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7480" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaf012e126e1562305d4d09b1bd74ab0f7" prot="public" static="no">
        <name>IK_DELETE</name>
        <initializer>0x2E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7481" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga085f58e775bd788c3805d5d7840e3e81" prot="public" static="no">
        <name>IK_HELP</name>
        <initializer>0x2F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7482" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga52acf12e43e9495ed8cb8961c8f44e78" prot="public" static="no">
        <name>IK_LWIN</name>
        <initializer>0x5B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7483" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga8401c7aa79d11efc7e0921e65e42c9ee" prot="public" static="no">
        <name>IK_RWIN</name>
        <initializer>0x5C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7484" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gab7effb171c4c57cf7ca1d0e1095917e3" prot="public" static="no">
        <name>IK_APPS</name>
        <initializer>0x5D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7485" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gad809d03410b2a966189cd4934567b62e" prot="public" static="no">
        <name>IK_SLEEP</name>
        <initializer>0x5F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7486" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gac774b55aad8fc548c404a4f21de78b11" prot="public" static="no">
        <name>IK_NUMPAD0</name>
        <initializer>0x60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7487" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga88535db9a842c43457b9c735c5a64a08" prot="public" static="no">
        <name>IK_NUMPAD1</name>
        <initializer>0x61</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7488" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaad4298ecf9c3f3f9bf5958f79646ff09" prot="public" static="no">
        <name>IK_NUMPAD2</name>
        <initializer>0x62</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7489" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga95494a32e08de6d28e0b83f4e2880821" prot="public" static="no">
        <name>IK_NUMPAD3</name>
        <initializer>0x63</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7490" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga3211a663f082a738a8d2ca6df7eac27c" prot="public" static="no">
        <name>IK_NUMPAD4</name>
        <initializer>0x64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7491" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga4b61028a83e7e4d9f7481d9b2d26ecc3" prot="public" static="no">
        <name>IK_NUMPAD5</name>
        <initializer>0x65</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7492" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga6fe9839a20ce734470efa3a7ab919650" prot="public" static="no">
        <name>IK_NUMPAD6</name>
        <initializer>0x66</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7493" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa11f3bc8b82f12c8f7113c6de528cacf" prot="public" static="no">
        <name>IK_NUMPAD7</name>
        <initializer>0x67</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7494" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaf0d7d804f46474641b92fa50b493e891" prot="public" static="no">
        <name>IK_NUMPAD8</name>
        <initializer>0x68</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7495" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga2a97d1dfb230c64c4cd9eda5c1eb62f4" prot="public" static="no">
        <name>IK_NUMPAD9</name>
        <initializer>0x69</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7496" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga7c07d739a6efeb2c21f3ba12773ed6dd" prot="public" static="no">
        <name>IK_MULTIPLY</name>
        <initializer>0x6A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7497" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga409508218c71b288df6a29726b3b7cf0" prot="public" static="no">
        <name>IK_ADD</name>
        <initializer>0x6B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7498" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga45fc8d06a0d7f1ff4e11ec1308b730ca" prot="public" static="no">
        <name>IK_SEPARATOR</name>
        <initializer>0x6C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7499" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga5d7ef54813ce9165b96921afb4d04ffb" prot="public" static="no">
        <name>IK_SUBTRACT</name>
        <initializer>0x6D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7500" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gac90d8979b07948d90adbe787c2f0827b" prot="public" static="no">
        <name>IK_DECIMAL</name>
        <initializer>0x6E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7501" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga88f8d451df7724f2d5ee80f6a195fc3a" prot="public" static="no">
        <name>IK_DIVIDE</name>
        <initializer>0x6F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7502" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaca1f1f06c0b942c669fc6341aebb3770" prot="public" static="no">
        <name>IK_F1</name>
        <initializer>0x70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7503" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gad6e978ff12c165698a52d2bc2f1c5dc1" prot="public" static="no">
        <name>IK_F2</name>
        <initializer>0x71</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7504" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga5ab57d16a806b46dbcc8d57fd4fe1bc4" prot="public" static="no">
        <name>IK_F3</name>
        <initializer>0x72</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7505" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga8975eeb7b5c0a92ca22c341a497c4278" prot="public" static="no">
        <name>IK_F4</name>
        <initializer>0x73</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7506" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa7c7354327d28f625442f9016d5807c4" prot="public" static="no">
        <name>IK_F5</name>
        <initializer>0x74</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7507" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gadfbd114cf32ecfce8c00cf2fe5fc98bc" prot="public" static="no">
        <name>IK_F6</name>
        <initializer>0x75</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7508" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga959338c2ce584ecbc7de2e0dd7a74372" prot="public" static="no">
        <name>IK_F7</name>
        <initializer>0x76</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7509" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gad688d486194f14ba6e509f454bb5db2e" prot="public" static="no">
        <name>IK_F8</name>
        <initializer>0x77</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7510" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga8cbbedff7fb29aa7a2dd5f1a1180bf80" prot="public" static="no">
        <name>IK_F9</name>
        <initializer>0x78</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7511" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga739839c17b60d873f3c7b134ef7ae9dc" prot="public" static="no">
        <name>IK_F10</name>
        <initializer>0x79</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7512" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaf0f83de3c101ed72adff8faa7fcf94dc" prot="public" static="no">
        <name>IK_F11</name>
        <initializer>0x7A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7513" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga2eed13bf0489af4768728b806b08a801" prot="public" static="no">
        <name>IK_F12</name>
        <initializer>0x7B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7514" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga07980cd79cdd6e32d9a04da19326f400" prot="public" static="no">
        <name>IK_F13</name>
        <initializer>0x7C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7515" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7515" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gab1557cd74e55d129095bc098a6ec7e56" prot="public" static="no">
        <name>IK_F14</name>
        <initializer>0x7D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7516" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga9e73cf3bf768367a3c6499d44e097af2" prot="public" static="no">
        <name>IK_F15</name>
        <initializer>0x7E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7517" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7517" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gace784298473c63ff86bba10659f1d71d" prot="public" static="no">
        <name>IK_F16</name>
        <initializer>0x7F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7518" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga3f5b31b6293ea902c973f59bb038fa44" prot="public" static="no">
        <name>IK_F17</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7519" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7519" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga94fe46310ed2f7f1eda4154db537eeb8" prot="public" static="no">
        <name>IK_F18</name>
        <initializer>0x81</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7520" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gad950392b63a90a1a4e7638df69fc7089" prot="public" static="no">
        <name>IK_F19</name>
        <initializer>0x82</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7521" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gabd377b8681636fad20a248a981d62b06" prot="public" static="no">
        <name>IK_F20</name>
        <initializer>0x83</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7522" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga26cae0ac4068e417973f5f42b038191d" prot="public" static="no">
        <name>IK_F21</name>
        <initializer>0x84</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7523" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga58cfba9921f2c779c97f6ea3b5845770" prot="public" static="no">
        <name>IK_F22</name>
        <initializer>0x85</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7524" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga9ca7006fbf13483320fe112b490c1c90" prot="public" static="no">
        <name>IK_F23</name>
        <initializer>0x86</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7525" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga058a57c65beae07380e28ceaf4cafaf0" prot="public" static="no">
        <name>IK_F24</name>
        <initializer>0x87</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7526" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7526" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga1e331d1eb6bfdefc16baae87dcdfb73e" prot="public" static="no">
        <name>IK_NUMLOCK</name>
        <initializer>0x90</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7527" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga643cc1f97f05f6a9740aff6b3b3e6a60" prot="public" static="no">
        <name>IK_SCROLL</name>
        <initializer>0x91</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7528" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaebdf0037958ba9cc8e1f4550c82c61cb" prot="public" static="no">
        <name>IK_OEM_FJ_MASSHOU</name>
        <initializer>0x93</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7529" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga241d3e23b62c3f9f10b0720ec16c89b3" prot="public" static="no">
        <name>IK_OEM_FJ_TOUROKU</name>
        <initializer>0x94</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7530" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa2e056521e500b8a531604e7838316fe" prot="public" static="no">
        <name>IK_LSHIFT</name>
        <initializer>0xA0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7531" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa50334fa0c3366ed2ba3be9ea5faaae1" prot="public" static="no">
        <name>IK_RSHIFT</name>
        <initializer>0xA1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7532" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gabc069f26a959d932ace42e5796008eb0" prot="public" static="no">
        <name>IK_LCONTROL</name>
        <initializer>0xA2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7533" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaf339315ac51f68895762030a50865e60" prot="public" static="no">
        <name>IK_RCONTROL</name>
        <initializer>0xA3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7534" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga466237e53a877b53223295b8cde9cad8" prot="public" static="no">
        <name>IK_LMENU</name>
        <initializer>0xA4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7535" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gacb7feee16f93780cf8343e1d232c36ae" prot="public" static="no">
        <name>IK_RMENU</name>
        <initializer>0xA5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7536" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga625364d0dceac90a024089b5345d32f8" prot="public" static="no">
        <name>IK_BROWSER_BACK</name>
        <initializer>0xA6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7537" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa290b5755b21a82c2a18587f0a22d628" prot="public" static="no">
        <name>IK_BROWSER_FORWARD</name>
        <initializer>0xA7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7538" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7538" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga890de4d85be91b6afac11ea48bbb5f5e" prot="public" static="no">
        <name>IK_BROWSER_REFRESH</name>
        <initializer>0xA8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7539" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga7e8ca096c0e660dcf0b992a2a4e2b1b5" prot="public" static="no">
        <name>IK_BROWSER_STOP</name>
        <initializer>0xA9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7540" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga727265b46dcaee14945bbd981206f9d1" prot="public" static="no">
        <name>IK_BROWSER_SEARCH</name>
        <initializer>0xAA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7541" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga449eb283ebe4a275862b31c3bd89e861" prot="public" static="no">
        <name>IK_BROWSER_FAVORITES</name>
        <initializer>0xAB</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7542" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaf44d20481f88b239c6a6fe5873f8f84e" prot="public" static="no">
        <name>IK_BROWSER_HOME</name>
        <initializer>0xAC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7543" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga28cdc19780b3f90268e18b9a75833014" prot="public" static="no">
        <name>IK_VOLUME_MUTE</name>
        <initializer>0xAD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7544" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaf5eced85b13123b25286ba31db055034" prot="public" static="no">
        <name>IK_VOLUME_DOWN</name>
        <initializer>0xAE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7545" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga16fcaf0b336dba17f7d54ebc506d0d3a" prot="public" static="no">
        <name>IK_VOLUME_UP</name>
        <initializer>0xAF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7546" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gacfcc5bc0570a97f9acaec9dd745e690e" prot="public" static="no">
        <name>IK_MEDIA_NEXT_TRACK</name>
        <initializer>0xB0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7547" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gac6c3367ffa00212293e659983e75f6f0" prot="public" static="no">
        <name>IK_MEDIA_PREV_TRACK</name>
        <initializer>0xB1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7548" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaf65d1cc85398ba76dc515fa35fbaee6f" prot="public" static="no">
        <name>IK_MEDIA_STOP</name>
        <initializer>0xB2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7549" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga2f2ef6da27efed03a775c9e23562745b" prot="public" static="no">
        <name>IK_MEDIA_PLAY_PAUSE</name>
        <initializer>0xB3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7550" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gad2a69dc99afb9d361b30776488ebae1f" prot="public" static="no">
        <name>IK_LAUNCH_MAIL</name>
        <initializer>0xB4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7551" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga665a0d9e9daa002c05a1f3874ca99ce9" prot="public" static="no">
        <name>IK_LAUNCH_MEDIA_SELECT</name>
        <initializer>0xB5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7552" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga2a353252369d79b0953c9b89e109d6ce" prot="public" static="no">
        <name>IK_LAUNCH_APP1</name>
        <initializer>0xB6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7553" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gada54055e26985334633445a775eb10f7" prot="public" static="no">
        <name>IK_LAUNCH_APP2</name>
        <initializer>0xB7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7554" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga4bae053894bc52bbe7c74bb175ccad25" prot="public" static="no">
        <name>IK_OEM_1</name>
        <initializer>0xBA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7555" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaf12bb79c23a5ab1558612e53215ebe1c" prot="public" static="no">
        <name>IK_OEM_PLUS</name>
        <initializer>0xBB</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7556" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gae05e6f8a16b4260c02abd9d6227837ed" prot="public" static="no">
        <name>IK_OEM_COMMA</name>
        <initializer>0xBC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7557" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gacca38c47437de5776ca4746e76a062ca" prot="public" static="no">
        <name>IK_OEM_MINUS</name>
        <initializer>0xBD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7558" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gab2f13fe2b7a2a64375bf629655b829ba" prot="public" static="no">
        <name>IK_OEM_PERIOD</name>
        <initializer>0xBE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7559" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga399afe81740ab18578c9469230837821" prot="public" static="no">
        <name>IK_OEM_2</name>
        <initializer>0xBF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7560" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gac4834a0dbb6723a1440891f17f9700c6" prot="public" static="no">
        <name>IK_OEM_3</name>
        <initializer>0xC0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7561" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga42b2dbc39bbc71d2dc72218b668b3046" prot="public" static="no">
        <name>IK_OEM_4</name>
        <initializer>0xDB</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7562" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga73be2cf623f8dab0c23f93346a904d74" prot="public" static="no">
        <name>IK_OEM_5</name>
        <initializer>0xDC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7563" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaa802617c2ea2aecaa0ce15197b5c72d3" prot="public" static="no">
        <name>IK_OEM_6</name>
        <initializer>0xDD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7564" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga62175646ff14d5e68a6dba729d1287d7" prot="public" static="no">
        <name>IK_OEM_7</name>
        <initializer>0xDE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7565" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaffa7f9162a9e098e26a5182221786376" prot="public" static="no">
        <name>IK_OEM_102</name>
        <initializer>0xE2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7566" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gaf13c02b419f74c2c1f1e898fa35b0326" prot="public" static="no">
        <name>IK_PLAY</name>
        <initializer>0xFA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7567" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1ga31536edbc5770c041be7dce94c8a83f2" prot="public" static="no">
        <name>IK_ZOOM</name>
        <initializer>0xFB</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7568" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__winkeys_1gab6b24345899c887250b21d774409744d" prot="public" static="no">
        <name>IK_OEM_CLEAR</name>
        <initializer>0xFE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7569" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7569" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54c" prot="public" static="no">
        <name>mbox_kind_t</name>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54ca6ca1afbfc4a5c151945c5562688283ed" prot="public">
          <name>mbox_internal</name>
          <briefdescription>
<para>internal error </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54ca4df3375f5e1b0411e0a70c9423f21aee" prot="public">
          <name>mbox_info</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54ca238985bda025c864658889ff3a7d3a48" prot="public">
          <name>mbox_warning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54ca79bc0eb6eb4ec6d74200f4fd2f8734fe" prot="public">
          <name>mbox_error</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54cad5b92ad02f59d79abbdf105a0a7b18c8" prot="public">
          <name>mbox_nomem</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54cad2a62b5c6ba1bc48cf0b6d8b854884a6" prot="public">
          <name>mbox_feedback</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54ca7bc1c93797b16318ec6b358ba423949c" prot="public">
          <name>mbox_readerror</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54caa250453c5a8a31da1383245f040de348" prot="public">
          <name>mbox_writeerror</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54ca7cc8f952a00799c84b3af1321e154246" prot="public">
          <name>mbox_filestruct</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54ca40642a424d703e00b1780b14e496492b" prot="public">
          <name>mbox_wait</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54ca84770992cfa95a3bdd30fc375f2b6d52" prot="public">
          <name>mbox_hide</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54caad9f2c0a4a4f8f3778a962bd5c2cd844" prot="public">
          <name>mbox_replace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>see &lt;<ref refid="loader_8hpp" kindref="compound">loader.hpp</ref>&gt; </para>        </briefdescription>
        <detaileddescription>
<para>Message box kinds </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="48" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="47" bodyend="61"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ad" prot="public" static="no">
        <name>choose_type_t</name>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada01484e487b4793359f749d2bf6e1b301" prot="public">
          <name>chtype_generic</name>
          <briefdescription>
<para>the generic <ref refid="group__choosers_1gadefb0a59b077bb1872b25741366ca715" kindref="member">choose()</ref> function </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23adaec22fcd09ea0329f48766a5c1cef9d3d" prot="public">
          <name>chtype_idasgn</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1ga54ea38ee386b1cc6108076b7c6c9b159" kindref="member">choose_idasgn()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada8b44ef7373acb1f34a9afa48ffb17bf3" prot="public">
          <name>chtype_entry</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1gad7d12dbf0e1e564e8efc2fad92aa1fff" kindref="member">choose_entry()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada386cbd8c05abbe88bc7303d197a64e24" prot="public">
          <name>chtype_name</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1ga76970553444762309ae13b289f7d6c38" kindref="member">choose_name()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada6c50c0712e4957df549c6f93177540fa" prot="public">
          <name>chtype_stkvar_xref</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1gab32f6f610ab57f223e4d273944e10f90" kindref="member">choose_stkvar_xref()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada84413d31c27330eecdf2d116e27150bd" prot="public">
          <name>chtype_xref</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1gad5ef0ae154c7869a4c43282550ca3a4b" kindref="member">choose_xref()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada1c8bfa77f3ac9c19870663f0b6cb59cf" prot="public">
          <name>chtype_enum</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1gabb280da099a543192ba6cb140886b1c4" kindref="member">choose_enum()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23adaf179d2ffaaaa841b8a81ae39ef7f6f79" prot="public">
          <name>chtype_enum_by_value</name>
          <briefdescription>
<para>Deprecated. See <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada62cc53dbffcab3c4277cfdb9a5651e04" kindref="member">chtype_enum_by_value_and_size</ref>. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada0b699b6610e236fc595ee5368a1abb6c" prot="public">
          <name>chtype_func</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1gaa646e7f1986c51968fe3baaf6145600a" kindref="member">choose_func()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada94b449f2efb1183ad281068b2e6ea611" prot="public">
          <name>chtype_segm</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1ga64dfdf9b4ea22f20b0e8d9c0bf15c9d4" kindref="member">choose_segm()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23adab50bc23b599212f6b88732ff254995a0" prot="public">
          <name>chtype_struc</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1gaed3341085e6f6ca84f2f787ac2eab73f" kindref="member">choose_struc()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23adabbf346741d97c82ab79289a868c0d444" prot="public">
          <name>chtype_strpath</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a98daa1119c638c2628336f4aab2d784c" kindref="member">choose_struc_path()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada1cce761fcb06d1384129db7403d777a5" prot="public">
          <name>chtype_idatil</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1gaa1f1ef4a32b87cd8246b538a1c9f3d13" kindref="member">choose_til()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada62cc53dbffcab3c4277cfdb9a5651e04" prot="public">
          <name>chtype_enum_by_value_and_size</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1ga4b8559bdf7ef2c781c9e46527867ee8d" kindref="member">choose_enum_by_value()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada35f2742832c1ae3fe40b353e72be563b" prot="public">
          <name>chtype_srcp</name>
          <briefdescription>
<para>see <ref refid="group__ui__choose__funcs_1gac4223f5feb9c41b74166370029bcf67e" kindref="member">choose_srcp()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>List chooser types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="66" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="65" bodyend="82"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1a3b5f407682a1f277fbed22f88493cdf9" prot="public" static="no">
        <name>beep_t</name>
        <enumvalue id="kernwin_8hpp_1a3b5f407682a1f277fbed22f88493cdf9aaab0c2d73cf730092f1fff3699a77e78" prot="public">
          <name>beep_default</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>&lt; Beep types </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="86" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1a35329d63b9cd10f0e8064ab3e39c3232" prot="public" static="no">
        <name>tcc_renderer_type_t</name>
        <enumvalue id="kernwin_8hpp_1a35329d63b9cd10f0e8064ab3e39c3232ab47b2763afc4a1ead500dfc3fae177b2" prot="public">
          <name>TCCRT_INVALID</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>invalid </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a35329d63b9cd10f0e8064ab3e39c3232ad23ca1328ba2ec561416f1a93dba26fe" prot="public">
          <name>TCCRT_FLAT</name>
          <briefdescription>
<para>flat view </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a35329d63b9cd10f0e8064ab3e39c3232a4be45346d84d69ca00d84082cde20d27" prot="public">
          <name>TCCRT_GRAPH</name>
          <briefdescription>
<para>graph view </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a35329d63b9cd10f0e8064ab3e39c3232af2d1454a989a8e2626ce37cb2d718bf4" prot="public">
          <name>TCCRT_PROXIMITY</name>
          <briefdescription>
<para>proximity view </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWidget renderer type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="108" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1aa16e69443c4d7f6099efc5536f02353e" prot="public" static="no">
        <name>tcc_place_type_t</name>
        <enumvalue id="kernwin_8hpp_1aa16e69443c4d7f6099efc5536f02353ea52690fcc60e95e69f67863de64588394" prot="public">
          <name>TCCPT_INVALID</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>invalid </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa16e69443c4d7f6099efc5536f02353ea06d3d77c6fc2a46a7354f68f842f1b46" prot="public">
          <name>TCCPT_PLACE</name>
          <briefdescription>
<para><ref refid="classplace__t" kindref="compound">place_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa16e69443c4d7f6099efc5536f02353ea7d3fa05ffa0fb5944e48c7f4af0351e2" prot="public">
          <name>TCCPT_SIMPLELINE_PLACE</name>
          <briefdescription>
<para><ref refid="classsimpleline__place__t" kindref="compound">simpleline_place_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa16e69443c4d7f6099efc5536f02353eaf1d7999a882554c7c9ccaf5bfdecd101" prot="public">
          <name>TCCPT_IDAPLACE</name>
          <briefdescription>
<para><ref refid="classidaplace__t" kindref="compound">idaplace_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa16e69443c4d7f6099efc5536f02353ea587bf2e7f5c753c5873f26ef65dc9f5b" prot="public">
          <name>TCCPT_ENUMPLACE</name>
          <briefdescription>
<para><ref refid="classenumplace__t" kindref="compound">enumplace_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa16e69443c4d7f6099efc5536f02353eaa81941602b52e8083804b82a6148edc3" prot="public">
          <name>TCCPT_STRUCTPLACE</name>
          <briefdescription>
<para><ref refid="classstructplace__t" kindref="compound">structplace_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TWidget <ref refid="classplace__t" kindref="compound">place_t</ref> type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="117" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1a5a89e9b3519915d64f1752d146c76ac4" prot="public" static="no">
        <name>vme_button_t</name>
        <enumvalue id="kernwin_8hpp_1a5a89e9b3519915d64f1752d146c76ac4a3da93f40d41bafdb73d3d421601e7ab3" prot="public">
          <name>VME_UNKNOWN</name>
          <briefdescription>
<para>unknown mouse button </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a5a89e9b3519915d64f1752d146c76ac4a2b3ebf0e8b03736ca466e540e8e709b4" prot="public">
          <name>VME_LEFT_BUTTON</name>
          <briefdescription>
<para>left mouse button </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a5a89e9b3519915d64f1752d146c76ac4ad774c729eb29b37a11466da2cfaeb536" prot="public">
          <name>VME_RIGHT_BUTTON</name>
          <briefdescription>
<para>right mouse button </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a5a89e9b3519915d64f1752d146c76ac4ada6661b4ff60affd282de08aff436284" prot="public">
          <name>VME_MID_BUTTON</name>
          <briefdescription>
<para>middle mouse button </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Represents mouse button for <ref refid="structview__mouse__event__t" kindref="compound">view_mouse_event_t</ref> objects. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="128" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="127" bodyend="133"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334" prot="public" static="no">
        <name>ui_notification_t</name>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8378cf1f6b3ced0fa4a70eea396c17c6" prot="public">
          <name>ui_null</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab73b2b3bce2c15fecb4b218f6566a525" prot="public">
          <name>ui_range</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: The disassembly range has been changed ({min_ea} ... {max_ea}). UI should redraw the scrollbars. See also: <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1490011234e07658052a2072755a4add" kindref="member">ui_lock_range_refresh</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a43e82d88c322b55706889ec565b4ea9e" prot="public">
          <name>ui_refresh_choosers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: The list (chooser) window contents have been changed (names, signatures, etc). UI should redraw them. Please consider <ref refid="kernwin_8hpp_1a50018b271f5c63814508d223909d1050" kindref="member">request_refresh()</ref> instead <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a69e51fc198e7e0daaf5fa762314167cd" prot="public">
          <name>ui_idcstart</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: Start of IDC engine work. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a666bf49dcd2f6b847bc02306191fde15" prot="public">
          <name>ui_idcstop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: Stop of IDC engine work. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a35f9c41ed1b8552a55aef8626674ef32" prot="public">
          <name>ui_suspend</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: Suspend graphical interface. Only the text version. Interface should respond to it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a56ee3e52bd15d73f9185eda7b0ecbb29" prot="public">
          <name>ui_resume</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: Resume the suspended graphical interface. Only the text version. Interface should respond to it <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a74249ebfb93fefdc2cace1553a407d88" prot="public">
          <name>ui_broadcast</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>broadcast call <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>magic</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref>) a magic number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>other parameters depend on the given magic modules may hook to this event and reply to the caller. for example, the decompiler uses it to communicate its entry point to other plugins </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6da36070c851bc856e1f775916ba1bbd" prot="public">
          <name>ui_read_selection</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a420cbbef85f557b2659ebfe265e8fd9b" kindref="member">read_selection()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a427f7da20260ea170c919473d1fe030c" prot="public">
          <name>ui_read_range_selection</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a18b6718d7654d096c6f06c8d973e4dcf" kindref="member">read_range_selection()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af2ebc4f088f5b9552f42b562706ef7eb" prot="public">
          <name>ui_unmarksel</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a345b6243752fb32516e8084e5afa04e4" kindref="member">unmark_selection()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aed4d7ba7f674cfc772ba36d26061e61b" prot="public">
          <name>ui_screenea</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a5e9939e292fb3197effdb86cb52d55d9" kindref="member">get_screen_ea()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a13f75074f4ab58fa4cffb4319b41cf94" prot="public">
          <name>ui_saving</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: The kernel is flushing its buffers to the disk. The user interface should save its state. Parameters: none Returns: none </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a84769613a7902c8acf92d8b926441225" prot="public">
          <name>ui_saved</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: The kernel has saved the database. This callback just informs the interface. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac0298c3b9488dd9f4fff3c516de6d9bb" prot="public">
          <name>ui_refreshmarked</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a74317d9fbad3524391b250ecb0a2feda" kindref="member">refresh_idaview()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abf2b9233219e8a214979e03115d7ca53" prot="public">
          <name>ui_refresh</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a325854efebf01eab393c293a128f46b5" kindref="member">refresh_idaview_anyway()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" prot="public">
          <name>ui_choose</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Allow the user to choose an object. Always use the helper inline functions for this code. See <ref refid="group__ui__choose__funcs" kindref="compound">Functions: built-in choosers</ref> for a list of such functions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ad" kindref="member">choose_type_t</ref>) type of chooser to display </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>other parameters depend on the given type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>depends on the given type </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a01abdc74f0e9de18eb32b434f51ca949" prot="public">
          <name>ui_close_chooser</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ae6683ffdc5bacc0943a014dc64667ff5" kindref="member">close_chooser()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a11fb7fba468bfd936065359be59c3902" prot="public">
          <name>ui_banner</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aa2b3c3a1b2643f31f6ffbf6a0135828c" kindref="member">banner()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a532ac136e0b7855740efc794822a62a9" prot="public">
          <name>ui_setidle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Set a function to call at idle times. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>(int (*)(void)) pointer to function that will be called </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a51125dd8dba5fbeacba14d53853a9969" prot="public">
          <name>ui_term</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: IDA is terminated (the database is already closed). The UI may close its windows in this callback. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a224e2f7359506e8afa2e26408a00029c" prot="public">
          <name>ui_beep</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aecc00a4dfe680216ce2599b0897268f9" kindref="member">beep()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af78150dc44161f8692492c33fb9bb0e5" prot="public">
          <name>ui_is_msg_inited</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a677a71c0b362a093ddd03a850bd436a0" kindref="member">is_msg_inited()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae1ac0d291f2b8f19e87fdfe629a18261" prot="public">
          <name>ui_msg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Show a message in the message window. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) format of message body </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>(va_list) format args </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes output </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6d4fa31a738d4de367850e4f0addbc5b" prot="public">
          <name>ui_mbox</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Show a message box. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="kernwin_8hpp_1ab42a02ec6b2a64318cc110523050d54c" kindref="member">mbox_kind_t</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) format of message body </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>(va_list]) format args </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334accb2dc151791dcc6bdbc7af16dc85c4d" prot="public">
          <name>ui_clr_cancelled</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a4599ed85502fdb7cab6868059d95a918" kindref="member">clr_cancelled()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab8a3ae19f72062ce0c735087c1ecc8b0" prot="public">
          <name>ui_set_cancelled</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a3d1e56eafc1663b6d9f5f680f96f2982" kindref="member">set_cancelled()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aaf54bc73927860a162bb25d5cc4e4127" prot="public">
          <name>ui_test_cancelled</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ab47f95af74d213c4e0cb445eba8c4298" kindref="member">user_cancelled()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae6e29709faf8fafc70e2e99dea766b60" prot="public">
          <name>ui_ask_buttons</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a29d876e50747b86d842c0abaf6d0d7d8" kindref="member">ask_yn()</ref> and <ref refid="kernwin_8hpp_1a01a20c3250f326400f7b4becd279d81b" kindref="member">ask_buttons()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab325695445d22e46185084c71e138b55" prot="public">
          <name>ui_ask_file</name>
          <briefdescription>
<para>ui: see ask_file() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9320580856d263cd80cfd0ed7eed5312" prot="public">
          <name>ui_ask_form</name>
          <briefdescription>
<para>ui: see <ref refid="group___f_o_r_m___c" kindref="compound">ask_form()/open_form()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abef32a7500f0c1dbd082df42696aecbb" prot="public">
          <name>ui_ask_text</name>
          <briefdescription>
<para>ui: see ask_text() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad67c50927068ef1677f8d7ac3ea60d78" prot="public">
          <name>ui_ask_str</name>
          <briefdescription>
<para>ui: see ask_str() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a3c31a8952d83d93d0940c73fa7907bde" prot="public">
          <name>ui_ask_addr</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a17b49ccfe0e90df44989402269aee34d" kindref="member">ask_addr()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aeea3217ea718636fb28935558e2628fa" prot="public">
          <name>ui_ask_seg</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ac70e33ed6d6d79d08a8f925a182a02e8" kindref="member">ask_seg()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae51844e9947765304a19cdcdb0db4b50" prot="public">
          <name>ui_ask_long</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a7bfd0d6d3ae2ce4d845ed2108078f3ec" kindref="member">ask_long()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab15458c958aa060b8cd7220a5d4b4bd7" prot="public">
          <name>ui_add_idckey</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a47a6d4c81363b9a9a887f3974241da9f" kindref="member">add_idc_hotkey()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___i_d_c_h_k___1ga4a23e389ff9cbf1cd31179ca2f393334a0fa8119323f2205dfae2da85d5c88ce3" prot="public">
          <name>ui_del_idckey</name>
          <briefdescription>
<para>ui: see <ref refid="group___i_d_c_h_k___1ga4a23e389ff9cbf1cd31179ca2f393334a0fa8119323f2205dfae2da85d5c88ce3" kindref="member">ui_del_idckey()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a862eb3980fd41e47f463be9f73544172" prot="public">
          <name>ui_analyzer_options</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1af9a9c4f1e1a4cbdb1dd513582419c7c1" kindref="member">analyzer_options()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8758c7a9017b17795a972a0180e20803" prot="public">
          <name>ui_load_file</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a688c8a7aa65565ccb9ae9776bd18dccb" kindref="member">ui_load_new_file()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6a62c5d3c6dcb66d062d8d0cec3a116e" prot="public">
          <name>ui_run_dbg</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a46d17faaa1a8365f0013e1a9658d5539" kindref="member">ui_run_debugger()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2a2ab6c72d666f85f64573eaf52cc004" prot="public">
          <name>ui_get_cursor</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a6790b930c3984518ecfbddfdd5a2ff95" kindref="member">get_cursor()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a69be29f7643494eee4bdf5fbbea65638" prot="public">
          <name>ui_get_curline</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ad7b9ffd81d3ea01405738611c8c5d639" kindref="member">get_curline()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7ff665bc9bbab23959a3575bcf6efcf2" prot="public">
          <name>ui_copywarn</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a7e6c2ffa3b0bf9167ac330da72707d6c" kindref="member">display_copyright_warning()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334acd4011b556afc8572318862b0e22ec66" prot="public">
          <name>ui_noabort</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Disable &apos;abort&apos; menu item - the database was not compressed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1490011234e07658052a2072755a4add" prot="public">
          <name>ui_lock_range_refresh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Lock the ui_range refreshes. The ranges will not be refreshed until the corresponding <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a007358e0ac562373c1506b478e8850e8" kindref="member">ui_unlock_range_refresh</ref> is issued. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a007358e0ac562373c1506b478e8850e8" prot="public">
          <name>ui_unlock_range_refresh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Unlock the <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab73b2b3bce2c15fecb4b218f6566a525" kindref="member">ui_range</ref> refreshes. If the number of locks is back to zero, then refresh the ranges. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a34554496f5ccd6ef68fa75dd0ca6ae8c" prot="public">
          <name>ui_genfile_callback</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: handle html generation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>html_header_cb_t</parametername>
</parameternamelist>
<parameterdescription>
<para>** </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>html_footer_cb_t</parametername>
</parameternamelist>
<parameterdescription>
<para>** </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>html_line_cb_t</parametername>
</parameternamelist>
<parameterdescription>
<para>** </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a909d13fec421643dbc35dfe88a17fab4" prot="public">
          <name>ui_open_url</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aa99118081d65054242ea175472d28e9a" kindref="member">open_url()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a959cc67fd29d9c3a8dbddc9706959e2a" prot="public">
          <name>ui_hexdumpea</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Return the current address in a hex view. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>(::ea_t *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hexdump_num</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4fca5f62f13ba3cc5ad3ad615c5d413b" prot="public">
          <name>ui_get_key_code</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a99b9b06f87f2d0218ec350004fdff536" kindref="member">get_key_code()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aed483c27a6bc7bf467c61bd7dadb828f" prot="public">
          <name>ui_setup_plugins_menu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: setup plugins submenu <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afd672c05259d89092cd812b21654a2d9" prot="public">
          <name>ui_get_kernel_version</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a939d85043da52ec45cc483ecf1ebec55" kindref="member">get_kernel_version()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a75a888d372d9f381a4edbdea4760e533" prot="public">
          <name>ui_is_idaq</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1afebae2873051b21f1ffeac29099134ee" kindref="member">is_idaq()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2b305d0bcea321918932e6f65b791133" prot="public">
          <name>ui_refresh_navband</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a6ac128c5e51d57878965893d3da6cfc1" kindref="member">refresh_navband()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a00a33fe6cd85c52858f3432d9b912cd5" prot="public">
          <name>ui_debugger_menu_change</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: debugger menu modification detected <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>debugger menu has been added </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>debugger menu will be removed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afbcb3fa7ea3d4d51f79e6e607f9163ce" prot="public">
          <name>ui_get_curplace</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a888ed62f71b1b711dcdb240b210307a0" kindref="member">get_custom_viewer_place()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05a72365a56a1da625f2ea9d349fd643" prot="public">
          <name>ui_display_widget</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a6746efc8141915a221de63ff3fd33fe8" kindref="member">display_widget()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___w_i_d_g_e_t___o_p_e_n_1ga4a23e389ff9cbf1cd31179ca2f393334aaad66b05845049372878557ace0bfddc" prot="public">
          <name>ui_close_widget</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ad27da33115a2f2e7bddbbf5d29aa814b" kindref="member">close_widget()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___w_i_d_g_e_t___c_l_o_s_e_1ga4a23e389ff9cbf1cd31179ca2f393334a4793db733434cc4dab325974c96db3ac" prot="public">
          <name>ui_activate_widget</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a009c4cd8f90857346f6571061603354d" kindref="member">activate_widget()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae843de4da9ac4c94e56f7ad82a25f2e2" prot="public">
          <name>ui_find_widget</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a510c417b90641340a781fb92c066c99d" kindref="member">find_widget()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a50793291c7ec458ef2279f9aba892a89" prot="public">
          <name>ui_get_current_widget</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a757e65381fd37da2debb18554706ce1a" kindref="member">get_current_widget()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334acc9ae702016cd66a9f1e5439c3a40714" prot="public">
          <name>ui_widget_visible</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>TWidget is displayed on the screen. Use this event to populate the window with controls <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a413b519f16edd2ff348b60924727632f" prot="public">
          <name>ui_widget_closing</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>TWidget is about to close. This event precedes ui_widget_invisible. Use this to perform some possible actions relevant to the lifecycle of this widget <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a93806b2af062bc864f3961521d71e68f" prot="public">
          <name>ui_widget_invisible</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>TWidget is being closed. Use this event to destroy the window controls <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a23687543efaf4d03ba14a292deaa8825" prot="public">
          <name>ui_get_ea_hint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: ui wants to display a simple hint for an address. Use this event to generate a custom hint See also more generic <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a99a83e4306d5eb5741e94b6fe6ea2e2c" kindref="member">ui_get_item_hint</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>(::ea_t) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if generated a hint </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a99a83e4306d5eb5741e94b6fe6ea2e2c" prot="public">
          <name>ui_get_item_hint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: ui wants to display multiline hint for an item. See also more generic <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae4f4aef1523de3bc2596e625de77a68b" kindref="member">ui_get_custom_viewer_hint</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">hint</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *) the output string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>(ea_t) or item id like a structure or enum member </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_lines</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) maximal number of lines </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">important_lines</parametername>
</parameternamelist>
<parameterdescription>
<para>(int *) number of important lines. if zero, output is ignored </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if generated a hint </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8680a95f6ab68a5560ba5f8c24a06abe" prot="public">
          <name>ui_refresh_custom_viewer</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a692a67658e5994dae6c6912029bd978f" kindref="member">refresh_custom_viewer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a0a3c63000880946cd5dd6b368b1d2094" prot="public">
          <name>ui_destroy_custom_viewer</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ae3186473fe7830406c2773d7ee201902" kindref="member">destroy_custom_viewer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a693c35303a59e54100ee5ca9abf53159" prot="public">
          <name>ui_jump_in_custom_viewer</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a5abc7c7d60996ec930d5d70f5685948f" kindref="member">jumpto()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a26766aa9d6e75567f7f50df538b6d0d0" prot="public">
          <name>ui_get_custom_viewer_curline</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a3ab60a995fba833cb8c6b6374557da8d" kindref="member">get_custom_viewer_curline()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4a4b99c3e1df153c87740d04747cb80a" prot="public">
          <name>ui_get_current_viewer</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a7901370e5b65aa34d11f41eb175bd453" kindref="member">get_current_viewer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a12e97e7671f6f7666e4631c60aba0816" prot="public">
          <name>ui_is_idaview</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aa2be68ab610be9c379f2055287870782" kindref="member">is_idaview()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae4f4aef1523de3bc2596e625de77a68b" prot="public">
          <name>ui_get_custom_viewer_hint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: ui wants to display a hint for a viewer (idaview or custom). If the REG_HINTS_MARKER sequence is found in the returned hints string, it will be replaced with the contents of the &quot;regular&quot; hints. If the SRCDBG_HINTS_MARKER sequence is found in the returned hints string, it will be replaced with the contents of the source-level debugger-generated hints. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">hint</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *) the output string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget*) viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>place</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classplace__t" kindref="compound">place_t</ref> *) current position in the viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">important_lines</parametername>
</parameternamelist>
<parameterdescription>
<para>(int *) number of important lines. if zero, the result is ignored </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if generated a hint </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af14e7bb002d87eefec26f249a65002bd" prot="public">
          <name>ui_set_custom_viewer_range</name>
          <briefdescription>
<para>ui: <ref refid="kernwin_8hpp_1a0f6476d779f5334c3d5850fde4f803c1" kindref="member">set_custom_viewer_range()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad9d5cec86031260220530cf0e5572716" prot="public">
          <name>ui_database_inited</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: database initialization has completed. the kernel is about to run idc scripts <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_new_database</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idc_script</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) - may be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abd2c8b749bb8771887541a21f90fea71" prot="public">
          <name>ui_ready_to_run</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: all UI elements have been initialized. Automatic plugins may hook to this event to perform their tasks. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ff634bfdb2e6a4e4a7c3aea12649460" prot="public">
          <name>ui_set_custom_viewer_handler</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: see <ref refid="group__ui__scvh__funcs_1ga35b5933ade6f61ad603b7b91bc3d98de" kindref="member">set_custom_viewer_handler()</ref>. also see other examples in <ref refid="group__ui__scvh__funcs" kindref="compound">Functions: custom viewer handlers</ref> </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab3ee13d89e03e3b9a68d88f936772a66" prot="public">
          <name>ui_refresh_chooser</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a25bd59dc0100214c49785062b6b7b3ae" kindref="member">refresh_chooser()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" prot="public">
          <name>ui_open_builtin</name>
          <briefdescription>
<para>ui: open a window of a built-in type. see <ref refid="group__ui__open__builtin__funcs" kindref="compound">Functions: open built-in windows</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad98c71e6b6d78456b594d4414da74d3f" prot="public">
          <name>ui_preprocess_action</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: ida ui is about to handle a user action. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) ui action name. these names can be looked up in ida[tg]ui.cfg </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nonzero</parametername>
</parameternamelist>
<parameterdescription>
<para>a plugin has handled the command </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abcc9c9d9aeaab1ed7d18a68b024c13d8" prot="public">
          <name>ui_postprocess_action</name>
          <briefdescription>
<para>cb: an ida ui action has been handled </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4b30df15d4a4dbd887baf9dd6a6debb8" prot="public">
          <name>ui_set_custom_viewer_mode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: switch between graph/text modes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>custom_viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>graph_view</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>silent</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool success </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a39e05439803e5ec37d2ca2dc49109a0e" prot="public">
          <name>ui_gen_disasm_text</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ad448900f0031775b4f335bd1f7f752c0" kindref="member">gen_disasm_text()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afee144db9e9476167bf8cd60c4d241bd" prot="public">
          <name>ui_gen_idanode_text</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: generate disassembly text for a node. Plugins may intercept this event and provide custom text for an IDA graph node They may use <ref refid="kernwin_8hpp_1ad448900f0031775b4f335bd1f7f752c0" kindref="member">gen_disasm_text()</ref> for that. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>(text_t *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classqflow__chart__t" kindref="compound">qflow_chart_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool text_has_been_generated </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afcba7f581741c77bf63875da158c5cbf" prot="public">
          <name>ui_install_cli</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: see: <ref refid="kernwin_8hpp_1a795a40503a604fcedc6f54273872080f" kindref="member">install_command_interpreter()</ref>, <ref refid="kernwin_8hpp_1a2a1ff137bf65b62074f37cc9c5183ed9" kindref="member">remove_command_interpreter()</ref> </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1e1d71e78a14e6d1a610ce585f659644" prot="public">
          <name>ui_execute_sync</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a69761082f4ed4caa6fb527da4bf5268d" kindref="member">execute_sync()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aefa5690695bcecca0afcbe9ae2666c81" prot="public">
          <name>ui_get_chooser_obj</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ab0779d3ad6e75c20bef32f73a353f423" kindref="member">get_chooser_obj()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a02d9b43e44dd61100e6b96e3d28c5194" prot="public">
          <name>ui_enable_chooser_item_attrs</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aca7324fab0f8c10ee56aafcfebf5ab73" kindref="member">enable_chooser_item_attrs()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9bbfd944fd92fcceb11ed62d84f815fc" prot="public">
          <name>ui_get_chooser_item_attrs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: get item-specific attributes for a chooser. This callback is generated only after enable_chooser_attrs() <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chooser</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structchooser__base__t" kindref="compound">chooser_base_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>(::size_t) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attrs</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structchooser__item__attrs__t" kindref="compound">chooser_item_attrs_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab6d590c6ffaf780794052e61ebad9683" prot="public">
          <name>ui_set_dock_pos</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a6e29027804bbec27915623e46ecdd522" kindref="member">set_dock_pos()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___d_p___1ga4a23e389ff9cbf1cd31179ca2f393334ae20e8d7d6006491d748f909e89ff529b" prot="public">
          <name>ui_get_opnum</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ac5f99b7484670bd8437cd53a4c0becfc" kindref="member">get_opnum()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9012e609f09774db1435daec4ac66075" prot="public">
          <name>ui_install_custom_datatype_menu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: install/remove custom data type menu item. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtid</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) data type id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>install</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a0b59e34778d1ab81129361abaf86c4b1" prot="public">
          <name>ui_install_custom_optype_menu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: install/remove custom operand type menu item. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fid</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) format id </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>install</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4f82ec77743e2f638834e538e4ce6e0b" prot="public">
          <name>ui_get_range_marker</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Get pointer to function. see <ref refid="kernwin_8hpp_1aaa8872ef1664d614c17fcdd5286c653e" kindref="member">mark_range_for_refresh(ea_t, asize_t)</ref>. This function will be called by the kernel when the database is changed <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vptr: (idaapi*marker)(ea_t ea, asize_t) or NULL </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a362ce9adfaec80d70e08baa5974b496d" prot="public">
          <name>ui_lookup_key_code</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ad3bedd8cdada1c284c6253fa8263fcf7" kindref="member">lookup_key_code()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae057fcc85fed6002a210a3f83d617b5a" prot="public">
          <name>ui_load_custom_icon_file</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a8ba086db7e3f128350aaa7bdf61a75ff" kindref="member">load_custom_icon(const char *)</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334adccf29d49304e950a74d0dcb75781a51" prot="public">
          <name>ui_load_custom_icon</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aef8594942b2bd93184301d3a05b0518d" kindref="member">load_custom_icon(const void *, unsigned int, const char *)</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af65f8b0f1f8933c23c0f1cdf7a222a41" prot="public">
          <name>ui_free_custom_icon</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1add364129cdbe9df218360942f0a3d364" kindref="member">free_custom_icon()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac6fc9bd140c2d86183e526674d9fc4ea" prot="public">
          <name>ui_process_action</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a195c5db1a865d98b66f541040d5b4c4b" kindref="member">process_ui_action()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a864a9abfd257e9dae089cccf83b4c073" prot="public">
          <name>ui_create_code_viewer</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a612523a2d6f0f1bb7cf10ed56253976c" kindref="member">create_code_viewer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___c_d_v_f___1ga4a23e389ff9cbf1cd31179ca2f393334a261ae826aabb3da1f6c80562b73e4ab8" prot="public">
          <name>ui_addons</name>
          <briefdescription>
<para>ui: see <ref refid="group__ui__addons__funcs" kindref="compound">Functions: add-ons</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5e255fcb76ad77ed592faea214fcc34f" prot="public">
          <name>ui_execute_ui_requests</name>
          <briefdescription>
<para>ui: see execute_ui_requests(<ref refid="classui__request__t" kindref="compound">ui_request_t</ref>, ...) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5fae30c67b631c39977520e01239ae0c" prot="public">
          <name>ui_execute_ui_requests_list</name>
          <briefdescription>
<para>ui: see execute_ui_requests(ui_requests_t) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2faeb52ee5414a79b38375ebea4a1e4c" prot="public">
          <name>ui_register_timer</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a524862fbb80755bdc10f841da329b3f4" kindref="member">register_timer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8dd3183b53abf872c839f187868bb5cc" prot="public">
          <name>ui_unregister_timer</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a1c6e443b152e9132b5b34239da526e90" kindref="member">unregister_timer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a57c5171c5a50aa1c9dc003490d92626d" prot="public">
          <name>ui_take_database_snapshot</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a62f336a1091faca8c5a9c8860bc8193a" kindref="member">take_database_snapshot()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2a4174e3026dc2ba9ed3480a70b3a003" prot="public">
          <name>ui_restore_database_snapshot</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a712379fbd4f302bab3389063d9a3c794" kindref="member">restore_database_snapshot()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a3d5f28ea3244bda2bceaafb2e9a367e2" prot="public">
          <name>ui_set_code_viewer_line_handlers</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a6182be3f76da919f62308f29e930df39" kindref="member">set_code_viewer_line_handlers()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5b1fc191506cad37c86734c20f1c8640" prot="public">
          <name>ui_refresh_custom_code_viewer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Refresh custom code viewer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>TWidget</parametername>
</parameternamelist>
<parameterdescription>
<para>*code_viewer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a803f825339d0fbbc4c18e8351632f895" prot="public">
          <name>ui_create_source_viewer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Create new source viewer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>top_tl</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget **) toplevel widget of created source viewer (can be NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>custview</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lines</parametername>
</parameternamelist>
<parameterdescription>
<para>(strvec_t *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lnnum</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colnum</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) (<ref refid="group___s_v_f__" kindref="compound">Source viewer creation flags</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>source_view_t * </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___s_v_f___1ga4a23e389ff9cbf1cd31179ca2f393334a0c38413cba3166228f1ad1044f06274c" prot="public">
          <name>ui_get_tab_size</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a5dbaef727ac6a0cdf5656ebfb08d739a" kindref="member">get_tab_size()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abeb15a935855827a630571bb825106dd" prot="public">
          <name>ui_repaint_qwidget</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a1a19466f6141eaa444362b2c219c38bd" kindref="member">repaint_custom_viewer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334adcecbf3d396fe8f01e957fe4b8b5a31b" prot="public">
          <name>ui_custom_viewer_set_userdata</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Change <ref refid="classplace__t" kindref="compound">place_t</ref> user data for a custom view. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>custom_viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>(void *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>old user_data </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aab66159c0a91b59754783f767e5a955e" prot="public">
          <name>ui_jumpto</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a5abc7c7d60996ec930d5d70f5685948f" kindref="member">jumpto(ea_t, int, int)</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac1eaa90a2f904de785b7d4c10139d7cc" prot="public">
          <name>ui_cancel_exec_request</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a89770c465690472e4018421c773feb53" kindref="member">cancel_exec_request()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab90ae4abe5dc7cb69cb2cee54543dab8" prot="public">
          <name>ui_open_form</name>
          <briefdescription>
<para>ui: see <ref refid="group___f_o_r_m___c_1gac0a6440bc79c64499e55e53d263aa148" kindref="member">vopen_form()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a53d4e6367c5a8335df50fed9c006a2c2" prot="public">
          <name>ui_unrecognized_config_directive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Possibly handle an extra config directive, passed through &apos;-d&apos; or &apos;-D&apos;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>directive</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) The config directive </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char * - one of <ref refid="group___i_d_p_o_p_t___r_e_t" kindref="compound">Option result codes</ref> </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334adf2791ff3d37c7f0b0dd35eff8cfbde6" prot="public">
          <name>ui_get_output_cursor</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ac8884a314f92a9438d2d0ef7383e0344" kindref="member">get_output_cursor()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a40359058207a010fa2f92025f88ec9b4" prot="public">
          <name>ui_get_output_curline</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1adb0cf335b2927669fa3199717d540d7c" kindref="member">get_output_curline()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac58cfe11f6d94468fca265e375e1cbe3" prot="public">
          <name>ui_get_output_selected_text</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a4d0744550f004160434202156b643c52" kindref="member">get_output_selected_text()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a984bb44e68177e28c3c7bd5725b76245" prot="public">
          <name>ui_get_renderer_type</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ab07b9d03b820550e3c3b216d821da14e" kindref="member">get_view_renderer_type()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a03cb7adabbb2e81bcbcd56ad2e473fa7" prot="public">
          <name>ui_set_renderer_type</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aa5732b35f559e904f066441e3107fdeb" kindref="member">set_view_renderer_type()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aed819a75f97ea22018d9a6115e8ff34a" prot="public">
          <name>ui_get_viewer_user_data</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a12fe233ca2943f494aa5bc164305b4e3" kindref="member">get_viewer_user_data()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aba23e4e7db3a7fe59c7b3b45aab90d73" prot="public">
          <name>ui_get_viewer_place_type</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1abb995f3fa12f43bc208ffb59318f03f3" kindref="member">get_viewer_place_type()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a661c961a8dd442cc65e350071f1a4f56" prot="public">
          <name>ui_ea_viewer_history_push_and_jump</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a215117a723f89c9b3d37d8167a2cf1b7" kindref="member">ea_viewer_history_push_and_jump()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1e1f2cb92d2409cf31c765f7073054d9" prot="public">
          <name>ui_ea_viewer_history_info</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aeefdc088088e2945b7de7a680fc096ed" kindref="member">get_ea_viewer_history_info()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aafbba3b3c66270e3e6f43ff24096edb5" prot="public">
          <name>ui_register_action</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ac79586adc1b82bd19ac650a5e743efe7" kindref="member">register_action()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a19d28bfc3a12e991294b9b55879a2980" prot="public">
          <name>ui_unregister_action</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a4aba81e18ee81b0355ee93f1443ff4f2" kindref="member">unregister_action()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a83a5cd6c017309c85ed1a80b4b017c18" prot="public">
          <name>ui_attach_action_to_menu</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a381b694726bffe05b02b2a236124801e" kindref="member">attach_action_to_menu()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab636820f4db21c0023e60db0b5d92af3" prot="public">
          <name>ui_detach_action_from_menu</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aa2d81f4fa9231f574260960762332cc5" kindref="member">detach_action_from_menu()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af29a4befa6cfc8a8adeb9c10418dc0b5" prot="public">
          <name>ui_attach_action_to_popup</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a1348d5bd82f603e5750d51bf0d4cbda7" kindref="member">attach_action_to_popup()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334adb8dbd514e9f745ff6fc7084151b14b5" prot="public">
          <name>ui_detach_action_from_popup</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1ab1dccb9b6d52e96cda93dbbf58a862bf" kindref="member">detach_action_from_popup()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abb4139351698f6191616ca8597acf00d" prot="public">
          <name>ui_attach_dynamic_action_to_popup</name>
          <briefdescription>
<para>ui: see create <ref refid="kernwin_8hpp_1a0f84b7875d17f46920c7f8aee0f35c16" kindref="member">attach_dynamic_action_to_popup()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a68009e0dcf084459ce591bcd0cfa24d3" prot="public">
          <name>ui_attach_action_to_toolbar</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a2882000ced36b917a44a91c9cd4888d5" kindref="member">attach_action_to_toolbar()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a65b3a8ad6aa322a8aa1c592e2939b20d" prot="public">
          <name>ui_detach_action_from_toolbar</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a8478b8f4450c3163396dd1449c147fbb" kindref="member">detach_action_from_toolbar()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a0b056d82ff2ed5960db016e973c2c140" prot="public">
          <name>ui_updating_actions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: IDA is about to update all actions. If your plugin needs to perform expensive operations more than once (e.g., once per action it registers), you should do them only once, right away. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="kernwin_8hpp_1ac6e0aff49f47ef359592ff6ba386c858" kindref="member">action_update_ctx_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a083310e0a0d8d1e6e38c98686d735c1c" prot="public">
          <name>ui_updated_actions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: IDA is done updating actions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a534e3ef3ffe21991365efd0b772d8912" prot="public">
          <name>ui_populating_widget_popup</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: IDA is populating the context menu for a widget. This is your chance to <ref refid="kernwin_8hpp_1a1348d5bd82f603e5750d51bf0d4cbda7" kindref="member">attach_action_to_popup()</ref>.</para><para>Have a look at ui_finish_populating_widget_popup, if you want to augment the context menu with your own actions after the menu has had a chance to be properly populated by the owning component or plugin (which typically does it on ui_populating_widget_popup.)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popup_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>(TPopupMenu *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>(const action_activation_ctx_t *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para></simplesect>
ui: see ui_finish_populating_widget_popup </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a17aa3c8352574786f3f4743fb4889823" prot="public">
          <name>ui_finish_populating_widget_popup</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: IDA is about to be done populating the context menu for a widget. This is your chance to <ref refid="kernwin_8hpp_1a1348d5bd82f603e5750d51bf0d4cbda7" kindref="member">attach_action_to_popup()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popup_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>(TPopupMenu *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>(const action_activation_ctx_t *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void</para></simplesect>
ui: see ui_populating_widget_popup </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e18029a1d55951baacce0a745dcf91e" prot="public">
          <name>ui_update_action_attr</name>
          <briefdescription>
<para>ui: see <ref refid="group__ui__uaa__funcs" kindref="compound">Functions: update actions</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7c3259468d0368cf9ffed03ef759fe6a" prot="public">
          <name>ui_get_action_attr</name>
          <briefdescription>
<para>ui: see <ref refid="group__ui__gaa__funcs" kindref="compound">Functions: get action attributes</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a789ffb65502e41b544f63cf4cdd46525" prot="public">
          <name>ui_plugin_loaded</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: The plugin was loaded in memory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plugin_info</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structplugin__info__t" kindref="compound">plugin_info_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abfd51ea32b91fa350e480fc068478dbb" prot="public">
          <name>ui_plugin_unloading</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: The plugin is about to be unloaded <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plugin_info</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structplugin__info__t" kindref="compound">plugin_info_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abbfa589f60e257a7685a15a8622f973c" prot="public">
          <name>ui_get_widget_type</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a8b237d15cc807b4a943a14275d48cef8" kindref="member">get_widget_type()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a0eada73f6effbe6fbf1d66fdd7e0ba75" prot="public">
          <name>ui_current_widget_changed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: The currently-active TWidget changed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prev_widget</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa0dd40a41cf0316696e3d3b7d479d358" prot="public">
          <name>ui_get_widget_title</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a90fc4e7fa1e59e7c80bd8b99f831775d" kindref="member">get_widget_title()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8707514c3658052d44295e43d8d2944b" prot="public">
          <name>ui_get_user_strlist_options</name>
          <briefdescription>
<para>ui: see get_user_strlist_options() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac3da4fc006d749224fd5b36925cd35d6" prot="public">
          <name>ui_create_custom_viewer</name>
          <briefdescription>
<para>ui: see create_viewer() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a622729dc5981f5d275eb6dd3a66ecae6" prot="public">
          <name>ui_custom_viewer_jump</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: set the current location, and have the viewer display it <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structlochist__entry__t" kindref="compound">lochist_entry_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>(uint32) or&apos;ed combination of CVNF_* values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af7e8e6d4d87c505b5a84e51ae15a8397" prot="public">
          <name>ui_set_custom_viewer_handlers</name>
          <briefdescription>
<para>ui: see <ref refid="group__ui__scvh__funcs_1ga6943b60e161107562db901dcc1b0d11c" kindref="member">set_custom_viewer_handlers()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a0fec82a6a8ec5058aa75a141bb08ef1d" prot="public">
          <name>ui_get_registered_actions</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a3900af7c877c608e865252fc0f6f6809" kindref="member">get_registered_actions()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad3da8a7533eaf32eb62ef4fd7799b8a5" prot="public">
          <name>ui_create_toolbar</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aaa5543fff5aa549a27775123db5ab081" kindref="member">create_toolbar()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a84e27e9df06943a788a4a3f94a41c6f6" prot="public">
          <name>ui_delete_toolbar</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a8184d2c4ec216976a6babc01cc3402d0" kindref="member">delete_toolbar()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad195a80c1f22bb883d8c4ee6b271802c" prot="public">
          <name>ui_create_menu</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a1c074a73aace53feb05565cfa1be4827" kindref="member">create_menu()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6eaa63da96431a4eca045928234f2c7f" prot="public">
          <name>ui_delete_menu</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a16f9e92aa595c7e8fff7a8e5b5a8f4b5" kindref="member">delete_menu()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a33d7ddc2f798a3339557838babcff707" prot="public">
          <name>ui_set_nav_colorizer</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aa4e62dc7bc44fc33fe3776d14cf0936f" kindref="member">set_nav_colorizer()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad63c501184ac499bc83c129561a90a7d" prot="public">
          <name>ui_get_chooser_data</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a2bbcc3e2da45bedc6c434febaa14c4c8" kindref="member">get_chooser_data()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a440af15e4d5ba1c85d18570896668ea2" prot="public">
          <name>ui_get_highlight</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1aa9d9cbe295763bb300b164ce4166db7f" kindref="member">get_highlight()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6a1291657b4f20d018b386d9611a0f35" prot="public">
          <name>ui_set_highlight</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1afde9ed4badae30a3c1b6e53a86aaebe5" kindref="member">set_highlight()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2d51387dca1740e00e5807b6cc71ca40" prot="public">
          <name>ui_set_mappings</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: Show current memory mappings and allow the user to change them. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a43c425985243a5721448017af9052c11" prot="public">
          <name>ui_create_empty_widget</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a10681677801d72cd72d7259532d53cc8" kindref="member">create_empty_widget()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac9426d7dc20294fcfb8ddac099c822a6" prot="public">
          <name>ui_msg_clear</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1acfe0eb44b8739c9b61e1cd31372747a3" kindref="member">msg_clear()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a3553462aff861c7f63bce87197b32bec" prot="public">
          <name>ui_msg_save</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a7a58b3a2057a497aa3f388d352f48e7d" kindref="member">msg_save()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a02bddf944ef7d465191f8dd64a1d1201" prot="public">
          <name>ui_msg_get_lines</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a0d81b1dde59c368f006073424db37ef8" kindref="member">msg_get_lines()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aabd8c51149b482e479d654f466928796" prot="public">
          <name>ui_chooser_default_enter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ui: jump to the address returned by get_ea() callback in the case of the non-modal choosers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chooser</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structchooser__base__t" kindref="compound">chooser_base_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n/sel</parametername>
</parameternamelist>
<parameterdescription>
<para>(::size_t *) for <ref refid="structchooser__t" kindref="compound">chooser_t</ref> (<ref refid="pro_8h_1a3fb92c6beff4e1e004a4ef5a2e356391" kindref="member">sizevec_t</ref> *) for <ref refid="structchooser__multi__t" kindref="compound">chooser_multi_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int <ref refid="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27f" kindref="member">chooser_t::cbres_t</ref> </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a56bf6b35535ddfbdb2bfe0108f17d688" prot="public">
          <name>ui_screen_ea_changed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: The &quot;current address&quot; changed <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>(ea_t) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prev_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>(ea_t) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a10364e5cb58203583602303f79f508e7" prot="public">
          <name>ui_get_active_modal_widget</name>
          <briefdescription>
<para>ui: see <ref refid="kernwin_8hpp_1a28e6b298d1e8ed7a3a843e752e1bb536" kindref="member">get_active_modal_widget()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae404b685a7f8f97da819a8936bb333e7" prot="public">
          <name>ui_navband_pixel</name>
          <briefdescription>
<para>ui: see get_navband_pixel </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334acbd2592aac181349322204e78b42a3ca" prot="public">
          <name>ui_navband_ea</name>
          <briefdescription>
<para>ui: see get_navband_ea </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4d0c5e2e992dcd49907b74628fdb91da" prot="public">
          <name>ui_get_window_id</name>
          <briefdescription>
<para>ui: set get_window_id (GUI only) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a469fe16b1293eb50fe02f49aac52442f" prot="public">
          <name>ui_create_desktop_widget</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cb: create a widget, to be placed in the widget tree (at desktop-creation time.) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structjobj__t" kindref="compound">jobj_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TWidget * the created widget, or null </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a43beedb3635b94568ed866b2400550d8" prot="public">
          <name>ui_last</name>
          <briefdescription>
<para>the last notification code </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a211830441673a4c677deaffb86420b97" prot="public">
          <name>ui_dbg_begin</name>
          <initializer>= 1000</initializer>
          <briefdescription>
<para>debugger callgates. should not be used directly, see <ref refid="dbg_8hpp" kindref="compound">dbg.hpp</ref> for details </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a479fd0eead05ba8f4d95ee23ae2d59dc" prot="public">
          <name>ui_dbg_run_requests</name>
          <initializer>= ui_dbg_begin</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af9d8af247d9286f3dabc6db6405d1dfb" prot="public">
          <name>ui_dbg_get_running_request</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2df1d7347f1ad0d41543fd47d8a8f354" prot="public">
          <name>ui_dbg_get_running_notification</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae0418e9073bc20b4621f360a05245aeb" prot="public">
          <name>ui_dbg_clear_requests_queue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a83b0b5e4f29410d8af3f6e765b4a7da3" prot="public">
          <name>ui_dbg_get_process_state</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8f03d055fc504bfc8d0b4483c51f4364" prot="public">
          <name>ui_dbg_start_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad534e0e0d01d289a6c18726f94ac451f" prot="public">
          <name>ui_dbg_request_start_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a422466a202684c6b1d9d83b87a519479" prot="public">
          <name>ui_dbg_suspend_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a38a41413546a45866dd8894f02350d1b" prot="public">
          <name>ui_dbg_request_suspend_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a84ef2e35adfab6c15f24ba71f57a4559" prot="public">
          <name>ui_dbg_continue_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2ccb1a6a64bac960c2ab5735334cdd28" prot="public">
          <name>ui_dbg_request_continue_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a736de0f6c86cc260624b2cdf1ad32bde" prot="public">
          <name>ui_dbg_exit_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a78b0fcebf747f21c4308b420524ebd67" prot="public">
          <name>ui_dbg_request_exit_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a65c7be4faffc85f9ae433b53ecec4c10" prot="public">
          <name>ui_dbg_get_thread_qty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a237065ffde44c6ef635fe71b8f86fba5" prot="public">
          <name>ui_dbg_getn_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5d6642c5359b2992ffdda512a35fcf68" prot="public">
          <name>ui_dbg_select_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4386b624146916ec6f3e01b476ae0c04" prot="public">
          <name>ui_dbg_request_select_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4b97172b6d8f5cba46e62f48d0644262" prot="public">
          <name>ui_dbg_step_into</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa044c6d740462e828330da139082eb9a" prot="public">
          <name>ui_dbg_request_step_into</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afeaf48102cf615ab6bf10f4eba05ff6f" prot="public">
          <name>ui_dbg_step_over</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a07b80e343e8e2c992f92c7b89223986e" prot="public">
          <name>ui_dbg_request_step_over</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae749905e2a70241b32b38d84541486c3" prot="public">
          <name>ui_dbg_run_to</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a3821e0130ed74f7973482ce30c60496c" prot="public">
          <name>ui_dbg_request_run_to</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a255d31f5802ebc6a228db0c2c770ee6a" prot="public">
          <name>ui_dbg_step_until_ret</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af85c8005eb8e8f265d591a30d2586ff8" prot="public">
          <name>ui_dbg_request_step_until_ret</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af1b4c6eb7f0903e86b3dc3125962f5c8" prot="public">
          <name>ui_dbg_get_bpt_qty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab691316660e35c8beebb108d0ef47cbb" prot="public">
          <name>ui_dbg_add_oldbpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a674166fcc689817e73d92e886d7b6019" prot="public">
          <name>ui_dbg_request_add_oldbpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8863900c930dc7bbbfcf530cf3cb0829" prot="public">
          <name>ui_dbg_del_oldbpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a3377107cb5634cdd6497d516e680106c" prot="public">
          <name>ui_dbg_request_del_oldbpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a82f973d39c1f398297cff89c58ee8edd" prot="public">
          <name>ui_dbg_enable_oldbpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a693131b2166982c846964f316ae15b33" prot="public">
          <name>ui_dbg_request_enable_oldbpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8efc3f19d174d3c7025c65b25bbd5d1c" prot="public">
          <name>ui_dbg_set_trace_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a3eb99ede7cf8c5a0d7666abad170ccda" prot="public">
          <name>ui_dbg_clear_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9706759455a2d4eb383caa0a01eb6399" prot="public">
          <name>ui_dbg_request_clear_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae32c064db19c922ab3437b0192ece0a0" prot="public">
          <name>ui_dbg_is_step_trace_enabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a78ad6b4d2b8241e55d515ec0578a017c" prot="public">
          <name>ui_dbg_enable_step_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab8d8e954d81a0d3b605f37e6ca8a68dc" prot="public">
          <name>ui_dbg_request_enable_step_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abf12f6b3a920ae639c68d5ed40f070b9" prot="public">
          <name>ui_dbg_get_step_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aeb53c4f06fa53dfd7a6f17d131fe6581" prot="public">
          <name>ui_dbg_set_step_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5b7546113a7b211bebe4257656582506" prot="public">
          <name>ui_dbg_request_set_step_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4611d863c4b8cf8833a26470f7589b10" prot="public">
          <name>ui_dbg_is_insn_trace_enabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab9aa574711400bc60c5e2f0e406a1836" prot="public">
          <name>ui_dbg_enable_insn_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af91da228f36a87c329cce45078d76486" prot="public">
          <name>ui_dbg_request_enable_insn_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af4804794aa8b38d1cee9a5f3db29b844" prot="public">
          <name>ui_dbg_get_insn_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a14470323fc8def4e241dd4b2307b7780" prot="public">
          <name>ui_dbg_set_insn_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7ab956fa1f4a998c60dd54d88cd3c183" prot="public">
          <name>ui_dbg_request_set_insn_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6b86dbb077f89498dcb06ab2ed80d51f" prot="public">
          <name>ui_dbg_is_func_trace_enabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5eab09b392df74ed6a1ebd81545a19bd" prot="public">
          <name>ui_dbg_enable_func_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae8f226067b77b315bc13c2e8e45f6336" prot="public">
          <name>ui_dbg_request_enable_func_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334acde0c3732195ebbb460fe253da70b488" prot="public">
          <name>ui_dbg_get_func_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a393d431e68f1ebdb8fbb7655f366d6d3" prot="public">
          <name>ui_dbg_set_func_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa2e8ae7e04398ee748f6e7623aea4164" prot="public">
          <name>ui_dbg_request_set_func_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7a63294b8487c5d75f82bff4bec8d191" prot="public">
          <name>ui_dbg_get_tev_qty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5e1c6e3edc5cf3144602d7ecf2754d0b" prot="public">
          <name>ui_dbg_get_tev_info</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a737629c31c1fadeff3111334a48b49d5" prot="public">
          <name>ui_dbg_get_call_tev_callee</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa87878a784eb50e04f8d7da9bd60e897" prot="public">
          <name>ui_dbg_get_ret_tev_return</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9afad9bf0f45569253ef075dccffbb6c" prot="public">
          <name>ui_dbg_get_bpt_tev_ea</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a40fbea7fdbc0e4911bca558bcb9496b4" prot="public">
          <name>ui_dbg_get_reg_value_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af90ba40aa022d43b42140b2e8603663d" prot="public">
          <name>ui_dbg_get_processes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6bb95625a5a7b645b19e7c1695778e02" prot="public">
          <name>ui_dbg_attach_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2531211fc02f406546f405b03bc75d0e" prot="public">
          <name>ui_dbg_request_attach_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae9535200a3a9002e268e93690cbfea60" prot="public">
          <name>ui_dbg_detach_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5af455e6ed177ef468b8f63a82f29942" prot="public">
          <name>ui_dbg_request_detach_process</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5521c8aa806a1026f34db69803617294" prot="public">
          <name>ui_dbg_get_first_module</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac9799b2319282b8dc9190474b61798f3" prot="public">
          <name>ui_dbg_get_next_module</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a95020b9b7ddddf6b5b01ccb09732627b" prot="public">
          <name>ui_dbg_bring_to_front</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af2e0e864c451a88ea498b91360712469" prot="public">
          <name>ui_dbg_get_current_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a14a326cb33ac3a72243a6dcde74c2aca" prot="public">
          <name>ui_dbg_wait_for_next_event</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad0bc323b60f8fde9db1617377f3ce845" prot="public">
          <name>ui_dbg_get_debug_event</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af2016902a50aeb8ddd2cf0471564d565" prot="public">
          <name>ui_dbg_set_debugger_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5858ceeee289e16690ed4628d1f55932" prot="public">
          <name>ui_dbg_set_remote_debugger</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac7091e2bde4acde9add94464a176bdee" prot="public">
          <name>ui_dbg_load_debugger</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1c0e9442431ef22489ae982b93bf0ded" prot="public">
          <name>ui_dbg_retrieve_exceptions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6b3e7e0272e810d300f07d67901bfaad" prot="public">
          <name>ui_dbg_store_exceptions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a43874d7ec23f0159a041d48170278a46" prot="public">
          <name>ui_dbg_define_exception</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a301e5dfad5f00104138211e58b9ebbfd" prot="public">
          <name>ui_dbg_suspend_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa8e1e609d8a009cd4150a4150a3eb151" prot="public">
          <name>ui_dbg_request_suspend_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa34a7627ba507e7cff23986ba67d8f70" prot="public">
          <name>ui_dbg_resume_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9f4c0e42c7e4be5f3695172e5d7ace07" prot="public">
          <name>ui_dbg_request_resume_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5f8d3dbe1b3e9e949c604592dab3e374" prot="public">
          <name>ui_dbg_get_process_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa60dcc63868fd5fc073d7fbb25268b81" prot="public">
          <name>ui_dbg_check_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a41793cbed5a63793791b092a74336525" prot="public">
          <name>ui_dbg_set_process_state</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae5f5940daa14a98d6c2a2ecb9856edaa" prot="public">
          <name>ui_dbg_get_manual_regions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a3ec4f2299419cede92d967d367ee2fe4" prot="public">
          <name>ui_dbg_set_manual_regions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4cf3b5efbd1a4fb1974190dd39e81e07" prot="public">
          <name>ui_dbg_enable_manual_regions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a66878b214de70793daa3e754f001cb17" prot="public">
          <name>ui_dbg_set_process_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afee15e121e010baffefa2d1be6340c45" prot="public">
          <name>ui_dbg_is_busy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab0590ac8f38c96fdca25dc9cae030e6d" prot="public">
          <name>ui_dbg_hide_all_bpts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1ae085a13b9c4ba9103a3716b5b850ed" prot="public">
          <name>ui_dbg_edit_manual_regions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7599001b078496b3028e4c9a80cbfb38" prot="public">
          <name>ui_dbg_get_sp_val</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4a31e68f307302916b5e92c3781d8df8" prot="public">
          <name>ui_dbg_get_ip_val</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05b98d5e79ff4b6db9b5d0d0a6c518ad" prot="public">
          <name>ui_dbg_get_reg_val</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aca90b5987773bd673c54eb28944b12d1" prot="public">
          <name>ui_dbg_set_reg_val</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad3bb8137a6d3616e1f0a2fb767b70541" prot="public">
          <name>ui_dbg_request_set_reg_val</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa4658a7553a0d1bec1af54600e10e965" prot="public">
          <name>ui_dbg_get_insn_tev_reg_val</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aba7907e3a2dcd40d0def0f9e8a755149" prot="public">
          <name>ui_dbg_get_insn_tev_reg_result</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a20260348ac8a50d46ffd92cc8b357a81" prot="public">
          <name>ui_dbg_register_provider</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a83361fed293cfaf78ba6c6485abef392" prot="public">
          <name>ui_dbg_unregister_provider</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae6a339a09f12566c7583c5598012144b" prot="public">
          <name>ui_dbg_handle_debug_event</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a590218b71ce49e88873bdaf8cbdea034" prot="public">
          <name>ui_dbg_add_vmod</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a0c430b476dbda0c37c2e1e468a3c2801" prot="public">
          <name>ui_dbg_del_vmod</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2597c7096aabf956cb67c703b10b9aad" prot="public">
          <name>ui_dbg_compare_bpt_locs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a427afb77542af82fcb4a67d728e0fcb0" prot="public">
          <name>ui_dbg_save_bpts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a37862d0b7ef64c7c272ab8479f3f59a3" prot="public">
          <name>ui_dbg_set_bptloc_string</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a07f3790f5e0fed8b7b6b01f9076e5efe" prot="public">
          <name>ui_dbg_get_bptloc_string</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5d5147b0792c134b978ed274e3642bee" prot="public">
          <name>ui_dbg_internal_appcall</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad21ee3c4890d23e230ddc4405974ccef" prot="public">
          <name>ui_dbg_internal_cleanup_appcall</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6f8724bd841a45261e0cee2d318801c8" prot="public">
          <name>ui_dbg_internal_get_sreg_base</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af34805c624a7a942155054733319075b" prot="public">
          <name>ui_dbg_internal_ioctl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a229b0e58865add8fc32a330a152a2645" prot="public">
          <name>ui_dbg_read_memory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a881f09526d63712fbeb905aefcf50588" prot="public">
          <name>ui_dbg_write_memory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab138b863fa6c8a3c04d5cb51ba3562ae" prot="public">
          <name>ui_dbg_read_registers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2cdd9bab3cff8b386189108ef45fbb3f" prot="public">
          <name>ui_dbg_write_register</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6929dada81d73168ef3a115d47aeeb40" prot="public">
          <name>ui_dbg_get_memory_info</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac0563443b2493fe1470e15fc69a34b87" prot="public">
          <name>ui_dbg_get_event_cond</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a466f44db2e933910c63946d211917739" prot="public">
          <name>ui_dbg_set_event_cond</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab6081ec93764030755e445783210aed4" prot="public">
          <name>ui_dbg_enable_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a055a43467c2ede655a2bd017f9049658" prot="public">
          <name>ui_dbg_request_enable_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a658db9fb97502b0278638566ccc6876f" prot="public">
          <name>ui_dbg_del_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1e6a78dd18f1a4924e476bea81228a15" prot="public">
          <name>ui_dbg_request_del_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a837e6a5e6f169de8da3637fd2355de8e" prot="public">
          <name>ui_dbg_map_source_path</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa14617fdee350c2eb5d78d924e3b7873" prot="public">
          <name>ui_dbg_map_source_file_path</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a992671133948f12204230dcfd98f2377" prot="public">
          <name>ui_dbg_modify_source_paths</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7d23a32d0e13483035d9d903c26d93b1" prot="public">
          <name>ui_dbg_is_bblk_trace_enabled</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad40ddf8fde1ad4a2b23ad1511b89044a" prot="public">
          <name>ui_dbg_enable_bblk_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6955d71cc1a1076dec01574ca6dc1191" prot="public">
          <name>ui_dbg_request_enable_bblk_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afe837284e9d406528f874f631b5a696d" prot="public">
          <name>ui_dbg_get_bblk_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af312eb02a2dc89e9ab58a4618257f4da" prot="public">
          <name>ui_dbg_set_bblk_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aeb4d518870de76e249bebb6f197a5f3b" prot="public">
          <name>ui_dbg_request_set_bblk_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad2664eb9555328f1b3ff06e2baf19233" prot="public">
          <name>ui_dbg_load_trace_file</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1f9234b524047cabbe4e3d1091d7a82f" prot="public">
          <name>ui_dbg_save_trace_file</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a323a87e4d2225d59f0382fa427216e02" prot="public">
          <name>ui_dbg_is_valid_trace_file</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a19a84147b658503d6370d3497c893028" prot="public">
          <name>ui_dbg_set_trace_file_desc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a00327ae0efb2fa03d3c85852a54e4540" prot="public">
          <name>ui_dbg_get_trace_file_desc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af8dd8747710f1cd8b39c131d7b324518" prot="public">
          <name>ui_dbg_choose_trace_file</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7855b4afa5b6249db3290e3d682b2d1b" prot="public">
          <name>ui_dbg_diff_trace_file</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6af169224e12eff8f43ef62880257ff7" prot="public">
          <name>ui_dbg_graph_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aabd2aa62fa8a7c80a79bab5e94dd9445" prot="public">
          <name>ui_dbg_get_tev_memory_info</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1847bfc7a47bcd0c55b2a0a2af62a941" prot="public">
          <name>ui_dbg_get_tev_event</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8bce57fb00e0658ae8e7d5ca65775c94" prot="public">
          <name>ui_dbg_get_insn_tev_reg_mem</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa2ffa72f2e5da2f4a9ee93df95f8a95c" prot="public">
          <name>ui_dbg_getn_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4bc88a33e12e0ffded6c23e27da5e84b" prot="public">
          <name>ui_dbg_get_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a560f5d18c04976915b4b5dc2f909fa2e" prot="public">
          <name>ui_dbg_find_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a3397c34054902b5d6a1010e3f0b8df3a" prot="public">
          <name>ui_dbg_add_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a04f04299c745237011006410eea62cd0" prot="public">
          <name>ui_dbg_request_add_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2a8fe2b8953f8763313f4140b227f12f" prot="public">
          <name>ui_dbg_update_bpt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae8a9a6dd9bf5a45bb3a27ee92620ce06" prot="public">
          <name>ui_dbg_for_all_bpts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa567623a8e0fc079240b0920f1bafaf3" prot="public">
          <name>ui_dbg_get_tev_ea</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5073ed4919f66d190f104254e6fe8dc0" prot="public">
          <name>ui_dbg_get_tev_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5fa0b73dc1a90e3b71e70a6f1697b167" prot="public">
          <name>ui_dbg_get_tev_tid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9b7c31fd458f3992d9f37151dc79ddb9" prot="public">
          <name>ui_dbg_get_trace_base_address</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad955f3a610d5d5729af0f3d31aa2649d" prot="public">
          <name>ui_dbg_set_trace_base_address</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1266cb52f1c3e87e0e73daa397a4756c" prot="public">
          <name>ui_dbg_add_tev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2fced2e44e6f62081deedbeac58dba8c" prot="public">
          <name>ui_dbg_add_insn_tev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1c57e6d0d95a118d0753ca17d160f120" prot="public">
          <name>ui_dbg_add_call_tev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aae87d8db2230246d6551369ebcb4b2d2" prot="public">
          <name>ui_dbg_add_ret_tev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4bf92dbdcb0112c441d5c28c9ec1f9f1" prot="public">
          <name>ui_dbg_add_bpt_tev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ae7ec8c654db23f8c1e0035369cc8f2" prot="public">
          <name>ui_dbg_add_debug_event</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aaf80d030aeb5f6cf489d11b4793dacb8" prot="public">
          <name>ui_dbg_add_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6efc6b54e840d61a03991e218db99b0c" prot="public">
          <name>ui_dbg_del_thread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad857fc1c06171a86a5c0cecae9ca03ac" prot="public">
          <name>ui_dbg_add_many_tevs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af932101318e3efa7f58080dbedd16d77" prot="public">
          <name>ui_dbg_set_bpt_group</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aed8f206d46baa9de2632231772ff1359" prot="public">
          <name>ui_dbg_set_highlight_trace_options</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a0b3ed2c0a2eec124a972ae620bad784a" prot="public">
          <name>ui_dbg_set_trace_platform</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a94fb91a6ebf6fca8efdd6f5a024f102f" prot="public">
          <name>ui_dbg_get_trace_platform</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e5d015cd290ade031797fb7e34fb255" prot="public">
          <name>ui_dbg_internal_get_elang</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8133beb5500f873aa9d8148dedc23e2b" prot="public">
          <name>ui_dbg_internal_set_elang</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a33f7728d9472d4594397419f27f266eb" prot="public">
          <name>ui_dbg_load_dbg_dbginfo</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5b583dbed675447d488fda890b78c84c" prot="public">
          <name>ui_dbg_set_resume_mode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa41b9ade08473aaaf959814876de0d79" prot="public">
          <name>ui_dbg_request_set_resume_mode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9550bd2d348e4209f6bb04e4f81cce29" prot="public">
          <name>ui_dbg_set_bptloc_group</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab8a0a1477d887e8383e346f16edf4d2c" prot="public">
          <name>ui_dbg_list_bptgrps</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aee27fa0a0e1b64835e9137c42f04c53d" prot="public">
          <name>ui_dbg_rename_bptgrp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aeda0fcb2d1d0ecb5d396dd612cd89765" prot="public">
          <name>ui_dbg_del_bptgrp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9db5a2a615667f6703a31ab8950cede7" prot="public">
          <name>ui_dbg_get_grp_bpts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a854c06c45cad195c7b0b97de709e51a8" prot="public">
          <name>ui_dbg_get_bpt_group</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a813427e7562acb04be4399e4edb29a29" prot="public">
          <name>ui_dbg_change_bptlocs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8859629a197c1630e24d3b47a644da0e" prot="public">
          <name>ui_dbg_collect_stack_trace</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7fc96c5886b574de37a0cf7440ff5804" prot="public">
          <name>ui_dbg_get_module_info</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa2c6223d2c0c79096a3dce945f82f6f1" prot="public">
          <name>ui_dbg_get_srcinfo_provider</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afdf4e0224873215a72b0ce795345620a" prot="public">
          <name>ui_dbg_get_global_var</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a097224d84ba14a176c876ec880b51413" prot="public">
          <name>ui_dbg_get_local_var</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a423a58cac3f0caf013184ee88af5eded" prot="public">
          <name>ui_dbg_get_local_vars</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1d3951696f39d27d25c00dcb1a544c5f" prot="public">
          <name>ui_dbg_add_path_mapping</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aceff057d00647555741c885a0242f2fc" prot="public">
          <name>ui_dbg_get_current_source_file</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa102cd8ab80d7a5d21e2d0cf383521e1" prot="public">
          <name>ui_dbg_get_current_source_line</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a36f96142a2b4df38344b4601bc62e333" prot="public">
          <name>ui_dbg_srcdbg_step_into</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ada99afed0c6815e84fdec17afbaeb854" prot="public">
          <name>ui_dbg_srcdbg_request_step_into</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334adfc6f79ea5eebcbfe3a22ff83ad284f4" prot="public">
          <name>ui_dbg_srcdbg_step_over</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a978027fe918bf21da309bf5feeeb3914" prot="public">
          <name>ui_dbg_srcdbg_request_step_over</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a65f5c7842afdea2a75c386bda855605d" prot="public">
          <name>ui_dbg_srcdbg_step_until_ret</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a703295764aa14974cf114052a2291598" prot="public">
          <name>ui_dbg_srcdbg_request_step_until_ret</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abea6b9c3305c9462d78ab9bbe7d139b4" prot="public">
          <name>ui_dbg_getn_thread_name</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af5f4b94cfb01d9f09a59c4ad046290f2" prot="public">
          <name>ui_dbg_bin_search</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a0dbf09d9b2c2db43644f9478b1cb5abd" prot="public">
          <name>ui_dbg_get_insn_tev_reg_val_i</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a63ec32bd66ed7be5d37743653692cbdd" prot="public">
          <name>ui_dbg_get_insn_tev_reg_result_i</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a165c3ee715397499846b450f6640f5df" prot="public">
          <name>ui_dbg_get_reg_val_i</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a32bf6746eeef38b113a460caa14e5bf4" prot="public">
          <name>ui_dbg_set_reg_val_i</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a82b1d9183ee2af3129c049971f98dd98" prot="public">
          <name>ui_dbg_get_reg_info</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aafa3bc44f0b1920db751ecb5d8088cea" prot="public">
          <name>ui_dbg_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Events marked as &apos;ui:&apos; should be used as a parameter to <ref refid="kernwin_8hpp_1ac113029c6eff6a6476cd787a6a59f0e8" kindref="member">callui()</ref>. (See convenience functions like <ref refid="kernwin_8hpp_1a5e9939e292fb3197effdb86cb52d55d9" kindref="member">get_screen_ea()</ref>) Events marked as &apos;cb:&apos; are designed to be callbacks and should not be used in <ref refid="kernwin_8hpp_1ac113029c6eff6a6476cd787a6a59f0e8" kindref="member">callui()</ref>. The user may hook to <ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa6fa7e25f6a45cce48411e7b2261518c5" kindref="member">HT_UI</ref> events to catch them </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="198" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="197" bodyend="1108"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9a" prot="public" static="no">
        <name>navaddr_type_t</name>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aada34dfff7c81e0b77e4e69c2fc03956c" prot="public">
          <name>nat_lib</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aaf0abbbed96adb997fbf8c998752b6a62" prot="public">
          <name>nat_fun</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aa12f7f1762ba36f43b213910b4529ae5f" prot="public">
          <name>nat_cod</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aab113862738f15ffc10f11fd00df08bad" prot="public">
          <name>nat_dat</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aaaaef80f9f67b5d81392205be54d2f701" prot="public">
          <name>nat_und</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aa7d94befc63a0dc7caaa9a40bfba0630f" prot="public">
          <name>nat_ext</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aa1610e39367cd1e39a8a1a06d18925871" prot="public">
          <name>nat_err</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aa97e4dc85dcffd2cbed03240ef59989cf" prot="public">
          <name>nat_gap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aa48de91d4ef0946613fbcaa0f367d7bd7" prot="public">
          <name>nat_cur</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aaaba38a221aa5a389111753e80a597303" prot="public">
          <name>nat_auto</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aa9d492d95d8259d1eb7b3a510f113d4af" prot="public">
          <name>nat_lum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad7d1df381536aa0e1cb27c9154b2ff9aa19376908059341ba103ef4005fbc13a6" prot="public">
          <name>nat_last</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2832" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2831" bodyend="2845"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132" prot="public" static="no">
        <name>custom_viewer_handler_id_t</name>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a91861c042e0921c3eb76e33c5336a555" prot="public">
          <name>CVH_USERDATA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a0f0088f8020f9a24ef705957857cd5aa" prot="public">
          <name>CVH_KEYDOWN</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a511b432c1bbf7588ef8247474f5ee62f" kindref="member">custom_viewer_keydown_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132aab41ff16d705e345c5739cd12a088ae2" prot="public">
          <name>CVH_POPUP</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1af624d89dcb56d3a0a3d629b2e0d604d5" kindref="member">custom_viewer_popup_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a7f8f84f5f4da388549eb48d9bcc043ab" prot="public">
          <name>CVH_DBLCLICK</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a621326e0be555411af29350dbca52a6d" kindref="member">custom_viewer_dblclick_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132aab5b39b6405192c1e20c60ce4288d984" prot="public">
          <name>CVH_CURPOS</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a23111082d5d56fc98c80b9ca259849a5" kindref="member">custom_viewer_curpos_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132adf45fdf247fd3fc2c85108b091913ec6" prot="public">
          <name>CVH_CLOSE</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1adaea7631506cc6d8d88f02b5e690f735" kindref="member">custom_viewer_close_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a59bfd7615e21924abfeffc1430ad242c" prot="public">
          <name>CVH_CLICK</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1adefb66562d8615c65b5c9fc3c69121f5" kindref="member">custom_viewer_click_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132aec9cebf96a49aae4ceaa6b9ca91b33e5" prot="public">
          <name>CVH_QT_AWARE</name>
          <briefdescription>
<para>see <ref refid="group__ui__scvh__funcs_1ga1f61099ee5fc6819ea1079ccb97cd4af" kindref="member">set_custom_viewer_qt_aware()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132ac7a9eb030015daf7a3a31b936acbef93" prot="public">
          <name>CVH_HELP</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1ae8f32f231b2b3d4b569500608cb75873" kindref="member">custom_viewer_help_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132ab538c33181385eb80556a6eb99078381" prot="public">
          <name>CVH_MOUSEMOVE</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a95cbfac16669a01c9d5e2f49ac7b0a7b" kindref="member">custom_viewer_mouse_moved_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a0fc607fcb54b4dce22ee3a0dea345d92" prot="public">
          <name>CDVH_USERDATA</name>
          <initializer>= 1000</initializer>
          <briefdescription>
<para>see <ref refid="group__ui__scvh__funcs_1ga4bdba38e8d09307f2b64f999368c9f31" kindref="member">set_code_viewer_user_data()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a3b9667c8c09c69e40a45f1591b4493b5" prot="public">
          <name>CDVH_SRCVIEW</name>
          <briefdescription>
<para>see <ref refid="group__ui__scvh__funcs_1gaa3f4ee8bf283ad7ff9d525e8b5a42e02" kindref="member">set_code_viewer_is_source()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a06d2232bfa4e58944603464eb52ae9fb" prot="public">
          <name>CDVH_LINES_CLICK</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a6b5b065be98dc46a49078bde5538a88d" kindref="member">code_viewer_lines_click_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132aa81d4465d3271f669ffc7738c112ace4" prot="public">
          <name>CDVH_LINES_DBLCLICK</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a6b5b065be98dc46a49078bde5538a88d" kindref="member">code_viewer_lines_click_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a21bd217502b94756889d5528bb82431b" prot="public">
          <name>CDVH_LINES_POPUP</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a6b5b065be98dc46a49078bde5538a88d" kindref="member">code_viewer_lines_click_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a2c06a58df6b6d6b33f86e8c27ec1944f" prot="public">
          <name>CDVH_LINES_DRAWICON</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a3bef14021c95ac9d00b2205f6088ca1b" kindref="member">code_viewer_lines_icon_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132aa17ed8b8563f60418a94d594ea60f526" prot="public">
          <name>CDVH_LINES_LINENUM</name>
          <briefdescription>
<para>see <ref refid="kernwin_8hpp_1a0a39df098daf8e3fcf5f9c9392905ba7" kindref="member">code_viewer_lines_linenum_t</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132aa54f2e7b911f486082d16dcbbc505088" prot="public">
          <name>CDVH_LINES_ICONMARGIN</name>
          <briefdescription>
<para>see <ref refid="group__ui__scvh__funcs_1ga65aacdc29a9460afa1e8023d204d6a7d" kindref="member">set_code_viewer_lines_icon_margin()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a911775b3a67d25efb76342f26814c86a" prot="public">
          <name>CDVH_LINES_RADIX</name>
          <briefdescription>
<para>see <ref refid="group__ui__scvh__funcs_1gac251992a5e4e09efce8101827915b3f7" kindref="member">set_code_viewer_lines_radix()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132a00ece1ac0d89e5911e4163dbbe5497ed" prot="public">
          <name>CDVH_LINES_ALIGNMENT</name>
          <briefdescription>
<para>see <ref refid="group__ui__scvh__funcs_1ga6907e39497c73d004ea58bb84c704540" kindref="member">set_code_viewer_lines_alignment()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Custom viewer &amp; code viewer handler types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2871" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2870" bodyend="2893"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1a46f00263cb55eb95c7e1dab9e7d204c5" prot="public" static="no">
        <name>msg_notification_t</name>
        <enumvalue id="kernwin_8hpp_1a46f00263cb55eb95c7e1dab9e7d204c5a4427e6896f7cfa4ad4ab509e8b18ad9e" prot="public">
          <name>msg_activated</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The message window is activated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a46f00263cb55eb95c7e1dab9e7d204c5a8c18f85f077c05ad985c403d89dcf91c" prot="public">
          <name>msg_deactivated</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The message window is deactivated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a46f00263cb55eb95c7e1dab9e7d204c5a2fe633ed5622bf9344771e1ed954058e" prot="public">
          <name>msg_click</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Click event. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) x-coordinate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) y-coordinate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>(::view_event_state_t) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>handled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>not handled (invoke default handler) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a46f00263cb55eb95c7e1dab9e7d204c5ab29b7ec23e4b6f9ef9455e551e8e1b45" prot="public">
          <name>msg_dblclick</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Double click event. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) x-coordinate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) y-coordinate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>(::view_event_state_t) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>handled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>not handled (invoke default handler) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a46f00263cb55eb95c7e1dab9e7d204c5a0aef5624e43b2ca76b450011d2c7bd6b" prot="public">
          <name>msg_closed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>View closed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>none</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a46f00263cb55eb95c7e1dab9e7d204c5a718e8e4b9d9951f3ce7fad02228df710" prot="public">
          <name>msg_keydown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Key down event. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>(::view_event_state_t) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>handled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>not handled (invoke default handler) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Notification codes for events in the message window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2915" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2914" bodyend="2947"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5" prot="public" static="no">
        <name>view_notification_t</name>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5a5ee200d431e290a6f220c403d48744be" prot="public">
          <name>view_activated</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A view is activated <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5a81087c0867e87fb9357f23109836e273" prot="public">
          <name>view_deactivated</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A view is deactivated <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5af63271b972fc7aa69148d1ddfdc8b10d" prot="public">
          <name>view_keydown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Key down event <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>(::view_event_state_t) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5ab6c262446dad71d0b0428278d876c237" prot="public">
          <name>view_click</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Click event <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structview__mouse__event__t" kindref="compound">view_mouse_event_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5a7a5dad1c4313ee9a1f81b7b7889e1730" prot="public">
          <name>view_dblclick</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Double click event <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structview__mouse__event__t" kindref="compound">view_mouse_event_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5adc50c961be9a549ee846e235cc70a316" prot="public">
          <name>view_curpos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Cursor position changed <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5a8b5a0e0916ff9393f22bfafd23391fe3" prot="public">
          <name>view_created</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A view is being created. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5a966cbc5bd17184db385cfb341bd8c888" prot="public">
          <name>view_close</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>View closed <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5a069d061df5cd912f3516760fa09be196" prot="public">
          <name>view_switched</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A view&apos;s renderer has changed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rt</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="kernwin_8hpp_1a35329d63b9cd10f0e8064ab3e39c3232" kindref="member">tcc_renderer_type_t</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5a486bb6d4d86a734deb290fec6c2c558c" prot="public">
          <name>view_mouse_over</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The user moved the mouse over (or out of) a node or an edge. This is only relevant in a graph view. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structview__mouse__event__t" kindref="compound">view_mouse_event_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5aa1ea6d7b7d2f41282298489315097985" prot="public">
          <name>view_loc_changed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The location for the view has changed (can be either the <ref refid="classplace__t" kindref="compound">place_t</ref>, the <ref refid="structrenderer__info__t" kindref="compound">renderer_info_t</ref>, or both.) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>now</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structlochist__entry__t" kindref="compound">lochist_entry_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>was</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structlochist__entry__t" kindref="compound">lochist_entry_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5a33867e03e64b83540eab3a74d3b0e669" prot="public">
          <name>view_mouse_moved</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The mouse moved on the view <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>view</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structview__mouse__event__t" kindref="compound">view_mouse_event_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Notification codes sent by the UI for IDAView or custom viewer events. These notification codes should be used together with <ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daad44e1b672d1faa1afc9a760721e6147d" kindref="member">HT_VIEW</ref> hook type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3016" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3015" bodyend="3063"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1aa9005c60f0d26fd1f5b2b79bf89695cf" prot="public" static="no">
        <name>locchange_reason_t</name>
        <enumvalue id="kernwin_8hpp_1aa9005c60f0d26fd1f5b2b79bf89695cfa716afbc78fe426911f9ae435bf064e96" prot="public">
          <name>lcr_unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa9005c60f0d26fd1f5b2b79bf89695cfab94e558c6b92272fb5d98ebd91c70d10" prot="public">
          <name>lcr_goto</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa9005c60f0d26fd1f5b2b79bf89695cfa96aacd47872ccdb92fcdbff45820f1f1" prot="public">
          <name>lcr_user_switch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa9005c60f0d26fd1f5b2b79bf89695cfa8edcf891f3c7c4bd7d634d42eb19a487" prot="public">
          <name>lcr_auto_switch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa9005c60f0d26fd1f5b2b79bf89695cfa17472fd60bf24e0a42472bf17253fb86" prot="public">
          <name>lcr_jump</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa9005c60f0d26fd1f5b2b79bf89695cfad5c4a8c09e9b0718775518571fddf231" prot="public">
          <name>lcr_navigate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa9005c60f0d26fd1f5b2b79bf89695cfa934fed5f679b5a5bcf4c900d881b1a48" prot="public">
          <name>lcr_scroll</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1aa9005c60f0d26fd1f5b2b79bf89695cfa88bff2372d5b8a70d5ad26561931044c" prot="public">
          <name>lcr_internal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3165" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3164" bodyend="3174"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6" prot="public" static="no">
        <name>action_state_t</name>
        <enumvalue id="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a0748cacc02259d5655b1223b308f2ab4" prot="public">
          <name>AST_ENABLE_ALWAYS</name>
          <briefdescription>
<para>enable action and do not call <ref refid="structaction__handler__t_1a0d43898a22107d9a6ddec618a7d4177c" kindref="member">action_handler_t::update()</ref> anymore </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a85575071fd1f7dca6993e29aa94f4538" prot="public">
          <name>AST_ENABLE_FOR_IDB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>enable action for the current idb. call <ref refid="structaction__handler__t_1a0d43898a22107d9a6ddec618a7d4177c" kindref="member">action_handler_t::update()</ref> when a database is opened/closed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a0cb3c633e2d140a7e138eac9fdd0160f" prot="public">
          <name>AST_ENABLE_FOR_WIDGET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>enable action for the current widget. call <ref refid="structaction__handler__t_1a0d43898a22107d9a6ddec618a7d4177c" kindref="member">action_handler_t::update()</ref> when a widget gets/loses focus </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a7e2ac25b9a1fef97ebb8385f0e1b6429" prot="public">
          <name>AST_ENABLE</name>
          <briefdescription>
<para>enable action - call <ref refid="structaction__handler__t_1a0d43898a22107d9a6ddec618a7d4177c" kindref="member">action_handler_t::update()</ref> when anything changes </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a70c085331c0d820f6aaae0ecb13210f8" prot="public">
          <name>AST_DISABLE_ALWAYS</name>
          <briefdescription>
<para>disable action and do not call action_handler_t::action() anymore </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a5bdd258a0f1ec0987c3ef2d317a34171" prot="public">
          <name>AST_DISABLE_FOR_IDB</name>
          <briefdescription>
<para>analog of <ref refid="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a85575071fd1f7dca6993e29aa94f4538" kindref="member">AST_ENABLE_FOR_IDB</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a7801c38e26d269ab2eb76fb6f4243a26" prot="public">
          <name>AST_DISABLE_FOR_WIDGET</name>
          <briefdescription>
<para>analog of <ref refid="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a0cb3c633e2d140a7e138eac9fdd0160f" kindref="member">AST_ENABLE_FOR_WIDGET</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a464b390c787989a124ec30bfd2123c61" prot="public">
          <name>AST_DISABLE</name>
          <briefdescription>
<para>analog of <ref refid="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6a7e2ac25b9a1fef97ebb8385f0e1b6429" kindref="member">AST_ENABLE</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Action states - returned by <ref refid="structaction__handler__t_1a0d43898a22107d9a6ddec618a7d4177c" kindref="member">action_handler_t::update()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3518" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3517" bodyend="3533"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991" prot="public" static="no">
        <name>action_attr_t</name>
        <enumvalue id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991a532bb054c746da3b1ac0bd2be96046f0" prot="public">
          <name>AA_NONE</name>
          <briefdescription>
<para>no effect </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991add7ca7663a1d45d6ca2d2b1445f58d25" prot="public">
          <name>AA_LABEL</name>
          <briefdescription>
<para>see <ref refid="group__ui__uaa__funcs_1gaceff5f0fc4124e24ba30d4fccb170123" kindref="member">update_action_label()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991ae1076aaeb42a8e548a284a3d9651bb70" prot="public">
          <name>AA_SHORTCUT</name>
          <briefdescription>
<para>see <ref refid="group__ui__uaa__funcs_1ga024d67540af40abe540f7540809ca743" kindref="member">update_action_shortcut()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991ac58418ff61a17d43ea7ccadb5e77786f" prot="public">
          <name>AA_TOOLTIP</name>
          <briefdescription>
<para>see <ref refid="group__ui__uaa__funcs_1ga89c92cc9f9e50c88a22b054d713a1a17" kindref="member">update_action_tooltip()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991a8c52ab0434567638be436de9ef00077e" prot="public">
          <name>AA_ICON</name>
          <briefdescription>
<para>see <ref refid="group__ui__uaa__funcs_1ga1e8cddfeef193389f1ac689ac439cc77" kindref="member">update_action_icon()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991afc9a308da25245cf3553d12b961bfd73" prot="public">
          <name>AA_STATE</name>
          <briefdescription>
<para>see <ref refid="group__ui__uaa__funcs_1ga69d4738692d65fa6dd4a5e0883a6b3b2" kindref="member">update_action_state()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991aab5f63d4986d31a177f8fce40b103234" prot="public">
          <name>AA_CHECKABLE</name>
          <briefdescription>
<para>see <ref refid="group__ui__uaa__funcs_1gaa3f83cd5de26cfec3e6a0e34807c09d1" kindref="member">update_action_checkable()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991a844d902355db03e9625b33ccf9dfe38d" prot="public">
          <name>AA_CHECKED</name>
          <briefdescription>
<para>see <ref refid="group__ui__uaa__funcs_1ga8e0065e63d3fe107eba7a9b5d0ff57d4" kindref="member">update_action_checked()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1a8d85d80f86fae2d46370325bec691991a1f26e169a3f8918f4ef664b501f3b88e" prot="public">
          <name>AA_VISIBILITY</name>
          <briefdescription>
<para>see <ref refid="group__ui__uaa__funcs_1ga443e6593a319ad8244daec0961740543" kindref="member">update_action_visibility()</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Codes for getting/setting action attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3619" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3618" bodyend="3629"/>
      </memberdef>
      <memberdef kind="enum" id="kernwin_8hpp_1ad471df939f6c0a5522d89cefc961ac0a" prot="public" static="no">
        <name>cb_id</name>
        <enumvalue id="kernwin_8hpp_1ad471df939f6c0a5522d89cefc961ac0aa0d32e7298192eef72a7d22474abce582" prot="public">
          <name>CB_INIT</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad471df939f6c0a5522d89cefc961ac0aaf81cbf15b91ff48771927b298cd62376" prot="public">
          <name>CB_YES</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad471df939f6c0a5522d89cefc961ac0aa79b5d25d9846855f9b7e6b5ce2d5eb18" prot="public">
          <name>CB_CLOSE</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad471df939f6c0a5522d89cefc961ac0aa7891caf875f3e53ca461808a5c91aa8e" prot="public">
          <name>CB_INVISIBLE</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kernwin_8hpp_1ad471df939f6c0a5522d89cefc961ac0aa3b633cbe43412f61ec7c7bbc9c2ee628" prot="public">
          <name>CB_DESTROYING</name>
          <initializer>= -5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of form callback special values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7574" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7573" bodyend="7580"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="kernwin_8hpp_1a051016ac92685c95d47a7c1850c19632" prot="public" static="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>typedef uchar color_t</definition>
        <argsstring></argsstring>
        <name>color_t</name>
        <briefdescription>
<para>see &lt;<ref refid="lines_8hpp" kindref="compound">lines.hpp</ref>&gt; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="34" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1ad89cffcdd1a8ff71e302854832f95f7a" prot="public" static="no">
        <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
        <definition>typedef uval_t bmask_t</definition>
        <argsstring></argsstring>
        <name>bmask_t</name>
        <briefdescription>
<para>see &lt;<ref refid="enum_8hpp" kindref="compound">enum.hpp</ref>&gt; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="35" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a320dc6698b7075a653144bbdf202b30e" prot="public" static="no">
        <type><ref refid="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" kindref="member">tid_t</ref></type>
        <definition>typedef tid_t enum_t</definition>
        <argsstring></argsstring>
        <name>enum_t</name>
        <briefdescription>
<para>see &lt;<ref refid="enum_8hpp" kindref="compound">enum.hpp</ref>&gt; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="36" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__simpleline_1gac893a23d04b0b0ddc10cc44f4f9f01e6" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structsimpleline__t" kindref="compound">simpleline_t</ref> &gt;</type>
        <definition>typedef qvector&lt;simpleline_t&gt; strvec_t</definition>
        <argsstring></argsstring>
        <name>strvec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A collection of simple lines to populate a custom view. This is an example of what you would pass as the &apos;ud&apos; argument to <ref refid="kernwin_8hpp_1a1051078c753712041521d59c93be3e74" kindref="member">create_custom_viewer()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1485" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1ad0b9d82df9a124a71e3aa147c3d89b66" prot="public" static="no">
        <type>bool idaapi</type>
        <definition>typedef bool idaapi lochist_entry_cvt_t(lochist_entry_t *dst, const lochist_entry_t &amp;src, TWidget *view)</definition>
        <argsstring>(lochist_entry_t *dst, const lochist_entry_t &amp;src, TWidget *view)</argsstring>
        <name>lochist_entry_cvt_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts from an entry with a given place type, to another entry, with another place type, to be used with the view &apos;view&apos;. Typically used when views are synchronized. The &apos;<ref refid="structrenderer__info__t" kindref="compound">renderer_info_t</ref>&apos; part of &apos;dst&apos; will be pre-filled with the current <ref refid="structrenderer__info__t" kindref="compound">renderer_info_t</ref> of &apos;view&apos;, while the &apos;<ref refid="classplace__t" kindref="compound">place_t</ref>&apos; instance will always be NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1749" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1ada557233954b7d5dcfe38ff54e0ecb91" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classtwinline__t" kindref="compound">twinline_t</ref> &gt;</type>
        <definition>typedef qvector&lt;twinline_t&gt; text_t</definition>
        <argsstring></argsstring>
        <name>text_t</name>
        <briefdescription>
<para>A group of lines in a text window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1851" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1848" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a0d7d8eb2a495206c4d3b1e64073fbe29" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="kernwin_8hpp_1ada557233954b7d5dcfe38ff54e0ecb91" kindref="member">text_t</ref> &gt;</type>
        <definition>typedef qvector&lt;text_t&gt; texts_t</definition>
        <argsstring></argsstring>
        <name>texts_t</name>
        <briefdescription>
<para>A collection of subdivisions of a text window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1853" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1853" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1ad0bcc5d93684fb9706e2b6bca80fa1ff" prot="public" static="no">
        <type>int</type>
        <definition>typedef int twidget_type_t</definition>
        <argsstring></argsstring>
        <name>twidget_type_t</name>
        <briefdescription>
<para><ref refid="group___b_w_n__" kindref="compound">Window types</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1972" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1972" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__add__chooser__command_1ga1e555752c06a12f625b626659e2e36f5" prot="public" static="no">
        <type><ref refid="structchooser__t_1_1cbret__t" kindref="compound">chooser_t::cbret_t</ref> idaapi</type>
        <definition>typedef chooser_t::cbret_t idaapi chooser_cb_t(chooser_t *chobj, ssize_t n)</definition>
        <argsstring>(chooser_t *chobj, ssize_t n)</argsstring>
        <name>chooser_cb_t</name>
        <briefdescription>
<para>single selection chooser callback </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2804" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2804" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__add__chooser__command_1ga620257e72596dd5599bab462aed01e9e" prot="public" static="no">
        <type><ref refid="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27f" kindref="member">chooser_base_t::cbres_t</ref> idaapi</type>
        <definition>typedef chooser_base_t::cbres_t idaapi chooser_multi_cb_t(chooser_multi_t *chobj, sizevec_t *sel)</definition>
        <argsstring>(chooser_multi_t *chobj, sizevec_t *sel)</argsstring>
        <name>chooser_multi_cb_t</name>
        <briefdescription>
<para>multi selection chooser callback </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2808" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2808" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1aeb69e29b09b427d7c6fe99f1c234a5a8" prot="public" static="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> idaapi</type>
        <definition>typedef uint32 idaapi nav_colorizer_t(ea_t ea, asize_t nbytes)</definition>
        <argsstring>(ea_t ea, asize_t nbytes)</argsstring>
        <name>nav_colorizer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Navigation band colorizer function.</para><para>If ea==BADADDR, then &apos;nbytes&apos; is a navaddr_type_t, and the colorizer is in charge of returning the color associated to that type of address. This is used for maintaining the legend in-sync with the colors used to display the addresses in the navigation bar.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>address to calculate the color of, or BADADDR (see above) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes, this can be ignored for quick&amp;dirty approach </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>color of the specified address in RGB </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2858" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1af540b924fc0f664b3ce19a6a1f6eb3eb" prot="public" static="no">
        <type>int</type>
        <definition>typedef int view_event_state_t</definition>
        <argsstring></argsstring>
        <name>view_event_state_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2910" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2910" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a511b432c1bbf7588ef8247474f5ee62f" prot="public" static="no">
        <type>bool idaapi</type>
        <definition>typedef bool idaapi custom_viewer_keydown_t(TWidget *cv, int vk_key, int shift, void *ud)</definition>
        <argsstring>(TWidget *cv, int vk_key, int shift, void *ud)</argsstring>
        <name>custom_viewer_keydown_t</name>
        <briefdescription>
<para>The user has pressed a key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3068" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3068" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1af624d89dcb56d3a0a3d629b2e0d604d5" prot="public" static="no">
        <type>void idaapi</type>
        <definition>typedef void idaapi custom_viewer_popup_t(TWidget *cv, void *ud)</definition>
        <argsstring>(TWidget *cv, void *ud)</argsstring>
        <name>custom_viewer_popup_t</name>
        <briefdescription>
<para>The user right clicked. See <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a534e3ef3ffe21991365efd0b772d8912" kindref="member">ui_populating_widget_popup</ref>, too. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3073" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3073" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a95cbfac16669a01c9d5e2f49ac7b0a7b" prot="public" static="no">
        <type>void idaapi</type>
        <definition>typedef void idaapi custom_viewer_mouse_moved_t(TWidget *cv, int shift, view_mouse_event_t *e, void *ud)</definition>
        <argsstring>(TWidget *cv, int shift, view_mouse_event_t *e, void *ud)</argsstring>
        <name>custom_viewer_mouse_moved_t</name>
        <briefdescription>
<para>The user moved the mouse. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3078" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3078" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1adefb66562d8615c65b5c9fc3c69121f5" prot="public" static="no">
        <type>bool idaapi</type>
        <definition>typedef bool idaapi custom_viewer_click_t(TWidget *cv, int shift, void *ud)</definition>
        <argsstring>(TWidget *cv, int shift, void *ud)</argsstring>
        <name>custom_viewer_click_t</name>
        <briefdescription>
<para>The user clicked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3083" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3083" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a621326e0be555411af29350dbca52a6d" prot="public" static="no">
        <type>bool idaapi</type>
        <definition>typedef bool idaapi custom_viewer_dblclick_t(TWidget *cv, int shift, void *ud)</definition>
        <argsstring>(TWidget *cv, int shift, void *ud)</argsstring>
        <name>custom_viewer_dblclick_t</name>
        <briefdescription>
<para>The user double clicked. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3088" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3088" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a23111082d5d56fc98c80b9ca259849a5" prot="public" static="no">
        <type>void idaapi</type>
        <definition>typedef void idaapi custom_viewer_curpos_t(TWidget *cv, void *ud)</definition>
        <argsstring>(TWidget *cv, void *ud)</argsstring>
        <name>custom_viewer_curpos_t</name>
        <briefdescription>
<para>Cursor position has been changed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3093" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3093" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1adaea7631506cc6d8d88f02b5e690f735" prot="public" static="no">
        <type>void idaapi</type>
        <definition>typedef void idaapi custom_viewer_close_t(TWidget *cv, void *ud)</definition>
        <argsstring>(TWidget *cv, void *ud)</argsstring>
        <name>custom_viewer_close_t</name>
        <briefdescription>
<para>Custom viewer is being destroyed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3098" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3098" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1ae8f32f231b2b3d4b569500608cb75873" prot="public" static="no">
        <type>int idaapi</type>
        <definition>typedef int idaapi custom_viewer_help_t(TWidget *cv, void *ud)</definition>
        <argsstring>(TWidget *cv, void *ud)</argsstring>
        <name>custom_viewer_help_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Custom viewer: the user pressed F1 If the return value != -1, it is treated as a help context to display (from ida.hlp) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3104" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a7cca1323797d8ddf7b824667a8437661" prot="public" static="no">
        <type>void idaapi</type>
        <definition>typedef void idaapi custom_viewer_adjust_place_t(TWidget *v, lochist_entry_t *loc, void *ud)</definition>
        <argsstring>(TWidget *v, lochist_entry_t *loc, void *ud)</argsstring>
        <name>custom_viewer_adjust_place_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fine-tune loc-&gt;place() according to the x position.</para><para>You can consider that the <ref refid="classplace__t" kindref="compound">place_t</ref> object is a &apos;row cursor&apos; in the list of lines that fill the screen. But, it is only a &apos;vertical&apos; cursor: e.g., the <ref refid="classsimpleline__place__t" kindref="compound">simpleline_place_t</ref> has the &apos;n&apos; mumber, which specifies what line the <ref refid="classplace__t" kindref="compound">place_t</ref> corresponds to, in the backing strvec_t instance.</para><para>However, some views have a place that can be sensitive to the X coordinates of the view&apos;s cursor. Think of the &quot;Hex View-1&quot;, or the &quot;Pseudocode-A&quot; views: when moving the cursor on the X axis, the &apos;row cursor&apos; will not change (since we are moving on the same line), but the corresponding &apos;ea_t&apos; might.</para><para>For such tricky situations, we provide the following callback, that will provide the ability to update the <ref refid="classplace__t" kindref="compound">place_t</ref>&apos;s internal state so that it really reflects the current cursor position. Most custom viewers will not need to implement this, but if some data in your <ref refid="classplace__t" kindref="compound">place_t</ref> instances is dependent upon the X coordinate of the cursor, you&apos;ll probably want to.</para><para>Called whenever the user moves the cursor around (mouse, keyboard)</para><para>Note that this callback shouldn&apos;t touch the &apos;<ref refid="structrenderer__info__t" kindref="compound">renderer_info_t</ref>&apos; part of &apos;loc&apos;: doing so will result in undefined behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3133" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a5a9ad9fe1808f4b3757275399ea12c3f" prot="public" static="no">
        <type>int idaapi</type>
        <definition>typedef int idaapi custom_viewer_get_place_xcoord_t(TWidget *v, const place_t *pline, const place_t *pitem, void *ud)</definition>
        <argsstring>(TWidget *v, const place_t *pline, const place_t *pitem, void *ud)</argsstring>
        <name>custom_viewer_get_place_xcoord_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does the line pointed to by pline include pitem, and if so at what X coordinate?</para><para><ref refid="classplace__t" kindref="compound">place_t</ref> instances can be considered as a &apos;cursor&apos; in a set of lines (see custom_viewer_adjust_place_t), but they can be &apos;tuned&apos; to correctly represent the current position (e.g., hexrays decompiler plugins tune its <ref refid="classplace__t" kindref="compound">place_t</ref> instances so they contain the real, current &apos;ea_t&apos;, that corresponds to the C-like expression that&apos;s shown at the X coordinate within that line.)</para><para>But then, when the viewer has to determine whether a certain <ref refid="classtwinline__t" kindref="compound">twinline_t</ref> in fact displays the current place, the sublcass&apos;s implementation of <ref refid="classplace__t_1adb067d4ab607933cf2b15b951457273c" kindref="member">place_t::compare()</ref> might lead it to think that the current <ref refid="classtwinline__t" kindref="compound">twinline_t</ref>&apos;s <ref refid="classplace__t" kindref="compound">place_t</ref> is not correct (e.g., because the &apos;ea_t&apos; has been fine-tuned according to the caret&apos;s X coordinates.)</para><para>Thus, if your plugin implements custom_viewer_adjust_place_t, you probably want to implement this as well, or refreshes might be unnecessarily frequent, leading to a worse user experience.</para><para>This is typically called when the user moves the cursor around. return -1 if pitem is not included in pline -2 pitem points to the entire line &gt;= 0 for the X coordinate within the pline, where pitem points </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3161" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a1400c04c3b5383982ec0dcd06aa2bfb3" prot="public" static="no">
        <type>int idaapi</type>
        <definition>typedef int idaapi custom_viewer_can_navigate_t(TWidget *v, const lochist_entry_t *now, const locchange_md_t &amp;md, void *ud)</definition>
        <argsstring>(TWidget *v, const lochist_entry_t *now, const locchange_md_t &amp;md, void *ud)</argsstring>
        <name>custom_viewer_can_navigate_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The user asked to navigate to the given location.</para><para>This gives the view the possibility of declining the move. Reasons for this can be:<itemizedlist>
<listitem><para>the location cannot be displayed,</para></listitem><listitem><para>going there requires a long-running operation, that can be canceled by the user (e.g., in case of the hexrays plugins: during decompilation of the target function.)</para></listitem><listitem><para>...</para></listitem></itemizedlist>
</para><para>This is called before the new location is committed to the view&apos;s history.</para><para>return 0 if the move is accepted != 0 otherwise </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3210" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1ac70830c9f2ffd3f3097f4225523ee54e" prot="public" static="no">
        <type>void idaapi</type>
        <definition>typedef void idaapi custom_viewer_location_changed_t(TWidget *v, const lochist_entry_t *was, const lochist_entry_t *now, const locchange_md_t &amp;md, void *ud)</definition>
        <argsstring>(TWidget *v, const lochist_entry_t *was, const lochist_entry_t *now, const locchange_md_t &amp;md, void *ud)</argsstring>
        <name>custom_viewer_location_changed_t</name>
        <briefdescription>
<para>The viewer&apos;s location (i.e., place, or cursor) changed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3219" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a6b5b065be98dc46a49078bde5538a88d" prot="public" static="no">
        <type>void idaapi</type>
        <definition>typedef void idaapi code_viewer_lines_click_t(TWidget *c, const place_t *p, int pos, int shift, void *ud)</definition>
        <argsstring>(TWidget *c, const place_t *p, int pos, int shift, void *ud)</argsstring>
        <name>code_viewer_lines_click_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The user clicked, right clicked or double clicked. pos: the clicked icon number. -1 means the click occurred on space not reserved to icons. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3232" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a3bef14021c95ac9d00b2205f6088ca1b" prot="public" static="no">
        <type>int idaapi</type>
        <definition>typedef int idaapi code_viewer_lines_icon_t(TWidget *cv, const place_t *p, int *pos, void *ud)</definition>
        <argsstring>(TWidget *cv, const place_t *p, int *pos, void *ud)</argsstring>
        <name>code_viewer_lines_icon_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Icon drawing. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>the icon number, will be 0,1,2,3... <linebreak/>
 can be modified to skip positions and draw at the specified one </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the id of the icon to draw. If bitwise or&apos;ed with 0x80000000, IDA calls this function once more with pos+1 to retrieve one more icon. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3241" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a0a39df098daf8e3fcf5f9c9392905ba7" prot="public" static="no">
        <type>bool idaapi</type>
        <definition>typedef bool idaapi code_viewer_lines_linenum_t(TWidget *cv, const place_t *p, uval_t *num, void *ud)</definition>
        <argsstring>(TWidget *cv, const place_t *p, uval_t *num, void *ud)</argsstring>
        <name>code_viewer_lines_linenum_t</name>
        <briefdescription>
<para>Calculate the line number. Return false to not print any number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3246" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a7a9ee2e9b2099b06116f9690fb90592f" prot="public" static="no">
        <type>void idaapi</type>
        <definition>typedef void idaapi ss_restore_cb_t(const char *errmsg, void *ud)</definition>
        <argsstring>(const char *errmsg, void *ud)</argsstring>
        <name>ss_restore_cb_t</name>
        <briefdescription>
<para>Snapshot restoration completion callback. see <ref refid="kernwin_8hpp_1a712379fbd4f302bab3389063d9a3c794" kindref="member">restore_database_snapshot()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3405" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a7a4a411738413ddfec4eaacb05cf21c8" prot="public" static="no">
        <type><ref refid="structaction__ctx__base__t" kindref="compound">action_ctx_base_t</ref></type>
        <definition>typedef action_ctx_base_t action_activation_ctx_t</definition>
        <argsstring></argsstring>
        <name>action_activation_ctx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instances of this class will be filled with information that is commonly used by actions when they need to be activated. This is so they don&apos;t have to perform (possibly) costly operations more than once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3503" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1ac6e0aff49f47ef359592ff6ba386c858" prot="public" static="no">
        <type><ref refid="structaction__ctx__base__t" kindref="compound">action_ctx_base_t</ref></type>
        <definition>typedef action_ctx_base_t action_update_ctx_t</definition>
        <argsstring></argsstring>
        <name>action_update_ctx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instances of this class will be filled with information that is commonly used by actions when they need to update. This is so they don&apos;t have to perform (possibly) costly operations more than once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3510" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1ab139f3a2bfa7fb7cc0688eaca8475e86" prot="public" static="no">
        <type>struct <ref refid="struct____qtimer__t" kindref="compound">__qtimer_t</ref> *</type>
        <definition>typedef struct __qtimer_t * qtimer_t</definition>
        <argsstring></argsstring>
        <name>qtimer_t</name>
        <briefdescription>
<para>Timer opaque handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3958" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1a435eebdaa696149cdba8213abf460465" prot="public" static="no">
        <type>int idaapi</type>
        <definition>typedef int idaapi formchgcb_t(int field_id, form_actions_t &amp;fa)</definition>
        <argsstring>(int field_id, form_actions_t &amp;fa)</argsstring>
        <name>formchgcb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback. Called when an input field is modified. The callback will be also called before displaying the form and as soon as the user presses OK. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field_id</parametername>
</parameternamelist>
<parameterdescription>
<para>id of the modified field </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>form is going to be displayed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-2</parametername>
</parameternamelist>
<parameterdescription>
<para>form is going to be closed with OK. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>form will be closed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6306" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="kernwin_8hpp_1ac45b0287a792bd1745fc5cd54a24978b" prot="public" static="no">
        <type>int idaapi</type>
        <definition>typedef int idaapi buttoncb_t(int button_code, form_actions_t &amp;fa)</definition>
        <argsstring>(int button_code, form_actions_t &amp;fa)</argsstring>
        <name>buttoncb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback. Called when a button is clicked. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>button_code</parametername>
</parameternamelist>
<parameterdescription>
<para>button code as specified in the form </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>currently ignored </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6313" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6313" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="kernwin_8hpp_1ac113029c6eff6a6476cd787a6a59f0e8" prot="public" static="no" mutable="no">
        <type>idaman <ref refid="unioncallui__t" kindref="compound">callui_t</ref> ida_export_data(idaapi *</type>
        <definition>idaman callui_t ida_export_data(idaapi* callui) (ui_notification_t what,...)</definition>
        <argsstring>)(ui_notification_t what,...)</argsstring>
        <name>callui</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to the user-interface dispatcher function. This pointer is in the kernel </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1118" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kernwin_8hpp_1a2d9b7e43291ec52f217b47e417579353" prot="public" static="no" mutable="no">
        <type>idaman <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> ida_export_data</type>
        <definition>idaman uint32 ida_export_data debug</definition>
        <argsstring></argsstring>
        <name>debug</name>
        <briefdescription>
<para>Controls debug messages - combination of <ref refid="group___i_d_a___d_e_b_u_g__" kindref="compound">IDA debug bits</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2110" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kernwin_8hpp_1a38e373464e8e910e1bcc78446168c677" prot="public" static="no" mutable="no">
        <type>void(idaapi *</type>
        <definition>void(idaapi* range_marker) (ea_t ea, asize_t size)</definition>
        <argsstring>)(ea_t ea, asize_t size)</argsstring>
        <name>range_marker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to range marker function (for idaviews and hexviews) This pointer is initialized by <ref refid="kernwin_8hpp_1a07fff9a67f8c5d6b3f62e26f0505f72e" kindref="member">setup_range_marker()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5097" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="kernwin_8hpp_1a9adabee8c399bb2930c62710600fdfd1" prot="public" static="no" mutable="no">
        <type>idaman bool ida_export_data</type>
        <definition>idaman bool ida_export_data batch</definition>
        <argsstring></argsstring>
        <name>batch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If this variable is set, then dialog boxes will not appear on the screen. Warning/info messages are shown in the messages window. <linebreak/>
The default value of user input dialogs will be returned to the caller immediately. <linebreak/>
This variable is used to enable unattended work of ida. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5756" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5756" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kernwin_8hpp_1a9d0ac6db047836dd280df24870dafb3f" prot="public" static="no" mutable="no">
        <type>idaman bool ida_export_data</type>
        <definition>idaman bool ida_export_data errorexit</definition>
        <argsstring></argsstring>
        <name>errorexit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Exiting because of a a fatal error? Is true if we are exiting with from the <ref refid="kernwin_8hpp_1a6c448838751433bfda04dcdb8d8b1457" kindref="member">error()</ref> function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5762" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5762" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="kernwin_8hpp_1a0cdf3340f3046a1e5bb768a56d51c059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export init_database</definition>
        <argsstring>(int argc, const char *const *argv, int *newfile)</argsstring>
        <name>init_database</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>newfile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>After calling init_kernel() the ui must call this function. It will open the database specified in the command line. If the database did not exist, a new database will be created and the input file will be loaded. <simplesect kind="return"><para>0-ok, otherwise an exit code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a85886325b24cb803156c2be20a7da699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export term_database</definition>
        <argsstring>(void)</argsstring>
        <name>term_database</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The database termination function. This function should be called to close the database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1acf7673cc4a75c9ee937a9521bf652878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman NORETURN void ida_export</type>
        <definition>idaman NORETURN void ida_export verror</definition>
        <argsstring>(const char *format, va_list va)</argsstring>
        <name>verror</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>See <ref refid="kernwin_8hpp_1a6c448838751433bfda04dcdb8d8b1457" kindref="member">error()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a2c889ab880b13ac913036db1c78d65de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export vshow_hex</definition>
        <argsstring>(const void *dataptr, size_t len, const char *format, va_list va)</argsstring>
        <name>vshow_hex</name>
        <param>
          <type>const void *</type>
          <declname>dataptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>See <ref refid="kernwin_8hpp_1a24cdf94859878f0792042fb0dc094506" kindref="member">show_hex()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a729215e086537f1cfd0f0ec358efe8a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export vshow_hex_file</definition>
        <argsstring>(linput_t *li, int64 pos, size_t count, const char *format, va_list va)</argsstring>
        <name>vshow_hex_file</name>
        <param>
          <type>linput_t *</type>
          <declname>li</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>See <ref refid="kernwin_8hpp_1aaefca28fffed7bb14848366423fe1a09" kindref="member">show_hex_file()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a939d85043da52ec45cc483ecf1ebec55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
        <definition>ssize_t get_kernel_version</definition>
        <argsstring>(char *buf, size_t bufsize)</argsstring>
        <name>get_kernel_version</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
<para>Get IDA kernel version (in a string like &quot;5.1&quot;). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1164" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1164" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1addfa664de94117b20f0ae2e0fa3beb5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export l_compare</definition>
        <argsstring>(const place_t *t1, const place_t *t2)</argsstring>
        <name>l_compare</name>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para>compare places and their lnnums </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a589209834e2c04dcedea0565e7af438f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export hexplace_t__out_one_item</definition>
        <argsstring>(const hexplace_t *_this, outctx_base_t &amp;ctx, const hexplace_gen_t *hg, int itemno, color_t *color, color_t patch_or_edit)</argsstring>
        <name>hexplace_t__out_one_item</name>
        <param>
          <type>const <ref refid="classhexplace__t" kindref="compound">hexplace_t</ref> *</type>
          <declname>_this</declname>
        </param>
        <param>
          <type><ref refid="structoutctx__base__t" kindref="compound">outctx_base_t</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="structhexplace__gen__t" kindref="compound">hexplace_gen_t</ref> *</type>
          <declname>hg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>itemno</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a051016ac92685c95d47a7c1850c19632" kindref="member">color_t</ref> *</type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a051016ac92685c95d47a7c1850c19632" kindref="member">color_t</ref></type>
          <declname>patch_or_edit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ad03a67f43a244bc1e858e0538faf6661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export hexplace_t__ea2str</definition>
        <argsstring>(char *buf, size_t bufsize, const hexplace_gen_t *hg, ea_t ea)</argsstring>
        <name>hexplace_t__ea2str</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>const <ref refid="structhexplace__gen__t" kindref="compound">hexplace_gen_t</ref> *</type>
          <declname>hg</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a04f9f20370fcbbf7a8a05bb0c7e70687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export internal_register_place_class</definition>
        <argsstring>(const place_t *tmplate, int flags, const plugin_t *owner, int sdk_version)</argsstring>
        <name>internal_register_place_class</name>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>tmplate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classplugin__t" kindref="compound">plugin_t</ref> *</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sdk_version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1662" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a21e74833f8eedcf3cbc1447a691d5eb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int register_place_class</definition>
        <argsstring>(const place_t *tmplate, int flags, const plugin_t *owner)</argsstring>
        <name>register_place_class</name>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>tmplate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>const <ref refid="classplugin__t" kindref="compound">plugin_t</ref> *</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register information about a <ref refid="classplace__t" kindref="compound">place_t</ref> class.</para><para>The kernel will not take ownership, nor delete the &apos;tmplate&apos; instance. Therefore, it&apos;s up to the plugin to handle it (the recommended way of doing it is to pass address of a const static instance.) In addition, the <ref refid="classplace__t" kindref="compound">place_t</ref> will be automatically unregistered when the owner plugin is unloaded from memory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmplate</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classplace__t" kindref="compound">place_t</ref> template </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>or&apos;ed combination of PCF_* flags </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>the owner plugin of the <ref refid="classplace__t" kindref="compound">place_t</ref> type. Cannot be NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classplace__t" kindref="compound">place_t</ref> ID, or -1 if an error occurred. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1682" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1682" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1af5a1331e853f2ba70d1f9ac266e4db46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman const <ref refid="classplace__t" kindref="compound">place_t</ref> *ida_export</type>
        <definition>idaman const place_t* ida_export get_place_class</definition>
        <argsstring>(int *out_flags, int *out_sdk_version, int id)</argsstring>
        <name>get_place_class</name>
        <param>
          <type>int *</type>
          <declname>out_flags</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_sdk_version</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get information about a previously-registered <ref refid="classplace__t" kindref="compound">place_t</ref> class. See also <ref refid="kernwin_8hpp_1a21e74833f8eedcf3cbc1447a691d5eb4" kindref="member">register_place_class()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>output flags (can be NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_sdk_version</parametername>
</parameternamelist>
<parameterdescription>
<para>sdk version the place was created with (can be NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>place class ID </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classplace__t" kindref="compound">place_t</ref> template, or NULL if not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1697" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a3bb30f5c9361caa93f2c73be8b0896f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
        <definition>const place_t* get_place_class_template</definition>
        <argsstring>(int id)</argsstring>
        <name>get_place_class_template</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>See <ref refid="kernwin_8hpp_1af5a1331e853f2ba70d1f9ac266e4db46" kindref="member">get_place_class()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1704" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1704" bodyend="1707"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1afb0e66b16c18b15252eefa69a496a1a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_place_class_ea_capable</definition>
        <argsstring>(int id)</argsstring>
        <name>is_place_class_ea_capable</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>See <ref refid="kernwin_8hpp_1af5a1331e853f2ba70d1f9ac266e4db46" kindref="member">get_place_class()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1711" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1711" bodyend="1717"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a7f7d63d4aa0affe3cbdaa6e346cc9777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export get_place_class_id</definition>
        <argsstring>(const char *name)</argsstring>
        <name>get_place_class_id</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the place class ID for the place that has been registered as &apos;name&apos;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the class name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the place class ID, or -1 if not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1723" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a5458a31916b33ce75bb13e7f5b6afe39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export register_loc_converter</definition>
        <argsstring>(const char *p1, const char *p2, lochist_entry_cvt_t *cvt)</argsstring>
        <name>register_loc_converter</name>
        <param>
          <type>const char *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>p2</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1ad0b9d82df9a124a71e3aa147c3d89b66" kindref="member">lochist_entry_cvt_t</ref> *</type>
          <declname>cvt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a converter, that will be used for the following reasons:<itemizedlist>
<listitem><para>determine what view can be synchronized with what other view</para></listitem><listitem><para>when views are synchronized, convert the location from one view, into an appropriate location in the other view</para></listitem><listitem><para>if one of p1 or p2 is &quot;idaplace_t&quot;, and the other is PCF_EA_CAPABLE, then the converter will also be called when the user wants to jump to an address (e.g., by pressing &quot;g&quot;). In that case, from&apos;s <ref refid="classplace__t" kindref="compound">place_t</ref>&apos;s lnnum will be set to -1 (i.e., can be used to descriminate between proper synchronizations, and jump to&apos;s if needed.)</para></listitem></itemizedlist>
</para><para>Note: the converter can be used to convert in both directions, and can be called with its &apos;from&apos; being of the class of &apos;p1&apos;, or &apos;p2&apos;. If you want your converter to work in only one direction (e.g., from &apos;my_dictionary_place_t&apos; -&gt; &apos;my_definition_place_t&apos;), you can have it return false when it is called with a <ref refid="structlochist__entry__t" kindref="compound">lochist_entry_t</ref>&apos;s whose place is of type &apos;my_definition_place_t&apos;.</para><para>Note: Whenever one of the &apos;p1&apos; or &apos;p2&apos; places is unregistered, corresponding converters will be automatically unregistered as well.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the first <ref refid="classplace__t" kindref="compound">place_t</ref> class this converter can convert from/to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the second <ref refid="classplace__t" kindref="compound">place_t</ref> class this converter can convert from/to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cvt</parametername>
</parameternamelist>
<parameterdescription>
<para>the converter </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1778" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a8c8e6c5b7ea6b9c01f3a4005e88cc4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="kernwin_8hpp_1ad0b9d82df9a124a71e3aa147c3d89b66" kindref="member">lochist_entry_cvt_t</ref> *ida_export</type>
        <definition>idaman lochist_entry_cvt_t* ida_export lookup_loc_converter</definition>
        <argsstring>(const char *p1, const char *p2)</argsstring>
        <name>lookup_loc_converter</name>
        <param>
          <type>const char *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search for a place converter from <ref refid="structlochist__entry__t" kindref="compound">lochist_entry_t</ref>&apos;s with places of type &apos;p1&apos; to <ref refid="structlochist__entry__t" kindref="compound">lochist_entry_t</ref>&apos;s with places of type &apos;p2&apos;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classplace__t" kindref="compound">place_t</ref> class to convert from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classplace__t" kindref="compound">place_t</ref> class to convert to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a converter, or NULL if none found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1789" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a50018b271f5c63814508d223909d1050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export request_refresh</definition>
        <argsstring>(uint64 mask, bool cnd=true)</argsstring>
        <name>request_refresh</name>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>cnd</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request a refresh of a builtin window. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___i_w_i_d__" kindref="compound">Window refresh flags</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnd</parametername>
</parameternamelist>
<parameterdescription>
<para>set if true or clear flag otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1960" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a7e7140e6df96345ac9f3e435fc9fffeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clear_refresh_request</definition>
        <argsstring>(uint64 mask)</argsstring>
        <name>clear_refresh_request</name>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1961" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="1961" bodyend="1961"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a24ae582a359cbe0ef01010ee009c24d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export is_refresh_requested</definition>
        <argsstring>(uint64 mask)</argsstring>
        <name>is_refresh_requested</name>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a refresh request state <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___i_w_i_d__" kindref="compound">Window refresh flags</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the state (set or cleared) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="1968" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a4b6856db44a73fef314306a443e0d92c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_chooser_widget</definition>
        <argsstring>(twidget_type_t t)</argsstring>
        <name>is_chooser_widget</name>
        <param>
          <type><ref refid="kernwin_8hpp_1ad0bcc5d93684fb9706e2b6bca80fa1ff" kindref="member">twidget_type_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Does the given widget type specify a chooser widget? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2092" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2092" bodyend="2101"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ae671b2503bec5f749a7c1e802af44335" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ida_deb</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>ida_deb</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display debug message. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ida_debug_bits</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___i_d_a___d_e_b_u_g__" kindref="compound">IDA debug bits</ref>, also see <ref refid="kernwin_8hpp_1a2d9b7e43291ec52f217b47e417579353" kindref="member">debug</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf()-style format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes output Note: use deb() macro </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2150" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2150" bodyend="2157"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a9c17a1e1cdb82ac02f9f871fa49f92e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export ida_checkmem</definition>
        <argsstring>(const char *file, int line)</argsstring>
        <name>ida_checkmem</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Checking heap is not available anymore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a24cdf94859878f0792042fb0dc094506" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void show_hex</definition>
        <argsstring>(const void *dataptr, size_t len, const char *format,...)</argsstring>
        <name>show_hex</name>
        <param>
          <type>const void *</type>
          <declname>dataptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Display hex dump in the messages window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2175" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2175" bodyend="2185"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aaefca28fffed7bb14848366423fe1a09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void show_hex_file</definition>
        <argsstring>(linput_t *li, int64 pos, size_t count, const char *format,...)</argsstring>
        <name>show_hex_file</name>
        <param>
          <type>linput_t *</type>
          <declname>li</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Display hex dump of a file in the messages window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2190" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2190" bodyend="2201"/>
      </memberdef>
      <memberdef kind="function" id="group__choosers_1gadefb0a59b077bb1872b25741366ca715" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
        <definition>ssize_t choose</definition>
        <argsstring>(chooser_base_t *ch, const void *def_item)</argsstring>
        <name>choose</name>
        <param>
          <type><ref refid="structchooser__base__t" kindref="compound">chooser_base_t</ref> *</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>def_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a generic list chooser (n-column) and allow the user to select an item. The closed() callback will be called when the window is closed. In addition, after the window is closed, the chooser instance will be delete()d unless CH_KEEP is specified (useful for global, or stack-allocated chooser instances, that must not be deleted.) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>def_item</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to some data that indentifies the default item For modal choosers: </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the selected item (0-based) </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a100e0d1651b8811c7df60f02d991ef6e" kindref="member">chooser_base_t::NO_SELECTION</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>the user refused to choose anything (pressed Esc). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a403da04064cc128f8b3c349032275bf0" kindref="member">chooser_base_t::EMPTY_CHOOSER</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>the chooser was not created because the init() callback has returned &apos;false&apos; For non-modal choosers: </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>the chooser was created successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a1c9909c9fe579274c2a3392f06fdab53" kindref="member">chooser_base_t::ALREADY_EXISTS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>did not open a new chooser because a chooser with the same object is already open. If CH_FORCE_DEFAULT is set, the cursor of the chooser will be positioned to the new item.</para></parameterdescription>
</parameteritem>
</parameterlist>
Invoke the chooser with a chooser object (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada01484e487b4793359f749d2bf6e1b301" kindref="member">chtype_generic</ref>). see the <ref refid="group__choosers_1gadefb0a59b077bb1872b25741366ca715" kindref="member">choose()</ref> function above </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2781" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5564" bodyend="5567"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aa4e62dc7bc44fc33fe3776d14cf0936f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="kernwin_8hpp_1aeb69e29b09b427d7c6fe99f1c234a5a8" kindref="member">nav_colorizer_t</ref> *</type>
        <definition>nav_colorizer_t* set_nav_colorizer</definition>
        <argsstring>(nav_colorizer_t *func)</argsstring>
        <name>set_nav_colorizer</name>
        <param>
          <type><ref refid="kernwin_8hpp_1aeb69e29b09b427d7c6fe99f1c234a5a8" kindref="member">nav_colorizer_t</ref> *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Install new navigation band colorizer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a33d7ddc2f798a3339557838babcff707" kindref="member">ui_set_nav_colorizer</ref>). <simplesect kind="return"><para>the previous colorizer function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2864" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2864" bodyend="2867"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a9d2f73181c916e3e05084aa62a7a772e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CASSERT</definition>
        <argsstring>(sizeof(locchange_md_t)==sizeof(uint32))</argsstring>
        <name>CASSERT</name>
        <param>
          <type>sizeof(<ref refid="classlocchange__md__t" kindref="compound">locchange_md_t</ref>)</type>
          <defval>=sizeof(<ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref>)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ac053dae7ec625cda0eb4b95a16bc0c0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_action_enabled</definition>
        <argsstring>(action_state_t s)</argsstring>
        <name>is_action_enabled</name>
        <param>
          <type><ref refid="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6" kindref="member">action_state_t</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Check if the given action state is one of AST_ENABLE*. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3538" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3538" bodyend="3541"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a73b4671b6281e8977229090fa9bfa2d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int</type>
        <definition>THREAD_SAFE int execute_ui_requests</definition>
        <argsstring>(ui_requests_t *reqs)</argsstring>
        <name>execute_ui_requests</name>
        <param>
          <type><ref refid="classui__requests__t" kindref="compound">ui_requests_t</ref> *</type>
          <declname>reqs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute a list of UI requests (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5fae30c67b631c39977520e01239ae0c" kindref="member">ui_execute_ui_requests_list</ref>). <simplesect kind="return"><para>a request id: a unique number that can be used to cancel the request </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3693" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3693" bodyend="3696"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ac1602b4a575c1640183226cdd3853abd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int</type>
        <definition>THREAD_SAFE int execute_ui_requests</definition>
        <argsstring>(ui_request_t *req,...)</argsstring>
        <name>execute_ui_requests</name>
        <param>
          <type><ref refid="classui__request__t" kindref="compound">ui_request_t</ref> *</type>
          <declname>req</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute a variable number of UI requests (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5e255fcb76ad77ed592faea214fcc34f" kindref="member">ui_execute_ui_requests</ref>). The UI requests will be dispatched in the context of the main thread. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the first request ,use NULL to terminate the var arg request list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a request id: a unique number that can be used to cancel the request </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3704" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3704" bodyend="3711"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a89770c465690472e4018421c773feb53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool cancel_exec_request</definition>
        <argsstring>(int req_id)</argsstring>
        <name>cancel_exec_request</name>
        <param>
          <type>int</type>
          <declname>req_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to cancel an asynchronous exec request (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac1eaa90a2f904de785b7d4c10139d7cc" kindref="member">ui_cancel_exec_request</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req_id</parametername>
</parameternamelist>
<parameterdescription>
<para>request id </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>successfully canceled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>request has already been processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3719" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3719" bodyend="3722"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a5abc7c7d60996ec930d5d70f5685948f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool jumpto</definition>
        <argsstring>(ea_t ea, int opnum=-1, int uijmp_flags=UIJMP_ACTIVATE)</argsstring>
        <name>jumpto</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>opnum</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>uijmp_flags</declname>
          <defval><ref refid="group___u_i_j_m_p___1ga79d889b01d7de7f06edc60fbddc11e89" kindref="member">UIJMP_ACTIVATE</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Jump to the specified address (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aab66159c0a91b59754783f767e5a955e" kindref="member">ui_jumpto</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>destination </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opnum</parametername>
</parameternamelist>
<parameterdescription>
<para>-1: don&apos;t change x coord </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uijmp_flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___u_i_j_m_p__" kindref="compound">Jump flags</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3731" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3731" bodyend="3734"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aa2b3c3a1b2643f31f6ffbf6a0135828c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool banner</definition>
        <argsstring>(int wait)</argsstring>
        <name>banner</name>
        <param>
          <type>int</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Show a banner dialog box (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a11fb7fba468bfd936065359be59c3902" kindref="member">ui_banner</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wait</parametername>
</parameternamelist>
<parameterdescription>
<para>time to wait before closing </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>esc was pressed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3742" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3742" bodyend="3742"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a677a71c0b362a093ddd03a850bd436a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_msg_inited</definition>
        <argsstring>(void)</argsstring>
        <name>is_msg_inited</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Can we use msg() functions? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3747" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3747" bodyend="3747"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a74317d9fbad3524391b250ecb0a2feda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_idaview</definition>
        <argsstring>(void)</argsstring>
        <name>refresh_idaview</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Refresh marked windows (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac0298c3b9488dd9f4fff3c516de6d9bb" kindref="member">ui_refreshmarked</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3752" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3752" bodyend="3752"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a325854efebf01eab393c293a128f46b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_idaview_anyway</definition>
        <argsstring>(void)</argsstring>
        <name>refresh_idaview_anyway</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refresh all disassembly views (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abf2b9233219e8a214979e03115d7ca53" kindref="member">ui_refresh</ref>), forces an immediate refresh. Please consider <ref refid="kernwin_8hpp_1a50018b271f5c63814508d223909d1050" kindref="member">request_refresh()</ref> instead </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3758" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3758" bodyend="3758"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1af9a9c4f1e1a4cbdb1dd513582419c7c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void analyzer_options</definition>
        <argsstring>(void)</argsstring>
        <name>analyzer_options</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Allow the user to set analyzer options. (show a dialog box) (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a862eb3980fd41e47f463be9f73544172" kindref="member">ui_analyzer_options</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3763" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3763" bodyend="3763"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a5e9939e292fb3197effdb86cb52d55d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t get_screen_ea</definition>
        <argsstring>(void)</argsstring>
        <name>get_screen_ea</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the address at the screen cursor (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aed4d7ba7f674cfc772ba36d26061e61b" kindref="member">ui_screenea</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3768" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3768" bodyend="3768"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ac5f99b7484670bd8437cd53a4c0becfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int get_opnum</definition>
        <argsstring>(void)</argsstring>
        <name>get_opnum</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current operand number, -1 means no operand (<ref refid="group___d_p___1ga4a23e389ff9cbf1cd31179ca2f393334ae20e8d7d6006491d748f909e89ff529b" kindref="member">ui_get_opnum</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3773" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3773" bodyend="3773"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a6790b930c3984518ecfbddfdd5a2ff95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_cursor</definition>
        <argsstring>(int *x, int *y)</argsstring>
        <name>get_cursor</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the cursor position on the screen (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2a2ab6c72d666f85f64573eaf52cc004" kindref="member">ui_get_cursor</ref>). <simplesect kind="note"><para>coordinates are 0-based </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">x</parametername>
</parameternamelist>
<parameterdescription>
<para>x-coordinate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">y</parametername>
</parameternamelist>
<parameterdescription>
<para>y-coordinate </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>pointers are filled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>no disassembly window open </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3783" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3783" bodyend="3783"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ac8884a314f92a9438d2d0ef7383e0344" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_output_cursor</definition>
        <argsstring>(int *x, int *y)</argsstring>
        <name>get_output_cursor</name>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get coordinates of the output window&apos;s cursor (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334adf2791ff3d37c7f0b0dd35eff8cfbde6" kindref="member">ui_get_output_cursor</ref>). <simplesect kind="note"><para>coordinates are 0-based </para></simplesect>
<simplesect kind="note"><para>this function will succeed even if the output window is not visible </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">x</parametername>
</parameternamelist>
<parameterdescription>
<para>column </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">y</parametername>
</parameternamelist>
<parameterdescription>
<para>line number (global, from the start of output) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>the output window has been destroyed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>pointers are filled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3794" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3794" bodyend="3794"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ad7b9ffd81d3ea01405738611c8c5d639" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* get_curline</definition>
        <argsstring>(void)</argsstring>
        <name>get_curline</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current line from the disassemble window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a69be29f7643494eee4bdf5fbbea65638" kindref="member">ui_get_curline</ref>). <simplesect kind="return"><para>cptr current line with the color codes (use <ref refid="group__color__conv_1ga1cfb095056edf7a38b07f99e8f23f499" kindref="member">tag_remove()</ref> to remove the color codes) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3801" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3801" bodyend="3801"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aa99118081d65054242ea175472d28e9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void open_url</definition>
        <argsstring>(const char *url)</argsstring>
        <name>open_url</name>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <briefdescription>
<para>Open the given url (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a909d13fec421643dbc35dfe88a17fab4" kindref="member">ui_open_url</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3806" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3806" bodyend="3806"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a223a25eab08e14f016fddc106ab9ad7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t get_hexdump_ea</definition>
        <argsstring>(int hexdump_num)</argsstring>
        <name>get_hexdump_ea</name>
        <param>
          <type>int</type>
          <declname>hexdump_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current address in a hex view. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hexdump_num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of hexview window </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3812" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3812" bodyend="3812"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a99b9b06f87f2d0218ec350004fdff536" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>ushort get_key_code</definition>
        <argsstring>(const char *keyname)</argsstring>
        <name>get_key_code</name>
        <param>
          <type>const char *</type>
          <declname>keyname</declname>
        </param>
        <briefdescription>
<para>Get keyboard key code by its name (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4fca5f62f13ba3cc5ad3ad615c5d413b" kindref="member">ui_get_key_code</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3817" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3817" bodyend="3817"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ad3bedd8cdada1c284c6253fa8263fcf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>ushort lookup_key_code</definition>
        <argsstring>(int key, int shift, bool is_qt)</argsstring>
        <name>lookup_key_code</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_qt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get shortcut code previously created by <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4fca5f62f13ba3cc5ad3ad615c5d413b" kindref="member">ui_get_key_code</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>key constant </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shift</parametername>
</parameternamelist>
<parameterdescription>
<para>modifiers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_qt</parametername>
</parameternamelist>
<parameterdescription>
<para>are we using gui version? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3825" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3825" bodyend="3825"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a6ac128c5e51d57878965893d3da6cfc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_navband</definition>
        <argsstring>(bool force)</argsstring>
        <name>refresh_navband</name>
        <param>
          <type>bool</type>
          <declname>force</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refresh navigation band if changed (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2b305d0bcea321918932e6f65b791133" kindref="member">ui_refresh_navband</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>refresh regardless </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3831" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3831" bodyend="3831"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a25bd59dc0100214c49785062b6b7b3ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool refresh_chooser</definition>
        <argsstring>(const char *title)</argsstring>
        <name>refresh_chooser</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark a non-modal custom chooser for a refresh (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab3ee13d89e03e3b9a68d88f936772a66" kindref="member">ui_refresh_chooser</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>title of chooser </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3838" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3838" bodyend="3838"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ae6683ffdc5bacc0943a014dc64667ff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool close_chooser</definition>
        <argsstring>(const char *title)</argsstring>
        <name>close_chooser</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close a non-modal chooser (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a01abdc74f0e9de18eb32b434f51ca949" kindref="member">ui_close_chooser</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>window title of chooser to close </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3845" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3845" bodyend="3845"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a795a40503a604fcedc6f54273872080f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void install_command_interpreter</definition>
        <argsstring>(const cli_t *cp)</argsstring>
        <name>install_command_interpreter</name>
        <param>
          <type>const <ref refid="structcli__t" kindref="compound">cli_t</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>Install command line interpreter (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afcba7f581741c77bf63875da158c5cbf" kindref="member">ui_install_cli</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3850" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3850" bodyend="3850"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a2a1ff137bf65b62074f37cc9c5183ed9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void remove_command_interpreter</definition>
        <argsstring>(const cli_t *cp)</argsstring>
        <name>remove_command_interpreter</name>
        <param>
          <type>const <ref refid="structcli__t" kindref="compound">cli_t</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>Remove command line interpreter (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afcba7f581741c77bf63875da158c5cbf" kindref="member">ui_install_cli</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3855" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3855" bodyend="3855"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ad448900f0031775b4f335bd1f7f752c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gen_disasm_text</definition>
        <argsstring>(text_t &amp;text, ea_t ea1, ea_t ea2, bool truncate_lines)</argsstring>
        <name>gen_disasm_text</name>
        <param>
          <type><ref refid="kernwin_8hpp_1ada557233954b7d5dcfe38ff54e0ecb91" kindref="member">text_t</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea1</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>truncate_lines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate disassembly text for a range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">text</parametername>
</parameternamelist>
<parameterdescription>
<para>result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea1</parametername>
</parameternamelist>
<parameterdescription>
<para>start address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea2</parametername>
</parameternamelist>
<parameterdescription>
<para>end address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>truncate_lines</parametername>
</parameternamelist>
<parameterdescription>
<para>(on <ref refid="structidainfo_1a5555c617f44019c39cc4610a837a081c" kindref="member">idainfo::margin</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3864" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3864" bodyend="3864"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a69761082f4ed4caa6fb527da4bf5268d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int</type>
        <definition>THREAD_SAFE int execute_sync</definition>
        <argsstring>(exec_request_t &amp;req, int reqf)</argsstring>
        <name>execute_sync</name>
        <param>
          <type><ref refid="structexec__request__t" kindref="compound">exec_request_t</ref> &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reqf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute code in the main thread. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req</parametername>
</parameternamelist>
<parameterdescription>
<para>request specifying the code to execute </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reqf</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___m_f_f__" kindref="compound">Exec request flags</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if <ref refid="group___m_f_f___1gac787e0027f186b8d5c754e161a54dfe8" kindref="member">MFF_NOWAIT</ref> is specified, return the request id. otherwise return the value returned by <ref refid="structexec__request__t_1a6ed5cd1421130d88e04c0d57027537df" kindref="member">exec_request_t::execute()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3873" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3873" bodyend="3873"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a6e29027804bbec27915623e46ecdd522" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_dock_pos</definition>
        <argsstring>(const char *src_ctrl, const char *dest_ctrl, int orient, int left=0, int top=0, int right=0, int bottom=0)</argsstring>
        <name>set_dock_pos</name>
        <param>
          <type>const char *</type>
          <declname>src_ctrl</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dest_ctrl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>orient</declname>
        </param>
        <param>
          <type>int</type>
          <declname>left</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>top</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>bottom</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the docking position of a widget (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab6d590c6ffaf780794052e61ebad9683" kindref="member">ui_set_dock_pos</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>title of widget to dock </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest_ctrl</parametername>
</parameternamelist>
<parameterdescription>
<para>where to dock: if NULL or invalid then create a new tab relative to current active tab </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>orient</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___d_p__" kindref="compound">Docking positions</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left</parametername>
<parametername>top</parametername>
<parametername>right</parametername>
<parametername>bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>dimensions of dock, if not specified or invalid then create the widget in the center of the screen with the default size </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3886" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3886" bodyend="3889"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a8ba086db7e3f128350aaa7bdf61a75ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int load_custom_icon</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>load_custom_icon</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load an icon from a file (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae057fcc85fed6002a210a3f83d617b5a" kindref="member">ui_load_custom_icon_file</ref>). Also see <ref refid="kernwin_8hpp_1aef8594942b2bd93184301d3a05b0518d" kindref="member">load_custom_icon(const void *, unsigned int, const char *)</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>path to file </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>icon id </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3897" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3897" bodyend="3897"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aef8594942b2bd93184301d3a05b0518d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int load_custom_icon</definition>
        <argsstring>(const void *ptr, unsigned int len, const char *format)</argsstring>
        <name>load_custom_icon</name>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load an icon and return its id (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334adccf29d49304e950a74d0dcb75781a51" kindref="member">ui_load_custom_icon</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to raw image data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>image data length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>image format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>icon id </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3906" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3906" bodyend="3906"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1add364129cdbe9df218360942f0a3d364" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void free_custom_icon</definition>
        <argsstring>(int icon_id)</argsstring>
        <name>free_custom_icon</name>
        <param>
          <type>int</type>
          <declname>icon_id</declname>
        </param>
        <briefdescription>
<para>Free an icon loaded with <ref refid="kernwin_8hpp_1a8ba086db7e3f128350aaa7bdf61a75ff" kindref="member">load_custom_icon()</ref> (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af65f8b0f1f8933c23c0f1cdf7a222a41" kindref="member">ui_free_custom_icon</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3911" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3911" bodyend="3911"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a195c5db1a865d98b66f541040d5b4c4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool process_ui_action</definition>
        <argsstring>(const char *name, int flags=0, void *param=NULL)</argsstring>
        <name>process_ui_action</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Processes a UI action by name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>reserved/not used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param</parametername>
</parameternamelist>
<parameterdescription>
<para>reserved/not used </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3919" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3919" bodyend="3922"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a62f336a1091faca8c5a9c8860bc8193a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool take_database_snapshot</definition>
        <argsstring>(snapshot_t *ss, qstring *err_msg)</argsstring>
        <name>take_database_snapshot</name>
        <param>
          <type><ref refid="classsnapshot__t" kindref="compound">snapshot_t</ref> *</type>
          <declname>ss</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>err_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take a database snapshot (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a57c5171c5a50aa1c9dc003490d92626d" kindref="member">ui_take_database_snapshot</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ss</parametername>
</parameternamelist>
<parameterdescription>
<para>in/out parameter.<itemizedlist>
<listitem><para>in: description, flags</para></listitem><listitem><para>out: filename, id </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>optional error msg buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3932" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3932" bodyend="3937"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a712379fbd4f302bab3389063d9a3c794" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool restore_database_snapshot</definition>
        <argsstring>(const snapshot_t *ss, ss_restore_cb_t *cb, void *ud)</argsstring>
        <name>restore_database_snapshot</name>
        <param>
          <type>const <ref refid="classsnapshot__t" kindref="compound">snapshot_t</ref> *</type>
          <declname>ss</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a7a9ee2e9b2099b06116f9690fb90592f" kindref="member">ss_restore_cb_t</ref> *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore a database snapshot. Note: This call is asynchronous. When it is completed, the callback will be triggered. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ss</parametername>
</parameternamelist>
<parameterdescription>
<para>snapshot instance (see <ref refid="loader_8hpp_1ab9b1eb64bd13c7b7a5c1504a8f987d69" kindref="member">build_snapshot_tree()</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback that will be triggered with a NULL string. on success and an actual error message on failure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>user data passed to be passed to the callback </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if restoration could not be started (snapshot file was not found). <linebreak/>
 If the returned value is True then check if the operation succeeded from the callback. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3949" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3949" bodyend="3955"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a524862fbb80755bdc10f841da329b3f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="kernwin_8hpp_1ab139f3a2bfa7fb7cc0688eaca8475e86" kindref="member">qtimer_t</ref></type>
        <definition>THREAD_SAFE qtimer_t register_timer</definition>
        <argsstring>(int interval_ms, int(idaapi *callback)(void *ud), void *ud)</argsstring>
        <name>register_timer</name>
        <param>
          <type>int</type>
          <declname>interval_ms</declname>
        </param>
        <param>
          <type>int(idaapi *)(void *ud)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a timer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a2faeb52ee5414a79b38375ebea4a1e4c" kindref="member">ui_register_timer</ref>). Timer functions are thread-safe and the callback is executed in the context of the main thread. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interval_ms</parametername>
</parameternamelist>
<parameterdescription>
<para>interval in milliseconds </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>the callback can return -1 to unregister the timer; any other value &gt;= 0 defines the new interval for the timer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>callback params </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>handle to registered timer (use this handle to unregister it) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3970" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3970" bodyend="3976"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a1c6e443b152e9132b5b34239da526e90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool unregister_timer</definition>
        <argsstring>(qtimer_t t)</argsstring>
        <name>unregister_timer</name>
        <param>
          <type><ref refid="kernwin_8hpp_1ab139f3a2bfa7fb7cc0688eaca8475e86" kindref="member">qtimer_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister a timer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8dd3183b53abf872c839f187868bb5cc" kindref="member">ui_unregister_timer</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>handle to a registered timer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3983" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3983" bodyend="3986"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ac79586adc1b82bd19ac650a5e743efe7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool register_action</definition>
        <argsstring>(const action_desc_t &amp;desc)</argsstring>
        <name>register_action</name>
        <param>
          <type>const <ref refid="structaction__desc__t" kindref="compound">action_desc_t</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new action (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aafbba3b3c66270e3e6f43ff24096edb5" kindref="member">ui_register_action</ref>). After an action has been created, it is possible to attach it to menu items (<ref refid="kernwin_8hpp_1a381b694726bffe05b02b2a236124801e" kindref="member">attach_action_to_menu()</ref>), or to popup menus (<ref refid="kernwin_8hpp_1a1348d5bd82f603e5750d51bf0d4cbda7" kindref="member">attach_action_to_popup()</ref>).</para><para>Because the actions will need to call the handler&apos;s activate() and update() methods at any time, you shouldn&apos;t build your action handler on the stack.</para><para>Please see the SDK&apos;s &quot;ht_view&quot; plugin for an example how to register actions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>action to register </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4004" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4004" bodyend="4007"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a4aba81e18ee81b0355ee93f1443ff4f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool unregister_action</definition>
        <argsstring>(const char *name)</argsstring>
        <name>unregister_action</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a previously-registered action (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a19d28bfc3a12e991294b9b55879a2980" kindref="member">ui_unregister_action</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of action </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4014" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4014" bodyend="4017"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a3900af7c877c608e865252fc0f6f6809" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void get_registered_actions</definition>
        <argsstring>(qstrvec_t *out)</argsstring>
        <name>get_registered_actions</name>
        <param>
          <type><ref refid="pro_8h_1a823b67c620f6cdca97e1d969ea4a9b02" kindref="member">qstrvec_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a list of all currently-registered actions <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of actions to be filled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4022" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4022" bodyend="4025"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aaa5543fff5aa549a27775123db5ab081" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool create_toolbar</definition>
        <argsstring>(const char *name, const char *label, const char *before=NULL, int flags=0)</argsstring>
        <name>create_toolbar</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>before</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a toolbar with the given name, label and optional position <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of toolbar (must be unique) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>label of toolbar </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>before</parametername>
</parameternamelist>
<parameterdescription>
<para>if non-NULL, the toolbar before which the new toolbar will be inserted </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>a combination of <ref refid="group___c_r_e_a_t_e_t_b__" kindref="compound">create toolbar flags</ref>, to determine toolbar position </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4034" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4034" bodyend="4041"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a8184d2c4ec216976a6babc01cc3402d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool delete_toolbar</definition>
        <argsstring>(const char *name)</argsstring>
        <name>delete_toolbar</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete an existing toolbar <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of toolbar </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4047" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4047" bodyend="4050"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a1c074a73aace53feb05565cfa1be4827" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool create_menu</definition>
        <argsstring>(const char *name, const char *label, const char *before=NULL)</argsstring>
        <name>create_menu</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>before</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a menu with the given name, label and optional position <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of menu (must be unique) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>label of menu </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>before</parametername>
</parameternamelist>
<parameterdescription>
<para>if non-NULL, the menu before which the new menu will be inserted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4058" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4058" bodyend="4064"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a16f9e92aa595c7e8fff7a8e5b5a8f4b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool delete_menu</definition>
        <argsstring>(const char *name)</argsstring>
        <name>delete_menu</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete an existing menu <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of menu </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4070" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4070" bodyend="4073"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a381b694726bffe05b02b2a236124801e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool attach_action_to_menu</definition>
        <argsstring>(const char *menupath, const char *name, int flags)</argsstring>
        <name>attach_action_to_menu</name>
        <param>
          <type>const char *</type>
          <declname>menupath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Attach a previously-registered action to the menu (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a83a5cd6c017309c85ed1a80b4b017c18" kindref="member">ui_attach_action_to_menu</ref>). <simplesect kind="note"><para>You should not change top level menu, or the Edit,Plugins submenus If you want to modify the debugger menu, do it at the ui_debugger_menu_change event (ida might destroy your menu item if you do it elsewhere). </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>menupath</parametername>
</parameternamelist>
<parameterdescription>
<para>path to the menu item after or before which the insertion will take place. <linebreak/>
<itemizedlist>
<listitem><para>Example: Debug/StartProcess</para></listitem><listitem><para>Whitespace, punctuation are ignored.</para></listitem><listitem><para>It is allowed to specify only the prefix of the menu item.</para></listitem><listitem><para>Comparison is case insensitive.</para></listitem><listitem><para>menupath may start with the following prefixes:</para></listitem><listitem><para>[S] - modify the main menu of the structure window</para></listitem><listitem><para>[E] - modify the main menu of the enum window </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>a combination of <ref refid="group___s_e_t_m_e_n_u__" kindref="compound">Set menu flags</ref>, to determine menu item position </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4092" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4092" bodyend="4098"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aa2d81f4fa9231f574260960762332cc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool detach_action_from_menu</definition>
        <argsstring>(const char *menupath, const char *name)</argsstring>
        <name>detach_action_from_menu</name>
        <param>
          <type>const char *</type>
          <declname>menupath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Detach an action from the menu (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab636820f4db21c0023e60db0b5d92af3" kindref="member">ui_detach_action_from_menu</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>menupath</parametername>
</parameternamelist>
<parameterdescription>
<para>path to the menu item </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4106" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4106" bodyend="4111"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a2882000ced36b917a44a91c9cd4888d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool attach_action_to_toolbar</definition>
        <argsstring>(const char *toolbar_name, const char *name)</argsstring>
        <name>attach_action_to_toolbar</name>
        <param>
          <type>const char *</type>
          <declname>toolbar_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Attach an action to an existing toolbar (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a68009e0dcf084459ce591bcd0cfa24d3" kindref="member">ui_attach_action_to_toolbar</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>toolbar_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the toolbar </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4119" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4119" bodyend="4124"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a8478b8f4450c3163396dd1449c147fbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool detach_action_from_toolbar</definition>
        <argsstring>(const char *toolbar_name, const char *name)</argsstring>
        <name>detach_action_from_toolbar</name>
        <param>
          <type>const char *</type>
          <declname>toolbar_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Detach an action from the toolbar (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a65b3a8ad6aa322a8aa1c592e2939b20d" kindref="member">ui_detach_action_from_toolbar</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>toolbar_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the toolbar </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4132" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4132" bodyend="4137"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a5e66241d4d70adcd168ed6bbd63ea93b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool register_and_attach_to_menu</definition>
        <argsstring>(const char *menupath, const char *name, const char *label, const char *shortcut, int flags, action_handler_t *handler, const plugin_t *owner)</argsstring>
        <name>register_and_attach_to_menu</name>
        <param>
          <type>const char *</type>
          <declname>menupath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shortcut</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="structaction__handler__t" kindref="compound">action_handler_t</ref> *</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>const <ref refid="classplugin__t" kindref="compound">plugin_t</ref> *</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper.</para><para>You are not encouraged to use this, as it mixes flags for both <ref refid="kernwin_8hpp_1ac79586adc1b82bd19ac650a5e743efe7" kindref="member">register_action()</ref>, and <ref refid="kernwin_8hpp_1a381b694726bffe05b02b2a236124801e" kindref="member">attach_action_to_menu()</ref>.</para><para>The only reason for its existence is to make it simpler to port existing plugins to the new actions API. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4148" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4148" bodyend="4166"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a6746efc8141915a221de63ff3fd33fe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void display_widget</definition>
        <argsstring>(TWidget *widget, int options)</argsstring>
        <name>display_widget</name>
        <param>
          <type>TWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a widget <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>widget to display </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___w_i_d_g_e_t___o_p_e_n" kindref="compound">Widget open flags</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4176" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4176" bodyend="4179"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ad27da33115a2f2e7bddbbf5d29aa814b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void close_widget</definition>
        <argsstring>(TWidget *widget, int options)</argsstring>
        <name>close_widget</name>
        <param>
          <type>TWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type>int</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close widget (<ref refid="group___w_i_d_g_e_t___o_p_e_n_1ga4a23e389ff9cbf1cd31179ca2f393334aaad66b05845049372878557ace0bfddc" kindref="member">ui_close_widget</ref>, only gui version). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the widget to close </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___w_i_d_g_e_t___c_l_o_s_e" kindref="compound">Form close flags</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4186" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4186" bodyend="4189"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a009c4cd8f90857346f6571061603354d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void activate_widget</definition>
        <argsstring>(TWidget *widget, bool take_focus)</argsstring>
        <name>activate_widget</name>
        <param>
          <type>TWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>take_focus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Activate widget (only gui version) (<ref refid="group___w_i_d_g_e_t___c_l_o_s_e_1ga4a23e389ff9cbf1cd31179ca2f393334a4793db733434cc4dab325974c96db3ac" kindref="member">ui_activate_widget</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>existing widget to display </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>take_focus</parametername>
</parameternamelist>
<parameterdescription>
<para>give focus to given widget </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4196" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4196" bodyend="4199"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a510c417b90641340a781fb92c066c99d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* find_widget</definition>
        <argsstring>(const char *caption)</argsstring>
        <name>find_widget</name>
        <param>
          <type>const char *</type>
          <declname>caption</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find widget with the specified caption (only gui version) (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae843de4da9ac4c94e56f7ad82a25f2e2" kindref="member">ui_find_widget</ref>). NB: this callback works only with the tabbed widgets! <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>caption</parametername>
</parameternamelist>
<parameterdescription>
<para>title of tab, or window title if widget is not tabbed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the TWidget, NULL if none is found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4207" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4207" bodyend="4210"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a757e65381fd37da2debb18554706ce1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* get_current_widget</definition>
        <argsstring>(void)</argsstring>
        <name>get_current_widget</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a pointer to the current widget (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a50793291c7ec458ef2279f9aba892a89" kindref="member">ui_get_current_widget</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4215" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4215" bodyend="4218"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a8b237d15cc807b4a943a14275d48cef8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="kernwin_8hpp_1ad0bcc5d93684fb9706e2b6bca80fa1ff" kindref="member">twidget_type_t</ref></type>
        <definition>twidget_type_t get_widget_type</definition>
        <argsstring>(TWidget *widget)</argsstring>
        <name>get_widget_type</name>
        <param>
          <type>TWidget *</type>
          <declname>widget</declname>
        </param>
        <briefdescription>
<para>Get the type of the TWidget * (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abbfa589f60e257a7685a15a8622f973c" kindref="member">ui_get_widget_type</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4223" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4223" bodyend="4226"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a90fc4e7fa1e59e7c80bd8b99f831775d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_widget_title</definition>
        <argsstring>(qstring *buf, TWidget *widget)</argsstring>
        <name>get_widget_title</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>TWidget *</type>
          <declname>widget</declname>
        </param>
        <briefdescription>
<para>Get the TWidget&apos;s title (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aa0dd40a41cf0316696e3d3b7d479d358" kindref="member">ui_get_widget_title</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4231" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4231" bodyend="4234"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a1051078c753712041521d59c93be3e74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* create_custom_viewer</definition>
        <argsstring>(const char *title, const place_t *minplace, const place_t *maxplace, const place_t *curplace, const renderer_info_t *rinfo, void *ud, const custom_viewer_handlers_t *cvhandlers, void *cvhandlers_ud, TWidget *parent=NULL)</argsstring>
        <name>create_custom_viewer</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>minplace</declname>
        </param>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>maxplace</declname>
        </param>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>curplace</declname>
        </param>
        <param>
          <type>const <ref refid="structrenderer__info__t" kindref="compound">renderer_info_t</ref> *</type>
          <declname>rinfo</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <param>
          <type>const <ref refid="classcustom__viewer__handlers__t" kindref="compound">custom_viewer_handlers_t</ref> *</type>
          <declname>cvhandlers</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cvhandlers_ud</declname>
        </param>
        <param>
          <type>TWidget *</type>
          <declname>parent</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create new ida viewer based on <ref refid="classplace__t" kindref="compound">place_t</ref> (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac3da4fc006d749224fd5b36925cd35d6" kindref="member">ui_create_custom_viewer</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>name of viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minplace</parametername>
</parameternamelist>
<parameterdescription>
<para>first location of the viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxplace</parametername>
</parameternamelist>
<parameterdescription>
<para>last location of the viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>curplace</parametername>
</parameternamelist>
<parameterdescription>
<para>set current location </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rinfo</parametername>
</parameternamelist>
<parameterdescription>
<para>renderer information (can be NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>contents of viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlers</parametername>
</parameternamelist>
<parameterdescription>
<para>handlers for the viewer (can be NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>widget to hold viewer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting viewer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4247" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4247" bodyend="4261"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a09396a2e15843294c4a8eb72881e6cae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool custom_viewer_jump</definition>
        <argsstring>(TWidget *v, const lochist_entry_t &amp;loc, uint32 flags)</argsstring>
        <name>custom_viewer_jump</name>
        <param>
          <type>TWidget *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="structlochist__entry__t" kindref="compound">lochist_entry_t</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Append &apos;loc&apos; to the viewer&apos;s history, and cause the viewer to display it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structlochist__entry__t" kindref="compound">lochist_entry_t</ref> &amp;) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>(uint32) or&apos;ed combination of CVNF_* values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4271" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4271" bodyend="4277"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a215117a723f89c9b3d37d8167a2cf1b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ea_viewer_history_push_and_jump</definition>
        <argsstring>(TWidget *v, ea_t ea, int x, int y, int lnnum)</argsstring>
        <name>ea_viewer_history_push_and_jump</name>
        <param>
          <type>TWidget *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lnnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Push current location in the history and jump to the given location (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a661c961a8dd442cc65e350071f1a4f56" kindref="member">ui_ea_viewer_history_push_and_jump</ref>). This will jump in the given ea viewer and also in other synchronized views. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>ea viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>jump destination </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>coords on screen </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lnnum</parametername>
</parameternamelist>
<parameterdescription>
<para>desired line number of given address </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4287" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4287" bodyend="4290"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aeefdc088088e2945b7de7a680fc096ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_ea_viewer_history_info</definition>
        <argsstring>(int *nback, int *nfwd, TWidget *v)</argsstring>
        <name>get_ea_viewer_history_info</name>
        <param>
          <type>int *</type>
          <declname>nback</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nfwd</declname>
        </param>
        <param>
          <type>TWidget *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get information about what&apos;s in the history (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a1e1f2cb92d2409cf31c765f7073054d9" kindref="member">ui_ea_viewer_history_info</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">nback</parametername>
</parameternamelist>
<parameterdescription>
<para>number of available back steps </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">nfwd</parametername>
</parameternamelist>
<parameterdescription>
<para>number of available forward steps </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>ea viewer </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given ea viewer does not exist </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4300" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4300" bodyend="4303"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a692a67658e5994dae6c6912029bd978f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void refresh_custom_viewer</definition>
        <argsstring>(TWidget *custom_viewer)</argsstring>
        <name>refresh_custom_viewer</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <briefdescription>
<para>Refresh custom ida viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8680a95f6ab68a5560ba5f8c24a06abe" kindref="member">ui_refresh_custom_viewer</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4308" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4308" bodyend="4311"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a1a19466f6141eaa444362b2c219c38bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void repaint_custom_viewer</definition>
        <argsstring>(TWidget *custom_viewer)</argsstring>
        <name>repaint_custom_viewer</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <briefdescription>
<para>Repaint the given widget immediately (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abeb15a935855827a630571bb825106dd" kindref="member">ui_repaint_qwidget</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4316" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4316" bodyend="4319"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ae3186473fe7830406c2773d7ee201902" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void destroy_custom_viewer</definition>
        <argsstring>(TWidget *custom_viewer)</argsstring>
        <name>destroy_custom_viewer</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <briefdescription>
<para>Destroy custom ida viewer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4324" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4324" bodyend="4327"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a48194a221d1dbaf85add99dab797bbc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool jumpto</definition>
        <argsstring>(TWidget *custom_viewer, place_t *place, int x, int y)</argsstring>
        <name>jumpto</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <param>
          <type><ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>place</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set cursor position in custom ida viewer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>custom_viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>view </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>place</parametername>
</parameternamelist>
<parameterdescription>
<para>target position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>desired cursor position (column) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>desired cursor position (line) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4337" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4337" bodyend="4340"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a888ed62f71b1b711dcdb240b210307a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
        <definition>place_t* get_custom_viewer_place</definition>
        <argsstring>(TWidget *custom_viewer, bool mouse, int *x, int *y)</argsstring>
        <name>get_custom_viewer_place</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mouse</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current place in a custom viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334afbcb3fa7ea3d4d51f79e6e607f9163ce" kindref="member">ui_get_curplace</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>custom_viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>view </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mouse</parametername>
</parameternamelist>
<parameterdescription>
<para>mouse position (otherwise cursor position) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4349" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4349" bodyend="4356"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1afebae2873051b21f1ffeac29099134ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_idaq</definition>
        <argsstring>()</argsstring>
        <name>is_idaq</name>
        <briefdescription>
<para>Are we running inside IDA Qt? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4361" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4361" bodyend="4364"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a1348d5bd82f603e5750d51bf0d4cbda7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool attach_action_to_popup</definition>
        <argsstring>(TWidget *widget, TPopupMenu *popup_handle, const char *name, const char *popuppath=NULL, int flags=0)</argsstring>
        <name>attach_action_to_popup</name>
        <param>
          <type>TWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type>TPopupMenu *</type>
          <declname>popup_handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>popuppath</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a previously-registered action into the widget&apos;s popup menu (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af29a4befa6cfc8a8adeb9c10418dc0b5" kindref="member">ui_attach_action_to_popup</ref>). This function has two &quot;modes&quot;: &apos;single-shot&apos;, and &apos;permanent&apos;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>target widget </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popup_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>target popup menu<itemizedlist>
<listitem><para>if non-NULL, the action is added to this popup menu invocation (i.e., &apos;single-shot&apos;)</para></listitem><listitem><para>if NULL, the action is added to a list of actions that should always be present in context menus for this widget (i.e., &apos;permanent&apos;.) </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popuppath</parametername>
</parameternamelist>
<parameterdescription>
<para>can be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>a combination of SETMENU_ flags (see <ref refid="group___s_e_t_m_e_n_u__" kindref="compound">Set menu flags</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4381" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4381" bodyend="4389"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ab1dccb9b6d52e96cda93dbbf58a862bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool detach_action_from_popup</definition>
        <argsstring>(TWidget *widget, const char *name)</argsstring>
        <name>detach_action_from_popup</name>
        <param>
          <type>TWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a previously-registered action, from the list of &apos;permanent&apos; context menu actions for this widget (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334adb8dbd514e9f745ff6fc7084151b14b5" kindref="member">ui_detach_action_from_popup</ref>). This only makes sense if the action has been added to &apos;widget&apos;s list of permanent popup actions by calling attach_action_to_popup in &apos;permanent&apos; mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>target widget </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4400" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4400" bodyend="4403"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a0f84b7875d17f46920c7f8aee0f35c16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool attach_dynamic_action_to_popup</definition>
        <argsstring>(TWidget *widget, TPopupMenu *popup_handle, const action_desc_t &amp;desc, const char *popuppath=NULL, int flags=0, qstring *buf=NULL)</argsstring>
        <name>attach_dynamic_action_to_popup</name>
        <param>
          <type>TWidget *</type>
          <declname>widget</declname>
        </param>
        <param>
          <type>TPopupMenu *</type>
          <declname>popup_handle</declname>
        </param>
        <param>
          <type>const <ref refid="structaction__desc__t" kindref="compound">action_desc_t</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>popuppath</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create &amp; insert an action into the widget&apos;s popup menu (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abb4139351698f6191616ca8597acf00d" kindref="member">ui_attach_dynamic_action_to_popup</ref>). <simplesect kind="note"><para><ref refid="structaction__desc__t_1a8dace0476b13e352fbd631e318eef63b" kindref="member">action_desc_t::handler</ref> for &apos;desc&apos; must be instantiated using &apos;new&apos;, as it will be &apos;delete&apos;d when the action is unregistered. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>target widget </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popup_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>target popup </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desc</parametername>
</parameternamelist>
<parameterdescription>
<para>created with <ref refid="kernwin_8hpp_1addaa2331de5afe8e5d826d974f0968d9" kindref="member">DYNACTION_DESC_LITERAL</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popuppath</parametername>
</parameternamelist>
<parameterdescription>
<para>can be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>a combination of SETMENU_ constants (see <ref refid="group___s_e_t_m_e_n_u__" kindref="compound">Set menu flags</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer, to retrieve the generated action name - can be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4417" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4417" bodyend="4427"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__uaa__funcs_1gaceff5f0fc4124e24ba30d4fccb170123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool update_action_label</definition>
        <argsstring>(const char *name, const char *label)</argsstring>
        <name>update_action_label</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update an action&apos;s label (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e18029a1d55951baacce0a745dcf91e" kindref="member">ui_update_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>new label </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4438" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4438" bodyend="4441"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__uaa__funcs_1ga024d67540af40abe540f7540809ca743" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool update_action_shortcut</definition>
        <argsstring>(const char *name, const char *shortcut)</argsstring>
        <name>update_action_shortcut</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>shortcut</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update an action&apos;s shortcut (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e18029a1d55951baacce0a745dcf91e" kindref="member">ui_update_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shortcut</parametername>
</parameternamelist>
<parameterdescription>
<para>new shortcut </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4449" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4449" bodyend="4452"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__uaa__funcs_1ga89c92cc9f9e50c88a22b054d713a1a17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool update_action_tooltip</definition>
        <argsstring>(const char *name, const char *tooltip)</argsstring>
        <name>update_action_tooltip</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tooltip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update an action&apos;s tooltip (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e18029a1d55951baacce0a745dcf91e" kindref="member">ui_update_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tooltip</parametername>
</parameternamelist>
<parameterdescription>
<para>new tooltip </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4460" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4460" bodyend="4463"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__uaa__funcs_1ga1e8cddfeef193389f1ac689ac439cc77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool update_action_icon</definition>
        <argsstring>(const char *name, int icon)</argsstring>
        <name>update_action_icon</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update an action&apos;s icon (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e18029a1d55951baacce0a745dcf91e" kindref="member">ui_update_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>icon</parametername>
</parameternamelist>
<parameterdescription>
<para>new icon id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4471" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4471" bodyend="4474"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__uaa__funcs_1ga69d4738692d65fa6dd4a5e0883a6b3b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool update_action_state</definition>
        <argsstring>(const char *name, action_state_t state)</argsstring>
        <name>update_action_state</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6" kindref="member">action_state_t</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update an action&apos;s state (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e18029a1d55951baacce0a745dcf91e" kindref="member">ui_update_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>new state </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4482" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4482" bodyend="4485"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__uaa__funcs_1gaa3f83cd5de26cfec3e6a0e34807c09d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool update_action_checkable</definition>
        <argsstring>(const char *name, bool checkable)</argsstring>
        <name>update_action_checkable</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checkable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update an action&apos;s checkability (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e18029a1d55951baacce0a745dcf91e" kindref="member">ui_update_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkable</parametername>
</parameternamelist>
<parameterdescription>
<para>new checkability </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4493" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4493" bodyend="4496"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__uaa__funcs_1ga8e0065e63d3fe107eba7a9b5d0ff57d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool update_action_checked</definition>
        <argsstring>(const char *name, bool checked)</argsstring>
        <name>update_action_checked</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>checked</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update an action&apos;s checked state (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e18029a1d55951baacce0a745dcf91e" kindref="member">ui_update_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checked</parametername>
</parameternamelist>
<parameterdescription>
<para>new checked state </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4504" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4504" bodyend="4507"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__uaa__funcs_1ga443e6593a319ad8244daec0961740543" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool update_action_visibility</definition>
        <argsstring>(const char *name, bool visible)</argsstring>
        <name>update_action_visibility</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update an action&apos;s visibility (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a9e18029a1d55951baacce0a745dcf91e" kindref="member">ui_update_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visible</parametername>
</parameternamelist>
<parameterdescription>
<para>new visibility </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4515" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4515" bodyend="4518"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a004bafa765e0c9d3cb40ed11fcbef17f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_action_label</definition>
        <argsstring>(qstring *label, const char *name)</argsstring>
        <name>get_action_label</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an action&apos;s label (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7c3259468d0368cf9ffed03ef759fe6a" kindref="member">ui_get_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">label</parametername>
</parameternamelist>
<parameterdescription>
<para>the action label </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4531" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4531" bodyend="4534"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a9c8ffbbf30fb6b939f4f7c13bdb5c627" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_action_shortcut</definition>
        <argsstring>(qstring *shortcut, const char *name)</argsstring>
        <name>get_action_shortcut</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>shortcut</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an action&apos;s shortcut (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7c3259468d0368cf9ffed03ef759fe6a" kindref="member">ui_get_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">shortcut</parametername>
</parameternamelist>
<parameterdescription>
<para>the action shortcut </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4542" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4542" bodyend="4545"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a182d234188a8e7418817fc20a67a5c0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_action_tooltip</definition>
        <argsstring>(qstring *tooltip, const char *name)</argsstring>
        <name>get_action_tooltip</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>tooltip</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an action&apos;s tooltip (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7c3259468d0368cf9ffed03ef759fe6a" kindref="member">ui_get_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">tooltip</parametername>
</parameternamelist>
<parameterdescription>
<para>the action tooltip </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4553" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4553" bodyend="4556"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aeae4a34a5c2b027ecfb2ae85ef19e21d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_action_icon</definition>
        <argsstring>(const char *name, int *icon)</argsstring>
        <name>get_action_icon</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>icon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an action&apos;s icon (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7c3259468d0368cf9ffed03ef759fe6a" kindref="member">ui_get_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">icon</parametername>
</parameternamelist>
<parameterdescription>
<para>the icon id </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4564" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4564" bodyend="4567"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1acb73848c40344cb4e21a4430a867ffaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_action_state</definition>
        <argsstring>(const char *name, action_state_t *state)</argsstring>
        <name>get_action_state</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6" kindref="member">action_state_t</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an action&apos;s state (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7c3259468d0368cf9ffed03ef759fe6a" kindref="member">ui_get_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">state</parametername>
</parameternamelist>
<parameterdescription>
<para>the action&apos;s state </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4575" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4575" bodyend="4578"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a113092e101637f51cd194cb49128f0c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_action_checkable</definition>
        <argsstring>(const char *name, bool *checkable)</argsstring>
        <name>get_action_checkable</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>checkable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an action&apos;s checkability (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7c3259468d0368cf9ffed03ef759fe6a" kindref="member">ui_get_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">checkable</parametername>
</parameternamelist>
<parameterdescription>
<para>the action&apos;s checkability </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4586" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4586" bodyend="4589"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ab619682cee0c5181f3832e57b10e8c41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_action_checked</definition>
        <argsstring>(const char *name, bool *checked)</argsstring>
        <name>get_action_checked</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>checked</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an action&apos;s checked state (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7c3259468d0368cf9ffed03ef759fe6a" kindref="member">ui_get_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">checked</parametername>
</parameternamelist>
<parameterdescription>
<para>the action&apos;s checked state </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4597" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4597" bodyend="4600"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aa513f1085ff294248eb717268a5de186" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_action_visibility</definition>
        <argsstring>(const char *name, bool *visibility)</argsstring>
        <name>get_action_visibility</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>visibility</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get an action&apos;s visibility (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7c3259468d0368cf9ffed03ef759fe6a" kindref="member">ui_get_action_attr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the action name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">visibility</parametername>
</parameternamelist>
<parameterdescription>
<para>the action&apos;s visibility </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4608" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4608" bodyend="4611"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__scvh__funcs_1ga6943b60e161107562db901dcc1b0d11c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_custom_viewer_handlers</definition>
        <argsstring>(TWidget *custom_viewer, const custom_viewer_handlers_t *cvh, void *cvh_ud)</argsstring>
        <name>set_custom_viewer_handlers</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <param>
          <type>const <ref refid="classcustom__viewer__handlers__t" kindref="compound">custom_viewer_handlers_t</ref> *</type>
          <declname>cvh</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cvh_ud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set handlers for custom viewer events Any of these handlers may be NULL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4622" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4622" bodyend="4628"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__scvh__funcs_1ga35b5933ade6f61ad603b7b91bc3d98de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* set_custom_viewer_handler</definition>
        <argsstring>(TWidget *custom_viewer, custom_viewer_handler_id_t handler_id, void *handler_or_data)</argsstring>
        <name>set_custom_viewer_handler</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132" kindref="member">custom_viewer_handler_id_t</ref></type>
          <declname>handler_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handler_or_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a handler for a custom viewer event (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ff634bfdb2e6a4e4a7c3aea12649460" kindref="member">ui_set_custom_viewer_handler</ref>). see also <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af7e8e6d4d87c505b5a84e51ae15a8397" kindref="member">ui_set_custom_viewer_handlers</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>custom_viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the custom viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_id</parametername>
</parameternamelist>
<parameterdescription>
<para>one of CVH_ in <ref refid="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132" kindref="member">custom_viewer_handler_id_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_or_data</parametername>
</parameternamelist>
<parameterdescription>
<para>can be a handler or data. see examples in <ref refid="group__ui__scvh__funcs" kindref="compound">Functions: custom viewer handlers</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>old value of the handler or data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4638" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4638" bodyend="4645"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__scvh__funcs_1ga1f61099ee5fc6819ea1079ccb97cd4af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_custom_viewer_qt_aware</definition>
        <argsstring>(TWidget *custom_viewer)</argsstring>
        <name>set_custom_viewer_qt_aware</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <briefdescription>
<para>Allow the given viewer to interpret Qt events (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ff634bfdb2e6a4e4a7c3aea12649460" kindref="member">ui_set_custom_viewer_handler</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4650" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4650" bodyend="4653"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a3ab60a995fba833cb8c6b6374557da8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* get_custom_viewer_curline</definition>
        <argsstring>(TWidget *custom_viewer, bool mouse)</argsstring>
        <name>get_custom_viewer_curline</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mouse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current line of custom viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a26766aa9d6e75567f7f50df538b6d0d0" kindref="member">ui_get_custom_viewer_curline</ref>). The returned line contains color codes <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>custom_viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>view </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mouse</parametername>
</parameternamelist>
<parameterdescription>
<para>mouse position (otherwise cursor position) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to contents of current line </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4664" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4664" bodyend="4667"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1adb0cf335b2927669fa3199717d540d7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_output_curline</definition>
        <argsstring>(qstring *buf, bool mouse)</argsstring>
        <name>get_output_curline</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mouse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get current line of output window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a40359058207a010fa2f92025f88ec9b4" kindref="member">ui_get_output_curline</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mouse</parametername>
</parameternamelist>
<parameterdescription>
<para>current for mouse pointer? </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if output contains no text </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4675" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4675" bodyend="4678"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a4d0744550f004160434202156b643c52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_output_selected_text</definition>
        <argsstring>(qstring *buf)</argsstring>
        <name>get_output_selected_text</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns selected text from output window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ac58cfe11f6d94468fca265e375e1cbe3" kindref="member">ui_get_output_selected_text</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if there is a selection </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4685" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4685" bodyend="4688"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a7901370e5b65aa34d11f41eb175bd453" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* get_current_viewer</definition>
        <argsstring>(void)</argsstring>
        <name>get_current_viewer</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get current ida viewer (idaview or custom viewer) (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a4a4b99c3e1df153c87740d04747cb80a" kindref="member">ui_get_current_viewer</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4693" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4693" bodyend="4696"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ab07b9d03b820550e3c3b216d821da14e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="kernwin_8hpp_1a35329d63b9cd10f0e8064ab3e39c3232" kindref="member">tcc_renderer_type_t</ref></type>
        <definition>tcc_renderer_type_t get_view_renderer_type</definition>
        <argsstring>(TWidget *v)</argsstring>
        <name>get_view_renderer_type</name>
        <param>
          <type>TWidget *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Get the type of renderer currently in use in the given view (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a984bb44e68177e28c3c7bd5725b76245" kindref="member">ui_get_renderer_type</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4701" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4701" bodyend="4704"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aa5732b35f559e904f066441e3107fdeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_view_renderer_type</definition>
        <argsstring>(TWidget *v, tcc_renderer_type_t rt)</argsstring>
        <name>set_view_renderer_type</name>
        <param>
          <type>TWidget *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a35329d63b9cd10f0e8064ab3e39c3232" kindref="member">tcc_renderer_type_t</ref></type>
          <declname>rt</declname>
        </param>
        <briefdescription>
<para>Set the type of renderer to use in a view (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a03cb7adabbb2e81bcbcd56ad2e473fa7" kindref="member">ui_set_renderer_type</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4709" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4709" bodyend="4712"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a0f6476d779f5334c3d5850fde4f803c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_custom_viewer_range</definition>
        <argsstring>(TWidget *custom_viewer, const place_t *minplace, const place_t *maxplace)</argsstring>
        <name>set_custom_viewer_range</name>
        <param>
          <type>TWidget *</type>
          <declname>custom_viewer</declname>
        </param>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>minplace</declname>
        </param>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>maxplace</declname>
        </param>
        <briefdescription>
<para>Set position range for custom viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af14e7bb002d87eefec26f249a65002bd" kindref="member">ui_set_custom_viewer_range</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4717" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4717" bodyend="4723"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a10681677801d72cd72d7259532d53cc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* create_empty_widget</definition>
        <argsstring>(const char *title, int icon=-1)</argsstring>
        <name>create_empty_widget</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>icon</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an empty widget, serving as a container for custom user widgets </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4729" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4729" bodyend="4732"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1acfe0eb44b8739c9b61e1cd31372747a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void msg_clear</definition>
        <argsstring>()</argsstring>
        <name>msg_clear</name>
        <briefdescription>
<para>Clear the &quot;Output window&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4737" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4737" bodyend="4740"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a7a58b3a2057a497aa3f388d352f48e7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool msg_save</definition>
        <argsstring>(qstring &amp;path)</argsstring>
        <name>msg_save</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save the &quot;Output window&quot; contents into a file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the file to save the contents into. An empty path means that the user will be prompted for the destination and, if the file already exists, the user will be asked to confirm before overriding its contents. Upon return, &apos;path&apos; will contain the path that the user chose. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4752" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4752" bodyend="4755"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a0d81b1dde59c368f006073424db37ef8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void msg_get_lines</definition>
        <argsstring>(qstrvec_t *out, int count=-1)</argsstring>
        <name>msg_get_lines</name>
        <param>
          <type><ref refid="pro_8h_1a823b67c620f6cdca97e1d969ea4a9b02" kindref="member">qstrvec_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the last &apos;count&apos; lines from the output window, in reverse order (from most recent, to least recent) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output storage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of lines to retrieve. -1 means: all </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4763" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4763" bodyend="4766"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a28e6b298d1e8ed7a3a843e752e1bb536" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* get_active_modal_widget</definition>
        <argsstring>(void)</argsstring>
        <name>get_active_modal_widget</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current, active modal TWidget instance. Note that in this context, the &quot;wait dialog&quot; is not considered: this function will return NULL even if it is currently shown. <simplesect kind="return"><para>TWidget * the active modal widget, or NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4774" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4774" bodyend="4777"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a30293798a7f9479da948cb52131eafc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int get_navband_pixel</definition>
        <argsstring>(bool *out_is_vertical, ea_t ea)</argsstring>
        <name>get_navband_pixel</name>
        <param>
          <type>bool *</type>
          <declname>out_is_vertical</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Translate the provided ea_t, into its pixel position (plus pixel ranges) on the navigation band. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4783" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4783" bodyend="4786"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a6b02620aeda12b6e69752b406a265310" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t get_navband_ea</definition>
        <argsstring>(int pixel)</argsstring>
        <name>get_navband_ea</name>
        <param>
          <type>int</type>
          <declname>pixel</declname>
        </param>
        <briefdescription>
<para>Translate the pixel position on the navigation band, into an address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4791" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4791" bodyend="4796"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1af86e442480db64ad8a727a2c798fba13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* get_window_id</definition>
        <argsstring>(const char *name=NULL)</argsstring>
        <name>get_window_id</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the system-specific window ID (GUI version only) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>the</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the window (NULL means the main IDA window) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the low-level window ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4803" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4803" bodyend="4806"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aa2be68ab610be9c379f2055287870782" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_idaview</definition>
        <argsstring>(TWidget *v)</argsstring>
        <name>is_idaview</name>
        <param>
          <type>TWidget *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Is the given custom view an idaview? (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a12e97e7671f6f7666e4631c60aba0816" kindref="member">ui_is_idaview</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4811" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4811" bodyend="4814"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a420cbbef85f557b2659ebfe265e8fd9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool read_selection</definition>
        <argsstring>(TWidget *v, twinpos_t *p1, twinpos_t *p2)</argsstring>
        <name>read_selection</name>
        <param>
          <type>TWidget *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classtwinpos__t" kindref="compound">twinpos_t</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="classtwinpos__t" kindref="compound">twinpos_t</ref> *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the selected range boundaries (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6da36070c851bc856e1f775916ba1bbd" kindref="member">ui_read_selection</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>view </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p1</parametername>
</parameternamelist>
<parameterdescription>
<para>start of selection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">p2</parametername>
</parameternamelist>
<parameterdescription>
<para>end of selection </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>no range is selected </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>ok, start and end are filled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4824" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4824" bodyend="4827"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a18b6718d7654d096c6f06c8d973e4dcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool read_range_selection</definition>
        <argsstring>(TWidget *v, ea_t *ea1, ea_t *ea2)</argsstring>
        <name>read_range_selection</name>
        <param>
          <type>TWidget *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>ea_t *</type>
          <declname>ea1</declname>
        </param>
        <param>
          <type>ea_t *</type>
          <declname>ea2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the address range for the selected range boundaries, this is the convenient function for <ref refid="kernwin_8hpp_1a420cbbef85f557b2659ebfe265e8fd9b" kindref="member">read_selection()</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>view, NULL means the last active window containing addresses </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ea1</parametername>
</parameternamelist>
<parameterdescription>
<para>start ea </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">ea2</parametername>
</parameternamelist>
<parameterdescription>
<para>end ea </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>no range is selected <linebreak/>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ok, start ea and end ea are filled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4839" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4839" bodyend="4842"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a345b6243752fb32516e8084e5afa04e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void unmark_selection</definition>
        <argsstring>(void)</argsstring>
        <name>unmark_selection</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Unmark selection (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334af2ebc4f088f5b9552f42b562706ef7eb" kindref="member">ui_unmarksel</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4847" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4847" bodyend="4847"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a612523a2d6f0f1bb7cf10ed56253976c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* create_code_viewer</definition>
        <argsstring>(TWidget *custview, int flags=0, TWidget *parent=NULL)</argsstring>
        <name>create_code_viewer</name>
        <param>
          <type>TWidget *</type>
          <declname>custview</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>TWidget *</type>
          <declname>parent</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a code viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a864a9abfd257e9dae089cccf83b4c073" kindref="member">ui_create_code_viewer</ref>). A code viewer contains on the left side a widget representing the line numbers, and on the right side, the child widget passed as parameter. It will inherit its title from the child widget.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>custview</parametername>
</parameternamelist>
<parameterdescription>
<para>the custom view to be added </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___c_d_v_f__" kindref="compound">Code viewer flags</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>widget to contain the new code viewer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4860" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4860" bodyend="4866"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__scvh__funcs_1gaef731725037023702814cd35dcee2c7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* set_code_viewer_handler</definition>
        <argsstring>(TWidget *code_viewer, custom_viewer_handler_id_t handler_id, void *handler_or_data)</argsstring>
        <name>set_code_viewer_handler</name>
        <param>
          <type>TWidget *</type>
          <declname>code_viewer</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132" kindref="member">custom_viewer_handler_id_t</ref></type>
          <declname>handler_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handler_or_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a handler for a code viewer event (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ff634bfdb2e6a4e4a7c3aea12649460" kindref="member">ui_set_custom_viewer_handler</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code_viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the code viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_id</parametername>
</parameternamelist>
<parameterdescription>
<para>one of CDVH_ in <ref refid="kernwin_8hpp_1adca3d7a02a6f5b01aabd7a0e56403132" kindref="member">custom_viewer_handler_id_t</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_or_data</parametername>
</parameternamelist>
<parameterdescription>
<para>can be a handler or data. see examples in <ref refid="group__ui__scvh__funcs" kindref="compound">Functions: custom viewer handlers</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>old value of the handler or data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4875" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4875" bodyend="4882"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__scvh__funcs_1ga4bdba38e8d09307f2b64f999368c9f31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_code_viewer_user_data</definition>
        <argsstring>(TWidget *code_viewer, void *ud)</argsstring>
        <name>set_code_viewer_user_data</name>
        <param>
          <type>TWidget *</type>
          <declname>code_viewer</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
<para>Set the user data on a code viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ff634bfdb2e6a4e4a7c3aea12649460" kindref="member">ui_set_custom_viewer_handler</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4887" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4887" bodyend="4890"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a12fe233ca2943f494aa5bc164305b4e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* get_viewer_user_data</definition>
        <argsstring>(TWidget *viewer)</argsstring>
        <name>get_viewer_user_data</name>
        <param>
          <type>TWidget *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>Get the user data from a custom viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aed819a75f97ea22018d9a6115e8ff34a" kindref="member">ui_get_viewer_user_data</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4895" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4895" bodyend="4898"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1abb995f3fa12f43bc208ffb59318f03f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="kernwin_8hpp_1aa16e69443c4d7f6099efc5536f02353e" kindref="member">tcc_place_type_t</ref></type>
        <definition>tcc_place_type_t get_viewer_place_type</definition>
        <argsstring>(TWidget *viewer)</argsstring>
        <name>get_viewer_place_type</name>
        <param>
          <type>TWidget *</type>
          <declname>viewer</declname>
        </param>
        <briefdescription>
<para>Get the type of <ref refid="classplace__t" kindref="compound">place_t</ref> instances a viewer uses &amp; creates (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aba23e4e7db3a7fe59c7b3b45aab90d73" kindref="member">ui_get_viewer_place_type</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4903" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4903" bodyend="4906"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a6182be3f76da919f62308f29e930df39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_code_viewer_line_handlers</definition>
        <argsstring>(TWidget *code_viewer, code_viewer_lines_click_t *click_handler, code_viewer_lines_click_t *popup_handler, code_viewer_lines_click_t *dblclick_handler, code_viewer_lines_icon_t *drawicon_handler, code_viewer_lines_linenum_t *linenum_handler)</argsstring>
        <name>set_code_viewer_line_handlers</name>
        <param>
          <type>TWidget *</type>
          <declname>code_viewer</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a6b5b065be98dc46a49078bde5538a88d" kindref="member">code_viewer_lines_click_t</ref> *</type>
          <declname>click_handler</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a6b5b065be98dc46a49078bde5538a88d" kindref="member">code_viewer_lines_click_t</ref> *</type>
          <declname>popup_handler</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a6b5b065be98dc46a49078bde5538a88d" kindref="member">code_viewer_lines_click_t</ref> *</type>
          <declname>dblclick_handler</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a3bef14021c95ac9d00b2205f6088ca1b" kindref="member">code_viewer_lines_icon_t</ref> *</type>
          <declname>drawicon_handler</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a0a39df098daf8e3fcf5f9c9392905ba7" kindref="member">code_viewer_lines_linenum_t</ref> *</type>
          <declname>linenum_handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set handlers for code viewer line events. Any of these handlers may be NULL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4912" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4912" bodyend="4922"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__scvh__funcs_1ga65aacdc29a9460afa1e8023d204d6a7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_code_viewer_lines_icon_margin</definition>
        <argsstring>(TWidget *code_viewer, int margin)</argsstring>
        <name>set_code_viewer_lines_icon_margin</name>
        <param>
          <type>TWidget *</type>
          <declname>code_viewer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
<para>Set space allowed for icons in the margin of a code viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ff634bfdb2e6a4e4a7c3aea12649460" kindref="member">ui_set_custom_viewer_handler</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4927" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4927" bodyend="4930"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__scvh__funcs_1ga6907e39497c73d004ea58bb84c704540" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_code_viewer_lines_alignment</definition>
        <argsstring>(TWidget *code_viewer, int align)</argsstring>
        <name>set_code_viewer_lines_alignment</name>
        <param>
          <type>TWidget *</type>
          <declname>code_viewer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>align</declname>
        </param>
        <briefdescription>
<para>Set alignment for lines in a code viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ff634bfdb2e6a4e4a7c3aea12649460" kindref="member">ui_set_custom_viewer_handler</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4935" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4935" bodyend="4938"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__scvh__funcs_1gac251992a5e4e09efce8101827915b3f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_code_viewer_lines_radix</definition>
        <argsstring>(TWidget *code_viewer, int radix)</argsstring>
        <name>set_code_viewer_lines_radix</name>
        <param>
          <type>TWidget *</type>
          <declname>code_viewer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
<para>Set radix for values displayed in a code viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ff634bfdb2e6a4e4a7c3aea12649460" kindref="member">ui_set_custom_viewer_handler</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4943" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4943" bodyend="4946"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__scvh__funcs_1gaa3f4ee8bf283ad7ff9d525e8b5a42e02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_code_viewer_is_source</definition>
        <argsstring>(TWidget *code_viewer)</argsstring>
        <name>set_code_viewer_is_source</name>
        <param>
          <type>TWidget *</type>
          <declname>code_viewer</declname>
        </param>
        <briefdescription>
<para>Specify that the given code viewer is used to display source code (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a5ff634bfdb2e6a4e4a7c3aea12649460" kindref="member">ui_set_custom_viewer_handler</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4951" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4951" bodyend="4954"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a5dbaef727ac6a0cdf5656ebfb08d739a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int get_tab_size</definition>
        <argsstring>(const char *path)</argsstring>
        <name>get_tab_size</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of a tab in spaces (<ref refid="group___s_v_f___1ga4a23e389ff9cbf1cd31179ca2f393334a0c38413cba3166228f1ad1044f06274c" kindref="member">ui_get_tab_size</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the source view for which the tab size is requested.<itemizedlist>
<listitem><para>if NULL, the default size is returned. </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4961" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4961" bodyend="4964"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a4599ed85502fdb7cab6868059d95a918" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void clr_cancelled</definition>
        <argsstring>(void)</argsstring>
        <name>clr_cancelled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clear &quot;Cancelled&quot; flag (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334accb2dc151791dcc6bdbc7af16dc85c4d" kindref="member">ui_clr_cancelled</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4969" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4969" bodyend="4969"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a3d1e56eafc1663b6d9f5f680f96f2982" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void set_cancelled</definition>
        <argsstring>(void)</argsstring>
        <name>set_cancelled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Set &quot;Cancelled&quot; flag (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab8a3ae19f72062ce0c735087c1ecc8b0" kindref="member">ui_set_cancelled</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4974" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4974" bodyend="4974"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ab47f95af74d213c4e0cb445eba8c4298" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool user_cancelled</definition>
        <argsstring>(void)</argsstring>
        <name>user_cancelled</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test the ctrl-break flag (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aaf54bc73927860a162bb25d5cc4e4127" kindref="member">ui_test_cancelled</ref>). <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>Ctrl-Break is detected, a message is displayed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>2</parametername>
</parameternamelist>
<parameterdescription>
<para>Ctrl-Break is detected again, a message is not displayed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Ctrl-Break is not detected </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4982" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4982" bodyend="4982"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a688c8a7aa65565ccb9ae9776bd18dccb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ui_load_new_file</definition>
        <argsstring>(qstring *temp_file, qstring *filename, linput_t **pli, ushort neflags, load_info_t **ploaders)</argsstring>
        <name>ui_load_new_file</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>temp_file</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>linput_t **</type>
          <declname>pli</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
          <declname>neflags</declname>
        </param>
        <param>
          <type><ref refid="structload__info__t" kindref="compound">load_info_t</ref> **</type>
          <declname>ploaders</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a load file dialog and load file (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a8758c7a9017b17795a972a0180e20803" kindref="member">ui_load_file</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">temp_file</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file with the extracted archive member. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of input file as is, library or archive name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pli</parametername>
</parameternamelist>
<parameterdescription>
<para>loader input source, may be changed to point to temp_file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neflags</parametername>
</parameternamelist>
<parameterdescription>
<para>combination of NEF_... bits (see <ref refid="group___n_e_f__" kindref="compound">Load file flags</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">ploaders</parametername>
</parameternamelist>
<parameterdescription>
<para>list of loaders which accept file, may be changed for loaders of temp_file </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>file was successfully loaded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="4997" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="4997" bodyend="5005"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a46d17faaa1a8365f0013e1a9658d5539" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ui_run_debugger</definition>
        <argsstring>(const char *dbgopts, const char *exename, int argc, const char *const *argv)</argsstring>
        <name>ui_run_debugger</name>
        <param>
          <type>const char *</type>
          <declname>dbgopts</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>exename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load a debugger plugin and run the specified program (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6a62c5d3c6dcb66d062d8d0cec3a116e" kindref="member">ui_run_dbg</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbgopts</parametername>
</parameternamelist>
<parameterdescription>
<para>value of the -r command line switch </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exename</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the file to run </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>number of arguments for the executable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>argument vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5015" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5015" bodyend="5022"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a94801f308ecdc5cb1a900aeb095a5e38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool load_dbg_dbginfo</definition>
        <argsstring>(const char *path, linput_t *li=NULL, ea_t base=BADADDR, bool verbose=false)</argsstring>
        <name>load_dbg_dbginfo</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>linput_t *</type>
          <declname>li</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>ea_t</type>
          <declname>base</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load debugging information from a file. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>path to file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>li</parametername>
</parameternamelist>
<parameterdescription>
<para>loader input. if NULL, check DBG_NAME_KEY </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>loading address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>dump status to message window </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5031" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5031" bodyend="5038"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a47a6d4c81363b9a9a887f3974241da9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int add_idc_hotkey</definition>
        <argsstring>(const char *hotkey, const char *idcfunc)</argsstring>
        <name>add_idc_hotkey</name>
        <param>
          <type>const char *</type>
          <declname>hotkey</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>idcfunc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add hotkey for IDC function (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab15458c958aa060b8cd7220a5d4b4bd7" kindref="member">ui_add_idckey</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hotkey</parametername>
</parameternamelist>
<parameterdescription>
<para>hotkey name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idcfunc</parametername>
</parameternamelist>
<parameterdescription>
<para>IDC function name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___i_d_c_h_k__" kindref="compound">IDC hotkey error codes</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5046" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5046" bodyend="5049"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1af9bb815d12abe7fe7be54818cc195d06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool del_idc_hotkey</definition>
        <argsstring>(const char *hotkey)</argsstring>
        <name>del_idc_hotkey</name>
        <param>
          <type>const char *</type>
          <declname>hotkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete IDC function hotkey (<ref refid="group___i_d_c_h_k___1ga4a23e389ff9cbf1cd31179ca2f393334a0fa8119323f2205dfae2da85d5c88ce3" kindref="member">ui_del_idckey</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hotkey</parametername>
</parameternamelist>
<parameterdescription>
<para>hotkey name </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5057" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5057" bodyend="5060"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a2a42e27359f235617171823782b2ac20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void get_user_strlist_options</definition>
        <argsstring>(strwinsetup_t *out)</argsstring>
        <name>get_user_strlist_options</name>
        <param>
          <type><ref refid="structstrwinsetup__t" kindref="compound">strwinsetup_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5063" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5063" bodyend="5066"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aa9d9cbe295763bb300b164ce4166db7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_highlight</definition>
        <argsstring>(qstring *out_str, TWidget *viewer, uint32 *out_flags)</argsstring>
        <name>get_highlight</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out_str</declname>
        </param>
        <param>
          <type>TWidget *</type>
          <declname>viewer</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> *</type>
          <declname>out_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the highlighted identifier in the viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a440af15e4d5ba1c85d18570896668ea2" kindref="member">ui_get_highlight</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out_str</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to copy identifier to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>storage for the flags </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if no identifier is highlighted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5075" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5075" bodyend="5078"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1afde9ed4badae30a3c1b6e53a86aaebe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool set_highlight</definition>
        <argsstring>(TWidget *viewer, const char *str, int flags)</argsstring>
        <name>set_highlight</name>
        <param>
          <type>TWidget *</type>
          <declname>viewer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the highlighted identifier in the viewer (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a6a1291657b4f20d018b386d9611a0f35" kindref="member">ui_set_highlight</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viewer</parametername>
</parameternamelist>
<parameterdescription>
<para>the viewer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the text to match, or NULL to remove current </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>combination of HIF_... bits (see <ref refid="group___h_i_f__" kindref="compound">set_highlightr flags</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if an error occurred </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5087" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5087" bodyend="5090"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a07fff9a67f8c5d6b3f62e26f0505f72e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void setup_range_marker</definition>
        <argsstring>(void)</argsstring>
        <name>setup_range_marker</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize pointer to idaview marker. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5102" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5102" bodyend="5107"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aaa8872ef1664d614c17fcdd5286c653e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mark_range_for_refresh</definition>
        <argsstring>(ea_t ea, asize_t size)</argsstring>
        <name>mark_range_for_refresh</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>asize_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Inform the UI about any modifications of [ea, ea+size) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5111" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5111" bodyend="5115"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ac34de69084c39a1e6cdf1f02b97288d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mark_all_eaviews_for_refresh</definition>
        <argsstring>(void)</argsstring>
        <name>mark_all_eaviews_for_refresh</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Tell UI to refresh all idaviews and hexviews. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5120" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5120" bodyend="5124"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga9f6b7714ac96f8b006e033afd9bc47cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_exports_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_exports_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the exports window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5136" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5136" bodyend="5139"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga704382f288943e298a0d0e84a24c4f29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_imports_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_imports_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the exports window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5146" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5146" bodyend="5149"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga3cd10410ee788ae678a234fdc3067137" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_names_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_names_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the names window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5156" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5156" bodyend="5159"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gac71c755a45c414b5c7072f6e1482eb00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_funcs_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_funcs_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the functions window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5166" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5166" bodyend="5169"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga2ce08c9d177fa1f4fe9fdcc58c8ba865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_strings_window</definition>
        <argsstring>(ea_t ea, ea_t selstart=BADADDR, ea_t selend=BADADDR)</argsstring>
        <name>open_strings_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>selstart</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <param>
          <type>ea_t</type>
          <declname>selend</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the strings window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selstart</parametername>
<parametername>selend</parametername>
</parameternamelist>
<parameterdescription>
<para>only display strings that occur within this range </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5177" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5177" bodyend="5180"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga8edf2bfccb31c55bbdbc59538a921a83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_segments_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_segments_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the segments window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5187" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5187" bodyend="5190"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga3f6619ff21bb44b2f7c9fb92fa5ba191" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_segregs_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_segregs_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the segment registers window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5197" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5197" bodyend="5200"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga99bcaf4b27e0bc318479c0ac6020eb8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_selectors_window</definition>
        <argsstring>(void)</argsstring>
        <name>open_selectors_window</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the selectors window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5206" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5206" bodyend="5209"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gac0d31f5c69b86e18e8389d84139a8135" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_signatures_window</definition>
        <argsstring>(void)</argsstring>
        <name>open_signatures_window</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the signatures window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5215" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5215" bodyend="5218"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga883cc3d7b41a631af4522ce900d2076a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_tils_window</definition>
        <argsstring>(void)</argsstring>
        <name>open_tils_window</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the type libraries window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5224" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5224" bodyend="5227"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gad9b4b97983df27f24b01270634eb250f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_loctypes_window</definition>
        <argsstring>(int ordinal)</argsstring>
        <name>open_loctypes_window</name>
        <param>
          <type>int</type>
          <declname>ordinal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the local types window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ordinal</parametername>
</parameternamelist>
<parameterdescription>
<para>ordinal of type to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5234" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5234" bodyend="5237"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga32dcfc3a1abe6b5c4f5113cf493d82b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_calls_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_calls_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the function calls window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5243" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5243" bodyend="5246"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gadf2281f4d4de17825996bdd46d5f8182" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_problems_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_problems_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the problems window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5252" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5252" bodyend="5255"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga3d91ff05e33ee59febd74745e410898b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_bpts_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_bpts_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the breakpoints window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5262" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5262" bodyend="5265"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gad504e30615030159fe8626bd57306557" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_threads_window</definition>
        <argsstring>(void)</argsstring>
        <name>open_threads_window</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the threads window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5271" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5271" bodyend="5274"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gac93bbeb563b49ff6386550095b2ae062" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_modules_window</definition>
        <argsstring>(void)</argsstring>
        <name>open_modules_window</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the modules window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5280" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5280" bodyend="5283"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga5c023d4f78e69be14a1507f9dd65430e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_trace_window</definition>
        <argsstring>(void)</argsstring>
        <name>open_trace_window</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the trace window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5289" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5289" bodyend="5292"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gafc1a9ef94b8cd1d97ed8a39f4e009b38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_stack_window</definition>
        <argsstring>(void)</argsstring>
        <name>open_stack_window</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the call stack window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5298" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5298" bodyend="5301"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gaec1fa9f8015379fe3f0abba04f6d997e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_xrefs_window</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>open_xrefs_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the cross references window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5308" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5308" bodyend="5311"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga61f5f3a5e1e47222d6cada1be4b810d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_frame_window</definition>
        <argsstring>(func_t *pfn, uval_t offset)</argsstring>
        <name>open_frame_window</name>
        <param>
          <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the frame window for the given function (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pfn</parametername>
</parameternamelist>
<parameterdescription>
<para>function to analyze </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset where the cursor is placed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window if &apos;pfn&apos; is a valid function and the window was displayed, <linebreak/>
 NULL otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5320" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5320" bodyend="5323"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga906ba3c34cc11011cf4eb3d2a3e49722" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_navband_window</definition>
        <argsstring>(ea_t ea, int zoom)</argsstring>
        <name>open_navband_window</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zoom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the navigation band window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the address of the navband arrow </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>zoom</parametername>
</parameternamelist>
<parameterdescription>
<para>sets the navband zoom level </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5331" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5331" bodyend="5334"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga967c1da6710304ac0352ae780db407fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_enums_window</definition>
        <argsstring>(tid_t const_id=BADADDR)</argsstring>
        <name>open_enums_window</name>
        <param>
          <type><ref refid="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" kindref="member">tid_t</ref></type>
          <declname>const_id</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the enums window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const_id</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5341" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5341" bodyend="5344"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga033054bdb3ee090bfbd020b6ab692889" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_structs_window</definition>
        <argsstring>(tid_t id=BADADDR, uval_t offset=0)</argsstring>
        <name>open_structs_window</name>
        <param>
          <type><ref refid="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" kindref="member">tid_t</ref></type>
          <declname>id</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the structs window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>index of entry to select by default </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>offset where the cursor is placed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5352" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5352" bodyend="5355"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1ga0c431cd1ea2687d69cb138e287d20727" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_disasm_window</definition>
        <argsstring>(const char *window_title, const rangevec_t *ranges=NULL)</argsstring>
        <name>open_disasm_window</name>
        <param>
          <type>const char *</type>
          <declname>window_title</declname>
        </param>
        <param>
          <type>const <ref refid="structrangevec__t" kindref="compound">rangevec_t</ref> *</type>
          <declname>ranges</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open a disassembly view (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window_title</parametername>
</parameternamelist>
<parameterdescription>
<para>title of view to open </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>if != NULL, then display a flow chart with the specified ranges </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5363" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5363" bodyend="5366"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gac37d8256670221103ab5417d18b3404e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_hexdump_window</definition>
        <argsstring>(const char *window_title)</argsstring>
        <name>open_hexdump_window</name>
        <param>
          <type>const char *</type>
          <declname>window_title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open a hexdump view (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window_title</parametername>
</parameternamelist>
<parameterdescription>
<para>title of view to open </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5373" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5373" bodyend="5376"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__open__builtin__funcs_1gaaece85f5f77c6c33059dd8a2a7c60a39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_notepad_window</definition>
        <argsstring>(void)</argsstring>
        <name>open_notepad_window</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open the notepad window (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a760bb508680e0dfd16fb9c9270273d4f" kindref="member">ui_open_builtin</ref>). <simplesect kind="return"><para>pointer to resulting window </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5382" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5382" bodyend="5385"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1ga54ea38ee386b1cc6108076b7c6c9b159" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* choose_idasgn</definition>
        <argsstring>(void)</argsstring>
        <name>choose_idasgn</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose a signature (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23adaec22fcd09ea0329f48766a5c1cef9d3d" kindref="member">chtype_idasgn</ref>). <simplesect kind="return"><para>name of selected signature, NULL if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5398" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5398" bodyend="5401"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1gaa1f1ef4a32b87cd8246b538a1c9f3d13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool choose_til</definition>
        <argsstring>(qstring *buf)</argsstring>
        <name>choose_til</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose a type library (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada1cce761fcb06d1384129db7403d777a5" kindref="member">chtype_idatil</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer to store the library name </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>true</parametername>
</parameternamelist>
<parameterdescription>
<para>&apos;buf&apos; was filled with the name of the selected til </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5409" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5409" bodyend="5412"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1gad7d12dbf0e1e564e8efc2fad92aa1fff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t choose_entry</definition>
        <argsstring>(const char *title)</argsstring>
        <name>choose_entry</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose an entry point (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada8b44ef7373acb1f34a9afa48ffb17bf3" kindref="member">chtype_entry</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>chooser title </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ea of selected entry point, <ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref> if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5419" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5419" bodyend="5424"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1ga76970553444762309ae13b289f7d6c38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t choose_name</definition>
        <argsstring>(const char *title)</argsstring>
        <name>choose_name</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose a name (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada386cbd8c05abbe88bc7303d197a64e24" kindref="member">chtype_name</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>chooser title </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ea of selected name, <ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref> if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5431" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5431" bodyend="5436"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1gab32f6f610ab57f223e4d273944e10f90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t choose_stkvar_xref</definition>
        <argsstring>(func_t *pfn, member_t *mptr)</argsstring>
        <name>choose_stkvar_xref</name>
        <param>
          <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type><ref refid="classmember__t" kindref="compound">member_t</ref> *</type>
          <declname>mptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose an xref to a stack variable (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada386cbd8c05abbe88bc7303d197a64e24" kindref="member">chtype_name</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pfn</parametername>
</parameternamelist>
<parameterdescription>
<para>function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mptr</parametername>
</parameternamelist>
<parameterdescription>
<para>variable </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ea of the selected xref, BADADDR if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5444" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5444" bodyend="5449"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1gad5ef0ae154c7869a4c43282550ca3a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t</type>
        <definition>ea_t choose_xref</definition>
        <argsstring>(ea_t to)</argsstring>
        <name>choose_xref</name>
        <param>
          <type>ea_t</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose an xref to an address (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada84413d31c27330eecdf2d116e27150bd" kindref="member">chtype_xref</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>referenced address </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ea of selected xref, BADADDR if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5456" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5456" bodyend="5461"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1gabb280da099a543192ba6cb140886b1c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="kernwin_8hpp_1a320dc6698b7075a653144bbdf202b30e" kindref="member">enum_t</ref></type>
        <definition>enum_t choose_enum</definition>
        <argsstring>(const char *title, enum_t default_id)</argsstring>
        <name>choose_enum</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a320dc6698b7075a653144bbdf202b30e" kindref="member">enum_t</ref></type>
          <declname>default_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose an enum (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada1c8bfa77f3ac9c19870663f0b6cb59cf" kindref="member">chtype_enum</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>chooser title </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_id</parametername>
</parameternamelist>
<parameterdescription>
<para>id of enum to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>enum id of selected enum, <ref refid="netnode_8hpp_1ab745219216aec4e8abf2c1dcc5d5eac0" kindref="member">BADNODE</ref> if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5469" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5469" bodyend="5474"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1ga4b8559bdf7ef2c781c9e46527867ee8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="kernwin_8hpp_1a320dc6698b7075a653144bbdf202b30e" kindref="member">enum_t</ref></type>
        <definition>enum_t choose_enum_by_value</definition>
        <argsstring>(const char *title, enum_t default_id, uval_t value, int nbytes, uchar *serial)</argsstring>
        <name>choose_enum_by_value</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="kernwin_8hpp_1a320dc6698b7075a653144bbdf202b30e" kindref="member">enum_t</ref></type>
          <declname>default_id</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>serial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose an enum, restricted by value &amp; size (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada62cc53dbffcab3c4277cfdb9a5651e04" kindref="member">chtype_enum_by_value_and_size</ref>). If the given value cannot be found initially, this function will ask if the user would like to import a standard enum. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>chooser title </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_id</parametername>
</parameternamelist>
<parameterdescription>
<para>id of enum to select by default </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to search for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>size of value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">serial</parametername>
</parameternamelist>
<parameterdescription>
<para>serial number of imported enum member, if one was found </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>enum id of selected (or imported) enum, <ref refid="netnode_8hpp_1ab745219216aec4e8abf2c1dcc5d5eac0" kindref="member">BADNODE</ref> if none was found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5487" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5487" bodyend="5497"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1gaa646e7f1986c51968fe3baaf6145600a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
        <definition>func_t* choose_func</definition>
        <argsstring>(const char *title, ea_t default_ea)</argsstring>
        <name>choose_func</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>default_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose a function (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada0b699b6610e236fc595ee5368a1abb6c" kindref="member">chtype_func</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>chooser title </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>ea of function to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to function that was selected, NULL if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5505" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5505" bodyend="5508"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1ga64dfdf9b4ea22f20b0e8d9c0bf15c9d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsegment__t" kindref="compound">segment_t</ref> *</type>
        <definition>segment_t* choose_segm</definition>
        <argsstring>(const char *title, ea_t default_ea)</argsstring>
        <name>choose_segm</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>default_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose a segment (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada94b449f2efb1183ad281068b2e6ea611" kindref="member">chtype_segm</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>chooser title </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>ea of segment to select by default </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to segment that was selected, NULL if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5516" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5516" bodyend="5519"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1gaed3341085e6f6ca84f2f787ac2eab73f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classstruc__t" kindref="compound">struc_t</ref> *</type>
        <definition>struc_t* choose_struc</definition>
        <argsstring>(const char *title)</argsstring>
        <name>choose_struc</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose a structure (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada94b449f2efb1183ad281068b2e6ea611" kindref="member">chtype_segm</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>chooser title; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to structure that was selected, NULL if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5526" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5526" bodyend="5529"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__choose__funcs_1gac4223f5feb9c41b74166370029bcf67e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsreg__range__t" kindref="compound">sreg_range_t</ref> *</type>
        <definition>sreg_range_t* choose_srcp</definition>
        <argsstring>(const char *title)</argsstring>
        <name>choose_srcp</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Choose a segment register change point (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23ada35f2742832c1ae3fe40b353e72be563b" kindref="member">chtype_srcp</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>chooser title </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to segment register range of selected change point, NULL if none selected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5536" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5536" bodyend="5539"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a98daa1119c638c2628336f4aab2d784c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int choose_struc_path</definition>
        <argsstring>(const char *title, tid_t strid, uval_t offset, adiff_t delta, bool appzero, tid_t *path)</argsstring>
        <name>choose_struc_path</name>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" kindref="member">tid_t</ref></type>
          <declname>strid</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>adiff_t</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>appzero</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ad8791d30d19843bc09b78bdf01a852ec" kindref="member">tid_t</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Get path to a structure offset (for nested structures/enums) (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a05f9298ac3199cb263dc375a2a3812ef" kindref="member">ui_choose</ref>, <ref refid="kernwin_8hpp_1ab94cbb2305bcb076985c0ac7fe6c23adabbf346741d97c82ab79289a868c0d444" kindref="member">chtype_strpath</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5547" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5547" bodyend="5557"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ab0779d3ad6e75c20bef32f73a353f423" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* get_chooser_obj</definition>
        <argsstring>(const char *chooser_caption)</argsstring>
        <name>get_chooser_obj</name>
        <param>
          <type>const char *</type>
          <declname>chooser_caption</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the underlying object of the specified chooser (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aefa5690695bcecca0afcbe9ae2666c81" kindref="member">ui_get_chooser_obj</ref>). <simplesect kind="note"><para>This is object is chooser-specific. </para></simplesect>
<simplesect kind="return"><para>the object that was used to create the chooser </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5576" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5576" bodyend="5579"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a2bbcc3e2da45bedc6c434febaa14c4c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_chooser_data</definition>
        <argsstring>(qstrvec_t *out, const char *chooser_caption, int n)</argsstring>
        <name>get_chooser_data</name>
        <param>
          <type><ref refid="pro_8h_1a823b67c620f6cdca97e1d969ea4a9b02" kindref="member">qstrvec_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>chooser_caption</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the text corresponding to the index N in the chooser data. Use -1 to get the header. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5584" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5584" bodyend="5590"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aca7324fab0f8c10ee56aafcfebf5ab73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi enable_chooser_item_attrs</definition>
        <argsstring>(const char *chooser_caption, bool enable)</argsstring>
        <name>enable_chooser_item_attrs</name>
        <param>
          <type>const char *</type>
          <declname>chooser_caption</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable item-specific attributes for chooser items (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a02d9b43e44dd61100e6b96e3d28c5194" kindref="member">ui_enable_chooser_item_attrs</ref>). For example: color list items differently depending on a criterium. <linebreak/>
If enabled, the chooser will generate ui_get_chooser_item_attrs <linebreak/>
events that can be intercepted by a plugin to modify the item attributes. <linebreak/>
This event is generated only in the GUI version of IDA. <linebreak/>
Specifying <ref refid="group___c_h___1gab3890b823cb1ccce21f56f4941dd5398" kindref="member">CH_ATTRS</ref> bit at the chooser creation time has the same effect. <simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5601" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5601" bodyend="5604"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a29f7d5353d2b5223102089638ea3ef01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void show_wait_box_v</definition>
        <argsstring>(const char *format, va_list va)</argsstring>
        <name>show_wait_box_v</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>See <ref refid="kernwin_8hpp_1a325acb9c1c1713846df9797e2a1364a3" kindref="member">show_wait_box()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5609" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5609" bodyend="5612"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a325acb9c1c1713846df9797e2a1364a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void show_wait_box</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>show_wait_box</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box with &quot;Please wait...&quot;. If the text message starts with &quot;HIDECANCEL\n&quot;, the cancel button <linebreak/>
won&apos;t be displayed in the dialog box and you don&apos;t need to check <linebreak/>
for cancellations with <ref refid="kernwin_8hpp_1ab47f95af74d213c4e0cb445eba8c4298" kindref="member">user_cancelled()</ref>. Plugins must call <ref refid="kernwin_8hpp_1a39d2f40b58dc7bbe3b6be10bf7ecb4a9" kindref="member">hide_wait_box()</ref> <linebreak/>
to close the dialog box, otherwise the user interface will be disabled.</para><para>Note that, if the wait dialog is already visible, <ref refid="kernwin_8hpp_1a325acb9c1c1713846df9797e2a1364a3" kindref="member">show_wait_box()</ref> will <linebreak/>
 1) push the currently-displayed text on a stack <linebreak/>
 2) display the new text <linebreak/>
Then, when <ref refid="kernwin_8hpp_1a39d2f40b58dc7bbe3b6be10bf7ecb4a9" kindref="member">hide_wait_box()</ref> is called, if that stack isn&apos;t empty its top <linebreak/>
label will be popped and restored in the wait dialog. <linebreak/>
This implies that a plugin should call <ref refid="kernwin_8hpp_1a39d2f40b58dc7bbe3b6be10bf7ecb4a9" kindref="member">hide_wait_box()</ref> exactly as many <linebreak/>
times as it called <ref refid="kernwin_8hpp_1a325acb9c1c1713846df9797e2a1364a3" kindref="member">show_wait_box()</ref>, or the wait dialog might remain <linebreak/>
visible and block the UI. <linebreak/>
Also, in case the plugin knows the wait dialog is currently displayed, <linebreak/>
alternatively it can call <ref refid="kernwin_8hpp_1a8d380e7cd213fca4cf784acf386011f8" kindref="member">replace_wait_box()</ref>, to replace the text of the<linebreak/>
dialog without pushing the currently-displayed text on the stack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5632" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5632" bodyend="5638"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a39d2f40b58dc7bbe3b6be10bf7ecb4a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void hide_wait_box</definition>
        <argsstring>(void)</argsstring>
        <name>hide_wait_box</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Hide the &quot;Please wait dialog box&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5643" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5643" bodyend="5647"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a8d380e7cd213fca4cf784acf386011f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void replace_wait_box</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>replace_wait_box</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Replace the label of &quot;Please wait dialog box&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5652" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5652" bodyend="5658"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aecc00a4dfe680216ce2599b0897268f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void beep</definition>
        <argsstring>(beep_t beep_type=beep_default)</argsstring>
        <name>beep</name>
        <param>
          <type><ref refid="kernwin_8hpp_1a3b5f407682a1f277fbed22f88493cdf9" kindref="member">beep_t</ref></type>
          <declname>beep_type</declname>
          <defval>beep_default</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Issue a beeping sound (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a224e2f7359506e8afa2e26408a00029c" kindref="member">ui_beep</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beep_type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="kernwin_8hpp_1a3b5f407682a1f277fbed22f88493cdf9" kindref="member">beep_t</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5664" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5664" bodyend="5667"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a7e6c2ffa3b0bf9167ac330da72707d6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool display_copyright_warning</definition>
        <argsstring>(void)</argsstring>
        <name>display_copyright_warning</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display copyright warning (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a7ff665bc9bbab23959a3575bcf6efcf2" kindref="member">ui_copywarn</ref>). <simplesect kind="return"><para>yes/no </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5673" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5673" bodyend="5676"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a1c2221d2416bc7739336751ba887cc24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void ask_for_feedback</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>ask_for_feedback</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Show a message box asking to send the input file to <ulink url="mailto:support@hex-rays.com">support@hex-rays.com</ulink>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the reason why the input file is bad </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5684" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5684" bodyend="5690"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a17b49ccfe0e90df44989402269aee34d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ask_addr</definition>
        <argsstring>(ea_t *addr, const char *format,...)</argsstring>
        <name>ask_addr</name>
        <param>
          <type>ea_t *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and wait for the user to input an address (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334a3c31a8952d83d93d0940c73fa7907bde" kindref="member">ui_ask_addr</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>in/out parameter. contains pointer to the address. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style format string with the question </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>the user pressed Esc. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ok, the user entered an address </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5699" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5699" bodyend="5706"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ac70e33ed6d6d79d08a8f925a182a02e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ask_seg</definition>
        <argsstring>(sel_t *sel, const char *format,...)</argsstring>
        <name>ask_seg</name>
        <param>
          <type>sel_t *</type>
          <declname>sel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and wait for the user to input an segment name (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334aeea3217ea718636fb28935558e2628fa" kindref="member">ui_ask_seg</ref>). This function allows to enter segment register names, segment base paragraphs, segment names to denote a segment. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sel</parametername>
</parameternamelist>
<parameterdescription>
<para>in/out parameter. contains selector of the segment </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style format string with the question </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the user pressed Esc. <linebreak/>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ok, the user entered an segment name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5717" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5717" bodyend="5724"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a7bfd0d6d3ae2ce4d845ed2108078f3ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ask_long</definition>
        <argsstring>(sval_t *value, const char *format,...)</argsstring>
        <name>ask_long</name>
        <param>
          <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and wait for the user to input an number (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae51844e9947765304a19cdcdb0db4b50" kindref="member">ui_ask_long</ref>). The number is represented in C-style. This function allows to enter any IDC expression and properly calculates it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>in/out parameter. contains pointer to the number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style format string with the question </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>if the user pressed Esc. <linebreak/>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>-ok, the user entered a valid number. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5736" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5736" bodyend="5743"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a6c448838751433bfda04dcdb8d8b1457" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> NORETURN void</type>
        <definition>THREAD_SAFE NORETURN void error</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>error</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display error dialog box and exit. If you just want to display an error message and let IDA continue, do NOT use this function! Use warning() or info() instead. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style message string. It may have some prefixes, see &apos;Format of dialog box&apos; for details. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5771" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5771" bodyend="5777"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aefabdeb1e0bdc0fe54ab28f9178fc716" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void vwarning</definition>
        <argsstring>(const char *format, va_list va)</argsstring>
        <name>vwarning</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display warning dialog box and wait for the user to press Enter or Esc. This messagebox will by default contain a &quot;Don&apos;t display this message again&quot; <linebreak/>
checkbox if the message is repetitively displayed. If checked, the message <linebreak/>
won&apos;t be displayed anymore during the current IDA session. <linebreak/>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style format string. It may have some prefixes, see &apos;Format of dialog box&apos; for details. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5787" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5787" bodyend="5790"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ae300a70ec69a3835088929136b2e2562" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void warning</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>warning</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5792" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5792" bodyend="5798"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ade7f73d4103c6ad695dac91bbc7c7762" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void vinfo</definition>
        <argsstring>(const char *format, va_list va)</argsstring>
        <name>vinfo</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display info dialog box and wait for the user to press Enter or Esc. This messagebox will by default contain a &quot;Don&apos;t display this message again&quot; <linebreak/>
checkbox. If checked, the message will never be displayed anymore (state saved <linebreak/>
in the Windows registry or the idareg.cfg file for a non-Windows version). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style format string. It may have some prefixes, see &apos;Format of dialog box&apos; for details. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5808" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5808" bodyend="5811"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a513ff6f132e1b8ad086f0f4e69c1d612" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void info</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>info</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5813" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5813" bodyend="5819"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a9922c062b721a9f38f1cf8999a61dfbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> NORETURN void</type>
        <definition>THREAD_SAFE NORETURN void vnomem</definition>
        <argsstring>(const char *format, va_list va)</argsstring>
        <name>vnomem</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display &quot;no memory for module ...&quot; dialog box and exit. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style message string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5825" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5825" bodyend="5830"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ae27825a6d1482e6f07db29bb38f5e6d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> NORETURN void</type>
        <definition>THREAD_SAFE NORETURN void nomem</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>nomem</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5832" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5832" bodyend="5838"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a6c1186181981854d2a7ed183f8f3d116" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int</type>
        <definition>THREAD_SAFE int vmsg</definition>
        <argsstring>(const char *format, va_list va)</argsstring>
        <name>vmsg</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Output a formatted string to the output window [analog of printf()]. Everything appearing on the output window may be written to a text file. For this the user should define the following environment variable: <linebreak/>
 set IDALOG=idalog.txt</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style message string. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes output </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5850" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5850" bodyend="5853"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a97ba0c1ef489da09ba5b3ad11238515a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int</type>
        <definition>THREAD_SAFE int msg</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>msg</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="5855" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="5855" bodyend="5862"/>
      </memberdef>
      <memberdef kind="function" id="group___f_o_r_m___c_1ga3e2bf943ddcd9256fadc7cf0913bdfbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vask_form</definition>
        <argsstring>(const char *format, va_list va)</argsstring>
        <name>vask_form</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>See <ref refid="group___f_o_r_m___c_1ga56bdea2f1808b588da54c343f42ebf41" kindref="member">ask_form()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6126" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6126" bodyend="6129"/>
      </memberdef>
      <memberdef kind="function" id="group___f_o_r_m___c_1ga56bdea2f1808b588da54c343f42ebf41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ask_form</definition>
        <argsstring>(const char *form,...)</argsstring>
        <name>ask_form</name>
        <param>
          <type>const char *</type>
          <declname>form</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and wait for the user. If the form contains the &quot;BUTTON NO &lt;title&gt;&quot; keyword, then the return values are the same as in the <ref refid="kernwin_8hpp_1a29d876e50747b86d842c0abaf6d0d7d8" kindref="member">ask_yn()</ref> function (<ref refid="group___a_s_k_b_t_n__" kindref="compound">Button IDs</ref>) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>form</parametername>
</parameternamelist>
<parameterdescription>
<para>dialog box as a string. see <ref refid="group___f_o_r_m___c" kindref="compound">ask_form()/open_form()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>the user pressed Esc, no memory to display or form syntax error a dialog box (a warning is displayed in this case). all variables retain their original values. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>ok, all input fields are filled and validated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>the form had BUTTON CANCEL and the user cancelled the dialog </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6141" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6141" bodyend="6148"/>
      </memberdef>
      <memberdef kind="function" id="group___f_o_r_m___c_1gac0a6440bc79c64499e55e53d263aa148" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* vopen_form</definition>
        <argsstring>(const char *format, int flags, va_list va)</argsstring>
        <name>vopen_form</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and/or activate dockable modeless form (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab90ae4abe5dc7cb69cb2cee54543dab8" kindref="member">ui_open_form</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___w_i_d_g_e_t___o_p_e_n" kindref="compound">Widget open flags</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>args </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to resulting TWidget </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6157" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6157" bodyend="6160"/>
      </memberdef>
      <memberdef kind="function" id="group___f_o_r_m___c_1gad13585334cbdbf7bc9910cc166137d19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TWidget *</type>
        <definition>TWidget* open_form</definition>
        <argsstring>(const char *form, int flags,...)</argsstring>
        <name>open_form</name>
        <param>
          <type>const char *</type>
          <declname>form</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dockable modeless dialog box and return a handle to it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>form</parametername>
</parameternamelist>
<parameterdescription>
<para>dialog box as a string. see <ref refid="group___f_o_r_m___c" kindref="compound">ask_form()/open_form()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___w_i_d_g_e_t___o_p_e_n" kindref="compound">Widget open flags</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>handle to the form or NULL. the handle can be used with TWidget functions: <ref refid="kernwin_8hpp_1ad27da33115a2f2e7bddbbf5d29aa814b" kindref="member">close_widget()</ref>/activate_widget()/etc </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6169" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6169" bodyend="6176"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a4991c94310cf78a94205ceb9158301d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int</type>
        <definition>THREAD_SAFE int vask_buttons</definition>
        <argsstring>(const char *Yes, const char *No, const char *Cancel, int deflt, const char *format, va_list va)</argsstring>
        <name>vask_buttons</name>
        <param>
          <type>const char *</type>
          <declname>Yes</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>No</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Cancel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deflt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6334" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6334" bodyend="6343"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aada330ba9b2abdf86fd0ecc68000ae8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int vask_yn</definition>
        <argsstring>(int deflt, const char *format, va_list va)</argsstring>
        <name>vask_yn</name>
        <param>
          <type>int</type>
          <declname>deflt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6346" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6346" bodyend="6349"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a29d876e50747b86d842c0abaf6d0d7d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ask_yn</definition>
        <argsstring>(int deflt, const char *format,...)</argsstring>
        <name>ask_yn</name>
        <param>
          <type>int</type>
          <declname>deflt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and get choice from &quot;Yes&quot;, &quot;No&quot;, &quot;Cancel&quot;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deflt</parametername>
</parameternamelist>
<parameterdescription>
<para>default choice: one of <ref refid="group___a_s_k_b_t_n__" kindref="compound">Button IDs</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The question in printf() style format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the selected button (one of <ref refid="group___a_s_k_b_t_n__" kindref="compound">Button IDs</ref>). Esc key returns <ref refid="group___a_s_k_b_t_n___1gafd0bbdf5eec4b1aaddb3a4ebbd5fd309" kindref="member">ASKBTN_CANCEL</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6357" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6357" bodyend="6364"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a01a20c3250f326400f7b4becd279d81b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ask_buttons</definition>
        <argsstring>(const char *Yes, const char *No, const char *Cancel, int deflt, const char *format,...)</argsstring>
        <name>ask_buttons</name>
        <param>
          <type>const char *</type>
          <declname>Yes</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>No</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Cancel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>deflt</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and get choice from maximum three possibilities (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ae6e29709faf8fafc70e2e99dea766b60" kindref="member">ui_ask_buttons</ref>). <simplesect kind="note"><para>for all buttons:<itemizedlist>
<listitem><para>use &quot;&quot; or NULL to take the default name for the button.</para></listitem><listitem><para>use &apos;format&apos; to hide the cancel button </para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Yes</parametername>
</parameternamelist>
<parameterdescription>
<para>text for the first button </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>No</parametername>
</parameternamelist>
<parameterdescription>
<para>text for the second button </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Cancel</parametername>
</parameternamelist>
<parameterdescription>
<para>text for the third button </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deflt</parametername>
</parameternamelist>
<parameterdescription>
<para>default choice: one of <ref refid="group___a_s_k_b_t_n__" kindref="compound">Button IDs</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf-style format string for question. It may have some prefixes, see below. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>parameters for the format string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>one of <ref refid="group___a_s_k_b_t_n__" kindref="compound">Button IDs</ref> specifying the selected button (Esc key returns Cancel/3rd button value) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6379" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6379" bodyend="6392"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ade7f88c994159547efa45f639d284a10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vask_str</definition>
        <argsstring>(qstring *str, int hist, const char *format, va_list va)</argsstring>
        <name>vask_str</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hist</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and wait for the user to input a text string (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ad67c50927068ef1677f8d7ac3ea60d78" kindref="member">ui_ask_str</ref>). Use this function to ask one-line text. For multiline input, use ask_text(). This function will trim the trailing spaces. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>qstring to fill. Can contain the default value. Cannot be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hist</parametername>
</parameternamelist>
<parameterdescription>
<para>category of history lines. an arbitrary number. <linebreak/>
 this number determines lines accessible in the history <linebreak/>
 of the user input (when he presses down arrow) <linebreak/>
 One of <ref refid="group___h_i_s_t__" kindref="compound">Input line history constants</ref> should be used here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style format string with the question </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if the user cancelled the dialog, otherwise returns true. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6461" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6461" bodyend="6468"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ad5ec63721cee42fdbf4c3f7b1044a5e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ask_str</definition>
        <argsstring>(qstring *str, int hist, const char *format,...)</argsstring>
        <name>ask_str</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hist</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6470" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6470" bodyend="6477"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aaaf13c3c8296a8bcee6eda6d048561f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ask_ident</definition>
        <argsstring>(qstring *str, const char *format,...)</argsstring>
        <name>ask_ident</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and wait for the user to input an identifier. If the user enters a non-valid identifier, this function displays a warning and allows the user to correct it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>qstring to fill. Can contain the default value. Cannot be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style format string with the question </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if the user cancelled the dialog, otherwise returns true. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6500" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6500" bodyend="6507"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1afd05a5271a01b4c55edc202791894fc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vask_text</definition>
        <argsstring>(qstring *answer, size_t max_size, const char *defval, const char *format, va_list va)</argsstring>
        <name>vask_text</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>answer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and wait for the user to input multiline text (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334abef32a7500f0c1dbd082df42696aecbb" kindref="member">ui_ask_text</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>answer</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_size</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum size of text in bytes including terminating zero (0 for unlimited) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defval</parametername>
</parameternamelist>
<parameterdescription>
<para>default value. will be displayed initially in the input line. may be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf() style format string with the question. the following options are accepted at its beginning: &quot;ACCEPT TABS\n&quot;: accept tabulations in the input &quot;NORMAL FONT\n&quot;: use regular font (otherwise the notepad font) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false-if the user pressed Esc, otherwise returns true. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6521" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6521" bodyend="6529"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a823adadb605d4058b8a167731bd67240" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ask_text</definition>
        <argsstring>(qstring *answer, size_t max_size, const char *defval, const char *format,...)</argsstring>
        <name>ask_text</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>answer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6531" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6531" bodyend="6543"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1acc49f43b240bae72081478d169cfee81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* vask_file</definition>
        <argsstring>(bool for_saving, const char *defval, const char *format, va_list va)</argsstring>
        <name>vask_file</name>
        <param>
          <type>bool</type>
          <declname>for_saving</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Display a dialog box and wait for the user to input a file name (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334ab325695445d22e46185084c71e138b55" kindref="member">ui_ask_file</ref>). This function displays a window with file names present in the directory pointed to by &apos;defval&apos;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>for_saving</parametername>
</parameternamelist>
<parameterdescription>
<para>will the filename be used to save a file? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defval</parametername>
</parameternamelist>
<parameterdescription>
<para>default value. will be displayed initially in the input line. may be NULL may be or a wildcard file name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf-style format string with the question. it may contain &quot;FILTER filter\n&quot; at the beginning. The filter format is&apos;description1|wildcard2;wildcards2;...|descriptionN|wildcardsN&apos; Example: Text files|*.txt;Executable files|*.exe;*.bin (the last component has 2 masks) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL the user cancelled the dialog. Otherwise the user entered a valid file name. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6564" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6564" bodyend="6571"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1af50f43359c0092d425faf99ae29f1750" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* ask_file</definition>
        <argsstring>(bool for_saving, const char *defval, const char *format,...)</argsstring>
        <name>ask_file</name>
        <param>
          <type>bool</type>
          <declname>for_saving</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6574" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6574" bodyend="6585"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__addons__funcs_1ga8cedec52a3b7528466ac750a68e9c87f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int register_addon</definition>
        <argsstring>(const addon_info_t *info)</argsstring>
        <name>register_addon</name>
        <param>
          <type>const <ref refid="structaddon__info__t" kindref="compound">addon_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register an add-on. Show its info in the About box. For plugins, should be called from init() function (repeated calls with the same product code overwrite previous entries) returns: index of the add-on in the list, or -1 on error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6620" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6620" bodyend="6623"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__addons__funcs_1gacfd6574b7db95f84d9cc5340c326664a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int addon_count</definition>
        <argsstring>()</argsstring>
        <name>addon_count</name>
        <briefdescription>
<para>Get number of installed addons. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6628" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6628" bodyend="6631"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__addons__funcs_1gab00441f029d8c502f3a6a63ba3317401" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_addon_info</definition>
        <argsstring>(const char *id, addon_info_t *info)</argsstring>
        <name>get_addon_info</name>
        <param>
          <type>const char *</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="structaddon__info__t" kindref="compound">addon_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get info about a registered addon with a given product code. info-&gt;cb must be valid! NB: all pointers are invalidated by next call to register_addon or get_addon_info <simplesect kind="return"><para>false if not found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6639" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6639" bodyend="6642"/>
      </memberdef>
      <memberdef kind="function" id="group__ui__addons__funcs_1ga41aaddbbbf07402ca2c5a2de805c0cba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool get_addon_info_idx</definition>
        <argsstring>(int index, addon_info_t *info)</argsstring>
        <name>get_addon_info_idx</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structaddon__info__t" kindref="compound">addon_info_t</ref> *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get info about a registered addon with specific index. info-&gt;cb must be valid! NB: all pointers are invalidated by next call to register_addon or get_addon_info <simplesect kind="return"><para>false if index is out of range </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6650" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6650" bodyend="6653"/>
      </memberdef>
      <memberdef kind="function" id="group__str__funcs_1ga5e3db055269b8392ac1535aa273a0511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export add_spaces</definition>
        <argsstring>(char *str, size_t bufsize, ssize_t len)</argsstring>
        <name>add_spaces</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add space characters to the colored string so that its length will be at least &apos;len&apos; characters. Don&apos;t trim the string if it is longer than &apos;len&apos;. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to colored string to modify (may not be NULL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the buffer with the string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired length of the string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the end of input string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6673" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__str__funcs_1gaaa956e0ad9a61dbf6bd45ffc8bd4921a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export trim</definition>
        <argsstring>(char *str)</argsstring>
        <name>trim</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove trailing space characters from a string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to string to modify (may be NULL) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to input string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6680" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__str__funcs_1gabaef2516798e95258629ab153166b4f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const char *ida_export</type>
        <definition>idaman THREAD_SAFE const char* ida_export skip_spaces</definition>
        <argsstring>(const char *ptr)</argsstring>
        <name>skip_spaces</name>
        <param>
          <type>const char *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Skip whitespaces in the string. <simplesect kind="return"><para>pointer to first non-whitespace char in given string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6686" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__str__funcs_1ga8cebc57ea0896ff107b058f92b595cc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* skip_spaces</definition>
        <argsstring>(char *ptr)</argsstring>
        <name>skip_spaces</name>
        <param>
          <type>char *</type>
          <declname>ptr</declname>
          <briefdescription><para>Skip whitespaces in the string. <simplesect kind="return"><para>pointer to first non-whitespace char in given string </para></simplesect>
</para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6687" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6687" bodyend="6688"/>
      </memberdef>
      <memberdef kind="function" id="group__str__funcs_1ga1f87ab9445979e4ad6dc846b61d9980d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman THREAD_SAFE ssize_t ida_export qcleanline</definition>
        <argsstring>(qstring *buf, char cmt_char=&apos;\0&apos;, uint32 flags=CLNL_TRIM|CLNL_FINDCMT)</argsstring>
        <name>qcleanline</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>char</type>
          <declname>cmt_char</declname>
          <defval>&apos;\0&apos;</defval>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags</declname>
          <defval>CLNL_TRIM|<ref refid="group___c_l_n_l___1ga2cccd6016c01267deed6bf132a84cd84" kindref="member">CLNL_FINDCMT</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs some cleanup operations to a line. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>string to modify </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmt_char</parametername>
</parameternamelist>
<parameterdescription>
<para>character that denotes the start of a comment:<itemizedlist>
<listitem><para>the entire text is removed if the line begins with this character (ignoring leading spaces)</para></listitem><listitem><para>all text after (and including) this character is removed if flag CLNL_FINDCMT is set </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>a combination of <ref refid="group___c_l_n_l__" kindref="compound">line cleanup flags</ref>. defaults to CLNL_TRIM </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of line </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6718" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__str__funcs_1gaa493732a206aee45f56adececa108f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const char *ida_export</type>
        <definition>idaman THREAD_SAFE const char* ida_export strarray</definition>
        <argsstring>(const strarray_t *array, size_t array_size, int code)</argsstring>
        <name>strarray</name>
        <param>
          <type>const <ref refid="structstrarray__t" kindref="compound">strarray_t</ref> *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>array_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find a line with the specified code in the <ref refid="structstrarray__t" kindref="compound">strarray_t</ref> array. If the last element of the array has code==0 then it is considered as the default entry. <linebreak/>
If no default entry exists and the code is not found, <ref refid="group__str__funcs_1gaa493732a206aee45f56adececa108f0b" kindref="member">strarray()</ref> returns &quot;&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6728" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__str__funcs_1gae43c19f4536fdf26669afce4df5a8895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export ea2str</definition>
        <argsstring>(char *buf, size_t bufsize, ea_t ea)</argsstring>
        <name>ea2str</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Convert linear address to UTF-8 string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6733" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1gafeb8ec5376fcc707cd186cda8709e402" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ea2str</definition>
        <argsstring>(qstring *out, ea_t ea)</argsstring>
        <name>ea2str</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Convert linear address to UTF-8 string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6745" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6745" bodyend="6752"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga1749acc1d36063b3c63eceb573807803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export str2ea</definition>
        <argsstring>(ea_t *ea_ptr, const char *str, ea_t screen_ea)</argsstring>
        <name>str2ea</name>
        <param>
          <type>ea_t *</type>
          <declname>ea_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>screen_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert string to linear address. Tries to interpret the string as: <linebreak/>
1) &quot;current IP&quot; keyword if supported by assembler (e.g. &quot;$&quot; in x86) <linebreak/>
2) segment:offset expression, where &quot;segment&quot; may be a name or a fixed segment register (e.g. cs, ds) <linebreak/>
3) just segment name/register (translated to segment&apos;s start address) <linebreak/>
4) a name in the database (or debug name during debugging) <linebreak/>
5) +delta or -delta, where numerical &apos;delta&apos; is added to or subtracted from &apos;screenEA&apos; <linebreak/>
6) if all else fails, try to evaluate &apos;str&apos; as an IDC expression </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6764" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga23d7766239e287fb8ff399b5bc0aaee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export str2ea_ex</definition>
        <argsstring>(ea_t *ea_ptr, const char *str, ea_t screen_ea, int flags)</argsstring>
        <name>str2ea_ex</name>
        <param>
          <type>ea_t *</type>
          <declname>ea_ptr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>screen_ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="group__conv_1ga1749acc1d36063b3c63eceb573807803" kindref="member">str2ea()</ref> but possibly with some steps skipped. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___s2_e_a_o_p_t__" kindref="compound">String to address conversion flags</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6770" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1gab76412b1a3398d75775dfe8793f21586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export atoea</definition>
        <argsstring>(ea_t *pea, const char *str)</argsstring>
        <name>atoea</name>
        <param>
          <type>ea_t *</type>
          <declname>pea</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a number in C notation to an address. decimal: 1234 <linebreak/>
octal: 0123 <linebreak/>
hexadecimal: 0xabcd <linebreak/>
binary: 0b00101010 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6785" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga4b85a3df343f84521b38db85dfbcfc88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export stoa</definition>
        <argsstring>(qstring *buf, ea_t from, sel_t seg)</argsstring>
        <name>stoa</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>from</declname>
        </param>
        <param>
          <type>sel_t</type>
          <declname>seg</declname>
        </param>
        <briefdescription>
<para>Convert segment selector to UTF-8 string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6790" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga37485399ee5ae9a8f2a640791c196ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export atos</definition>
        <argsstring>(sel_t *seg, const char *str)</argsstring>
        <name>atos</name>
        <param>
          <type>sel_t *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert UTF-8 string to segment selector. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>- fail </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>- ok (hex) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>2</parametername>
</parameternamelist>
<parameterdescription>
<para>- ok (segment name or reg) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6798" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga930c378fa67e093ba89b16a3893aa26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export b2a_width</definition>
        <argsstring>(int nbytes, int radix)</argsstring>
        <name>b2a_width</name>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of UTF-8 characters required to represent a number with the specified number of bytes and radix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>if 0, use default number of bytes, usually 4 or 8 depending on <bold>EA64</bold> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radix</parametername>
</parameternamelist>
<parameterdescription>
<para>if 0, use default radix, usually 16 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6809" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1gaf556e4db77caa513277469f486538021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export b2a32</definition>
        <argsstring>(char *buf, size_t bufsize, uint32 x, int nbytes, int radix)</argsstring>
        <name>b2a32</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert number to UTF-8 string (includes leading zeroes). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>value to convert </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>1, 2, 3, or 4 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radix</parametername>
</parameternamelist>
<parameterdescription>
<para>2, 8, 10, or 16 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size of resulting string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6820" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga36ba7a6b65e2f88044f65f88e8e869f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export b2a64</definition>
        <argsstring>(char *buf, size_t bufsize, uint64 x, int nbytes, int radix)</argsstring>
        <name>b2a64</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
<para>Same as <ref refid="group__conv_1gaf556e4db77caa513277469f486538021" kindref="member">b2a32()</ref>, but can handle &apos;nbytes&apos; = 8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6825" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga89eff609660f3911b48b064cded528a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export btoa_width</definition>
        <argsstring>(int nbytes, flags_t flag, int n)</argsstring>
        <name>btoa_width</name>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a55dd00e03168fb5180830e87ef0a2c57" kindref="member">flags_t</ref></type>
          <declname>flag</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get max number of UTF-8 characters required to represent a given type of value, with a given size (without leading zeroes). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>size of number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag</parametername>
</parameternamelist>
<parameterdescription>
<para>should be one of FF_ for <ref refid="group___f_f__opbits_1ga82c35fed1b6c4b01b773184c8ce1a4f3" kindref="member">MS_0TYPE</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>if 1, shr &apos;flag&apos; by 4 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6836" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga5c891837ef475e76b295d9a392fee148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export btoa32</definition>
        <argsstring>(char *buf, size_t bufsize, uint32 x, int radix=0)</argsstring>
        <name>btoa32</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="group__conv_1gaf556e4db77caa513277469f486538021" kindref="member">b2a32()</ref>, but will generate a string without any leading zeroes. Can be used to output some numbers in the instructions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6842" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1gaae2d3012fb1dee65fe7af339a88327b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export btoa64</definition>
        <argsstring>(char *buf, size_t bufsize, uint64 x, int radix=0)</argsstring>
        <name>btoa64</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>64-bit equivalent of <ref refid="group__conv_1ga5c891837ef475e76b295d9a392fee148" kindref="member">btoa32()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6847" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga1481961520f3f83e1887a3456a4207ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export btoa128</definition>
        <argsstring>(char *buf, size_t bufsize, uint128 x, int radix=0)</argsstring>
        <name>btoa128</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type><ref refid="classuint128" kindref="compound">uint128</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>128-bit equivalent of <ref refid="group__conv_1ga5c891837ef475e76b295d9a392fee148" kindref="member">btoa32()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6852" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga69a59c44a34ab2ad3ac2a63db70a1d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman size_t ida_export</type>
        <definition>idaman size_t ida_export numop2str</definition>
        <argsstring>(char *buf, size_t bufsize, ea_t ea, int n, uint64 x, int nbytes, int radix=0)</argsstring>
        <name>numop2str</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsize</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert instruction operand immediate number to UTF-8. This is the main function to output numbers in the instruction operands. <linebreak/>
It prints the number with or without the leading zeroes depending on the flags. <linebreak/>
This function is called from out_value(). Please use out_value() if you can. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6870" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1gad1f23fd75bbb86f6c99cda4ee3f2901b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export atob32</definition>
        <argsstring>(uint32 *x, const char *str)</argsstring>
        <name>atob32</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert UTF-8 to a number using the current assembler formats. e.g. for ibmpc, &apos;12o&apos; is octal, &apos;12h&apos; is hex, etc. <simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6884" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1gad91500c42cbe464460c6743ed939b914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export atob64</definition>
        <argsstring>(uint64 *x, const char *str)</argsstring>
        <name>atob64</name>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>64-bit equivalent of <ref refid="group__conv_1gad1f23fd75bbb86f6c99cda4ee3f2901b" kindref="member">atob32()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6889" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1gacb73af3c1ed4cb525cf9460ab9c76583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export append_disp</definition>
        <argsstring>(qstring *buf, adiff_t disp, bool tag=true)</argsstring>
        <name>append_disp</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>adiff_t</type>
          <declname>disp</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>tag</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Auxiliary function. Print displacement to a name (+disp or -disp) in the natural radix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer to append to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>disp</parametername>
</parameternamelist>
<parameterdescription>
<para>displacement to output. 0 leads to no modifications </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to output color tags </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6898" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga20030e1b244657d07e337f43b30d31a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export r50_to_asc</definition>
        <argsstring>(char *p, const ushort *r, int k)</argsstring>
        <name>r50_to_asc</name>
        <param>
          <type>char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert RADIX50 -&gt; UTF-8. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to UTF-8 string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to radix50 string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>number of elements in the input string <linebreak/>
 (element of radix50 string is a word) <linebreak/>
 (element of UTF-8 string is a character) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of elements left unprocessed in the input string, <linebreak/>
 because the input string contains unconvertible elements. <linebreak/>
 0-ok, all elements are converted </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6911" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__conv_1ga8716a13603308b43998f55be1a056e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref></type>
        <definition>int THREAD_SAFE asc_to_r50</definition>
        <argsstring>(ushort *r, const char *p, int k)</argsstring>
        <name>asc_to_r50</name>
        <param>
          <type><ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref> *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Convert UTF-8 -&gt; RADIX50 (see <ref refid="group__conv_1ga20030e1b244657d07e337f43b30d31a8" kindref="member">r50_to_asc()</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6916" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a96c596240b7d38362e6b940f79dc668c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *idaapi</type>
        <definition>THREAD_SAFE uchar* idaapi pack_db</definition>
        <argsstring>(uchar *ptr, uchar *end, uchar x)</argsstring>
        <name>pack_db</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pack a byte into a character string. This function encodes numbers using an encoding similar to UTF. The smaller the number, the better the packing. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to end of output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>value to pack </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to end of resulting string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6934" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6934" bodyend="6939"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a37b094bbd409339922c7615474b27012" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> idaapi</type>
        <definition>THREAD_SAFE uchar idaapi unpack_db</definition>
        <argsstring>(const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_db</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Unpack a byte from a character string, <ref refid="kernwin_8hpp_1a96c596240b7d38362e6b940f79dc668c" kindref="member">pack_db()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6944" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6944" bodyend="6952"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a4e1c646a4583493860f1cd3552b7335d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *ida_export</type>
        <definition>idaman THREAD_SAFE uchar* ida_export pack_dw</definition>
        <argsstring>(uchar *ptr, uchar *end, uint16 x)</argsstring>
        <name>pack_dw</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>pack a word, see <ref refid="kernwin_8hpp_1a96c596240b7d38362e6b940f79dc668c" kindref="member">pack_db()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6954" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a3ab71250e31f8d436413d429efdb29de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *ida_export</type>
        <definition>idaman THREAD_SAFE uchar* ida_export pack_dd</definition>
        <argsstring>(uchar *ptr, uchar *end, uint32 x)</argsstring>
        <name>pack_dd</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>pack a double word, see <ref refid="kernwin_8hpp_1a96c596240b7d38362e6b940f79dc668c" kindref="member">pack_db()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6955" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ab167ddf0a8a0ced9ef6d60482fbd1329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *ida_export</type>
        <definition>idaman THREAD_SAFE uchar* ida_export pack_dq</definition>
        <argsstring>(uchar *ptr, uchar *end, uint64 x)</argsstring>
        <name>pack_dq</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>pack a quadword, see <ref refid="kernwin_8hpp_1a96c596240b7d38362e6b940f79dc668c" kindref="member">pack_db()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6956" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a6b7c36a5ffced61e4f3e549ea983cee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref> ida_export</type>
        <definition>idaman THREAD_SAFE ushort ida_export unpack_dw</definition>
        <argsstring>(const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_dw</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>unpack a word, see <ref refid="kernwin_8hpp_1a37b094bbd409339922c7615474b27012" kindref="member">unpack_db()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6957" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a87eb9ef4896b71b4c22cc579db783e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> ida_export</type>
        <definition>idaman THREAD_SAFE uint32 ida_export unpack_dd</definition>
        <argsstring>(const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_dd</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>unpack a double word, see <ref refid="kernwin_8hpp_1a37b094bbd409339922c7615474b27012" kindref="member">unpack_db()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6958" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a597e4629dcd3e8673ae041b361ad6ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> ida_export</type>
        <definition>idaman THREAD_SAFE uint64 ida_export unpack_dq</definition>
        <argsstring>(const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_dq</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>unpack a quadword, see <ref refid="kernwin_8hpp_1a37b094bbd409339922c7615474b27012" kindref="member">unpack_db()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6959" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a2485b02a7f675c515645c2246a2afd64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
        <definition>THREAD_SAFE uchar* pack_ea</definition>
        <argsstring>(uchar *ptr, uchar *end, ea_t ea)</argsstring>
        <name>pack_ea</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Pack an ea value into a character string, see <ref refid="kernwin_8hpp_1a3ab71250e31f8d436413d429efdb29de" kindref="member">pack_dd()</ref>/pack_dq() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6963" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6963" bodyend="6970"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1afb6623cd3962ae0f85e72825cfd1e7a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> ea_t</type>
        <definition>THREAD_SAFE ea_t unpack_ea</definition>
        <argsstring>(const uchar **ptr, const uchar *end)</argsstring>
        <name>unpack_ea</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Unpack an ea value, see <ref refid="kernwin_8hpp_1a87eb9ef4896b71b4c22cc579db783e39" kindref="member">unpack_dd()</ref>/unpack_dq() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6974" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6974" bodyend="6981"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a1870dd321d2ad19110a76477dde1d3b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *idaapi</type>
        <definition>THREAD_SAFE void* idaapi unpack_obj</definition>
        <argsstring>(const uchar **pptr, const uchar *end, void *destbuf, size_t destsize)</argsstring>
        <name>unpack_obj</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>destbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>destsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpack an object of a known size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to packed object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to end of packed object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the destination buffer. if any error, returns NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="6992" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="6992" bodyend="7004"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a56dd58f3c13e86c78ea492cd050cd107" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *idaapi</type>
        <definition>THREAD_SAFE void* idaapi unpack_buf</definition>
        <argsstring>(const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_buf</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpack an object of an unknown size (packed with <ref refid="group__pack__vector_1ga592ea1de382514899aaae075eadba456" kindref="member">append_buf()</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to packed object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to end of packed object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the destination buffer, which is allocated in the dynamic memory. <linebreak/>
 the caller should use <ref refid="pro_8h_1a69f9c35c61878b9b72795fa0f47afa26" kindref="member">qfree()</ref> to deallocate it. <linebreak/>
 if any error, returns NULL. <linebreak/>
 NB: zero size objects will return NULL too. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7015" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7015" bodyend="7031"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1abd54d8603d7ce6d9b0958c511da2fbdf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const void *idaapi</type>
        <definition>THREAD_SAFE const void* idaapi unpack_obj_inplace</definition>
        <argsstring>(const uchar **pptr, const uchar *end, size_t objsize)</argsstring>
        <name>unpack_obj_inplace</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>objsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In-place version of <ref refid="kernwin_8hpp_1a1870dd321d2ad19110a76477dde1d3b0" kindref="member">unpack_obj()</ref>. It does not copy any data. It just returns a pointer to the object in the packed string. If any error, it returns NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7038" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7038" bodyend="7049"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a3b6949f0b89421e4a4c327ffea1120d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> const void *idaapi</type>
        <definition>THREAD_SAFE const void* idaapi unpack_buf_inplace</definition>
        <argsstring>(const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_buf_inplace</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In-place version of <ref refid="kernwin_8hpp_1a56dd58f3c13e86c78ea492cd050cd107" kindref="member">unpack_buf()</ref>. It does not copy any data. It just returns a pointer to the object in the packed string. If any error, it returns NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7056" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7056" bodyend="7062"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a72494f9386bc8a254a827c2afee250e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *ida_export</type>
        <definition>idaman THREAD_SAFE uchar* ida_export pack_ds</definition>
        <argsstring>(uchar *ptr, uchar *end, const char *x, size_t len=0)</argsstring>
        <name>pack_ds</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pack a string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to end of output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>string to pack. If NULL, empty string is packed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>number of chars to pack. If 0, the length of given string is used </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to end of packed string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7072" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1afee470971e04085f90159d6efd43128b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *ida_export</type>
        <definition>idaman THREAD_SAFE char* ida_export unpack_ds</definition>
        <argsstring>(const uchar **pptr, const uchar *end, bool empty_null)</argsstring>
        <name>unpack_ds</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>empty_null</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpack a string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to packed string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to end of packed string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>empty_null</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, then return NULL for empty strings. <linebreak/>
 otherwise return an empty string (not NULL). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to unpacked string. <linebreak/>
 this string will be allocated in dynamic memory. <linebreak/>
 the caller should use <ref refid="pro_8h_1a69f9c35c61878b9b72795fa0f47afa26" kindref="member">qfree()</ref> to deallocate it. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7088" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a76af04772a30a38faed266cadcda5426" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool unpack_ds_to_buf</definition>
        <argsstring>(char *dst, size_t dstsize, const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_ds_to_buf</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsize</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpack a string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer string will be copied to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dstsize</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to packed string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to end of packed string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7099" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7099" bodyend="7114"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ab9de34cc4412f2ddc272860ffe07fc22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void unpack_eavec</definition>
        <argsstring>(ea_t ea, eavec_t &amp;insns, const uchar **ptr, const uchar *end)</argsstring>
        <name>unpack_eavec</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a9f46d9d52bbfcc78bc1836f4f2683da4" kindref="member">eavec_t</ref> &amp;</type>
          <declname>insns</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpack a vector of ea values. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>base value that was used to pack the eavec (see <ref refid="group__pack__vector_1gadab98df14129693976278d438dd0aebb" kindref="member">append_eavec()</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">insns</parametername>
</parameternamelist>
<parameterdescription>
<para>resulting vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to packed eavec </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to end of packed eavec </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7123" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7123" bodyend="7137"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aeb6601c0ee70250cf52fd18eb7fe4676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool ida_export</type>
        <definition>idaman THREAD_SAFE bool ida_export unpack_xleb128</definition>
        <argsstring>(void *res, int nbits, bool is_signed, const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_xleb128</name>
        <param>
          <type>void *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_signed</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpack an LEB128 encoded (DWARF-3 style) signed/unsigned value. Do not use this function directly - see <ref refid="group__unp__templates" kindref="compound">Template unpacking</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__unp__templates_1gafe330225797bdd2b5b5815ff9ac283f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool unpack_uleb128</definition>
        <argsstring>(T *res, const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_uleb128</name>
        <param>
          <type>T *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7155" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7155" bodyend="7159"/>
      </memberdef>
      <memberdef kind="function" id="group__unp__templates_1ga599a0912063f9f52b3816bd7ad9e2547" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool unpack_sleb128</definition>
        <argsstring>(T *res, const uchar **pptr, const uchar *end)</argsstring>
        <name>unpack_sleb128</name>
        <param>
          <type>T *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7162" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7162" bodyend="7166"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ae2c5e40a384138c388bee9e59923ecf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int</type>
        <definition>THREAD_SAFE int ds_packed_size</definition>
        <argsstring>(const char *s)</argsstring>
        <name>ds_packed_size</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7178" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7178" bodyend="7178"/>
      </memberdef>
      <memberdef kind="function" id="group__pack__vector_1ga20c2d8e74d9528be949acc2967fbcc05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void append_db</definition>
        <argsstring>(bytevec_t &amp;v, uchar x)</argsstring>
        <name>append_db</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Append a byte to a bytevec. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7188" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7188" bodyend="7191"/>
      </memberdef>
      <memberdef kind="function" id="group__pack__vector_1gabb85524b5f5cd86e38e24d77017b36e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void append_obj</definition>
        <argsstring>(bytevec_t &amp;v, const void *obj, size_t size)</argsstring>
        <name>append_obj</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Append &apos;size&apos; bytes from &apos;obj&apos; to the bytevec;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7196" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7196" bodyend="7199"/>
      </memberdef>
      <memberdef kind="function" id="group__pack__vector_1ga685a9afc95f52cee50f639351d1e05a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void append_dw</definition>
        <argsstring>(bytevec_t &amp;v, uint16 x)</argsstring>
        <name>append_dw</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Pack a word and append the result to the bytevec. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7204" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7204" bodyend="7209"/>
      </memberdef>
      <memberdef kind="function" id="group__pack__vector_1ga04ed87b84bdb645ee6f620e86ff1c379" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void append_dd</definition>
        <argsstring>(bytevec_t &amp;v, uint32 x)</argsstring>
        <name>append_dd</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Pack a double word and append the result to the bytevec. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7214" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7214" bodyend="7219"/>
      </memberdef>
      <memberdef kind="function" id="group__pack__vector_1ga7bea2b838986079b66dd1e7cb208f0c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void append_dq</definition>
        <argsstring>(bytevec_t &amp;v, uint64 x)</argsstring>
        <name>append_dq</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Pack a quadword and append the result to the bytevec. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7224" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7224" bodyend="7229"/>
      </memberdef>
      <memberdef kind="function" id="group__pack__vector_1ga7fce49a86450f8299d414a02e3422683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void append_ea</definition>
        <argsstring>(bytevec_t &amp;v, ea_t x)</argsstring>
        <name>append_ea</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Pack an ea value and append the result to the bytevec. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7234" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7234" bodyend="7239"/>
      </memberdef>
      <memberdef kind="function" id="group__pack__vector_1ga53bf35f3e2eb067182a33d4c2bf845c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void append_ds</definition>
        <argsstring>(bytevec_t &amp;v, const char *x)</argsstring>
        <name>append_ds</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Pack a string and append the result to the bytevec. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7244" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7244" bodyend="7252"/>
      </memberdef>
      <memberdef kind="function" id="group__pack__vector_1ga592ea1de382514899aaae075eadba456" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void append_buf</definition>
        <argsstring>(bytevec_t &amp;v, const void *buf, size_t len)</argsstring>
        <name>append_buf</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Pack an object of size &apos;len&apos; and append the result to the bytevec. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7257" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7257" bodyend="7264"/>
      </memberdef>
      <memberdef kind="function" id="group__pack__vector_1gadab98df14129693976278d438dd0aebb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void</type>
        <definition>THREAD_SAFE void append_eavec</definition>
        <argsstring>(bytevec_t &amp;v, ea_t ea, const eavec_t &amp;insns)</argsstring>
        <name>append_eavec</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a9f46d9d52bbfcc78bc1836f4f2683da4" kindref="member">eavec_t</ref> &amp;</type>
          <declname>insns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pack an eavec and append the result to the bytevec. Also see <ref refid="kernwin_8hpp_1ab9de34cc4412f2ddc272860ffe07fc22" kindref="member">unpack_eavec()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>when we pack an eavec, we only store the differences between each value and this parameter. <linebreak/>
 This is because groups of ea values will likely be similar, and therefore the differences will usually be small. <linebreak/>
 A good example is packing the addresses of a function prologue. <linebreak/>
 One can pass the start ea of the function as this parameter, which results in a quick and efficient packing/unpacking. <linebreak/>
 (Just be sure to use the func&apos;s start ea when unpacking, of course) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>insns</parametername>
</parameternamelist>
<parameterdescription>
<para>eavec to pack </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7280" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7280" bodyend="7291"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ad8c364c795c3e32b5d5b75c3fd9ba1ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> char *</type>
        <definition>THREAD_SAFE char* unpack_str</definition>
        <argsstring>(const uchar **ptr, const uchar *end)</argsstring>
        <name>unpack_str</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unpack a string in place. <simplesect kind="return"><para>a pointer to the beginning of the string, and fills &apos;ptr&apos; with a pointer to the end of the string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7300" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7300" bodyend="7307"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ac4dee3bbd53c383239b95aa72b4fa0d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int</type>
        <definition>THREAD_SAFE int dw_size</definition>
        <argsstring>(uchar first_byte)</argsstring>
        <name>dw_size</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>first_byte</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7310" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7310" bodyend="7315"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ac78d989f809976a9fc2f577766dd5d33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int</type>
        <definition>THREAD_SAFE int dd_size</definition>
        <argsstring>(uchar first_byte)</argsstring>
        <name>dd_size</name>
        <param>
          <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>first_byte</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7318" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7318" bodyend="7324"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a058989b4cdb30a287f9ca4f1f5be5984" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>THREAD_SAFE uchar extract_db</definition>
        <argsstring>(T &amp;v)</argsstring>
        <name>extract_db</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7331" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7331" bodyend="7336"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aef62e4b168567103cceed4ceae69fe4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *</type>
        <definition>THREAD_SAFE void* extract_obj</definition>
        <argsstring>(T &amp;v, void *destbuf, size_t destsize)</argsstring>
        <name>extract_obj</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>destbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>destsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7339" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7339" bodyend="7344"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a966c47636480ee3498d96f63b224fa43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a05f6b0ae8f6a6e135b0e290c25fe0e4e" kindref="member">uint16</ref></type>
        <definition>THREAD_SAFE uint16 extract_dw</definition>
        <argsstring>(T &amp;v)</argsstring>
        <name>extract_dw</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7347" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7347" bodyend="7355"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a563cd7884e542a7da1019a50d24309b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>THREAD_SAFE uint32 extract_dd</definition>
        <argsstring>(T &amp;v)</argsstring>
        <name>extract_dd</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7358" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7358" bodyend="7366"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a90863275279cf7158a3f1c58438076d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
        <definition>THREAD_SAFE uint64 extract_dq</definition>
        <argsstring>(T &amp;v)</argsstring>
        <name>extract_dq</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7369" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7369" bodyend="7374"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ab8da1a8537454498564f0c147584304e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> ea_t</type>
        <definition>THREAD_SAFE ea_t extract_ea</definition>
        <argsstring>(T &amp;v)</argsstring>
        <name>extract_ea</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7377" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7377" bodyend="7384"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aa99cbc1a80363e171c544eb51e995b06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *</type>
        <definition>THREAD_SAFE void* extract_buf</definition>
        <argsstring>(T &amp;v, size_t size)</argsstring>
        <name>extract_buf</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7387" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7387" bodyend="7393"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1ae7959ab1d7b2798fe52d65445b99f5d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> void *</type>
        <definition>THREAD_SAFE void* extract_array</definition>
        <argsstring>(T &amp;v, size_t *sz, size_t maxsize)</argsstring>
        <name>extract_array</name>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>sz</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7396" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7396" bodyend="7403"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a2ed17851fc1e99ce66db129c0f9758c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> ida_export</type>
        <definition>idaman THREAD_SAFE uint32 ida_export calc_crc32</definition>
        <argsstring>(uint32 crc, const void *buf, size_t len)</argsstring>
        <name>calc_crc32</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>crc</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate CRC32 (polynom 0xEDB88320, zlib compatible). <simplesect kind="note"><para>in IDA versions before 6.0 a different, incompatible algorithm was used </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7412" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a2b91bc981443016c377eedd8762e23df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> ida_export</type>
        <definition>idaman THREAD_SAFE uint32 ida_export calc_file_crc32</definition>
        <argsstring>(linput_t *fp)</argsstring>
        <name>calc_file_crc32</name>
        <param>
          <type>linput_t *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
<para>Calculate an input source CRC32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a260f005f5a022f07b67bf83a46be2365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export regex_match</definition>
        <argsstring>(const char *str, const char *pattern, bool sense_case)</argsstring>
        <name>regex_match</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sense_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Match a string with a regular expression. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>no match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>1</parametername>
</parameternamelist>
<parameterdescription>
<para>match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>error </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1a1de08bfca28af3a2dd79c0c40893718c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void place_t__serialize</definition>
        <argsstring>(const place_t *_this, bytevec_t *out)</argsstring>
        <name>place_t__serialize</name>
        <param>
          <type>const <ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>_this</declname>
        </param>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7584" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7584" bodyend="7587"/>
      </memberdef>
      <memberdef kind="function" id="kernwin_8hpp_1aee7e1c033041a40391f037f6c9368c9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool place_t__deserialize</definition>
        <argsstring>(place_t *_this, const uchar **pptr, const uchar *end)</argsstring>
        <name>place_t__deserialize</name>
        <param>
          <type><ref refid="classplace__t" kindref="compound">place_t</ref> *</type>
          <declname>_this</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> **</type>
          <declname>pptr</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="7590" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="7590" bodyend="7596"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines the interface between the kernel and the UI. </para>    </briefdescription>
    <detaileddescription>
<para>It contains:<itemizedlist>
<listitem><para>the UI dispatcher notification codes (<ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334" kindref="member">ui_notification_t</ref>)</para></listitem><listitem><para>convenience functions for UI services</para></listitem><listitem><para>structures which hold information about the lines (disassembly, structures, enums) generated by the kernel</para></listitem><listitem><para>functions to interact with the user (dialog boxes)</para></listitem><listitem><para>some string and conversion functions. </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp"/>
  </compounddef>
</doxygen>
