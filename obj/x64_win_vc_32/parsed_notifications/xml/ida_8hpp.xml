<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="ida_8hpp" kind="file" language="C++">
    <compoundname>ida.hpp</compoundname>
    <includes refid="pro_8h" local="no">pro.h</includes>
    <includes refid="range_8hpp" local="no">range.hpp</includes>
    <includedby refid="nalt_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp</includedby>
    <includedby refid="loader_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/loader.hpp</includedby>
    <includedby refid="name_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/name.hpp</includedby>
    <includedby refid="hexrays_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</includedby>
    <includedby refid="auto_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/auto.hpp</includedby>
    <includedby refid="segment_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/segment.hpp</includedby>
    <includedby refid="lines_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/lines.hpp</includedby>
    <incdepgraph>
      <node id="570">
        <label>sys/stat.h</label>
      </node>
      <node id="554">
        <label>stdarg.h</label>
      </node>
      <node id="557">
        <label>assert.h</label>
      </node>
      <node id="551">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="552" relation="include">
        </childnode>
        <childnode refid="572" relation="include">
        </childnode>
      </node>
      <node id="553">
        <label>stdlib.h</label>
      </node>
      <node id="565">
        <label>io.h</label>
      </node>
      <node id="568">
        <label>fcntl.h</label>
      </node>
      <node id="571">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="563">
        <label>malloc.h</label>
      </node>
      <node id="562">
        <label>string</label>
      </node>
      <node id="567">
        <label>map</label>
      </node>
      <node id="566">
        <label>direct.h</label>
      </node>
      <node id="555">
        <label>stddef.h</label>
      </node>
      <node id="558">
        <label>limits.h</label>
      </node>
      <node id="569">
        <label>sys/types.h</label>
      </node>
      <node id="564">
        <label>string.h</label>
      </node>
      <node id="561">
        <label>new</label>
      </node>
      <node id="552">
        <label>pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="553" relation="include">
        </childnode>
        <childnode refid="554" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
        <childnode refid="556" relation="include">
        </childnode>
        <childnode refid="557" relation="include">
        </childnode>
        <childnode refid="558" relation="include">
        </childnode>
        <childnode refid="559" relation="include">
        </childnode>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="561" relation="include">
        </childnode>
        <childnode refid="562" relation="include">
        </childnode>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="567" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
        <childnode refid="569" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
      </node>
      <node id="560">
        <label>time.h</label>
      </node>
      <node id="559">
        <label>ctype.h</label>
      </node>
      <node id="572">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
      </node>
      <node id="556">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="597">
        <label>obj/x64_linux_gcc_32_opt/idasdk/commerc.hpp</label>
        <link refid="commerc_8hpp_source"/>
      </node>
      <node id="599">
        <label>obj/x64_linux_gcc_32_opt/idasdk/auto.hpp</label>
        <link refid="auto_8hpp"/>
      </node>
      <node id="573">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="574" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
      </node>
      <node id="596">
        <label>obj/x64_linux_gcc_32_opt/idasdk/loader.hpp</label>
        <link refid="loader_8hpp"/>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
      </node>
      <node id="584">
        <label>obj/x64_linux_gcc_32_opt/idasdk/intel.hpp</label>
        <link refid="intel_8hpp_source"/>
      </node>
      <node id="592">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ua.hpp</label>
        <link refid="ua_8hpp"/>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="584" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
      </node>
      <node id="589">
        <label>obj/x64_linux_gcc_32_opt/idasdk/enum.hpp</label>
        <link refid="enum_8hpp"/>
      </node>
      <node id="587">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ida_highlighter.hpp</label>
        <link refid="ida__highlighter_8hpp_source"/>
      </node>
      <node id="593">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idd.hpp</label>
        <link refid="idd_8hpp"/>
        <childnode refid="579" relation="include">
        </childnode>
      </node>
      <node id="578">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="579" relation="include">
        </childnode>
        <childnode refid="580" relation="include">
        </childnode>
        <childnode refid="581" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="585" relation="include">
        </childnode>
        <childnode refid="586" relation="include">
        </childnode>
      </node>
      <node id="579">
        <label>obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp</label>
        <link refid="dbg_8hpp"/>
      </node>
      <node id="576">
        <label>obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp</label>
        <link refid="jumptable_8hpp_source"/>
      </node>
      <node id="591">
        <label>obj/x64_linux_gcc_32_opt/idasdk/struct.hpp</label>
        <link refid="struct_8hpp"/>
      </node>
      <node id="574">
        <label>obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="575" relation="include">
        </childnode>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
      </node>
      <node id="585">
        <label>obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</label>
        <link refid="graph_8hpp"/>
      </node>
      <node id="601">
        <label>obj/x64_linux_gcc_32_opt/idasdk/lines.hpp</label>
        <link refid="lines_8hpp"/>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="590" relation="include">
        </childnode>
      </node>
      <node id="598">
        <label>obj/x64_linux_gcc_32_opt/idasdk/name.hpp</label>
        <link refid="name_8hpp"/>
        <childnode refid="581" relation="include">
        </childnode>
      </node>
      <node id="595">
        <label>obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp</label>
        <link refid="gdl_8hpp"/>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="585" relation="include">
        </childnode>
      </node>
      <node id="588">
        <label>obj/x64_linux_gcc_32_opt/idasdk/tstfeat.hpp</label>
        <link refid="tstfeat_8hpp_source"/>
      </node>
      <node id="594">
        <label>obj/x64_linux_gcc_32_opt/idasdk/funcs.hpp</label>
        <link refid="funcs_8hpp"/>
        <childnode refid="578" relation="include">
        </childnode>
        <childnode refid="595" relation="include">
        </childnode>
      </node>
      <node id="586">
        <label>obj/x64_linux_gcc_32_opt/idasdk/expr.hpp</label>
        <link refid="expr_8hpp"/>
        <childnode refid="587" relation="include">
        </childnode>
        <childnode refid="588" relation="include">
        </childnode>
      </node>
      <node id="577">
        <label>obj/x64_linux_gcc_32_opt/idasdk/fixup.hpp</label>
        <link refid="fixup_8hpp"/>
      </node>
      <node id="580">
        <label>obj/x64_linux_gcc_32_opt/idasdk/frame.hpp</label>
        <link refid="frame_8hpp"/>
      </node>
      <node id="600">
        <label>obj/x64_linux_gcc_32_opt/idasdk/segment.hpp</label>
        <link refid="segment_8hpp"/>
        <childnode refid="575" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
      </node>
      <node id="590">
        <label>obj/x64_linux_gcc_32_opt/idasdk/bytes.hpp</label>
        <link refid="bytes_8hpp"/>
        <childnode refid="591" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="575">
        <label>obj/x64_linux_gcc_32_opt/idasdk/offset.hpp</label>
        <link refid="offset_8hpp"/>
      </node>
      <node id="581">
        <label>obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp</label>
        <link refid="typeinf_8hpp"/>
        <childnode refid="582" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="584" relation="include">
        </childnode>
      </node>
      <node id="583">
        <label>obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</label>
        <link refid="hexrays_8hpp_source"/>
      </node>
      <node id="582">
        <label>obj/x64_linux_gcc_32_opt/idasdk/lumina.hpp</label>
        <link refid="lumina_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcompiler__info__t" prot="public">compiler_info_t</innerclass>
    <innerclass refid="structidainfo" prot="public">idainfo</innerclass>
    <innerclass refid="structpost__event__visitor__t" prot="public">post_event_visitor_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ida_8hpp_1a69fb0737c6ae2f5be42df2b2248de1d7" prot="public" static="no">
        <name>EA64_ALIGN</name>
        <param><defname>n</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="97" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_n_f_f_l___1gaa364101dbf2354063cea1ae691f5375f" prot="public" static="no">
        <name>INFFL_AUTO</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>Autoanalysis is enabled? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="115" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_n_f_f_l___1ga75170b0a26a2617529202fcb7f5701c5" prot="public" static="no">
        <name>INFFL_ALLASM</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>the target assembler </para>        </briefdescription>
        <detaileddescription>
<para>may use constructs not supported by </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="116" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_n_f_f_l___1ga8ea6f5f9dfc6ac60c441699cb0f647e0" prot="public" static="no">
        <name>INFFL_LOADIDC</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>loading an idc file that contains database info </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="118" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_n_f_f_l___1gaa512527e3e9d1b96027071a2e491e1a5" prot="public" static="no">
        <name>INFFL_NOUSER</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>do not store user info in the database </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="119" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_n_f_f_l___1ga62b961c71dd3fcbe31f43ec9d3eb7898" prot="public" static="no">
        <name>INFFL_READONLY</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>(internal) temporary interdiction to modify the database </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="120" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_n_f_f_l___1ga1e812c886ead75e151d2124816f132db" prot="public" static="no">
        <name>INFFL_CHKOPS</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>check manual operands? (unused) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="121" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_n_f_f_l___1ga65e5edba641be2fc7a5c0c66aeaafdf8" prot="public" static="no">
        <name>INFFL_NMOPS</name>
        <initializer>0x40</initializer>
        <briefdescription>
<para>allow non-matched operands? (unused) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="122" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_n_f_f_l___1ga88e2b4baae4e1ace367ecc3e9d674da5" prot="public" static="no">
        <name>INFFL_GRAPH_VIEW</name>
        <initializer>0x80</initializer>
        <briefdescription>
<para>currently using graph options ({graph}) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="123" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga0c463481c65886dd1c011aa97e875b3c" prot="public" static="no">
        <name>LFLG_PC_FPP</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>decode floating point processor instructions? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="136" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga800b59a3d1daa30a055894922952f2eb" prot="public" static="no">
        <name>LFLG_PC_FLAT</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>32-bit program? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="137" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga0f4f06d418cf9ef88ab48161a30090a9" prot="public" static="no">
        <name>LFLG_64BIT</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>64-bit program? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="138" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga8ec1aff45c041932b6ce3f0f8923ca7e" prot="public" static="no">
        <name>LFLG_IS_DLL</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
<para>Is dynamic library? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="139" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga39b349850a0db882f73fbe87ad5b38e3" prot="public" static="no">
        <name>LFLG_FLAT_OFF32</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
<para>treat <ref refid="group__reftype___1ga9514307c2327fdf250734a64943e1c67" kindref="member">REF_OFF32</ref> as 32-bit offset for 16bit segments (otherwise try SEG16:OFF16) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="140" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga0430f98ff084c58b44e86369652cc6df" prot="public" static="no">
        <name>LFLG_MSF</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
<para>Byte order: is MSB first? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="141" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga2b4e78d4f913cd325ec266ed17f2c3fd" prot="public" static="no">
        <name>LFLG_WIDE_HBF</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
<para>(wide bytes: {dnbits} &gt; 8) </para>        </briefdescription>
        <detaileddescription>
<para>Bit order of wide bytes: high byte first? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="142" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1gad1b6b0482fdf4570ee69aaab85c0d012" prot="public" static="no">
        <name>LFLG_DBG_NOPATH</name>
        <initializer>0x00000080</initializer>
        <briefdescription>
<para>do not store input full path in debugger process options </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="144" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga4233709a4f6bc7e80d75163a352a2f22" prot="public" static="no">
        <name>LFLG_SNAPSHOT</name>
        <initializer>0x00000100</initializer>
        <briefdescription>
<para>memory snapshot was taken? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="145" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga28f8a79220bd62280637f5a81b764d3f" prot="public" static="no">
        <name>LFLG_PACK</name>
        <initializer>0x00000200</initializer>
        <briefdescription>
<para>pack the database? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="146" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1ga3e718ba50f5092f05b2903586de8e072" prot="public" static="no">
        <name>LFLG_COMPRESS</name>
        <initializer>0x00000400</initializer>
        <briefdescription>
<para>compress the database? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="147" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_f_l_g___1gacabeee1310caa9a50c5067abee0962bf" prot="public" static="no">
        <name>LFLG_KERNMODE</name>
        <initializer>0x00000800</initializer>
        <briefdescription>
<para>is kernel mode binary? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="148" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_b___1ga0dd18f5ff2856fdde77d8c790d7e0213" prot="public" static="no">
        <name>IDB_UNPACKED</name>
        <initializer>0</initializer>
        <briefdescription>
<para>leave database components unpacked </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="171" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_b___1gafa3552eb8fa57f32845117c63ece5a37" prot="public" static="no">
        <name>IDB_PACKED</name>
        <initializer>1</initializer>
        <briefdescription>
<para>pack database components into .idb </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="172" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_b___1gadc1457caefd3ceeb5f6337f0efae674c" prot="public" static="no">
        <name>IDB_COMPRESSED</name>
        <initializer>2</initializer>
        <briefdescription>
<para>compress &amp; pack database components </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="173" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga4b490d69c76e2a22cd2249712759a1f9" prot="public" static="no">
        <name>AF_CODE</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>Trace execution flow. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="218" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga8f4ed7f890fff0ad11fbf82b9e073ccb" prot="public" static="no">
        <name>AF_MARKCODE</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>Mark typical code sequences as code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="219" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga9e1762897195c7b9c0c7559e9b508522" prot="public" static="no">
        <name>AF_JUMPTBL</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>Locate and create jump tables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="220" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga8d077f4060df6e0d95e826d91e3387bf" prot="public" static="no">
        <name>AF_PURDAT</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
<para>Control flow to data segment is ignored. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="221" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga7d9421b254666edefb62e71f163f9780" prot="public" static="no">
        <name>AF_USED</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
<para>Analyze and create all xrefs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="222" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1gabf870230c2688c1a2b0ac3d2eb30594a" prot="public" static="no">
        <name>AF_UNK</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
<para>Delete instructions with no xrefs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="223" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga9bf2cfc8d42e0b9dacee2dec036bb997" prot="public" static="no">
        <name>AF_PROCPTR</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
<para>Create function if data xref data-&gt;code32 exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="225" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1gaca59df97a98bba54fde2d83085e67b42" prot="public" static="no">
        <name>AF_PROC</name>
        <initializer>0x00000080</initializer>
        <briefdescription>
<para>Create functions if call is present. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="226" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga3e4151625d3a96aa976c8a982ce2f259" prot="public" static="no">
        <name>AF_FTAIL</name>
        <initializer>0x00000100</initializer>
        <briefdescription>
<para>Create function tails. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="227" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga96b212b66c0b8cf0c8d868610362b257" prot="public" static="no">
        <name>AF_LVAR</name>
        <initializer>0x00000200</initializer>
        <briefdescription>
<para>Create stack variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="228" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga8f4d60069e8798e0c6cfa8845d67aa7f" prot="public" static="no">
        <name>AF_STKARG</name>
        <initializer>0x00000400</initializer>
        <briefdescription>
<para>Propagate stack argument information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="229" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga5a0d05da56dc73eefbd0c18f23f8c8e6" prot="public" static="no">
        <name>AF_REGARG</name>
        <initializer>0x00000800</initializer>
        <briefdescription>
<para>Propagate register argument information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="230" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga85c410a06436927a953f67165ae8d841" prot="public" static="no">
        <name>AF_TRACE</name>
        <initializer>0x00001000</initializer>
        <briefdescription>
<para>Trace stack pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="231" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga5ede02323a6eb1554887d427ef6c864d" prot="public" static="no">
        <name>AF_VERSP</name>
        <initializer>0x00002000</initializer>
        <briefdescription>
<para>Perform full SP-analysis. ({verify_sp}) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="232" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga27c463a1d50d7565d399ceb80252b1e5" prot="public" static="no">
        <name>AF_ANORET</name>
        <initializer>0x00004000</initializer>
        <briefdescription>
<para>Perform &apos;no-return&apos; analysis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="233" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1gac2baefa379b78b4c734910d03304a2a0" prot="public" static="no">
        <name>AF_MEMFUNC</name>
        <initializer>0x00008000</initializer>
        <briefdescription>
<para>Try to guess member function types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="234" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga3c25b68da3beb76b2710bbaf22481d1f" prot="public" static="no">
        <name>AF_TRFUNC</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
<para>Truncate functions upon code deletion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="235" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga305f32ef2f45a71ffdbd71d7ecaecb84" prot="public" static="no">
        <name>AF_STRLIT</name>
        <initializer>0x00020000</initializer>
        <briefdescription>
<para>Create string literal if data xref exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="237" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1gab1644478124f3702e33cf3fbf7f85898" prot="public" static="no">
        <name>AF_CHKUNI</name>
        <initializer>0x00040000</initializer>
        <briefdescription>
<para>Check for unicode strings. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="238" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga0e4fbd8b8d074f95c66e4380f2fc1b79" prot="public" static="no">
        <name>AF_FIXUP</name>
        <initializer>0x00080000</initializer>
        <briefdescription>
<para>Create offsets and segments using fixup info. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="239" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga116e77593026a610ace830e0dff3461e" prot="public" static="no">
        <name>AF_DREFOFF</name>
        <initializer>0x00100000</initializer>
        <briefdescription>
<para>Create offset if data xref to seg32 exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="240" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1gae2cd7ee487f6d353cd5ea77668c1789e" prot="public" static="no">
        <name>AF_IMMOFF</name>
        <initializer>0x00200000</initializer>
        <briefdescription>
<para>Convert 32bit instruction operand to offset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="241" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1gaabbf281efb6b41dbcabe876dc4c4adb4" prot="public" static="no">
        <name>AF_DATOFF</name>
        <initializer>0x00400000</initializer>
        <briefdescription>
<para>Automatically convert data to offsets. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="242" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga9c3221dcbb66afc0f748a9d8f314be52" prot="public" static="no">
        <name>AF_FLIRT</name>
        <initializer>0x00800000</initializer>
        <briefdescription>
<para>Use flirt signatures. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="244" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga9d9e8dc8b5d03677e99bdd38a1f9bb81" prot="public" static="no">
        <name>AF_SIGCMT</name>
        <initializer>0x01000000</initializer>
        <briefdescription>
<para>Append a signature name comment for recognized anonymous library functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="245" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga1c3e122f44df0fb5910de958edd30b89" prot="public" static="no">
        <name>AF_SIGMLT</name>
        <initializer>0x02000000</initializer>
        <briefdescription>
<para>Allow recognition of several copies of the same function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="246" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1gab4c9f647a99f9c0edf818b11e0c123cb" prot="public" static="no">
        <name>AF_HFLIRT</name>
        <initializer>0x04000000</initializer>
        <briefdescription>
<para>Automatically hide library functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="247" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga7418645319fe193e772781d85eecd088" prot="public" static="no">
        <name>AF_JFUNC</name>
        <initializer>0x08000000</initializer>
        <briefdescription>
<para>Rename jump functions as j_... </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="249" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga93c53f630348c5de336fa932a0489ddb" prot="public" static="no">
        <name>AF_NULLSUB</name>
        <initializer>0x10000000</initializer>
        <briefdescription>
<para>Rename empty functions as nullsub_... </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="250" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga7f15967a5fb5143669ad7260d76e2311" prot="public" static="no">
        <name>AF_DODATA</name>
        <initializer>0x20000000</initializer>
        <briefdescription>
<para>Coagulate data segs at the final pass. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="252" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1ga0df8726ad49f53f59cfac9f7822207de" prot="public" static="no">
        <name>AF_DOCODE</name>
        <initializer>0x40000000</initializer>
        <briefdescription>
<para>Coagulate code segs at the final pass. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="253" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f___1gae1fd60b04ad635aabcd07b82e66651e7" prot="public" static="no">
        <name>AF_FINAL</name>
        <initializer>0x80000000</initializer>
        <briefdescription>
<para>Final pass of analysis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="254" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f2___1gaade008515fc7ed9d10f12a36ae8b26ea" prot="public" static="no">
        <name>AF2_DOEH</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>Handle EH information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="260" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f2___1ga8d08c2845ebe3ca8f66867578166d17d" prot="public" static="no">
        <name>AF2_DORTTI</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle RTTI information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="261" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___x_1gaaaff01e639476273d228c0ae3fbf4564" prot="public" static="no">
        <name>SW_SEGXRF</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>show segments in xrefs? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="306" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___x_1gad3fafe38202f8f2b2f611001cba6e43b" prot="public" static="no">
        <name>SW_XRFMRK</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>show xref type marks? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="307" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___x_1gab37dd6a319b868dc3e82b46248edf5fd" prot="public" static="no">
        <name>SW_XRFFNC</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>show function offsets? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="308" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___x_1ga616a8ccfdad824079f62508cb864988b" prot="public" static="no">
        <name>SW_XRFVAL</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>show xref values? (otherwise-&quot;...&quot;) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="309" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1ga05be4293db7b42214e06c17b131cd172" prot="public" static="no">
        <name>NM_REL_OFF</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="318" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1ga11b7a340285fd36991e2528879bd3af8" prot="public" static="no">
        <name>NM_PTR_OFF</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="319" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1ga3cf8580e65f0e8715f9bb9ba7d892521" prot="public" static="no">
        <name>NM_NAM_OFF</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="320" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1gae62dee96e669495be39b603c1976e1ce" prot="public" static="no">
        <name>NM_REL_EA</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="321" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1ga371ba56a5b4930372c6f394b4c1c5ead" prot="public" static="no">
        <name>NM_PTR_EA</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="322" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1ga4d1fb4a453631fbaa621e0a4cfa67286" prot="public" static="no">
        <name>NM_NAM_EA</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="323" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1gaf779cd54bc60fe94703fb40fbf0074d9" prot="public" static="no">
        <name>NM_EA</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="324" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1ga4a7a71f30cc2f227a3335d53216d2f2c" prot="public" static="no">
        <name>NM_EA4</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="325" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1gaf699f689a06e880e60b8ac1c7032d2a9" prot="public" static="no">
        <name>NM_EA8</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="326" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1gacd9681682ae68548a0291e7a2cad2928" prot="public" static="no">
        <name>NM_SHORT</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="327" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_m___1ga2d22e3f8f13d1c6773e0bd83b941d959" prot="public" static="no">
        <name>NM_SERIAL</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="328" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_m_n_a_m___1ga035a90e9aab463f3ceb1ce691adee892" prot="public" static="no">
        <name>DEMNAM_MASK</name>
        <initializer>3</initializer>
        <briefdescription>
<para>mask for name form </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="338" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_m_n_a_m___1gad614ddb0b0c959606ba217a379800389" prot="public" static="no">
        <name>DEMNAM_CMNT</name>
        <initializer>0</initializer>
        <briefdescription>
<para>display demangled names as comments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="339" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_m_n_a_m___1ga7663902303b71c8ed54d2b28b4dd7abe" prot="public" static="no">
        <name>DEMNAM_NAME</name>
        <initializer>1</initializer>
        <briefdescription>
<para>display demangled names as regular names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="340" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_m_n_a_m___1ga10d7c6e93107c6827ba65fc988d2951f" prot="public" static="no">
        <name>DEMNAM_NONE</name>
        <initializer>2</initializer>
        <briefdescription>
<para>don&apos;t display demangled names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="341" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_m_n_a_m___1ga311462b3d0605e7496c720126c819666" prot="public" static="no">
        <name>DEMNAM_GCC3</name>
        <initializer>4</initializer>
        <briefdescription>
<para>assume gcc3 names (valid for gnu compiler) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="342" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_m_n_a_m___1gafa559d2e8801f6abcfead53e4d210c74" prot="public" static="no">
        <name>DEMNAM_FIRST</name>
        <initializer>8</initializer>
        <briefdescription>
<para>override type info </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="343" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_n___1gaf4ef196b173228fb614d5c1da5852155" prot="public" static="no">
        <name>LN_NORMAL</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>include normal names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="352" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_n___1ga9542888a3c68f943aa616d50470cfcc7" prot="public" static="no">
        <name>LN_PUBLIC</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>include public names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="353" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_n___1ga053d41080d3706a320997c28e4a9ee1f" prot="public" static="no">
        <name>LN_AUTO</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>include autogenerated names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="354" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_n___1ga8941068f8d3f4663b9def50c5c1e1131" prot="public" static="no">
        <name>LN_WEAK</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>include weak names </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="355" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_f_l_g___1ga6f62c1d63b34cbfc964dbdc0d02dce6f" prot="public" static="no">
        <name>OFLG_SHOW_VOID</name>
        <initializer>0x002</initializer>
        <briefdescription>
<para>Display void marks? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="367" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_f_l_g___1ga279aa81f44f35edb85969218847c64c5" prot="public" static="no">
        <name>OFLG_SHOW_AUTO</name>
        <initializer>0x004</initializer>
        <briefdescription>
<para>Display autoanalysis indicator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="368" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_f_l_g___1gab46ed10b06722159c6f8a6531ee4341a" prot="public" static="no">
        <name>OFLG_GEN_NULL</name>
        <initializer>0x010</initializer>
        <briefdescription>
<para>Generate empty lines? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="369" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_f_l_g___1gadccf44ef4db61e9242e5b49b5232d65f" prot="public" static="no">
        <name>OFLG_SHOW_PREF</name>
        <initializer>0x020</initializer>
        <briefdescription>
<para>Show line prefixes? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="370" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_f_l_g___1ga574ce37321c2a99ef556a2ef82a4ddaa" prot="public" static="no">
        <name>OFLG_PREF_SEG</name>
        <initializer>0x040</initializer>
        <briefdescription>
<para>line prefixes with segment name? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="371" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_f_l_g___1ga49d74da37c4350bd7532f9635d67ce2b" prot="public" static="no">
        <name>OFLG_LZERO</name>
        <initializer>0x080</initializer>
        <briefdescription>
<para>generate leading zeroes in numbers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="372" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_f_l_g___1ga999e3bf325f6b9bf292e85f7644e041e" prot="public" static="no">
        <name>OFLG_GEN_ORG</name>
        <initializer>0x100</initializer>
        <briefdescription>
<para>Generate &apos;org&apos; directives? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="373" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_f_l_g___1ga5e2f5783280aaeac2755873ea8e627a3" prot="public" static="no">
        <name>OFLG_GEN_ASSUME</name>
        <initializer>0x200</initializer>
        <briefdescription>
<para>Generate &apos;assume&apos; directives? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="374" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_f_l_g___1gaf5bb012595eab8177f48e4774b73f6e1" prot="public" static="no">
        <name>OFLG_GEN_TRYBLKS</name>
        <initializer>0x400</initializer>
        <briefdescription>
<para>Generate try/catch directives? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="375" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___c_1ga7e181cf72e94dba501c93f3108559907" prot="public" static="no">
        <name>SW_RPTCMT</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>show repeatable comments? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="382" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___c_1ga5042dc198e1cc3b367e6a458dd8f5d7e" prot="public" static="no">
        <name>SW_ALLCMT</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>comment all lines? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="383" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___c_1ga74d5d03b14d785d66fb1306351838817" prot="public" static="no">
        <name>SW_NOCMT</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>no comments at all </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="384" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___c_1ga33156c708b6ee8af1cba9016b89c7fd4" prot="public" static="no">
        <name>SW_LINNUM</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>show source line numbers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="385" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___c_1gacf7f9e60e3883a3a4cca82eca83b3f79" prot="public" static="no">
        <name>SW_TESTMODE</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>testida.idc is running </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="386" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___c_1ga3db4af09086f075fd341979827f4e311" prot="public" static="no">
        <name>SW_SHHID_ITEM</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>show hidden instructions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="387" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___c_1gabb9142b4f649257f9b5f789b689cbf6b" prot="public" static="no">
        <name>SW_SHHID_FUNC</name>
        <initializer>0x40</initializer>
        <briefdescription>
<para>show hidden functions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="388" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_w___c_1ga39f99672364821ce90aeed4d9b0f88c6" prot="public" static="no">
        <name>SW_SHHID_SEGM</name>
        <initializer>0x80</initializer>
        <briefdescription>
<para>show hidden segments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="389" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_m_t___1ga05e542307fbbc6748a3493ea6f7ca3f3" prot="public" static="no">
        <name>LMT_THIN</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>thin borders </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="396" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_m_t___1gab5eb300d73a61e2a746731af258b70e0" prot="public" static="no">
        <name>LMT_THICK</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>thick borders </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="397" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_m_t___1ga4c5f49acf50b88e757a166319272a6fe" prot="public" static="no">
        <name>LMT_EMPTY</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>empty lines at the end of basic blocks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="398" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r_e_f___1gadcc6dfad6aa0c07fae087b44f723777a" prot="public" static="no">
        <name>PREF_SEGADR</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>show segment addresses? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="406" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r_e_f___1ga144c8182bad905708ebf0cf5e8fa1947" prot="public" static="no">
        <name>PREF_FNCOFF</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>show function offsets? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="407" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_r_e_f___1ga269896544d01542351e3d92e9bf9ff98" prot="public" static="no">
        <name>PREF_STACK</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>show stack pointer? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="408" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_f___1gafdd9d9a8250e1a597ccb0f1554e2be76" prot="public" static="no">
        <name>STRF_GEN</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>generate names? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="416" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_f___1ga9ca67e57e72faf56dc8f1fd61f97b620" prot="public" static="no">
        <name>STRF_AUTO</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>names have &apos;autogenerated&apos; bit? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="417" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_f___1gab205bc43c4d89ffad97c45824b10bd85" prot="public" static="no">
        <name>STRF_SERIAL</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>generate serial names? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="418" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_f___1ga1221128a56b921e97907a0095cfa5baa" prot="public" static="no">
        <name>STRF_UNICODE</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>unicode strings are present? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="419" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_f___1ga567e1964614b56d9449d3b11510d9cef" prot="public" static="no">
        <name>STRF_COMMENT</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>generate auto comment for string references? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="420" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_t_r_f___1ga32f07793128cc31bdb34fe6b9308faf9" prot="public" static="no">
        <name>STRF_SAVECASE</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>preserve case of strings for identifiers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="421" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_b_i___1ga91c126b455d4fada0912c7b1ae5e258b" prot="public" static="no">
        <name>ABI_8ALIGN4</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>4 byte alignment for 8byte scalars (__int64/double) inside structures? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="441" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_b_i___1ga6893b269d0f5f9c3f8f709828a7ef9a9" prot="public" static="no">
        <name>ABI_PACK_STKARGS</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>do not align stack arguments to stack slots </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="442" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_b_i___1ga028c4198f01a5cbfb81bd5aee977f851" prot="public" static="no">
        <name>ABI_BIGARG_ALIGN</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>(e.g. __int64 argument should be 8byte aligned on some 32bit platforms) </para>        </briefdescription>
        <detaileddescription>
<para>use natural type alignment for argument if the alignment exceeds native word size </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="443" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_b_i___1ga903fccb41d7d0a4b0d6d3df545a731ee" prot="public" static="no">
        <name>ABI_STACK_LDBL</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
<para>long double areuments are passed on stack </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="445" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_b_i___1ga4467638ae0081e9fafc5cdf40f94ba2f" prot="public" static="no">
        <name>ABI_STACK_VARARGS</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
<para>varargs are always passed on stack (even when there are free registers) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="446" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_b_i___1ga72d8d17d5ef6355351f681185c7d01d4" prot="public" static="no">
        <name>ABI_HARD_FLOAT</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
<para>use the floating-point register set </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="447" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_b_i___1ga4d4724d0f3753898d508089584e4c5dd" prot="public" static="no">
        <name>ABI_SET_BY_USER</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
<para>compiler/abi were set by user flag and require SETCOMP_BY_USER flag to be changed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="448" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_b_i___1gaa79639295c9c49ac8f735b3a13f6b59d" prot="public" static="no">
        <name>ABI_GCC_LAYOUT</name>
        <initializer>0x00000080</initializer>
        <briefdescription>
<para>use gcc layout for udts (used for mingw) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="449" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ida_8hpp_1ae2018a7cee04a8a790fc5fc445fb473a" prot="public" static="no">
        <name>UA_MAXOP</name>
        <initializer>8</initializer>
        <briefdescription>
<para>max number of operands allowed for an instruction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="504" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ida_8hpp_1a2d57d0ddaf9a9e6f86d947134cb21a74" prot="public" static="no">
        <name>MAXADDR</name>
        <initializer>0xFF000000L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="524" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="524" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ida_8hpp_1aa6c288148ef2bf10fef6d6d23685e274" prot="public" static="no">
        <name>IDB_EXT32</name>
        <initializer>&quot;idb&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="539" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="539" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ida_8hpp_1a60fc6d0eb6c3b5f0370c864cebf34288" prot="public" static="no">
        <name>IDB_EXT64</name>
        <initializer>&quot;i64&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="540" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ida_8hpp_1adf30e7fab4da5d82cbaeeff996c6b53a" prot="public" static="no">
        <name>IDB_EXT</name>
        <initializer>IDB_EXT32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="544" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="544" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2" prot="public" static="no">
        <name>filetype_t</name>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2ad058a3425087d65be4bb449b6bac3ae6" prot="public">
          <name>f_EXE_old</name>
          <briefdescription>
<para>MS DOS EXE File. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a6723e31be252b1e837333c3c747bb066" prot="public">
          <name>f_COM_old</name>
          <briefdescription>
<para>MS DOS COM File. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2ac857cc1f8bddf390d7010dda8c07f7e9" prot="public">
          <name>f_BIN</name>
          <briefdescription>
<para>Binary File. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2afeb1bf15fb546532071d0e149839dca6" prot="public">
          <name>f_DRV</name>
          <briefdescription>
<para>MS DOS Driver. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2ac66fe0520ea73d518221a58fe3ffb5ec" prot="public">
          <name>f_WIN</name>
          <briefdescription>
<para>New Executable (NE) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a71ea17774eb1ce4109a54369943bb1bf" prot="public">
          <name>f_HEX</name>
          <briefdescription>
<para>Intel Hex Object File. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a77c80a8bdd2e21f73a21eb5113420ccd" prot="public">
          <name>f_MEX</name>
          <briefdescription>
<para>MOS Technology Hex Object File. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a1f7b8fbf786a565745c6fbd7bb983666" prot="public">
          <name>f_LX</name>
          <briefdescription>
<para>Linear Executable (LX) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a0f4412f2ee95faf121e366b1d16b845c" prot="public">
          <name>f_LE</name>
          <briefdescription>
<para>Linear Executable (LE) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2ac41efe1dff878613f2ac15ef703ec7ad" prot="public">
          <name>f_NLM</name>
          <briefdescription>
<para>Netware Loadable Module (NLM) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a63cfa1fa3a9cf7474439fd9ef1cfcc18" prot="public">
          <name>f_COFF</name>
          <briefdescription>
<para>Common Object File Format (COFF) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2af1d2d439b58b8825ea63d93fc3270e43" prot="public">
          <name>f_PE</name>
          <briefdescription>
<para>Portable Executable (PE) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a37a9dc01aa2b61188bfb9b13cc8468c4" prot="public">
          <name>f_OMF</name>
          <briefdescription>
<para>Object Module Format. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a0c000e0c54532d7950d6a401e94f46b6" prot="public">
          <name>f_SREC</name>
          <briefdescription>
<para>R-records. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a25cc6a35e922508992521af5e4c2ee2c" prot="public">
          <name>f_ZIP</name>
          <briefdescription>
<para>ZIP file (this file is never loaded to IDA database) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a4b9feb7f9714f6a992d16483f888710f" prot="public">
          <name>f_OMFLIB</name>
          <briefdescription>
<para>Library of OMF Modules. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a88108e06e97046ac22bd1a2bcacaaef7" prot="public">
          <name>f_AR</name>
          <briefdescription>
<para>ar library </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a8245a94e1b8ff6ec328965665a723968" prot="public">
          <name>f_LOADER</name>
          <briefdescription>
<para>file is loaded using LOADER DLL </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a441848b4d1059327012bf7daf6645722" prot="public">
          <name>f_ELF</name>
          <briefdescription>
<para>Executable and Linkable Format (ELF) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2aaf9bb32a3acf77f8fe5b41fedba94fc6" prot="public">
          <name>f_W32RUN</name>
          <briefdescription>
<para>Watcom DOS32 Extender (W32RUN) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a804495dbfe6c5883f6ef9ff71c7aed79" prot="public">
          <name>f_AOUT</name>
          <briefdescription>
<para>Linux a.out (AOUT) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a7caa7ac4419c1e1352cff50772e5a57e" prot="public">
          <name>f_PRC</name>
          <briefdescription>
<para>PalmPilot program file. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2aafba7330f4d2cd4b75206be70651139e" prot="public">
          <name>f_EXE</name>
          <briefdescription>
<para>MS DOS EXE File. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a6b44b9380717996d31eba267520c066b" prot="public">
          <name>f_COM</name>
          <briefdescription>
<para>MS DOS COM File. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a921e2f9bd6c687cb96a6566e4cc69216" prot="public">
          <name>f_AIXAR</name>
          <briefdescription>
<para>AIX ar library. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a51e70cc62f9953d2ca9595e8461473b2a535638b8810460a49e3ee97acf998eca" prot="public">
          <name>f_MACHO</name>
          <briefdescription>
<para>Mac OS X. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Known input file formats (kept in {filetype}): </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="33" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="32" bodyend="60"/>
      </memberdef>
      <memberdef kind="enum" id="ida_8hpp_1ac437eddfbf695e39512a625d8bcf94c9" prot="public" static="no">
        <name>storage_type_t</name>
        <enumvalue id="ida_8hpp_1ac437eddfbf695e39512a625d8bcf94c9a5b80b027acd92773a1423daae16fefbe" prot="public">
          <name>STT_CUR</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>use current storage type (may be used only as a function argument) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1ac437eddfbf695e39512a625d8bcf94c9a65e35b1ef9bbc024c92e5c18e558ea1f" prot="public">
          <name>STT_VA</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>regular storage: virtual arrays, an explicit flag for each byte </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1ac437eddfbf695e39512a625d8bcf94c9a84b73ac4db9a058cfe536f3c93ac7621" prot="public">
          <name>STT_MM</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>memory map: sparse storage. useful for huge objects </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1ac437eddfbf695e39512a625d8bcf94c9ad4981bdebaaa454f87c84bd0a514bf74" prot="public">
          <name>STT_DBG</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>memory map: temporary debugger storage. used internally </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Storage types for flag bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="86" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="85" bodyend="91"/>
      </memberdef>
      <memberdef kind="enum" id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6da" prot="public" static="no">
        <name>hook_type_t</name>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa7a55d3295637cf89258b72769d9387b1" prot="public">
          <name>HT_IDP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hook to the processor module. The callback will receive all <ref refid="structprocessor__t_1a2d184a313fab28b517e82c1717d562a0" kindref="member">processor_t::event_t</ref> events. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa6fa7e25f6a45cce48411e7b2261518c5" prot="public">
          <name>HT_UI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hook to the user interface. The callback will receive all <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334" kindref="member">ui_notification_t</ref> events. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa709c9e203b8afdf9769637581c8e27c6" prot="public">
          <name>HT_DBG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hook to the debugger. The callback will receive all <ref refid="dbg_8hpp_1ac67a564945a2c1721691aa2f657a908c" kindref="member">dbg_notification_t</ref> events. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa43df820c6a0e413207f5e5e8f2c952eb" prot="public">
          <name>HT_IDB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hook to the database events. These events are separated from the <ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa7a55d3295637cf89258b72769d9387b1" kindref="member">HT_IDP</ref> group to speed things up (there are too many plugins and modules hooking to the <ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa7a55d3295637cf89258b72769d9387b1" kindref="member">HT_IDP</ref>). Some essential events are still generated in th <ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa7a55d3295637cf89258b72769d9387b1" kindref="member">HT_IDP</ref> group: make_code, make_data This list is not exhaustive. A common trait of all events in this group: the kernel does not expect any reaction to the event and does not check the return code. For event names, see <ref refid="namespaceidb__event" kindref="compound">idb_event</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa7ee96dbe7b4ff435dbc6de49943dc444" prot="public">
          <name>HT_DEV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal debugger events. Not stable and undocumented for the moment </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daad44e1b672d1faa1afc9a760721e6147d" prot="public">
          <name>HT_VIEW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Custom/IDA views notifications. Refer to <ref refid="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5" kindref="member">view_notification_t</ref> for notification codes </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daad07fd90218ae94171f27a10e4725353a" prot="public">
          <name>HT_OUTPUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Output window notifications. Refer to <ref refid="kernwin_8hpp_1a46f00263cb55eb95c7e1dab9e7d204c5" kindref="member">msg_notification_t</ref> (<ref refid="kernwin_8hpp_1a821b79cc5a1ebb568127e0a89e9734f5" kindref="member">view_notification_t</ref>) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa47843b1137fa2185922a9a44834d3327" prot="public">
          <name>HT_GRAPH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Handling graph operations (<ref refid="graph_8hpp_1a5630d2142d3e6fc6ec8f22ab4a90638a" kindref="member">graph_notification_t</ref>) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa45f57159f776431debfd2d96486dbb93" prot="public">
          <name>HT_IDD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Hook to the debugger plugin. The callback will receive all <ref refid="structdebugger__t_1afab7193608e98043e1a39df0a3d787f1" kindref="member">debugger_t::event_t</ref> events. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6daa0876f924baf0583d97fa5226959837fe" prot="public">
          <name>HT_LAST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Types of events that be hooked to with <ref refid="ida_8hpp_1a9ff01a67acece6c7a82871ce43892508" kindref="member">hook_to_notification_point()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="566" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="565" bodyend="596"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ida_8hpp_1ae36605f575cb0bd001d6b89877734fa2" prot="public" static="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>typedef uchar comp_t</definition>
        <argsstring></argsstring>
        <name>comp_t</name>
        <briefdescription>
<para>target compiler id </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="64" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ida_8hpp_1a3e05fd8860fadc8f72329fc410c8f6b9" prot="public" static="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>typedef uchar cm_t</definition>
        <argsstring></argsstring>
        <name>cm_t</name>
        <briefdescription>
<para>calling convention and memory model </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="65" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ida_8hpp_1acf012fe005690e1af26e799617fc98b7" prot="public" static="no">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> idaapi</type>
        <definition>typedef ssize_t idaapi hook_cb_t(void *user_data, int notification_code, va_list va)</definition>
        <argsstring>(void *user_data, int notification_code, va_list va)</argsstring>
        <name>hook_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback provided to <ref refid="ida_8hpp_1a9ff01a67acece6c7a82871ce43892508" kindref="member">hook_to_notification_point()</ref>. A plugin can hook to a notification point and receive notifications of all major events in IDA. The callback function will be called for each event. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>data supplied in call to <ref refid="ida_8hpp_1a9ff01a67acece6c7a82871ce43892508" kindref="member">hook_to_notification_point()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>notification_code</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structprocessor__t_1a2d184a313fab28b517e82c1717d562a0" kindref="member">processor_t::event_t</ref> or <ref refid="kernwin_8hpp_1a4a23e389ff9cbf1cd31179ca2f393334" kindref="member">ui_notification_t</ref> or <ref refid="structdebugger__t_1afab7193608e98043e1a39df0a3d787f1" kindref="member">debugger_t::event_t</ref>, depending on the hook type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>additional parameters supplied with the notification. see the event descriptions for information </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>ok, the event should be processed further </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!=0</parametername>
</parameternamelist>
<parameterdescription>
<para>the event is blocked and should be discarded. in the case of processor modules, the returned value is used as the return value of processor_t::notify() </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="562" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="562" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ida_8hpp_1a16a4f3043728a55673dd598452a34cb6" prot="public" static="no" mutable="no">
        <type>idaman <ref refid="structidainfo" kindref="compound">idainfo</ref> ida_export_data</type>
        <definition>idaman idainfo ida_export_data inf</definition>
        <argsstring></argsstring>
        <name>inf</name>
        <briefdescription>
<para>program specific information </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="484" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="484" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ida_8hpp_1a887c9cecd2c37fce82d864059440facc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi show_repeatables</definition>
        <argsstring>(void)</argsstring>
        <name>show_repeatables</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Is IDA configured to show all repeatable comments? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="490" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="490" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1ac3fdb3405f1544e2d5730a7ba32640b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi show_all_comments</definition>
        <argsstring>(void)</argsstring>
        <name>show_all_comments</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Is IDA configured to show all comment lines? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="492" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="492" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1a5662b41786725265cdc7ac98d92d0559" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi show_comments</definition>
        <argsstring>(void)</argsstring>
        <name>show_comments</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Is IDA configured to show any comments at all? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="494" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="494" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1af63345ae2255e88303872e8cd40d7c96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi should_trace_sp</definition>
        <argsstring>(void)</argsstring>
        <name>should_trace_sp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Is IDA configured to trace the stack pointer? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="496" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="496" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1a8e7ef9b7dae1abba4f6d78817b828be2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi should_create_stkvars</definition>
        <argsstring>(void)</argsstring>
        <name>should_create_stkvars</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Is IDA configured to create stack variables? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="498" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="498" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1a07cf70ab16fd5769714eb02903f23013" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int calc_default_idaplace_flags</definition>
        <argsstring>(void)</argsstring>
        <name>calc_default_idaplace_flags</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get default disassembly line options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="509" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="509" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1a442b368394897f30bcd60bbc0b633019" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t idaapi</type>
        <definition>ea_t idaapi to_ea</definition>
        <argsstring>(sel_t reg_cs, ea_t reg_ip)</argsstring>
        <name>to_ea</name>
        <param>
          <type>sel_t</type>
          <declname>reg_cs</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>reg_ip</declname>
        </param>
        <briefdescription>
<para>Convert (seg,off) value to a linear address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="531" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" bodystart="531" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1a9ff01a67acece6c7a82871ce43892508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export hook_to_notification_point</definition>
        <argsstring>(hook_type_t hook_type, hook_cb_t *cb, void *user_data=NULL)</argsstring>
        <name>hook_to_notification_point</name>
        <param>
          <type><ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6da" kindref="member">hook_type_t</ref></type>
          <declname>hook_type</declname>
        </param>
        <param>
          <type><ref refid="ida_8hpp_1acf012fe005690e1af26e799617fc98b7" kindref="member">hook_cb_t</ref> *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Register a callback for a class of events in IDA. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="601" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1a695d9fc0b4b165ac2acb924ee934c4e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export unhook_from_notification_point</definition>
        <argsstring>(hook_type_t hook_type, hook_cb_t *cb, void *user_data=NULL)</argsstring>
        <name>unhook_from_notification_point</name>
        <param>
          <type><ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6da" kindref="member">hook_type_t</ref></type>
          <declname>hook_type</declname>
        </param>
        <param>
          <type><ref refid="ida_8hpp_1acf012fe005690e1af26e799617fc98b7" kindref="member">hook_cb_t</ref> *</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister a callback (also see <ref refid="ida_8hpp_1a9ff01a67acece6c7a82871ce43892508" kindref="member">hook_to_notification_point()</ref>). A plugin should unhook before being unloaded (preferably in its termination function). If different callbacks have the same callback function pointer and user_data is not NULL, only the callback whose associated user defined data matches will be removed. <simplesect kind="return"><para>number of unhooked functions. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1afbeac751d6a1c18334db915f7eaba13b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> ida_export</type>
        <definition>idaman ssize_t ida_export invoke_callbacks</definition>
        <argsstring>(hook_type_t hook_type, int notification_code, va_list va)</argsstring>
        <name>invoke_callbacks</name>
        <param>
          <type><ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6da" kindref="member">hook_type_t</ref></type>
          <declname>hook_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>notification_code</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate event notification. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook_type</parametername>
</parameternamelist>
<parameterdescription>
<para>hook type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>notification_code</parametername>
</parameternamelist>
<parameterdescription>
<para>event code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>additional arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>!=0: event processed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1a36bb3f6558215b5e0b6ee4cf39b7ef9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export register_post_event_visitor</definition>
        <argsstring>(hook_type_t hook_type, post_event_visitor_t &amp;visitor, const plugin_t *owner)</argsstring>
        <name>register_post_event_visitor</name>
        <param>
          <type><ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6da" kindref="member">hook_type_t</ref></type>
          <declname>hook_type</declname>
        </param>
        <param>
          <type><ref refid="structpost__event__visitor__t" kindref="compound">post_event_visitor_t</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <param>
          <type>const <ref refid="classplugin__t" kindref="compound">plugin_t</ref> *</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register the post-event visitor. The kernel will not take ownership, nor delete the VISITOR instance. Therefore, it&apos;s up to the plugin to handle it. In addition, the <ref refid="structpost__event__visitor__t" kindref="compound">post_event_visitor_t</ref> will be automatically unregistered when the owner plugin is unloaded from memory. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook_type</parametername>
</parameternamelist>
<parameterdescription>
<para>hook type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>post-event visitor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>owner</parametername>
</parameternamelist>
<parameterdescription>
<para>the owner plugin of the <ref refid="structpost__event__visitor__t" kindref="compound">post_event_visitor_t</ref> type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ida_8hpp_1a748c7b0f9d8717fb8382ae6210832fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export unregister_post_event_visitor</definition>
        <argsstring>(hook_type_t hook_type, post_event_visitor_t &amp;visitor)</argsstring>
        <name>unregister_post_event_visitor</name>
        <param>
          <type><ref refid="ida_8hpp_1a7e27f99f14a603e02c74a9d66adcc6da" kindref="member">hook_type_t</ref></type>
          <declname>hook_type</declname>
        </param>
        <param>
          <type><ref refid="structpost__event__visitor__t" kindref="compound">post_event_visitor_t</ref> &amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister the post-event visitor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hook_type</parametername>
</parameternamelist>
<parameterdescription>
<para>hook type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>post-event visitor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp" line="675" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains the <ref refid="ida_8hpp_1a16a4f3043728a55673dd598452a34cb6" kindref="member">inf</ref> structure definition and some functions common to the whole IDA project. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="ida_8hpp_1a16a4f3043728a55673dd598452a34cb6" kindref="member">inf</ref> structure is saved in the database and contains information specific to the current program being disassembled. Initially it is filled with values from ida.cfg.</para><para>Although it is not a good idea to change values in <ref refid="ida_8hpp_1a16a4f3043728a55673dd598452a34cb6" kindref="member">inf</ref> structure (because you will overwrite values taken from ida.cfg), you are allowed to do it if you feel it necessary. </para>    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/ida.hpp"/>
  </compounddef>
</doxygen>
