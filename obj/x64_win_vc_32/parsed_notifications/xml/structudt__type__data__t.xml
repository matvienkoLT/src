<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structudt__type__data__t" kind="struct" language="C++" prot="public">
    <compoundname>udt_type_data_t</compoundname>
    <basecompoundref refid="classqvector" prot="public" virt="non-virtual">qvector&lt; udt_member_t &gt;</basecompoundref>
    <includes refid="typeinf_8hpp" local="no">typeinf.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structudt__type__data__t_1afc564c564f331f7a1489546719d049e0" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t udt_type_data_t::total_size</definition>
        <argsstring></argsstring>
        <name>total_size</name>
        <briefdescription>
<para>total structure size in bytes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3433" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structudt__type__data__t_1af25f3afe30c6ae1c919a5b9e77848b88" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t udt_type_data_t::unpadded_size</definition>
        <argsstring></argsstring>
        <name>unpadded_size</name>
        <briefdescription>
<para>unpadded structure size in bytes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3434" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structudt__type__data__t_1ac8c98b548ceb86d2870033112c63dcfb" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 udt_type_data_t::effalign</definition>
        <argsstring></argsstring>
        <name>effalign</name>
        <briefdescription>
<para>effective structure alignment (in bytes) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3435" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structudt__type__data__t_1a73a06ae2fa06e35bf49283c0d6a7f52c" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 udt_type_data_t::taudt_bits</definition>
        <argsstring></argsstring>
        <name>taudt_bits</name>
        <briefdescription>
<para>TA... and TAUDT... bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3436" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structudt__type__data__t_1a49e254224405a2501b7a3285d0d74d9f" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>uchar udt_type_data_t::sda</definition>
        <argsstring></argsstring>
        <name>sda</name>
        <briefdescription>
<para>declared structure alignment (shift amount+1). 0 - unspecified </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3437" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structudt__type__data__t_1a29f871d71218253723df537fefd029cc" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>uchar udt_type_data_t::pack</definition>
        <argsstring></argsstring>
        <name>pack</name>
        <briefdescription>
<para>#pragma <ref refid="structudt__type__data__t_1a29f871d71218253723df537fefd029cc" kindref="member">pack()</ref> alignment (shift amount) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3438" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structudt__type__data__t_1a83db0ba4042606835828bce2162d516c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool udt_type_data_t::is_union</definition>
        <argsstring></argsstring>
        <name>is_union</name>
        <briefdescription>
<para>is union or struct? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3439" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3439" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structudt__type__data__t_1ade74f092f7eb2fc080b586f09f9d1ca6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>udt_type_data_t::udt_type_data_t</definition>
        <argsstring>(void)</argsstring>
        <name>udt_type_data_t</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3441" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3441" bodyend="3446"/>
      </memberdef>
      <memberdef kind="function" id="structudt__type__data__t_1a1ffbfb658396e663a598f8de04f07f38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void udt_type_data_t::swap</definition>
        <argsstring>(udt_type_data_t &amp;r)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="structudt__type__data__t" kindref="compound">udt_type_data_t</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3447" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3447" bodyend="3447"/>
      </memberdef>
      <memberdef kind="function" id="structudt__type__data__t_1a8a67b2522137442cfc4259b545a166c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool udt_type_data_t::is_unaligned</definition>
        <argsstring>(void) const</argsstring>
        <name>is_unaligned</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3449" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3449" bodyend="3449"/>
      </memberdef>
      <memberdef kind="function" id="structudt__type__data__t_1a98080047e1b44fff676d1159b6987557" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool udt_type_data_t::is_msstruct</definition>
        <argsstring>(void) const</argsstring>
        <name>is_msstruct</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3450" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3450" bodyend="3450"/>
      </memberdef>
      <memberdef kind="function" id="structudt__type__data__t_1aab47ef0416622a770db5c3e5d303ad75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool udt_type_data_t::is_cppobj</definition>
        <argsstring>(void) const</argsstring>
        <name>is_cppobj</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3451" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3451" bodyend="3451"/>
      </memberdef>
      <memberdef kind="function" id="structudt__type__data__t_1a621ff117e792ffd33d991be94f5de02f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool udt_type_data_t::is_vftable</definition>
        <argsstring>(void) const</argsstring>
        <name>is_vftable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3452" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3452" bodyend="3452"/>
      </memberdef>
      <memberdef kind="function" id="structudt__type__data__t_1a9f10fc1fcfb848909d6f4193242f96fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool udt_type_data_t::is_last_baseclass</definition>
        <argsstring>(size_t idx)</argsstring>
        <name>is_last_baseclass</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3454" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3454" bodyend="3458"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object to represent struct or union types (see <ref refid="classtinfo__t_1a573d7effeb0a38326f7e4e7d8d94658e" kindref="member">tinfo_t::get_udt_details()</ref>) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3523">
        <label>udtmembervec_t</label>
        <link refid="classqvector"/>
      </node>
      <node id="3522">
        <label>udt_type_data_t</label>
        <link refid="structudt__type__data__t"/>
        <childnode refid="3523" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3525">
        <label>udtmembervec_t</label>
        <link refid="classqvector"/>
      </node>
      <node id="3524">
        <label>udt_type_data_t</label>
        <link refid="structudt__type__data__t"/>
        <childnode refid="3525" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3432" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3431" bodyend="3459"/>
    <listofallmembers>
      <member refid="classqvector_1aae20729cb52ff559b27b834e0bbb5528" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>add</name></member>
      <member refid="classqvector_1af0e3de3e606a0b52de17e80ce710317c" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>add_unique</name></member>
      <member refid="classqvector_1a7756bf02ed2b83370fc1d62acb49d3be" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>at</name></member>
      <member refid="classqvector_1a8239a85aa07f560afcf35b8c7c53fd48" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>at</name></member>
      <member refid="classqvector_1ae86d54e6a60b2f2e7eb254b181e4a4dc" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>back</name></member>
      <member refid="classqvector_1aa9af4ff586a6b15e11e760e1f28766f3" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>back</name></member>
      <member refid="classqvector_1ad907a7b2c09c0ca4dd437392ee34a50a" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>begin</name></member>
      <member refid="classqvector_1a85630357a750889ffc6c204e98a8d4aa" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>begin</name></member>
      <member refid="classqvector_1ae2f4823d02d814d50c6d198ff0c43a0c" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>capacity</name></member>
      <member refid="classqvector_1a00ea674adc4b958966d78ba450621a46" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>clear</name></member>
      <member refid="classqvector_1a194d7dff35eb2e50e2b98109a6a9c4da" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>const_iterator</name></member>
      <member refid="classqvector_1a1f7772500942d63596a5c91249ad577c" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>del</name></member>
      <member refid="classqvector_1ac78b72e26edaf62a9554b5a0fe3d6457" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>dstr</name></member>
      <member refid="structudt__type__data__t_1ac8c98b548ceb86d2870033112c63dcfb" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>effalign</name></member>
      <member refid="classqvector_1a557b1f774ef7d7e242ce4792ac83b572" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>empty</name></member>
      <member refid="classqvector_1a6139abba869b7a488109c983445a34d1" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>end</name></member>
      <member refid="classqvector_1adcc73c6c8ad31d17a5fdc57dffea90e1" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>end</name></member>
      <member refid="classqvector_1a59661e16df1b8e3c69caf2b2a6ca2b59" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>erase</name></member>
      <member refid="classqvector_1a16a369b4edb05a6feddd38f8612eab1b" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>erase</name></member>
      <member refid="classqvector_1abf8f50b30972a829ad7affb27cdb80c7" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>extract</name></member>
      <member refid="classqvector_1ab9b8ccda1db8948c10f1ea2936c59a5c" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>find</name></member>
      <member refid="classqvector_1a4e77dc1a55ea19e725e8a22aa574ae28" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>find</name></member>
      <member refid="classqvector_1a7cfc6f9d91d6495f92961c5ea37bb0d4" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>front</name></member>
      <member refid="classqvector_1ae4595a6221e8a056b54fed4dced17f26" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>front</name></member>
      <member refid="classqvector_1acd86e975d8aa56bee809e4176bb0d530" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>grow</name></member>
      <member refid="classqvector_1af9f9d1bbac527168131b03ee956833fc" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>has</name></member>
      <member refid="classqvector_1aeb58b3064e71399ce8f2bfaf9a582d29" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>index</name></member>
      <member refid="classqvector_1a0e2ac6acfb0b5607cd6b77e8049633db" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>inject</name></member>
      <member refid="classqvector_1a7c55d837eb4006430e5b300e79901ef1" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>insert</name></member>
      <member refid="classqvector_1ad10cb71a7d5bfdd090dafd52f625eb20" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>insert</name></member>
      <member refid="structudt__type__data__t_1aab47ef0416622a770db5c3e5d303ad75" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>is_cppobj</name></member>
      <member refid="structudt__type__data__t_1a9f10fc1fcfb848909d6f4193242f96fe" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>is_last_baseclass</name></member>
      <member refid="structudt__type__data__t_1a98080047e1b44fff676d1159b6987557" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>is_msstruct</name></member>
      <member refid="structudt__type__data__t_1a8a67b2522137442cfc4259b545a166c8" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>is_unaligned</name></member>
      <member refid="structudt__type__data__t_1a83db0ba4042606835828bce2162d516c" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>is_union</name></member>
      <member refid="structudt__type__data__t_1a621ff117e792ffd33d991be94f5de02f" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>is_vftable</name></member>
      <member refid="classqvector_1ad40f094ea07c84e9cab1077188893c5c" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>iterator</name></member>
      <member refid="classqvector_1a72ea097e75bccff811f3a98f050b90b2" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>operator!=</name></member>
      <member refid="classqvector_1af24534fa1de39b829e85f573640f9f48" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>operator=</name></member>
      <member refid="classqvector_1ace7ff39fb8ad735fdd45b86a46ba4fbc" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>operator==</name></member>
      <member refid="classqvector_1a3ffbd25fbea3165cf3f8f7a6b4d5c86d" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>operator[]</name></member>
      <member refid="classqvector_1a9743bfd5464506b812d9686d3ba40299" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>operator[]</name></member>
      <member refid="structudt__type__data__t_1a29f871d71218253723df537fefd029cc" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>pack</name></member>
      <member refid="classqvector_1ad0dfc171e75ac7ddf1de00309505d995" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>pop_back</name></member>
      <member refid="classqvector_1a3a46bca9030a31c7e0a1596948797e37" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>push_back</name></member>
      <member refid="classqvector_1ad54c35eca9074d6458a0f589f09d1750" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>push_back</name></member>
      <member refid="classqvector_1a5e84e633cf9a05ebdc441af0780edb4a" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>qclear</name></member>
      <member refid="classqvector_1ac1c66f1594aff3114ed1de62cf84410d" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>qvector</name></member>
      <member refid="classqvector_1a53936d7ddf6df4efdf91eeed34894c41" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>qvector</name></member>
      <member refid="classqvector_1a00e5c32c63732f5149e901c932d2f3c2" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>reserve</name></member>
      <member refid="classqvector_1a86c07a20c0f081c2930118f0db280148" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>resize</name></member>
      <member refid="classqvector_1ae4d55e7d94d1a247e10baeae524b53dc" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>resize</name></member>
      <member refid="structudt__type__data__t_1a49e254224405a2501b7a3285d0d74d9f" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>sda</name></member>
      <member refid="classqvector_1ae96fe88d3602362b063bd0540ff579dd" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>size</name></member>
      <member refid="structudt__type__data__t_1a1ffbfb658396e663a598f8de04f07f38" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>swap</name></member>
      <member refid="classqvector_1a2006754f99fb324709ae0972ddb20bb4" prot="public" virt="non-virtual" ambiguityscope="qvector::"><scope>udt_type_data_t</scope><name>swap</name></member>
      <member refid="structudt__type__data__t_1a73a06ae2fa06e35bf49283c0d6a7f52c" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>taudt_bits</name></member>
      <member refid="structudt__type__data__t_1afc564c564f331f7a1489546719d049e0" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>total_size</name></member>
      <member refid="classqvector_1a447062dc6a1a8318a9e0430d4bbe0ec6" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>truncate</name></member>
      <member refid="structudt__type__data__t_1ade74f092f7eb2fc080b586f09f9d1ca6" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>udt_type_data_t</name></member>
      <member refid="structudt__type__data__t_1af25f3afe30c6ae1c919a5b9e77848b88" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>unpadded_size</name></member>
      <member refid="classqvector_1a71bc4c4aa5df2fda5b070e74f01b5d28" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>value_type</name></member>
      <member refid="classqvector_1a3c7294aeb604b9c9e1b47b3abd8cd71e" prot="public" virt="non-virtual"><scope>udt_type_data_t</scope><name>~qvector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
