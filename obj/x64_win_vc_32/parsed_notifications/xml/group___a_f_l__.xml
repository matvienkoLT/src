<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group___a_f_l__" kind="group">
    <compoundname>AFL_</compoundname>
    <title>Additional flags for the location</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___a_f_l___1ga4786d206648561cc9454e7e43d59a524" prot="public" static="no">
        <name>AFL_LINNUM</name>
        <initializer>0x00000001L</initializer>
        <briefdescription>
<para>has line number info </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="217" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga410b4a9630ad2c55a6f437e209280328" prot="public" static="no">
        <name>AFL_USERSP</name>
        <initializer>0x00000002L</initializer>
        <briefdescription>
<para>user-defined SP value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="218" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga7537f3337587dbc3577b02b88ed0e64e" prot="public" static="no">
        <name>AFL_PUBNAM</name>
        <initializer>0x00000004L</initializer>
        <briefdescription>
<para>name is public (inter-file linkage) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="219" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga338c215f3df6d07a79900d2639db2609" prot="public" static="no">
        <name>AFL_WEAKNAM</name>
        <initializer>0x00000008L</initializer>
        <briefdescription>
<para>name is weak </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="220" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga3f1f542c3dc2c16ce18c8772ad1d160d" prot="public" static="no">
        <name>AFL_HIDDEN</name>
        <initializer>0x00000010L</initializer>
        <briefdescription>
<para>the item is hidden completely </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="221" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaa2263302c0aeb85946d8424e5caa824a" prot="public" static="no">
        <name>AFL_MANUAL</name>
        <initializer>0x00000020L</initializer>
        <briefdescription>
<para>the instruction/data is specified by the user </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="222" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gabc9bbdc144945250637846d342084af0" prot="public" static="no">
        <name>AFL_NOBRD</name>
        <initializer>0x00000040L</initializer>
        <briefdescription>
<para>the code/data border is hidden </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="223" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gae2a9146154dc578eb2d9e75efe0d5d18" prot="public" static="no">
        <name>AFL_ZSTROFF</name>
        <initializer>0x00000080L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>display struct field name at 0 offset when displaying an offset. example: {offset somestruct.field_0} if this flag is clear, then {offset somestruct} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="224" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga73b42e74039bed8ee02194f0b45a781f" prot="public" static="no">
        <name>AFL_BNOT0</name>
        <initializer>0x00000100L</initializer>
        <briefdescription>
<para>the 1st operand is bitwise negated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="229" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gafdaba9711391963192b28d8f4e323b44" prot="public" static="no">
        <name>AFL_BNOT1</name>
        <initializer>0x00000200L</initializer>
        <briefdescription>
<para>the 2nd operand is bitwise negated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="230" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga6b27595f869bbb63773ffc68fbd6c065" prot="public" static="no">
        <name>AFL_LIB</name>
        <initializer>0x00000400L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>item from the standard library. low level flag, is used to set <ref refid="group___f_u_n_c___1ga3ad36171134e3e021961c2849e6abfae" kindref="member">FUNC_LIB</ref> of <ref refid="classfunc__t" kindref="compound">func_t</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="231" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga1df6c65b405c87d08eb1fcf1b45f3929" prot="public" static="no">
        <name>AFL_TI</name>
        <initializer>0x00000800L</initializer>
        <briefdescription>
<para>has typeinfo? (<ref refid="group___n_s_u_p___1ga449ca35b289a4093d9bca3db214ae190" kindref="member">NSUP_TYPEINFO</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="234" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga6e4de0f4733019d33cf0ca15cfbf8e24" prot="public" static="no">
        <name>AFL_TI0</name>
        <initializer>0x00001000L</initializer>
        <briefdescription>
<para>has typeinfo for operand 0? (<ref refid="group___n_s_u_p___1gae573bfbe8466943a45c0de5b44a07692" kindref="member">NSUP_OPTYPES</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="235" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga027a1d463847bc1bff567d0987dded24" prot="public" static="no">
        <name>AFL_TI1</name>
        <initializer>0x00002000L</initializer>
        <briefdescription>
<para>has typeinfo for operand 1? (<ref refid="group___n_s_u_p___1gae573bfbe8466943a45c0de5b44a07692" kindref="member">NSUP_OPTYPES</ref>+1) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="236" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaf32befeb3196638d2f99fe7accc3ca7d" prot="public" static="no">
        <name>AFL_LNAME</name>
        <initializer>0x00004000L</initializer>
        <briefdescription>
<para>has local name too (<ref refid="group___f_f__statespecb_1ga4bee89a4355fe06b0cf8f8881475960c" kindref="member">FF_NAME</ref> should be set) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="237" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga5b13a50aacdaf8f4ee9ae39eaec5f6b5" prot="public" static="no">
        <name>AFL_TILCMT</name>
        <initializer>0x00008000L</initializer>
        <briefdescription>
<para>has type comment? (such a comment may be changed by IDA) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="238" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga3a2019bd790be1deee6a498d5c3f3160" prot="public" static="no">
        <name>AFL_LZERO0</name>
        <initializer>0x00010000L</initializer>
        <briefdescription>
<para>toggle leading zeroes for the 1st operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="239" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaa5a47be0fd8447456dac9dd2f85d94d1" prot="public" static="no">
        <name>AFL_LZERO1</name>
        <initializer>0x00020000L</initializer>
        <briefdescription>
<para>toggle leading zeroes for the 2nd operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="240" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga799ed13eb82dcea3078c8b2f8989bc76" prot="public" static="no">
        <name>AFL_COLORED</name>
        <initializer>0x00040000L</initializer>
        <briefdescription>
<para>has user defined instruction color? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="241" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga225a31d8283e2d498fba1f5eb9aafae4" prot="public" static="no">
        <name>AFL_TERSESTR</name>
        <initializer>0x00080000L</initializer>
        <briefdescription>
<para>terse structure variable display? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="242" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga77c4da8aebb646dad32496a889e3c3a3" prot="public" static="no">
        <name>AFL_SIGN0</name>
        <initializer>0x00100000L</initializer>
        <briefdescription>
<para>code: toggle sign of the 1st operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="243" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaa6a948163597e5693b4bce10e0a99816" prot="public" static="no">
        <name>AFL_SIGN1</name>
        <initializer>0x00200000L</initializer>
        <briefdescription>
<para>code: toggle sign of the 2nd operand </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="244" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga8b6f7b8a78d5e97c3e63c322884cd212" prot="public" static="no">
        <name>AFL_NORET</name>
        <initializer>0x00400000L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>for imported function pointers: doesn&apos;t return. this flag can also be used for any instruction which halts or finishes the program execution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="245" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga7e29226802e2b25c0e7a1013fbbe171b" prot="public" static="no">
        <name>AFL_FIXEDSPD</name>
        <initializer>0x00800000L</initializer>
        <briefdescription>
<para>should not be modified by modules </para>        </briefdescription>
        <detaileddescription>
<para>sp delta value is fixed by analysis. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="248" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gad0e4c541d14600ea0844cb8778b53aeb" prot="public" static="no">
        <name>AFL_ALIGNFLOW</name>
        <initializer>0x01000000L</initializer>
        <briefdescription>
<para>the previous insn was created for alignment purposes only </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="250" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga8186591ad702fad3b4df10e21c47fcc9" prot="public" static="no">
        <name>AFL_USERTI</name>
        <initializer>0x02000000L</initializer>
        <briefdescription>
<para>(comes from the user or type library) </para>        </briefdescription>
        <detaileddescription>
<para>the type information is definitive. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="251" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gaa187ca73ac084686f3126b055a68f398" prot="public" static="no">
        <name>AFL_RETFP</name>
        <initializer>0x04000000L</initializer>
        <briefdescription>
<para>function returns a floating point value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="253" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1gad2d6a6aab6f239b217448fd6e966f152" prot="public" static="no">
        <name>AFL_USEMODSP</name>
        <initializer>0x08000000L</initializer>
        <briefdescription>
<para>example: pop [rsp+N] </para>        </briefdescription>
        <detaileddescription>
<para>insn modifes SP and uses the modified value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="254" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga2a378a226ff7fd35e3e94a39a2dff295" prot="public" static="no">
        <name>AFL_NOTCODE</name>
        <initializer>0x10000000L</initializer>
        <briefdescription>
<para>autoanalysis should not create code here </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="256" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_f_l___1ga77a2e4eb32482fb366f1f02e86d122c8" prot="public" static="no">
        <name>AFL_NOTPROC</name>
        <initializer>0x20000000L</initializer>
        <briefdescription>
<para>autoanalysis should not create proc here </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" line="257" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/nalt.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>All 32-bits of the main flags (<ref refid="bytes_8hpp" kindref="compound">bytes.hpp</ref>) are used up. Additional flags keep more information about addresses. DO NOT use these flags directly unless there is absolutely no way. They are too low level and may corrupt the database. </para>    </detaileddescription>
  </compounddef>
</doxygen>
