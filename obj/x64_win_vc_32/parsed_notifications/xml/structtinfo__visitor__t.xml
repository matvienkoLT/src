<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structtinfo__visitor__t" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>tinfo_visitor_t</compoundname>
    <includes refid="typeinf_8hpp" local="no">typeinf.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtinfo__visitor__t_1abe4a4b1e8706c4107f80240cd7a0e1cf" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tinfo_visitor_t::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group___t_v_s_t__" kindref="compound">tinfo visitor states</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3654" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtinfo__visitor__t_1add743d13c3f91aa14f81ae7ed777edba" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tinfo_visitor_t::level</definition>
        <argsstring></argsstring>
        <name>level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3662" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3662" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtinfo__visitor__t_1a7eeb997bc3a10e3993edb764091597a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tinfo_visitor_t::tinfo_visitor_t</definition>
        <argsstring>(int s=0)</argsstring>
        <name>tinfo_visitor_t</name>
        <param>
          <type>int</type>
          <declname>s</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3663" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3663" bodyend="3663"/>
      </memberdef>
      <memberdef kind="function" id="structtinfo__visitor__t_1a7c8004a7164c0fd4ecaf1f06cff4909e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int idaapi</type>
        <definition>virtual int idaapi tinfo_visitor_t::visit_type</definition>
        <argsstring>(type_mods_t *out, const tinfo_t &amp;tif, const char *name, const char *cmt)=0</argsstring>
        <name>visit_type</name>
        <param>
          <type><ref refid="structtype__mods__t" kindref="compound">type_mods_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>tif</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Visit a subtype. this function must be implemented in the derived class. it may optionally fill out with the new type info. this can be used to modify types (in this case the &apos;out&apos; argument of <ref refid="structtinfo__visitor__t_1a54a41aedc5c7d47ec64ce960614ba829" kindref="member">apply_to()</ref> may not be NULL) return 0 to continue the traversal. return !=0 to stop the traversal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3673" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structtinfo__visitor__t_1af0f9adecd915c563dcda3b21237b0499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tinfo_visitor_t::prune_now</definition>
        <argsstring>(void)</argsstring>
        <name>prune_now</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>To refuse to visit children of the current type, use this: </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3680" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3680" bodyend="3680"/>
      </memberdef>
      <memberdef kind="function" id="structtinfo__visitor__t_1a54a41aedc5c7d47ec64ce960614ba829" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tinfo_visitor_t::apply_to</definition>
        <argsstring>(const tinfo_t &amp;tif, type_mods_t *out=NULL, const char *name=NULL, const char *cmt=NULL)</argsstring>
        <name>apply_to</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>tif</declname>
        </param>
        <param>
          <type><ref refid="structtype__mods__t" kindref="compound">type_mods_t</ref> *</type>
          <declname>out</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>cmt</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Call this function to initiate the traversal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3683" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3683" bodyend="3686"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Visit all subtypes of a type. Derive your visitor from this class and use <ref refid="structtinfo__visitor__t_1a54a41aedc5c7d47ec64ce960614ba829" kindref="member">apply_to()</ref> </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="3653" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="3652" bodyend="3687"/>
    <listofallmembers>
      <member refid="structtinfo__visitor__t_1a54a41aedc5c7d47ec64ce960614ba829" prot="public" virt="non-virtual"><scope>tinfo_visitor_t</scope><name>apply_to</name></member>
      <member refid="structtinfo__visitor__t_1add743d13c3f91aa14f81ae7ed777edba" prot="public" virt="non-virtual"><scope>tinfo_visitor_t</scope><name>level</name></member>
      <member refid="structtinfo__visitor__t_1af0f9adecd915c563dcda3b21237b0499" prot="public" virt="non-virtual"><scope>tinfo_visitor_t</scope><name>prune_now</name></member>
      <member refid="structtinfo__visitor__t_1abe4a4b1e8706c4107f80240cd7a0e1cf" prot="public" virt="non-virtual"><scope>tinfo_visitor_t</scope><name>state</name></member>
      <member refid="structtinfo__visitor__t_1a7eeb997bc3a10e3993edb764091597a3" prot="public" virt="non-virtual"><scope>tinfo_visitor_t</scope><name>tinfo_visitor_t</name></member>
      <member refid="structtinfo__visitor__t_1a7c8004a7164c0fd4ecaf1f06cff4909e" prot="public" virt="pure-virtual"><scope>tinfo_visitor_t</scope><name>visit_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
