<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group__qsnprintf" kind="group">
    <compoundname>qsnprintf</compoundname>
    <title>qsnprintf/qsscanf</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__qsnprintf_1ga82e5d2c150c3a1d1eed598ea21baf879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qsnprintf</definition>
        <argsstring>(char *buffer, size_t n, const char *format,...)</argsstring>
        <name>qsnprintf</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>A safer snprintf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="904" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__qsnprintf_1ga463fd2201cca8b6362f1cd42b8403397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qsscanf</definition>
        <argsstring>(const char *input, const char *format,...)</argsstring>
        <name>qsscanf</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>A safer sscanf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="905" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__qsnprintf_1gaf45ba32528a64944837773def69b19ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qvsnprintf</definition>
        <argsstring>(char *buffer, size_t n, const char *format, va_list va)</argsstring>
        <name>qvsnprintf</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>See <ref refid="group__qsnprintf_1ga82e5d2c150c3a1d1eed598ea21baf879" kindref="member">qsnprintf()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="906" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__qsnprintf_1gaef7269e1694a397c5c7c1de0efffc608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export qvsscanf</definition>
        <argsstring>(const char *input, const char *format, va_list va)</argsstring>
        <name>qvsscanf</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
<para>See <ref refid="group__qsnprintf_1ga463fd2201cca8b6362f1cd42b8403397" kindref="member">qsscanf()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="907" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__qsnprintf_1ga6827295cc8e55915b6d07b4dc96d9897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export append_snprintf</definition>
        <argsstring>(char *buf, const char *end, const char *format,...)</argsstring>
        <name>append_snprintf</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Append result of sprintf to &apos;buf&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="908" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>safer versions of sprintf/sscanf</para><para>Our definitions of sprintf-like functions support one additional format specifier <verbatim> &quot;%a&quot;              which corresponds to ::ea_t
</verbatim></para><para>Usual optional fields like the width can be used too: %04a. The width specifier will be doubled for 64-bit version. These function return the number of characters <emphasis>actually written</emphasis> to the output string. excluding the terminating zero. (which is different from the snprintf). They always terminate the output with a zero byte (if n &gt; 0). </para>    </detaileddescription>
  </compounddef>
</doxygen>
