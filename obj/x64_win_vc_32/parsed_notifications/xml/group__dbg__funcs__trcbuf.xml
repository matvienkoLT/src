<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group__dbg__funcs__trcbuf" kind="group">
    <compoundname>dbg_funcs_trcbuf</compoundname>
    <title>Tracing buffer</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dbg__funcs__trcbuf_1ga8544c3a9bc20577e308142364c7ab1a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi set_trace_size</definition>
        <argsstring>(int size)</argsstring>
        <name>set_trace_size</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Specify the new size of the circular buffer. {Type, Synchronous function, Notification, none (synchronous function)} <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>if 0, buffer isn&apos;t circular and events are never removed. If the new size is smaller than the existing number of trace events, a corresponding number of trace events are removed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>If you specify 0, all available memory can be quickly used !!! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="1239" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="1239" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__trcbuf_1gaccb84e390e06c814d4329689d713f150" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi clear_trace</definition>
        <argsstring>(void)</argsstring>
        <name>clear_trace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear all events in the trace buffer. {Type, Synchronous function - available as request, Notification, none (synchronous function)} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="1246" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="1246" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__trcbuf_1ga42eca646b17b0e2b50c17085f1c79721" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void idaapi</type>
        <definition>void idaapi request_clear_trace</definition>
        <argsstring>(void)</argsstring>
        <name>request_clear_trace</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Post a <ref refid="group__dbg__funcs__trcbuf_1gaccb84e390e06c814d4329689d713f150" kindref="member">clear_trace()</ref> request. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="1250" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="1250" bodyend="1250"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Work with debugger trace buffer. IDA memorizes various types of trace events in a circular buffer: instruction tracing, function call and return, breakpoint access ... </para>    </detaileddescription>
  </compounddef>
</doxygen>
