<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classmbl__array__t" kind="class" language="C++" prot="public">
    <compoundname>mbl_array_t</compoundname>
    <includes refid="hexrays_8hpp" local="no">hexrays.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmbl__array__t_1a3a697da5131a659afd7e14010f471270" prot="private" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 mbl_array_t::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4157" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1abfd6a358e7c43b5a30b457a5805fe65d" prot="private" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 mbl_array_t::flags2</definition>
        <argsstring></argsstring>
        <name>flags2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4158" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmbl__array__t_1afdd3ccd045c4d944140946f813ee6227" prot="public" static="no" mutable="no">
        <type><ref refid="structmba__ranges__t" kindref="compound">mba_ranges_t</ref></type>
        <definition>mba_ranges_t mbl_array_t::mbr</definition>
        <argsstring></argsstring>
        <name>mbr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4344" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a241eeed6af4f532ed6bc72d4637fdc47" prot="public" static="no" mutable="no">
        <type>ea_t</type>
        <definition>ea_t mbl_array_t::entry_ea</definition>
        <argsstring></argsstring>
        <name>entry_ea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4345" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1afce10ffe235bf0a3be206db045a31eb1" prot="public" static="no" mutable="no">
        <type>ea_t</type>
        <definition>ea_t mbl_array_t::last_prolog_ea</definition>
        <argsstring></argsstring>
        <name>last_prolog_ea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4346" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1aff086bd75d1c34afd818f7250d170510" prot="public" static="no" mutable="no">
        <type>ea_t</type>
        <definition>ea_t mbl_array_t::first_epilog_ea</definition>
        <argsstring></argsstring>
        <name>first_epilog_ea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4347" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1adfdb4d3fd6b016f459578f9de34e8e5d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mbl_array_t::qty</definition>
        <argsstring></argsstring>
        <name>qty</name>
        <briefdescription>
<para>number of basic blocks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4348" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1ab4d7e6888a77851f876fb6ec4d946ff3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mbl_array_t::npurged</definition>
        <argsstring></argsstring>
        <name>npurged</name>
        <briefdescription>
<para>-1 - unknown </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4349" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a1ec51270eb549ab4a2e6a71c34b29409" prot="public" static="no" mutable="no">
        <type><ref refid="ida_8hpp_1a3e05fd8860fadc8f72329fc410c8f6b9" kindref="member">cm_t</ref></type>
        <definition>cm_t mbl_array_t::cc</definition>
        <argsstring></argsstring>
        <name>cc</name>
        <briefdescription>
<para>calling convention </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4350" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a7a75f85e83ac04f4b69c9e31f177e804" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::tmpstk_size</definition>
        <argsstring></argsstring>
        <name>tmpstk_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>size of the temporary stack part (which dynamically changes with push/pops) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4351" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a7855266c9788ab8fbc58ae4433d0e725" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::frsize</definition>
        <argsstring></argsstring>
        <name>frsize</name>
        <briefdescription>
<para>size of local stkvars range in the stack frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4353" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a16214a8c93ebef5be108cc378d81972f" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::frregs</definition>
        <argsstring></argsstring>
        <name>frregs</name>
        <briefdescription>
<para>size of saved registers range in the stack frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4354" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a7cc0efbb2e678674b2ad9fa3d2c9165f" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::fpd</definition>
        <argsstring></argsstring>
        <name>fpd</name>
        <briefdescription>
<para>frame pointer delta </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4355" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a1d7bbc716793721194d1461a3bfeba20" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mbl_array_t::pfn_flags</definition>
        <argsstring></argsstring>
        <name>pfn_flags</name>
        <briefdescription>
<para>copy of <ref refid="classfunc__t_1a3278bd032e8a3d89eeb7c0ca75e92455" kindref="member">func_t::flags</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4356" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a3b1c280e2894e8b6b1bb9347e0e2eb48" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mbl_array_t::retsize</definition>
        <argsstring></argsstring>
        <name>retsize</name>
        <briefdescription>
<para>size of return address in the stack frame </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4357" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a68d0b6b00ba99c7fc3a4299b7ea7471b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mbl_array_t::shadow_args</definition>
        <argsstring></argsstring>
        <name>shadow_args</name>
        <briefdescription>
<para>size of shadow argument area </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4358" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1ae7bf51f69b635b5311124fa4e713f199" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::fullsize</definition>
        <argsstring></argsstring>
        <name>fullsize</name>
        <briefdescription>
<para>Full stack size including incoming args. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4359" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1aced7f993b00d73a31f6329f64aa20ded" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::stacksize</definition>
        <argsstring></argsstring>
        <name>stacksize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximal size of the function stack including bytes allocated for outgoing call arguments (up to retaddr) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4360" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a07612326788d992460152f63f1b58e4c" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::inargoff</definition>
        <argsstring></argsstring>
        <name>inargoff</name>
        <briefdescription>
<para>offset of the first stack argument </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4363" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a845b40e4549a3b816a42b6f9b8e1fee5" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::minstkref</definition>
        <argsstring></argsstring>
        <name>minstkref</name>
        <briefdescription>
<para>The lowest stack location whose address was taken. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4364" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a90649d1932a9f436b45952ebb9c2286c" prot="public" static="no" mutable="no">
        <type>ea_t</type>
        <definition>ea_t mbl_array_t::minstkref_ea</definition>
        <argsstring></argsstring>
        <name>minstkref_ea</name>
        <briefdescription>
<para>address with lowest minstkref (for debugging) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4365" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a9ec364a59195e38ed6cd3f3f951d5115" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::minargref</definition>
        <argsstring></argsstring>
        <name>minargref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The lowest stack argument location whose address was taken This location and locations above it can be aliased It controls locations &gt;= inargoff-shadow_args </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4366" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a5244beff77ffe740f38a0d64deff1515" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::spd_adjust</definition>
        <argsstring></argsstring>
        <name>spd_adjust</name>
        <briefdescription>
<para>If sp&gt;0, the max positive sp value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4369" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a8f90c2ea74d1bfbd9c745d418fa313ec" prot="public" static="no" mutable="no">
        <type><ref refid="structivl__t" kindref="compound">ivl_t</ref></type>
        <definition>ivl_t mbl_array_t::aliased_vars</definition>
        <argsstring></argsstring>
        <name>aliased_vars</name>
        <briefdescription>
<para>Aliased stkvar locations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4370" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a9250641f6e4d0fd828c3daafee9eb7f6" prot="public" static="no" mutable="no">
        <type><ref refid="structivl__t" kindref="compound">ivl_t</ref></type>
        <definition>ivl_t mbl_array_t::aliased_args</definition>
        <argsstring></argsstring>
        <name>aliased_args</name>
        <briefdescription>
<para>Aliased stkarg locations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4371" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1aed46e3d31ac40bb6c4b2cc0c12cfcb30" prot="public" static="no" mutable="no">
        <type><ref refid="structivlset__t" kindref="compound">ivlset_t</ref></type>
        <definition>ivlset_t mbl_array_t::gotoff_stkvars</definition>
        <argsstring></argsstring>
        <name>gotoff_stkvars</name>
        <briefdescription>
<para>stkvars that hold .got offsets. considered to be unaliasable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4372" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a99852816abcdb07b485aa4c974681734" prot="public" static="no" mutable="no">
        <type><ref refid="structivlset__t" kindref="compound">ivlset_t</ref></type>
        <definition>ivlset_t mbl_array_t::restricted_memory</definition>
        <argsstring></argsstring>
        <name>restricted_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4373" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a226b36538175278a9f2b0c3bb9e78fb9" prot="public" static="no" mutable="no">
        <type><ref refid="structivlset__t" kindref="compound">ivlset_t</ref></type>
        <definition>ivlset_t mbl_array_t::aliased_memory</definition>
        <argsstring></argsstring>
        <name>aliased_memory</name>
        <briefdescription>
<para>aliased_memory+restricted_memory=ALLMEM </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4374" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1adb3ee795a394ee106a1d39707981865e" prot="public" static="no" mutable="no">
        <type><ref refid="structmlist__t" kindref="compound">mlist_t</ref></type>
        <definition>mlist_t mbl_array_t::nodel_memory</definition>
        <argsstring></argsstring>
        <name>nodel_memory</name>
        <briefdescription>
<para>global dead elimination may not delete references to this area </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4375" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1ac171d807300f8648571df535df7802c1" prot="public" static="no" mutable="no">
        <type><ref refid="classrlist__t" kindref="compound">rlist_t</ref></type>
        <definition>rlist_t mbl_array_t::consumed_argregs</definition>
        <argsstring></argsstring>
        <name>consumed_argregs</name>
        <briefdescription>
<para>registers converted into stack arguments, should not be used as arguments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4376" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1ac11b60442045cb2b6bcc665c1a21e476" prot="public" static="no" mutable="no">
        <type>mba_maturity_t</type>
        <definition>mba_maturity_t mbl_array_t::maturity</definition>
        <argsstring></argsstring>
        <name>maturity</name>
        <briefdescription>
<para>current maturity level </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4378" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1aee0cbe626b54e83cb446c560204b1087" prot="public" static="no" mutable="no">
        <type>mba_maturity_t</type>
        <definition>mba_maturity_t mbl_array_t::reqmat</definition>
        <argsstring></argsstring>
        <name>reqmat</name>
        <briefdescription>
<para>required maturity level </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4379" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a4149e777ac5ab4b03e38c8650dd8b3c5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mbl_array_t::final_type</definition>
        <argsstring></argsstring>
        <name>final_type</name>
        <briefdescription>
<para>is the function type final? (specified by the user) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4381" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1abefc16f2a412f27ea74736563bcf6a04" prot="public" static="no" mutable="no">
        <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref></type>
        <definition>tinfo_t mbl_array_t::idb_type</definition>
        <argsstring></argsstring>
        <name>idb_type</name>
        <briefdescription>
<para>function type as retrieved from the database </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4382" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a449aad3513b99478d2e0c4ece2bfde4c" prot="public" static="no" mutable="no">
        <type><ref refid="idp_8hpp_1a1e42d23df3fb79ce131a227e4898b570" kindref="member">reginfovec_t</ref></type>
        <definition>reginfovec_t mbl_array_t::idb_spoiled</definition>
        <argsstring></argsstring>
        <name>idb_spoiled</name>
        <briefdescription>
<para>MBL_SPLINFO &amp;&amp; final_type: info in ida format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4383" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a8ef58d42e4baa87cbd86d8ae914eba86" prot="public" static="no" mutable="no">
        <type><ref refid="structmlist__t" kindref="compound">mlist_t</ref></type>
        <definition>mlist_t mbl_array_t::spoiled_list</definition>
        <argsstring></argsstring>
        <name>spoiled_list</name>
        <briefdescription>
<para>MBL_SPLINFO &amp;&amp; !final_type: info in vd format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4384" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a62d40317f88daf13c6be7d5710726083" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mbl_array_t::fti_flags</definition>
        <argsstring></argsstring>
        <name>fti_flags</name>
        <briefdescription>
<para>FTI_... constants for the current function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4385" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a8caabc1e4df1595e1b880864c7c63304" prot="public" static="no" mutable="no">
        <type><ref refid="classnetnode" kindref="compound">netnode</ref></type>
        <definition>netnode mbl_array_t::idb_node</definition>
        <argsstring></argsstring>
        <name>idb_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4387" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a0e186b216a6144554617f05d22bd7b4d" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref></type>
        <definition>qstring mbl_array_t::label</definition>
        <argsstring></argsstring>
        <name>label</name>
        <briefdescription>
<para>name of the function or pattern (colored) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4390" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1aaad6289ce17298e26f86ef49e8b680d7" prot="public" static="no" mutable="no">
        <type><ref refid="structlvars__t" kindref="compound">lvars_t</ref></type>
        <definition>lvars_t mbl_array_t::vars</definition>
        <argsstring></argsstring>
        <name>vars</name>
        <briefdescription>
<para>local variables </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4391" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a67ca24513a1eafd5de23bc749d20c357" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" kindref="member">intvec_t</ref></type>
        <definition>intvec_t mbl_array_t::argidx</definition>
        <argsstring></argsstring>
        <name>argidx</name>
        <briefdescription>
<para>input arguments (indexes into &apos;vars&apos;) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4392" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a80128e8a35b897bda13072713193675d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int mbl_array_t::retvaridx</definition>
        <argsstring></argsstring>
        <name>retvaridx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>index of variable holding the return value -1 means none </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4393" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a820c7275b528fca51d01352494bd1886" prot="public" static="no" mutable="no">
        <type>ea_t</type>
        <definition>ea_t mbl_array_t::error_ea</definition>
        <argsstring></argsstring>
        <name>error_ea</name>
        <briefdescription>
<para>during microcode generation holds ins.ea </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4396" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a76baee19e65676c046314257cb089996" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref></type>
        <definition>qstring mbl_array_t::error_strarg</definition>
        <argsstring></argsstring>
        <name>error_strarg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4397" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1afdde70f32b4f3846b5e430c0bb288360" prot="public" static="no" mutable="no">
        <type><ref refid="classmblock__t" kindref="compound">mblock_t</ref> *</type>
        <definition>mblock_t* mbl_array_t::blocks</definition>
        <argsstring></argsstring>
        <name>blocks</name>
        <briefdescription>
<para>double linked list of blocks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4399" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a9a66cf2ce10d7d20a646000808d389cd" prot="public" static="no" mutable="no">
        <type><ref refid="classmblock__t" kindref="compound">mblock_t</ref> **</type>
        <definition>mblock_t** mbl_array_t::natural</definition>
        <argsstring></argsstring>
        <name>natural</name>
        <briefdescription>
<para>natural order of blocks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4400" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a9da39bb0ee0a4cfb6dd655f3b73616be" prot="public" static="no" mutable="no">
        <type><ref refid="structivl__with__name__t" kindref="compound">ivl_with_name_t</ref></type>
        <definition>ivl_with_name_t mbl_array_t::std_ivls[6]</definition>
        <argsstring>[6]</argsstring>
        <name>std_ivls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>we treat memory as consisting of 6 parts see memreg_index_t </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4402" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1a2f81a327793eb3d3f2c97ce25d4e1410" prot="public" static="no" mutable="yes">
        <type><ref refid="classqvector" kindref="compound">hexwarns_t</ref></type>
        <definition>hexwarns_t mbl_array_t::notes</definition>
        <argsstring></argsstring>
        <name>notes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4405" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1af257f1209a8d35cb19bfeda7db7aa221" prot="public" static="no" mutable="yes">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>uchar mbl_array_t::occurred_warns[32]</definition>
        <argsstring>[32]</argsstring>
        <name>occurred_warns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4406" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmbl__array__t_1afb5de786790fef76a8ac9fc87d9b20bc" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char mbl_array_t::reserved[]</definition>
        <argsstring>[]</argsstring>
        <name>reserved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4426" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4426" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmbl__array__t_1a26db312c55bc9bf9e316d8a6846eb22d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::precise_defeas</definition>
        <argsstring>(void) const</argsstring>
        <name>precise_defeas</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4210" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4210" bodyend="4210"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1addcaefff2118ba4480d941ee806d7ed2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::optimized</definition>
        <argsstring>(void) const</argsstring>
        <name>optimized</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4211" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4211" bodyend="4211"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a1f0858ad6de1926270b19702e7a1c26f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::short_display</definition>
        <argsstring>(void) const</argsstring>
        <name>short_display</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4212" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4212" bodyend="4212"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a3c9da2f56b9dab840a4774f6263f24f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::show_reduction</definition>
        <argsstring>(void) const</argsstring>
        <name>show_reduction</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4213" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4213" bodyend="4213"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a817dbf530a9df2ed417808ea8a810f4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::graph_insns</definition>
        <argsstring>(void) const</argsstring>
        <name>graph_insns</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4214" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4214" bodyend="4214"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a8dc4dc8ff00e9484592028abebd879db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::loaded_gdl</definition>
        <argsstring>(void) const</argsstring>
        <name>loaded_gdl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4215" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4215" bodyend="4215"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a4a52a8b611de45995a00f76f25b63041" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::should_beautify</definition>
        <argsstring>(void) const</argsstring>
        <name>should_beautify</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4216" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4216" bodyend="4216"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a7c0e9c19de432e9517624c90661f0298" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::rtype_refined</definition>
        <argsstring>(void) const</argsstring>
        <name>rtype_refined</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4217" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4217" bodyend="4217"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a2ae84a93293a4ee87fdf8b6d84675a0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::may_refine_rettype</definition>
        <argsstring>(void) const</argsstring>
        <name>may_refine_rettype</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4218" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4218" bodyend="4218"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a39432ee85538d0a134387328c639c1f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::may_del_asserts</definition>
        <argsstring>(void) const</argsstring>
        <name>may_del_asserts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4219" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4219" bodyend="4219"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a12b9fb047760998004e62ad735b5b685" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::use_wingraph32</definition>
        <argsstring>(void) const</argsstring>
        <name>use_wingraph32</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4220" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4220" bodyend="4220"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1aefc116e7892dd28cdf9690236043d55c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::display_numaddrs</definition>
        <argsstring>(void) const</argsstring>
        <name>display_numaddrs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4221" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4221" bodyend="4221"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a4c8bc44232729f586af24c8636c948df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::display_valnums</definition>
        <argsstring>(void) const</argsstring>
        <name>display_valnums</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4222" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4222" bodyend="4222"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ae7e03a1c2beee6caebc14278d47fbb6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::is_pattern</definition>
        <argsstring>(void) const</argsstring>
        <name>is_pattern</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4223" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4223" bodyend="4223"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a2543492ebbf2110beb2225f337207e2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::is_thunk</definition>
        <argsstring>(void) const</argsstring>
        <name>is_thunk</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4224" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4224" bodyend="4224"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1af1ed377a915ac6aa2211e0a5a74525ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::saverest_done</definition>
        <argsstring>(void) const</argsstring>
        <name>saverest_done</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4225" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4225" bodyend="4225"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1af9c77f5c9b583dcc1054f6e1ce7fc167" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::callinfo_built</definition>
        <argsstring>(void) const</argsstring>
        <name>callinfo_built</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4226" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4226" bodyend="4226"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a4d936a065e4c2607148b85e3058dc7cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::has_overvars</definition>
        <argsstring>(void) const</argsstring>
        <name>has_overvars</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4227" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4227" bodyend="4227"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1adfdcec241a0b97954003f85a1633512c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::really_alloc</definition>
        <argsstring>(void) const</argsstring>
        <name>really_alloc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4228" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4228" bodyend="4228"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a7ac4200bd1384ed31d15097c977b9543" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::lvars_allocated</definition>
        <argsstring>(void) const</argsstring>
        <name>lvars_allocated</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4229" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4229" bodyend="4229"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a41e0a4b9e0645511c88893cdc2a47dc3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::chain_varnums_ok</definition>
        <argsstring>(void) const</argsstring>
        <name>chain_varnums_ok</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4230" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4230" bodyend="4230"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a6733c1c573e7877670cc7d01c0fd32bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::returns_fpval</definition>
        <argsstring>(void) const</argsstring>
        <name>returns_fpval</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4231" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4231" bodyend="4231"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ad589935fc251b98d8f93dd4ea2ae18b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::has_passregs</definition>
        <argsstring>(void) const</argsstring>
        <name>has_passregs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4232" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4232" bodyend="4232"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a212cf58c7340e6e5c1305b35d570d936" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::generated_asserts</definition>
        <argsstring>(void) const</argsstring>
        <name>generated_asserts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4233" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4233" bodyend="4233"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a345e5cd283a227ef6b84216a3632b316" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::propagated_asserts</definition>
        <argsstring>(void) const</argsstring>
        <name>propagated_asserts</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4234" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4234" bodyend="4234"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a0858394ab78b72d6dd7a684acc4545a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::deleted_pairs</definition>
        <argsstring>(void) const</argsstring>
        <name>deleted_pairs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4235" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4235" bodyend="4235"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a86332b70e0453faeb67407d9909059c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::common_stkvars_stkargs</definition>
        <argsstring>(void) const</argsstring>
        <name>common_stkvars_stkargs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4236" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4236" bodyend="4236"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a9e6a34aaf3c5071c345b92702f84e435" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::lvar_names_ok</definition>
        <argsstring>(void) const</argsstring>
        <name>lvar_names_ok</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4237" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4237" bodyend="4237"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a83afcbaa6df8d915caf1a095f2ad3bf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::lvars_renamed</definition>
        <argsstring>(void) const</argsstring>
        <name>lvars_renamed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4238" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4238" bodyend="4238"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a5c46dfef97a5dfd72b6396151bbd595f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::has_over_chains</definition>
        <argsstring>(void) const</argsstring>
        <name>has_over_chains</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4239" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4239" bodyend="4239"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a5d6fd530d7ea032fded26b050d43b13d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::valranges_done</definition>
        <argsstring>(void) const</argsstring>
        <name>valranges_done</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4240" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4240" bodyend="4240"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a4f6a4342779d57873d55f8d34ca2089e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::is_ctr</definition>
        <argsstring>(void) const</argsstring>
        <name>is_ctr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4241" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4241" bodyend="4241"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a29359851ce1f4d44deccfdda9ff8b2f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::is_dtr</definition>
        <argsstring>(void) const</argsstring>
        <name>is_dtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4242" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4242" bodyend="4242"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ae14b1b8d661ccb1042d1a5bbd32b15e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::is_cdtr</definition>
        <argsstring>(void) const</argsstring>
        <name>is_cdtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4243" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4243" bodyend="4243"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a6758ebbfd01425eaab1436d1744089a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mbl_array_t::get_mba_flags</definition>
        <argsstring>(void) const</argsstring>
        <name>get_mba_flags</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4244" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4244" bodyend="4244"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1aeffd5a8e1b09ff96c5376fba10dfd605" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mbl_array_t::set_mba_flags</definition>
        <argsstring>(int f)</argsstring>
        <name>set_mba_flags</name>
        <param>
          <type>int</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4245" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4245" bodyend="4245"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1aa2d138fcba048d38469c738b83cbde22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mbl_array_t::clr_mba_flags</definition>
        <argsstring>(int f)</argsstring>
        <name>clr_mba_flags</name>
        <param>
          <type>int</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4246" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4246" bodyend="4246"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a87b7c91d2654fa1ed40f962075a4bd9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mbl_array_t::set_mba_flags2</definition>
        <argsstring>(int f)</argsstring>
        <name>set_mba_flags2</name>
        <param>
          <type>int</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4247" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4247" bodyend="4247"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a27102c9a60aa392dd46ad345857dd36c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mbl_array_t::clr_mba_flags2</definition>
        <argsstring>(int f)</argsstring>
        <name>clr_mba_flags2</name>
        <param>
          <type>int</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4248" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4248" bodyend="4248"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a60e9abd6129c1e387d9ae442e5297114" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mbl_array_t::clr_cdtr</definition>
        <argsstring>(void)</argsstring>
        <name>clr_cdtr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4249" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4249" bodyend="4249"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1af9dd9d70c3c88e799fcd8a5902d9062c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mbl_array_t::calc_shins_flags</definition>
        <argsstring>(void) const</argsstring>
        <name>calc_shins_flags</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4250" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4250" bodyend="4260"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a6b430462f489c45b63de5c0af925a3ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::stkoff_vd2ida</definition>
        <argsstring>(sval_t off) const</argsstring>
        <name>stkoff_vd2ida</name>
        <param>
          <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
          <declname>off</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4304" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4304" bodyend="4307"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1afc39a16490c963991e3173375297a2e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::stkoff_ida2vd</definition>
        <argsstring>(sval_t off) const</argsstring>
        <name>stkoff_ida2vd</name>
        <param>
          <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
          <declname>off</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4309" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4309" bodyend="4312"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ae7b1de196baaead6b3287313d93a8f3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
        <definition>sval_t mbl_array_t::argbase</definition>
        <argsstring>() const</argsstring>
        <name>argbase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4313" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4313" bodyend="4316"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1aeb445511a4a110f7d3b682e0893adec6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvdloc__t" kindref="compound">vdloc_t</ref></type>
        <definition>vdloc_t mbl_array_t::idaloc2vd</definition>
        <argsstring>(const argloc_t &amp;loc, int width) const</argsstring>
        <name>idaloc2vd</name>
        <param>
          <type>const <ref refid="classargloc__t" kindref="compound">argloc_t</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4318" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4318" bodyend="4321"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a6cf7fa7d8a983357d5415d6d662e3fcc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classargloc__t" kindref="compound">argloc_t</ref></type>
        <definition>argloc_t mbl_array_t::vd2idaloc</definition>
        <argsstring>(const vdloc_t &amp;loc, int width) const</argsstring>
        <name>vd2idaloc</name>
        <param>
          <type>const <ref refid="classvdloc__t" kindref="compound">vdloc_t</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4329" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4329" bodyend="4332"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1acd124e0e81a922b62fe7ddab1d3bad87" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::is_stkarg</definition>
        <argsstring>(const lvar_t &amp;v) const</argsstring>
        <name>is_stkarg</name>
        <param>
          <type>const <ref refid="classlvar__t" kindref="compound">lvar_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4334" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4334" bodyend="4337"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a022a4776ae83454d1dae66aeae7c3de1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmember__t" kindref="compound">member_t</ref> *</type>
        <definition>member_t* mbl_array_t::get_stkvar</definition>
        <argsstring>(sval_t vd_stkoff, uval_t *poff) const</argsstring>
        <name>get_stkvar</name>
        <param>
          <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
          <declname>vd_stkoff</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref> *</type>
          <declname>poff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a1a1f4a9d933cc2c1dd360cdffa6a223e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classargloc__t" kindref="compound">argloc_t</ref></type>
        <definition>argloc_t mbl_array_t::get_ida_argloc</definition>
        <argsstring>(const lvar_t &amp;v) const</argsstring>
        <name>get_ida_argloc</name>
        <param>
          <type>const <ref refid="classlvar__t" kindref="compound">lvar_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4340" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4340" bodyend="4343"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ae2ca5f7eadd143383d96e13f8d775567" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::write_to_const_detected</definition>
        <argsstring>(void) const</argsstring>
        <name>write_to_const_detected</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4408" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4408" bodyend="4411"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1af1cbc174711cc712162d0fd5f278e775" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::bad_call_sp_detected</definition>
        <argsstring>(void) const</argsstring>
        <name>bad_call_sp_detected</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4412" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4412" bodyend="4415"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ac22f8e4dc5732a1803c50243e00fa884" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::regargs_is_not_aligned</definition>
        <argsstring>(void) const</argsstring>
        <name>regargs_is_not_aligned</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4416" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4416" bodyend="4419"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a101fe8889ff354c708d3682d4b78e9b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::has_bad_sp</definition>
        <argsstring>(void) const</argsstring>
        <name>has_bad_sp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4420" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4420" bodyend="4423"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a1d522e277a475d734eb609fab131c9ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mbl_array_t::mbl_array_t</definition>
        <argsstring>(void)</argsstring>
        <name>mbl_array_t</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a24c8287e1f88bedf8fa377914184649a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mbl_array_t::~mbl_array_t</definition>
        <argsstring>(void)</argsstring>
        <name>~mbl_array_t</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4428" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4428" bodyend="4428"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a20b1b931f34274b9dc640ba59b48b1f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void mbl_array_t::term</definition>
        <argsstring>(void)</argsstring>
        <name>term</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4430" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10409" bodyend="10412"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a4269398b983711180ce9dcbb4e8cdde5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
        <definition>func_t* mbl_array_t::get_curfunc</definition>
        <argsstring>(void) const</argsstring>
        <name>get_curfunc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4431" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4431" bodyend="4431"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1adb2fa73354b63312cdc04c536da1950e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::use_frame</definition>
        <argsstring>(void) const</argsstring>
        <name>use_frame</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4432" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4432" bodyend="4432"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a00aa994b703f738c9a0901b42989ade7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::range_contains</definition>
        <argsstring>(ea_t ea) const</argsstring>
        <name>range_contains</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4433" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4433" bodyend="4433"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a4992adb4d2a9a0a3fa7009eb202c37d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mbl_array_t::is_snippet</definition>
        <argsstring>(void) const</argsstring>
        <name>is_snippet</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4434" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4434" bodyend="4434"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a03dbaafc44aa3294559fca2e1876a9c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int mbl_array_t::optimize_local</definition>
        <argsstring>(int locopt_bits)</argsstring>
        <name>optimize_local</name>
        <param>
          <type>int</type>
          <declname>locopt_bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optimize each basic block locally <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>locopt_bits</parametername>
</parameternamelist>
<parameterdescription>
<para>combination of <ref refid="group___l_o_c_o_p_t__" kindref="compound">Bits for optimize_local()</ref> bits </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of changes. 0 means nothing changed This function is called by the decompiler, usually there is no need to call it explicitly. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4440" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10415" bodyend="10418"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a4d548f8664d2cf6ff3bb8fcc03fa25a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group___m_e_r_r___1ga124713999eb84ddba531f5c2e9eedcab" kindref="member">merror_t</ref> hexapi</type>
        <definition>merror_t mbl_array_t::build_graph</definition>
        <argsstring>(void)</argsstring>
        <name>build_graph</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build control flow graph. This function may be called only once. It calculates the type of each basic block and the adjacency list. <ref refid="classmbl__array__t_1a03dbaafc44aa3294559fca2e1876a9c7" kindref="member">optimize_local()</ref> calls this function if necessary. You need to call this function only before MMAT_LOCOPT. <simplesect kind="return"><para>error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4454" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10421" bodyend="10424"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a2e0545f7aa1abf3e7c77c241f65c5fec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmbl__graph__t" kindref="compound">mbl_graph_t</ref> *hexapi</type>
        <definition>mbl_graph_t * mbl_array_t::get_graph</definition>
        <argsstring>(void)</argsstring>
        <name>get_graph</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get control graph. Call <ref refid="classmbl__array__t_1a4d548f8664d2cf6ff3bb8fcc03fa25a0" kindref="member">build_graph()</ref> if you need the graph before MMAT_LOCOPT. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4458" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10427" bodyend="10430"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ab05b56ca10ab3de2c4abd23f95ebf1fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int mbl_array_t::analyze_calls</definition>
        <argsstring>(int acflags)</argsstring>
        <name>analyze_calls</name>
        <param>
          <type>int</type>
          <declname>acflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Analyze calls and determine calling conventions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>acflags</parametername>
</parameternamelist>
<parameterdescription>
<para>permitted actions that are necessary for successful detection of calling conventions. See <ref refid="group___a_c_f_l__" kindref="compound">Bits for analyze_calls()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of calls. -1 means error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4464" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10433" bodyend="10436"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a4bf5775a01d13f307c9908c1e4e47055" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group___m_e_r_r___1ga124713999eb84ddba531f5c2e9eedcab" kindref="member">merror_t</ref> hexapi</type>
        <definition>merror_t mbl_array_t::optimize_global</definition>
        <argsstring>(void)</argsstring>
        <name>optimize_global</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optimize microcode globally. This function applies various optimization methods until we reach the fixed point. After that it preallocates lvars unless reqmat forbids it. <simplesect kind="return"><para>error code </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4478" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10439" bodyend="10442"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1aebbfda46092f923af7ac5eec8fb03874" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void mbl_array_t::alloc_lvars</definition>
        <argsstring>(void)</argsstring>
        <name>alloc_lvars</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate local variables. Must be called only immediately after <ref refid="classmbl__array__t_1a4bf5775a01d13f307c9908c1e4e47055" kindref="member">optimize_global()</ref>, with no modifications to the microcode. Converts registers, stack variables, and similar operands into mop_l. This call will not fail because all necessary checks were performed in <ref refid="classmbl__array__t_1a4bf5775a01d13f307c9908c1e4e47055" kindref="member">optimize_global()</ref>. After this call the microcode reaches its final state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4486" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10445" bodyend="10448"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a79b0ef36941c6405b8cfec277f29c9aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void mbl_array_t::dump</definition>
        <argsstring>(void) const</argsstring>
        <name>dump</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump microcode to a file. The file will be created in the directory pointed by IDA_DUMPDIR envvar. Dump will be created only if IDA is run under debugger. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4491" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10451" bodyend="10454"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a4ea680045c8f0ffab88ccd4756da3e01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void mbl_array_t::vdump_mba</definition>
        <argsstring>(bool _verify, const char *title, va_list va) const</argsstring>
        <name>vdump_mba</name>
        <param>
          <type>bool</type>
          <declname>_verify</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4492" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10457" bodyend="10460"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1aba1f63e42b871d4c8d26dd85d99b955c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mbl_array_t::dump_mba</definition>
        <argsstring>(bool _verify, const char *title,...) const</argsstring>
        <name>dump_mba</name>
        <param>
          <type>bool</type>
          <declname>_verify</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4493" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4493" bodyend="4499"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ab768577285c04bbc3c3f720d9079ae5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void mbl_array_t::print</definition>
        <argsstring>(vd_printer_t &amp;vp) const</argsstring>
        <name>print</name>
        <param>
          <type><ref refid="structvd__printer__t" kindref="compound">vd_printer_t</ref> &amp;</type>
          <declname>vp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print microcode to any destination. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vp</parametername>
</parameternamelist>
<parameterdescription>
<para>print sink </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4503" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10463" bodyend="10466"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ac82437df8953a140a6c4828251f69582" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void mbl_array_t::verify</definition>
        <argsstring>(bool always) const</argsstring>
        <name>verify</name>
        <param>
          <type>bool</type>
          <declname>always</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify microcode consistency. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>always</parametername>
</parameternamelist>
<parameterdescription>
<para>if false, the check will be performed only if ida runs under debugger If any inconsistency is discovered, an internal error will be generated. We strongly recommend you to call this function before returing control to the decompiler from your callbacks, in the case if you modified the microcode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4512" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10469" bodyend="10472"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a8cfd77afd0d1f6aec29109030d775746" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void mbl_array_t::mark_chains_dirty</definition>
        <argsstring>(void)</argsstring>
        <name>mark_chains_dirty</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the microcode use-def chains dirty. Call this function is any inter-block data dependencies got changed because of your modifications to the microcode. Failing to do so may cause an internal error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4518" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10475" bodyend="10478"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a91dea7157afcdace4453cc9c31981501" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmblock__t" kindref="compound">mblock_t</ref> *</type>
        <definition>const mblock_t* mbl_array_t::get_mblock</definition>
        <argsstring>(int n) const</argsstring>
        <name>get_mblock</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Get basic block by its serial number. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4521" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4521" bodyend="4521"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a76552ff53fae5d990d8d5c7aee23acee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmblock__t" kindref="compound">mblock_t</ref> *</type>
        <definition>mblock_t* mbl_array_t::get_mblock</definition>
        <argsstring>(int n)</argsstring>
        <name>get_mblock</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4522" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4522" bodyend="4522"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ac52606bee29a3e52a25de23d2156a2b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmblock__t" kindref="compound">mblock_t</ref> *hexapi</type>
        <definition>mblock_t * mbl_array_t::insert_block</definition>
        <argsstring>(int bblk)</argsstring>
        <name>insert_block</name>
        <param>
          <type>int</type>
          <declname>bblk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a block in the middle of the mbl array. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bblk</parametername>
</parameternamelist>
<parameterdescription>
<para>he new block will be inserted before BBLK </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ptr to new block </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4527" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10481" bodyend="10484"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a8827760cfe1e62fb3b7af64f7336cc57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool mbl_array_t::remove_block</definition>
        <argsstring>(mblock_t *blk)</argsstring>
        <name>remove_block</name>
        <param>
          <type><ref refid="classmblock__t" kindref="compound">mblock_t</ref> *</type>
          <declname>blk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a block. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blk</parametername>
</parameternamelist>
<parameterdescription>
<para>block to delete </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if at least one of the other blocks became empty or unreachable </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4532" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10487" bodyend="10490"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1af01944110aa5d8821c5fe7e04d0dcc49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool mbl_array_t::remove_empty_blocks</definition>
        <argsstring>(void)</argsstring>
        <name>remove_empty_blocks</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Delete all empty blocks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4535" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10493" bodyend="10496"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1aabce38beeef9c01189b35a9928342191" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool mbl_array_t::combine_blocks</definition>
        <argsstring>(void)</argsstring>
        <name>combine_blocks</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Combine blocks. This function merges blocks constituting linear flow. It calls <ref refid="classmbl__array__t_1af01944110aa5d8821c5fe7e04d0dcc49" kindref="member">remove_empty_blocks()</ref> as well. <simplesect kind="return"><para>true if changed any blocks </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4541" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10499" bodyend="10502"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a91b96835c666145e0aa01f62e1f28d1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int mbl_array_t::for_all_ops</definition>
        <argsstring>(mop_visitor_t &amp;mv)</argsstring>
        <name>for_all_ops</name>
        <param>
          <type><ref refid="structmop__visitor__t" kindref="compound">mop_visitor_t</ref> &amp;</type>
          <declname>mv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Visit all operands of all instructions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mv</parametername>
</parameternamelist>
<parameterdescription>
<para>operand visitor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-zero value returned by mv.visit_mop() or zero </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4546" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10505" bodyend="10508"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a878f86b235421823faee07cd4e19335f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int mbl_array_t::for_all_insns</definition>
        <argsstring>(minsn_visitor_t &amp;mv)</argsstring>
        <name>for_all_insns</name>
        <param>
          <type><ref refid="structminsn__visitor__t" kindref="compound">minsn_visitor_t</ref> &amp;</type>
          <declname>mv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Visit all instructions. This function visits all instruction and subinstructions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mv</parametername>
</parameternamelist>
<parameterdescription>
<para>instruction visitor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-zero value returned by mv.visit_mop() or zero </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4552" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10511" bodyend="10514"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ab4b0ccc4533967674b195cab546eb36e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int mbl_array_t::for_all_topinsns</definition>
        <argsstring>(minsn_visitor_t &amp;mv)</argsstring>
        <name>for_all_topinsns</name>
        <param>
          <type><ref refid="structminsn__visitor__t" kindref="compound">minsn_visitor_t</ref> &amp;</type>
          <declname>mv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Visit all top level instructions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mv</parametername>
</parameternamelist>
<parameterdescription>
<para>instruction visitor </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-zero value returned by mv.visit_mop() or zero </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4557" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10517" bodyend="10520"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a191ad0a6276c7dd21a18184b85d36a6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmop__t" kindref="compound">mop_t</ref> *hexapi</type>
        <definition>mop_t * mbl_array_t::find_mop</definition>
        <argsstring>(op_parent_info_t *ctx, ea_t ea, bool is_dest, const mlist_t &amp;list)</argsstring>
        <name>find_mop</name>
        <param>
          <type><ref refid="structop__parent__info__t" kindref="compound">op_parent_info_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_dest</declname>
        </param>
        <param>
          <type>const <ref refid="structmlist__t" kindref="compound">mlist_t</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find an operand in the microcode. This function tries to find the operand that matches LIST. Any operand that overlaps with LIST is considered as a match. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>context information for the result </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>desired address of the operand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_dest</parametername>
</parameternamelist>
<parameterdescription>
<para>search for destination operand? this argument may be ignored if the exact match could not be found </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>list</parametername>
</parameternamelist>
<parameterdescription>
<para>list of locations the correspond to the operand </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the operand or NULL. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4568" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10523" bodyend="10526"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a697b430bbc4f9384f7156e0190a6dfd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classlvar__t" kindref="compound">lvar_t</ref> &amp;hexapi</type>
        <definition>lvar_t &amp; mbl_array_t::arg</definition>
        <argsstring>(int n)</argsstring>
        <name>arg</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get input argument of the decompiled function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>argument number (0..nargs-1) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4572" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10529" bodyend="10532"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a7eb8cb4d5aabe6ab120649cdbd886f48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classlvar__t" kindref="compound">lvar_t</ref> &amp;</type>
        <definition>const lvar_t&amp; mbl_array_t::arg</definition>
        <argsstring>(int n) const</argsstring>
        <name>arg</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4573" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4573" bodyend="4573"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a731e5cca31caaed3fecf27a6b5a1fa6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structivl__t" kindref="compound">ivl_t</ref> &amp;</type>
        <definition>const ivl_t &amp; mbl_array_t::get_std_region</definition>
        <argsstring>(memreg_index_t idx) const</argsstring>
        <name>get_std_region</name>
        <param>
          <type>memreg_index_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get information about various memory regions. We map the stack frame to the global memory, to some unused range. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4577" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4841" bodyend="4844"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a47545b2aba76307c9f55de59aaf7003e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structivl__t" kindref="compound">ivl_t</ref> &amp;</type>
        <definition>const ivl_t &amp; mbl_array_t::get_lvars_region</definition>
        <argsstring>(void) const</argsstring>
        <name>get_lvars_region</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4578" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4846" bodyend="4849"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a0408a160d8e6e330230979a45f5b0c21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structivl__t" kindref="compound">ivl_t</ref> &amp;</type>
        <definition>const ivl_t &amp; mbl_array_t::get_shadow_region</definition>
        <argsstring>(void) const</argsstring>
        <name>get_shadow_region</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4579" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4851" bodyend="4854"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1ae97bba9e69a4fd6d5b2d0e06740f9666" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structivl__t" kindref="compound">ivl_t</ref> &amp;</type>
        <definition>const ivl_t &amp; mbl_array_t::get_args_region</definition>
        <argsstring>(void) const</argsstring>
        <name>get_args_region</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4580" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4856" bodyend="4859"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1abbaf1a88702d4f6407851a029cceac9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structivl__t" kindref="compound">ivl_t</ref></type>
        <definition>ivl_t mbl_array_t::get_stack_region</definition>
        <argsstring>(void) const</argsstring>
        <name>get_stack_region</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4581" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4861" bodyend="4864"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a2dc4a5c416f14bab5393d924d4ae21f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void mbl_array_t::serialize</definition>
        <argsstring>(bytevec_t &amp;b) const</argsstring>
        <name>serialize</name>
        <param>
          <type><ref refid="classbytevec__t" kindref="compound">bytevec_t</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Serialize mbl array into a sequence of bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4584" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10535" bodyend="10538"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmbl__array__t_1aff31164a0600b60b820a51d04946241f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvdloc__t" kindref="compound">vdloc_t</ref> hexapi</type>
        <definition>vdloc_t mbl_array_t::idaloc2vd</definition>
        <argsstring>(const argloc_t &amp;loc, int width, sval_t spd)</argsstring>
        <name>idaloc2vd</name>
        <param>
          <type>const <ref refid="classargloc__t" kindref="compound">argloc_t</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
          <declname>spd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4317" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10393" bodyend="10398"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1a6c99567c5c0fff22ec02cc568bd1aa2d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classvdloc__t" kindref="compound">vdloc_t</ref></type>
        <definition>static vdloc_t mbl_array_t::idaloc2vd</definition>
        <argsstring>(const mbl_array_t *mba, const argloc_t &amp;loc, int width)</argsstring>
        <name>idaloc2vd</name>
        <param>
          <type>const <ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *</type>
          <declname>mba</declname>
        </param>
        <param>
          <type>const <ref refid="classargloc__t" kindref="compound">argloc_t</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4323" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4323" bodyend="4326"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1abb26481777bb0325b35af762d0989f60" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classargloc__t" kindref="compound">argloc_t</ref> hexapi</type>
        <definition>argloc_t mbl_array_t::vd2idaloc</definition>
        <argsstring>(const vdloc_t &amp;loc, int width, sval_t spd)</argsstring>
        <name>vd2idaloc</name>
        <param>
          <type>const <ref refid="classvdloc__t" kindref="compound">vdloc_t</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a430639fcfd4601cd6cb310ae71481fe1" kindref="member">sval_t</ref></type>
          <declname>spd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4328" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10401" bodyend="10406"/>
      </memberdef>
      <memberdef kind="function" id="classmbl__array__t_1afab26ccda948b63a73f02119684e9b90" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *hexapi</type>
        <definition>mbl_array_t * mbl_array_t::deserialize</definition>
        <argsstring>(const uchar *bytes, size_t nbytes)</argsstring>
        <name>deserialize</name>
        <param>
          <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deserialize a byte sequence into mbl array. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the beginning of the byte sequence. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes in the byte sequence. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new mbl array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4590" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10541" bodyend="10544"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Array of micro blocks represents microcode for a decompiled function. The first micro block is the entry point, the last one if the exit point. The entry and exit blocks are always empty. The exit block is generated at MMAT_LOCOPT maturity level. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="2116">
        <label>ivl_tpl&lt; uval_t &gt;</label>
        <link refid="structivl__tpl"/>
      </node>
      <node id="2090">
        <label>bitset_t</label>
        <link refid="classbitset__t"/>
      </node>
      <node id="2088">
        <label>mlist_t</label>
        <link refid="structmlist__t"/>
        <childnode refid="2085" relation="usage">
          <edgelabel>mem</edgelabel>
        </childnode>
        <childnode refid="2089" relation="usage">
          <edgelabel>reg</edgelabel>
        </childnode>
      </node>
      <node id="2114">
        <label>ivl_with_name_t</label>
        <link refid="structivl__with__name__t"/>
        <childnode refid="2115" relation="usage">
          <edgelabel>ivl</edgelabel>
        </childnode>
      </node>
      <node id="2102">
        <label>tinfo_t</label>
        <link refid="classtinfo__t"/>
      </node>
      <node id="2104">
        <label>mop_addr_t</label>
        <link refid="classmop__addr__t"/>
        <childnode refid="2095" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2126">
        <label>netnode</label>
        <link refid="classnetnode"/>
      </node>
      <node id="2108">
        <label>qvector&lt; mop_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="2085">
        <label>ivlset_t</label>
        <link refid="structivlset__t"/>
        <childnode refid="2086" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2093">
        <label>mblock_t</label>
        <link refid="classmblock__t"/>
        <childnode refid="2081" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="2088" relation="usage">
          <edgelabel>maybuse</edgelabel>
          <edgelabel>dnu</edgelabel>
          <edgelabel>maybdef</edgelabel>
          <edgelabel>mustbuse</edgelabel>
          <edgelabel>mustbdef</edgelabel>
          <edgelabel>dead_at_start</edgelabel>
        </childnode>
        <childnode refid="2091" relation="usage">
          <edgelabel>succset</edgelabel>
          <edgelabel>predset</edgelabel>
        </childnode>
        <childnode refid="2094" relation="usage">
          <edgelabel>head</edgelabel>
          <edgelabel>tail</edgelabel>
        </childnode>
        <childnode refid="2093" relation="usage">
          <edgelabel>nextb</edgelabel>
          <edgelabel>prevb</edgelabel>
        </childnode>
      </node>
      <node id="2125">
        <label>rangevec_base_t</label>
        <link refid="classqvector"/>
      </node>
      <node id="2111">
        <label>operand_locator_t</label>
        <link refid="structoperand__locator__t"/>
      </node>
      <node id="2087">
        <label>qvector&lt; ivl_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="2112">
        <label>mcases_t</label>
        <link refid="classmcases__t"/>
        <childnode refid="2091" relation="usage">
          <edgelabel>targets</edgelabel>
        </childnode>
      </node>
      <node id="2107">
        <label>qvector&lt; mcallarg_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="2118">
        <label>func_t</label>
        <link refid="classfunc__t"/>
        <childnode refid="2119" relation="public-inheritance">
        </childnode>
        <childnode refid="2120" relation="usage">
          <edgelabel>regargs</edgelabel>
        </childnode>
        <childnode refid="2121" relation="usage">
          <edgelabel>points</edgelabel>
        </childnode>
        <childnode refid="2119" relation="usage">
          <edgelabel>tails</edgelabel>
        </childnode>
        <childnode refid="2122" relation="usage">
          <edgelabel>regvars</edgelabel>
        </childnode>
        <childnode refid="2123" relation="usage">
          <edgelabel>llabels</edgelabel>
        </childnode>
      </node>
      <node id="2095">
        <label>mop_t</label>
        <link refid="classmop__t"/>
        <childnode refid="2096" relation="usage">
          <edgelabel>scif</edgelabel>
        </childnode>
        <childnode refid="2103" relation="usage">
          <edgelabel>fpc</edgelabel>
        </childnode>
        <childnode refid="2104" relation="usage">
          <edgelabel>a</edgelabel>
        </childnode>
        <childnode refid="2105" relation="usage">
          <edgelabel>pair</edgelabel>
        </childnode>
        <childnode refid="2106" relation="usage">
          <edgelabel>f</edgelabel>
        </childnode>
        <childnode refid="2094" relation="usage">
          <edgelabel>d</edgelabel>
        </childnode>
        <childnode refid="2109" relation="usage">
          <edgelabel>l</edgelabel>
        </childnode>
        <childnode refid="2110" relation="usage">
          <edgelabel>nnn</edgelabel>
        </childnode>
        <childnode refid="2112" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="2113" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
      </node>
      <node id="2105">
        <label>mop_pair_t</label>
        <link refid="classmop__pair__t"/>
        <childnode refid="2095" relation="usage">
          <edgelabel>hop</edgelabel>
          <edgelabel>lop</edgelabel>
        </childnode>
      </node>
      <node id="2120">
        <label>regarg_t</label>
        <link refid="structregarg__t"/>
      </node>
      <node id="2103">
        <label>fnumber_t</label>
        <link refid="structfnumber__t"/>
      </node>
      <node id="2081">
        <label>mbl_array_t</label>
        <link refid="classmbl__array__t"/>
        <childnode refid="2082" relation="usage">
          <edgelabel>vars</edgelabel>
        </childnode>
        <childnode refid="2084" relation="usage">
          <edgelabel>label</edgelabel>
          <edgelabel>error_strarg</edgelabel>
        </childnode>
        <childnode refid="2085" relation="usage">
          <edgelabel>gotoff_stkvars</edgelabel>
          <edgelabel>restricted_memory</edgelabel>
          <edgelabel>aliased_memory</edgelabel>
        </childnode>
        <childnode refid="2088" relation="usage">
          <edgelabel>spoiled_list</edgelabel>
          <edgelabel>nodel_memory</edgelabel>
        </childnode>
        <childnode refid="2091" relation="usage">
          <edgelabel>argidx</edgelabel>
        </childnode>
        <childnode refid="2092" relation="usage">
          <edgelabel>idb_spoiled</edgelabel>
        </childnode>
        <childnode refid="2093" relation="usage">
          <edgelabel>blocks</edgelabel>
          <edgelabel>natural</edgelabel>
        </childnode>
        <childnode refid="2089" relation="usage">
          <edgelabel>consumed_argregs</edgelabel>
        </childnode>
        <childnode refid="2114" relation="usage">
          <edgelabel>std_ivls</edgelabel>
        </childnode>
        <childnode refid="2102" relation="usage">
          <edgelabel>idb_type</edgelabel>
        </childnode>
        <childnode refid="2117" relation="usage">
          <edgelabel>mbr</edgelabel>
        </childnode>
        <childnode refid="2126" relation="usage">
          <edgelabel>idb_node</edgelabel>
        </childnode>
        <childnode refid="2127" relation="usage">
          <edgelabel>notes</edgelabel>
        </childnode>
        <childnode refid="2115" relation="usage">
          <edgelabel>aliased_args</edgelabel>
          <edgelabel>aliased_vars</edgelabel>
        </childnode>
      </node>
      <node id="2106">
        <label>mcallinfo_t</label>
        <link refid="classmcallinfo__t"/>
        <childnode refid="2085" relation="usage">
          <edgelabel>visible_memory</edgelabel>
        </childnode>
        <childnode refid="2088" relation="usage">
          <edgelabel>pass_regs</edgelabel>
          <edgelabel>spoiled</edgelabel>
          <edgelabel>dead_regs</edgelabel>
          <edgelabel>return_regs</edgelabel>
        </childnode>
        <childnode refid="2107" relation="usage">
          <edgelabel>args</edgelabel>
        </childnode>
        <childnode refid="2102" relation="usage">
          <edgelabel>return_type</edgelabel>
        </childnode>
        <childnode refid="2108" relation="usage">
          <edgelabel>retregs</edgelabel>
        </childnode>
        <childnode refid="2098" relation="usage">
          <edgelabel>return_argloc</edgelabel>
        </childnode>
      </node>
      <node id="2117">
        <label>mba_ranges_t</label>
        <link refid="structmba__ranges__t"/>
        <childnode refid="2118" relation="usage">
          <edgelabel>pfn</edgelabel>
        </childnode>
        <childnode refid="2124" relation="usage">
          <edgelabel>ranges</edgelabel>
        </childnode>
      </node>
      <node id="2086">
        <label>ivlset_tpl&lt; ivl_t, uval_t &gt;</label>
        <link refid="classivlset__tpl"/>
        <childnode refid="2087" relation="usage">
          <edgelabel>bag</edgelabel>
        </childnode>
      </node>
      <node id="2096">
        <label>scif_t</label>
        <link refid="structscif__t"/>
        <childnode refid="2097" relation="public-inheritance">
        </childnode>
        <childnode refid="2081" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
        <childnode refid="2084" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="2102" relation="usage">
          <edgelabel>type</edgelabel>
        </childnode>
      </node>
      <node id="2091">
        <label>qvector&lt; int &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="2121">
        <label>stkpnt_t</label>
        <link refid="structstkpnt__t"/>
      </node>
      <node id="2084">
        <label>_qstring&lt; char &gt;</label>
        <link refid="class__qstring"/>
      </node>
      <node id="2094">
        <label>minsn_t</label>
        <link refid="classminsn__t"/>
        <childnode refid="2094" relation="usage">
          <edgelabel>prev</edgelabel>
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="2095" relation="usage">
          <edgelabel>l</edgelabel>
          <edgelabel>r</edgelabel>
          <edgelabel>d</edgelabel>
        </childnode>
      </node>
      <node id="2099">
        <label>scattered_aloc_t</label>
        <link refid="classscattered__aloc__t"/>
        <childnode refid="2100" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2100">
        <label>qvector&lt; argpart_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="2119">
        <label>range_t</label>
        <link refid="structrange__t"/>
      </node>
      <node id="2097">
        <label>vdloc_t</label>
        <link refid="classvdloc__t"/>
        <childnode refid="2098" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2122">
        <label>regvar_t</label>
        <link refid="structregvar__t"/>
        <childnode refid="2119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2127">
        <label>qvector&lt; hexwarn_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="2110">
        <label>mnumber_t</label>
        <link refid="structmnumber__t"/>
        <childnode refid="2111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2082">
        <label>lvars_t</label>
        <link refid="structlvars__t"/>
        <childnode refid="2083" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2098">
        <label>argloc_t</label>
        <link refid="classargloc__t"/>
        <childnode refid="2099" relation="usage">
          <edgelabel>dist</edgelabel>
        </childnode>
        <childnode refid="2101" relation="usage">
          <edgelabel>rrel</edgelabel>
        </childnode>
      </node>
      <node id="2123">
        <label>llabel_t</label>
        <link refid="structllabel__t"/>
      </node>
      <node id="2109">
        <label>lvar_ref_t</label>
        <link refid="structlvar__ref__t"/>
        <childnode refid="2081" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="2083">
        <label>qvector&lt; lvar_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="2113">
        <label>stkvar_ref_t</label>
        <link refid="structstkvar__ref__t"/>
        <childnode refid="2081" relation="usage">
          <edgelabel>mba</edgelabel>
        </childnode>
      </node>
      <node id="2092">
        <label>qvector&lt; reg_info_t &gt;</label>
        <link refid="classqvector"/>
      </node>
      <node id="2101">
        <label>rrel_t</label>
        <link refid="structrrel__t"/>
      </node>
      <node id="2089">
        <label>rlist_t</label>
        <link refid="classrlist__t"/>
        <childnode refid="2090" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2115">
        <label>ivl_t</label>
        <link refid="structivl__t"/>
        <childnode refid="2116" relation="public-inheritance">
        </childnode>
        <childnode refid="2115" relation="usage">
          <edgelabel>allmem</edgelabel>
        </childnode>
      </node>
      <node id="2124">
        <label>rangevec_t</label>
        <link refid="structrangevec__t"/>
        <childnode refid="2125" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4155" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4154" bodyend="4592"/>
    <listofallmembers>
      <member refid="classmbl__array__t_1a9250641f6e4d0fd828c3daafee9eb7f6" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>aliased_args</name></member>
      <member refid="classmbl__array__t_1a226b36538175278a9f2b0c3bb9e78fb9" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>aliased_memory</name></member>
      <member refid="classmbl__array__t_1a8f90c2ea74d1bfbd9c745d418fa313ec" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>aliased_vars</name></member>
      <member refid="classmbl__array__t_1aebbfda46092f923af7ac5eec8fb03874" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>alloc_lvars</name></member>
      <member refid="classmbl__array__t_1ab05b56ca10ab3de2c4abd23f95ebf1fb" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>analyze_calls</name></member>
      <member refid="classmbl__array__t_1a697b430bbc4f9384f7156e0190a6dfd3" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>arg</name></member>
      <member refid="classmbl__array__t_1a7eb8cb4d5aabe6ab120649cdbd886f48" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>arg</name></member>
      <member refid="classmbl__array__t_1ae7b1de196baaead6b3287313d93a8f3a" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>argbase</name></member>
      <member refid="classmbl__array__t_1a67ca24513a1eafd5de23bc749d20c357" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>argidx</name></member>
      <member refid="classmbl__array__t_1af1cbc174711cc712162d0fd5f278e775" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>bad_call_sp_detected</name></member>
      <member refid="classmbl__array__t_1afdde70f32b4f3846b5e430c0bb288360" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>blocks</name></member>
      <member refid="classmbl__array__t_1a4d548f8664d2cf6ff3bb8fcc03fa25a0" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>build_graph</name></member>
      <member refid="classmbl__array__t_1af9dd9d70c3c88e799fcd8a5902d9062c" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>calc_shins_flags</name></member>
      <member refid="classmbl__array__t_1af9c77f5c9b583dcc1054f6e1ce7fc167" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>callinfo_built</name></member>
      <member refid="classmbl__array__t_1a1ec51270eb549ab4a2e6a71c34b29409" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>cc</name></member>
      <member refid="classmbl__array__t_1a41e0a4b9e0645511c88893cdc2a47dc3" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>chain_varnums_ok</name></member>
      <member refid="classmbl__array__t_1a60e9abd6129c1e387d9ae442e5297114" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>clr_cdtr</name></member>
      <member refid="classmbl__array__t_1aa2d138fcba048d38469c738b83cbde22" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>clr_mba_flags</name></member>
      <member refid="classmbl__array__t_1a27102c9a60aa392dd46ad345857dd36c" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>clr_mba_flags2</name></member>
      <member refid="classmbl__array__t_1aabce38beeef9c01189b35a9928342191" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>combine_blocks</name></member>
      <member refid="classmbl__array__t_1a86332b70e0453faeb67407d9909059c4" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>common_stkvars_stkargs</name></member>
      <member refid="classmbl__array__t_1ac171d807300f8648571df535df7802c1" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>consumed_argregs</name></member>
      <member refid="classmbl__array__t_1a0858394ab78b72d6dd7a684acc4545a3" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>deleted_pairs</name></member>
      <member refid="classmbl__array__t_1afab26ccda948b63a73f02119684e9b90" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>deserialize</name></member>
      <member refid="classmbl__array__t_1aefc116e7892dd28cdf9690236043d55c" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>display_numaddrs</name></member>
      <member refid="classmbl__array__t_1a4c8bc44232729f586af24c8636c948df" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>display_valnums</name></member>
      <member refid="classmbl__array__t_1a79b0ef36941c6405b8cfec277f29c9aa" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>dump</name></member>
      <member refid="classmbl__array__t_1aba1f63e42b871d4c8d26dd85d99b955c" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>dump_mba</name></member>
      <member refid="classmbl__array__t_1a241eeed6af4f532ed6bc72d4637fdc47" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>entry_ea</name></member>
      <member refid="classmbl__array__t_1a820c7275b528fca51d01352494bd1886" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>error_ea</name></member>
      <member refid="classmbl__array__t_1a76baee19e65676c046314257cb089996" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>error_strarg</name></member>
      <member refid="classmbl__array__t_1a4149e777ac5ab4b03e38c8650dd8b3c5" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>final_type</name></member>
      <member refid="classmbl__array__t_1a191ad0a6276c7dd21a18184b85d36a6c" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>find_mop</name></member>
      <member refid="classmbl__array__t_1aff086bd75d1c34afd818f7250d170510" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>first_epilog_ea</name></member>
      <member refid="classmbl__array__t_1a3a697da5131a659afd7e14010f471270" prot="private" virt="non-virtual"><scope>mbl_array_t</scope><name>flags</name></member>
      <member refid="classmbl__array__t_1abfd6a358e7c43b5a30b457a5805fe65d" prot="private" virt="non-virtual"><scope>mbl_array_t</scope><name>flags2</name></member>
      <member refid="classmbl__array__t_1a878f86b235421823faee07cd4e19335f" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>for_all_insns</name></member>
      <member refid="classmbl__array__t_1a91b96835c666145e0aa01f62e1f28d1f" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>for_all_ops</name></member>
      <member refid="classmbl__array__t_1ab4b0ccc4533967674b195cab546eb36e" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>for_all_topinsns</name></member>
      <member refid="classmbl__array__t_1a7cc0efbb2e678674b2ad9fa3d2c9165f" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>fpd</name></member>
      <member refid="classmbl__array__t_1a16214a8c93ebef5be108cc378d81972f" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>frregs</name></member>
      <member refid="classmbl__array__t_1a7855266c9788ab8fbc58ae4433d0e725" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>frsize</name></member>
      <member refid="classmbl__array__t_1a62d40317f88daf13c6be7d5710726083" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>fti_flags</name></member>
      <member refid="classmbl__array__t_1ae7bf51f69b635b5311124fa4e713f199" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>fullsize</name></member>
      <member refid="classmbl__array__t_1a212cf58c7340e6e5c1305b35d570d936" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>generated_asserts</name></member>
      <member refid="classmbl__array__t_1ae97bba9e69a4fd6d5b2d0e06740f9666" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_args_region</name></member>
      <member refid="classmbl__array__t_1a4269398b983711180ce9dcbb4e8cdde5" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_curfunc</name></member>
      <member refid="classmbl__array__t_1a2e0545f7aa1abf3e7c77c241f65c5fec" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_graph</name></member>
      <member refid="classmbl__array__t_1a1a1f4a9d933cc2c1dd360cdffa6a223e" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_ida_argloc</name></member>
      <member refid="classmbl__array__t_1a47545b2aba76307c9f55de59aaf7003e" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_lvars_region</name></member>
      <member refid="classmbl__array__t_1a6758ebbfd01425eaab1436d1744089a2" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_mba_flags</name></member>
      <member refid="classmbl__array__t_1a91dea7157afcdace4453cc9c31981501" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_mblock</name></member>
      <member refid="classmbl__array__t_1a76552ff53fae5d990d8d5c7aee23acee" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_mblock</name></member>
      <member refid="classmbl__array__t_1a0408a160d8e6e330230979a45f5b0c21" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_shadow_region</name></member>
      <member refid="classmbl__array__t_1abbaf1a88702d4f6407851a029cceac9f" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_stack_region</name></member>
      <member refid="classmbl__array__t_1a731e5cca31caaed3fecf27a6b5a1fa6f" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_std_region</name></member>
      <member refid="classmbl__array__t_1a022a4776ae83454d1dae66aeae7c3de1" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>get_stkvar</name></member>
      <member refid="classmbl__array__t_1aed46e3d31ac40bb6c4b2cc0c12cfcb30" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>gotoff_stkvars</name></member>
      <member refid="classmbl__array__t_1a817dbf530a9df2ed417808ea8a810f4b" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>graph_insns</name></member>
      <member refid="classmbl__array__t_1a101fe8889ff354c708d3682d4b78e9b3" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>has_bad_sp</name></member>
      <member refid="classmbl__array__t_1a5c46dfef97a5dfd72b6396151bbd595f" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>has_over_chains</name></member>
      <member refid="classmbl__array__t_1a4d936a065e4c2607148b85e3058dc7cb" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>has_overvars</name></member>
      <member refid="classmbl__array__t_1ad589935fc251b98d8f93dd4ea2ae18b6" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>has_passregs</name></member>
      <member refid="classmbl__array__t_1aff31164a0600b60b820a51d04946241f" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>idaloc2vd</name></member>
      <member refid="classmbl__array__t_1aeb445511a4a110f7d3b682e0893adec6" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>idaloc2vd</name></member>
      <member refid="classmbl__array__t_1a6c99567c5c0fff22ec02cc568bd1aa2d" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>idaloc2vd</name></member>
      <member refid="classmbl__array__t_1a8caabc1e4df1595e1b880864c7c63304" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>idb_node</name></member>
      <member refid="classmbl__array__t_1a449aad3513b99478d2e0c4ece2bfde4c" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>idb_spoiled</name></member>
      <member refid="classmbl__array__t_1abefc16f2a412f27ea74736563bcf6a04" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>idb_type</name></member>
      <member refid="classmbl__array__t_1a07612326788d992460152f63f1b58e4c" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>inargoff</name></member>
      <member refid="classmbl__array__t_1ac52606bee29a3e52a25de23d2156a2b2" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>insert_block</name></member>
      <member refid="classmbl__array__t_1ae14b1b8d661ccb1042d1a5bbd32b15e8" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>is_cdtr</name></member>
      <member refid="classmbl__array__t_1a4f6a4342779d57873d55f8d34ca2089e" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>is_ctr</name></member>
      <member refid="classmbl__array__t_1a29359851ce1f4d44deccfdda9ff8b2f9" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>is_dtr</name></member>
      <member refid="classmbl__array__t_1ae7e03a1c2beee6caebc14278d47fbb6d" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>is_pattern</name></member>
      <member refid="classmbl__array__t_1a4992adb4d2a9a0a3fa7009eb202c37d2" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>is_snippet</name></member>
      <member refid="classmbl__array__t_1acd124e0e81a922b62fe7ddab1d3bad87" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>is_stkarg</name></member>
      <member refid="classmbl__array__t_1a2543492ebbf2110beb2225f337207e2e" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>is_thunk</name></member>
      <member refid="classmbl__array__t_1a0e186b216a6144554617f05d22bd7b4d" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>label</name></member>
      <member refid="classmbl__array__t_1afce10ffe235bf0a3be206db045a31eb1" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>last_prolog_ea</name></member>
      <member refid="classmbl__array__t_1a8dc4dc8ff00e9484592028abebd879db" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>loaded_gdl</name></member>
      <member refid="classmbl__array__t_1a9e6a34aaf3c5071c345b92702f84e435" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>lvar_names_ok</name></member>
      <member refid="classmbl__array__t_1a7ac4200bd1384ed31d15097c977b9543" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>lvars_allocated</name></member>
      <member refid="classmbl__array__t_1a83afcbaa6df8d915caf1a095f2ad3bf6" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>lvars_renamed</name></member>
      <member refid="classmbl__array__t_1a8cfd77afd0d1f6aec29109030d775746" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>mark_chains_dirty</name></member>
      <member refid="classmbl__array__t_1ac11b60442045cb2b6bcc665c1a21e476" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>maturity</name></member>
      <member refid="classmbl__array__t_1a39432ee85538d0a134387328c639c1f8" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>may_del_asserts</name></member>
      <member refid="classmbl__array__t_1a2ae84a93293a4ee87fdf8b6d84675a0a" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>may_refine_rettype</name></member>
      <member refid="classmbl__array__t_1a1d522e277a475d734eb609fab131c9ce" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>mbl_array_t</name></member>
      <member refid="classmbl__array__t_1afdd3ccd045c4d944140946f813ee6227" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>mbr</name></member>
      <member refid="classmbl__array__t_1a9ec364a59195e38ed6cd3f3f951d5115" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>minargref</name></member>
      <member refid="classmbl__array__t_1a845b40e4549a3b816a42b6f9b8e1fee5" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>minstkref</name></member>
      <member refid="classmbl__array__t_1a90649d1932a9f436b45952ebb9c2286c" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>minstkref_ea</name></member>
      <member refid="classmbl__array__t_1a9a66cf2ce10d7d20a646000808d389cd" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>natural</name></member>
      <member refid="classmbl__array__t_1adb3ee795a394ee106a1d39707981865e" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>nodel_memory</name></member>
      <member refid="classmbl__array__t_1a2f81a327793eb3d3f2c97ce25d4e1410" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>notes</name></member>
      <member refid="classmbl__array__t_1ab4d7e6888a77851f876fb6ec4d946ff3" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>npurged</name></member>
      <member refid="classmbl__array__t_1af257f1209a8d35cb19bfeda7db7aa221" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>occurred_warns</name></member>
      <member refid="classmbl__array__t_1a4bf5775a01d13f307c9908c1e4e47055" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>optimize_global</name></member>
      <member refid="classmbl__array__t_1a03dbaafc44aa3294559fca2e1876a9c7" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>optimize_local</name></member>
      <member refid="classmbl__array__t_1addcaefff2118ba4480d941ee806d7ed2" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>optimized</name></member>
      <member refid="classmbl__array__t_1a1d7bbc716793721194d1461a3bfeba20" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>pfn_flags</name></member>
      <member refid="classmbl__array__t_1a26db312c55bc9bf9e316d8a6846eb22d" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>precise_defeas</name></member>
      <member refid="classmbl__array__t_1ab768577285c04bbc3c3f720d9079ae5b" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>print</name></member>
      <member refid="classmbl__array__t_1a345e5cd283a227ef6b84216a3632b316" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>propagated_asserts</name></member>
      <member refid="classmbl__array__t_1adfdb4d3fd6b016f459578f9de34e8e5d" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>qty</name></member>
      <member refid="classmbl__array__t_1a00aa994b703f738c9a0901b42989ade7" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>range_contains</name></member>
      <member refid="classmbl__array__t_1adfdcec241a0b97954003f85a1633512c" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>really_alloc</name></member>
      <member refid="classmbl__array__t_1ac22f8e4dc5732a1803c50243e00fa884" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>regargs_is_not_aligned</name></member>
      <member refid="classmbl__array__t_1a8827760cfe1e62fb3b7af64f7336cc57" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>remove_block</name></member>
      <member refid="classmbl__array__t_1af01944110aa5d8821c5fe7e04d0dcc49" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>remove_empty_blocks</name></member>
      <member refid="classmbl__array__t_1aee0cbe626b54e83cb446c560204b1087" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>reqmat</name></member>
      <member refid="classmbl__array__t_1afb5de786790fef76a8ac9fc87d9b20bc" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>reserved</name></member>
      <member refid="classmbl__array__t_1a99852816abcdb07b485aa4c974681734" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>restricted_memory</name></member>
      <member refid="classmbl__array__t_1a3b1c280e2894e8b6b1bb9347e0e2eb48" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>retsize</name></member>
      <member refid="classmbl__array__t_1a6733c1c573e7877670cc7d01c0fd32bc" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>returns_fpval</name></member>
      <member refid="classmbl__array__t_1a80128e8a35b897bda13072713193675d" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>retvaridx</name></member>
      <member refid="classmbl__array__t_1a7c0e9c19de432e9517624c90661f0298" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>rtype_refined</name></member>
      <member refid="classmbl__array__t_1af1ed377a915ac6aa2211e0a5a74525ae" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>saverest_done</name></member>
      <member refid="classmbl__array__t_1a2dc4a5c416f14bab5393d924d4ae21f5" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>serialize</name></member>
      <member refid="classmbl__array__t_1aeffd5a8e1b09ff96c5376fba10dfd605" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>set_mba_flags</name></member>
      <member refid="classmbl__array__t_1a87b7c91d2654fa1ed40f962075a4bd9b" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>set_mba_flags2</name></member>
      <member refid="classmbl__array__t_1a68d0b6b00ba99c7fc3a4299b7ea7471b" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>shadow_args</name></member>
      <member refid="classmbl__array__t_1a1f0858ad6de1926270b19702e7a1c26f" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>short_display</name></member>
      <member refid="classmbl__array__t_1a4a52a8b611de45995a00f76f25b63041" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>should_beautify</name></member>
      <member refid="classmbl__array__t_1a3c9da2f56b9dab840a4774f6263f24f9" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>show_reduction</name></member>
      <member refid="classmbl__array__t_1a5244beff77ffe740f38a0d64deff1515" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>spd_adjust</name></member>
      <member refid="classmbl__array__t_1a8ef58d42e4baa87cbd86d8ae914eba86" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>spoiled_list</name></member>
      <member refid="classmbl__array__t_1aced7f993b00d73a31f6329f64aa20ded" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>stacksize</name></member>
      <member refid="classmbl__array__t_1a9da39bb0ee0a4cfb6dd655f3b73616be" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>std_ivls</name></member>
      <member refid="classmbl__array__t_1afc39a16490c963991e3173375297a2e1" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>stkoff_ida2vd</name></member>
      <member refid="classmbl__array__t_1a6b430462f489c45b63de5c0af925a3ae" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>stkoff_vd2ida</name></member>
      <member refid="classmbl__array__t_1a20b1b931f34274b9dc640ba59b48b1f1" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>term</name></member>
      <member refid="classmbl__array__t_1a7a75f85e83ac04f4b69c9e31f177e804" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>tmpstk_size</name></member>
      <member refid="classmbl__array__t_1adb2fa73354b63312cdc04c536da1950e" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>use_frame</name></member>
      <member refid="classmbl__array__t_1a12b9fb047760998004e62ad735b5b685" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>use_wingraph32</name></member>
      <member refid="classmbl__array__t_1a5d6fd530d7ea032fded26b050d43b13d" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>valranges_done</name></member>
      <member refid="classmbl__array__t_1aaad6289ce17298e26f86ef49e8b680d7" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>vars</name></member>
      <member refid="classmbl__array__t_1abb26481777bb0325b35af762d0989f60" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>vd2idaloc</name></member>
      <member refid="classmbl__array__t_1a6cf7fa7d8a983357d5415d6d662e3fcc" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>vd2idaloc</name></member>
      <member refid="classmbl__array__t_1a4ea680045c8f0ffab88ccd4756da3e01" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>vdump_mba</name></member>
      <member refid="classmbl__array__t_1ac82437df8953a140a6c4828251f69582" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>verify</name></member>
      <member refid="classmbl__array__t_1ae2ca5f7eadd143383d96e13f8d775567" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>write_to_const_detected</name></member>
      <member refid="classmbl__array__t_1a24c8287e1f88bedf8fa377914184649a" prot="public" virt="non-virtual"><scope>mbl_array_t</scope><name>~mbl_array_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
