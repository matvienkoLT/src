<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structchooser__base__t" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>chooser_base_t</compoundname>
    <derivedcompoundref refid="structchooser__multi__t" prot="public" virt="non-virtual">chooser_multi_t</derivedcompoundref>
    <derivedcompoundref refid="structchooser__t" prot="public" virt="non-virtual">chooser_t</derivedcompoundref>
    <includes refid="kernwin_8hpp" local="no">kernwin.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="group__chooser__index_1ga6e8acc5ead68d124f9e463f7a9813365" prot="public" static="no">
        <name>@2</name>
        <enumvalue id="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a100e0d1651b8811c7df60f02d991ef6e" prot="public">
          <name>NO_SELECTION</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>there is no selected item </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a403da04064cc128f8b3c349032275bf0" prot="public">
          <name>EMPTY_CHOOSER</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the chooser has no data and can not be displayed </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a1c9909c9fe579274c2a3392f06fdab53" prot="public">
          <name>ALREADY_EXISTS</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the non-modal chooser with the same data is already open </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365add3620f9706987cdd059fb99da30f6a1" prot="public">
          <name>NO_ATTR</name>
          <initializer>= -4</initializer>
          <briefdescription>
<para>reserved for IDAPython </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2373" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2372" bodyend="2380"/>
      </memberdef>
      <memberdef kind="enum" id="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088" prot="public" static="no">
        <name>@3</name>
        <enumvalue id="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088a5daf7044c263441f024aa5d4f6eb7d56" prot="public">
          <name>POPUP_INS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088ae813ea73b0097d2501d117b54458813a" prot="public">
          <name>POPUP_DEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088a9f2da0eac3bbffc42f2ea3a2c953ab9c" prot="public">
          <name>POPUP_EDIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088a787ef96b28d43c6ca16cf679b71db6eb" prot="public">
          <name>POPUP_REFRESH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088a7998d5d429e37e909baaad2949b0af61" prot="public">
          <name>NSTDPOPUPS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2383" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2383" bodyend="2383"/>
      </memberdef>
      <memberdef kind="enum" id="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27f" prot="public" static="no">
        <name>cbres_t</name>
        <enumvalue id="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27fa36a1ee8792e27b346229adf76249f838" prot="public">
          <name>NOTHING_CHANGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27faaeb8a2d365caeba576313c9fd9d5d33a" prot="public">
          <name>ALL_CHANGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27fa4ef939d83a9e2664b68a18c8e3995308" prot="public">
          <name>SELECTION_CHANGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>return value of ins(), del(), edit(), enter(), refresh() callbacks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2524" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2524" bodyend="2524"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structchooser__base__t_1a904eb7c089bfc71f4245a3da1c1ad2a6" prot="protected" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 chooser_base_t::version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
<para>version of the class </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2324" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1a8f07ecd9380abf95304d73b76e7f2703" prot="protected" static="no" mutable="no">
        <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
        <definition>uint32 chooser_base_t::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
<para><ref refid="group___c_h__" kindref="compound">Generic chooser flags</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2326" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2326" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structchooser__base__t_1af87d5449fca32811240d52e92bde651e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chooser_base_t::x0</definition>
        <argsstring></argsstring>
        <name>x0</name>
        <briefdescription>
<para>screen position, <ref refid="group__choosers" kindref="compound">Functions: generic list choosers</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2333" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1a7203916efc122ed7e1389c4720a66da4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chooser_base_t::y0</definition>
        <argsstring></argsstring>
        <name>y0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2334" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1a1f7ed151967b25ea6c668e736ae67146" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chooser_base_t::x1</definition>
        <argsstring></argsstring>
        <name>x1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2335" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1a63397b908a324623312859c546ff1881" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chooser_base_t::y1</definition>
        <argsstring></argsstring>
        <name>y1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2336" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1a151d40817511fdc1f71992e142b28cb4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chooser_base_t::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
<para>(in chars) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2337" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1abdfd5d8dd5fc7b94918412405f64054a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chooser_base_t::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
<para>(in chars) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2338" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1afed0e6eb1d254ec47a4e8d93a38cb339" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* chooser_base_t::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>menu title (includes ptr to help). May have chooser title prefixes (see &quot;Chooser
 title&quot; above). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2340" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1a4e88650ee7434c5b045a769773e36000" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chooser_base_t::columns</definition>
        <argsstring></argsstring>
        <name>columns</name>
        <briefdescription>
<para>number of columns </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2343" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1afd3111894f68258b4fba46c77a96ee45" prot="public" static="no" mutable="no">
        <type>const int *</type>
        <definition>const int* chooser_base_t::widths</definition>
        <argsstring></argsstring>
        <name>widths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>column widths<itemizedlist>
<listitem><para>low 16 bits of each value hold the column width</para></listitem><listitem><para>high 16 bits are flags (see <ref refid="group___c_h_c_o_l__" kindref="compound">Chooser column flags</ref>) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2344" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1af7e08caf3a73e8c49ef25936f93fa551" prot="public" static="no" mutable="no">
        <type>const char *const  *</type>
        <definition>const char* const* chooser_base_t::header</definition>
        <argsstring></argsstring>
        <name>header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>header line; contains the tooltips, and column name for each of &apos;columns&apos; columns. When tooltips need to be provided, the syntax should be: &quot;#tooltip#column-name&quot;. (Otherwise, the syntax is simply &quot;column-name&quot;.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2347" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1a0506d5980c2bdd80d6e1dcaf3d8e29f2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chooser_base_t::icon</definition>
        <argsstring></argsstring>
        <name>icon</name>
        <briefdescription>
<para>default icon </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2353" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1af3d2a7add9d67da4a192b940fdc285aa" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref></type>
        <definition>qstring chooser_base_t::popup_names[NSTDPOPUPS]</definition>
        <argsstring>[NSTDPOPUPS]</argsstring>
        <name>popup_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>array of custom popup menu names. Used to replace labels for the standard handlers (Insert, Delete, Edit, Refresh). <linebreak/>
An empty name means that the default name will be used. <simplesect kind="note"><para>Availability of items in the popup menu is determined by the <computeroutput>CH_CAN_...</computeroutput> flags. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2390" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structchooser__base__t_1abc54b8013e874ea5df7a947b20ffb09d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int chooser_base_t::deflt_col</definition>
        <argsstring></argsstring>
        <name>deflt_col</name>
        <briefdescription>
<para>Column that will have focus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2392" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2392" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structchooser__base__t_1a8d2c10d79b9584b69197c6a946169313" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>chooser_base_t::chooser_base_t</definition>
        <argsstring>(uint32 flags_=0, int columns_=0, const int *widths_=NULL, const char *const *header_=NULL, const char *title_=NULL)</argsstring>
        <name>chooser_base_t</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>flags_</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>columns_</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const int *</type>
          <declname>widths_</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>header_</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>title_</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2394" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2394" bodyend="2410"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1aac880eaf15320696fb092242c6967c2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual chooser_base_t::~chooser_base_t</definition>
        <argsstring>()</argsstring>
        <name>~chooser_base_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2411" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2411" bodyend="2411"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a48cf11bb95e1e074bdb32f5000296c05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void chooser_base_t::call_destructor</definition>
        <argsstring>()</argsstring>
        <name>call_destructor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2414" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2414" bodyend="2418"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a1d7b6415a56686b33a01aff41a10c866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void *</type>
        <definition>virtual void* chooser_base_t::get_chooser_obj</definition>
        <argsstring>()</argsstring>
        <name>get_chooser_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get pointer to some custom data. <simplesect kind="note"><para>These data are also called &quot;the underlying object&quot;. Now this method is used only in the ActionsInspector class and ida_kernwin.Choose IDAPython&apos;s class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2424" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2424" bodyend="2424"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1aad523011a45e691c70f59ff188d28253" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const void *</type>
        <definition>virtual const void* chooser_base_t::get_obj_id</definition>
        <argsstring>(size_t *len) const</argsstring>
        <name>get_obj_id</name>
        <param>
          <type>size_t *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the id of the chooser data. The choosers are the same if they have the same data ids. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">len</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the id. If it is 0 then it is considered that the method returned an unique id. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>address of the id or NULL in the case len == 0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2431" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2431" bodyend="2436"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a57f8b134145fe413122f32098f71aa84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::is_same</definition>
        <argsstring>(const chooser_base_t *other) const</argsstring>
        <name>is_same</name>
        <param>
          <type>const <ref refid="structchooser__base__t" kindref="compound">chooser_base_t</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>do the current and the given objects hold the same data? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2439" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2439" bodyend="2446"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a5f1d401cf47f99d8ba924d1b502b7f9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::can_ins</definition>
        <argsstring>() const</argsstring>
        <name>can_ins</name>
        <briefdescription>
<para>is an operation allowed? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2449" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2449" bodyend="2449"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a34a0659988c1b3684eb0fc23556e9e71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::can_del</definition>
        <argsstring>() const</argsstring>
        <name>can_del</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2450" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2450" bodyend="2450"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a0b0131e4d491433d7dc6a83020e356ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::can_edit</definition>
        <argsstring>() const</argsstring>
        <name>can_edit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2451" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2451" bodyend="2451"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a38886d5a8bd4175119157fea6b7d54c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::can_refresh</definition>
        <argsstring>() const</argsstring>
        <name>can_refresh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2452" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2452" bodyend="2452"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a0cf9f4b67138017a54b510b3e6f9f151" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::popup_allowed</definition>
        <argsstring>(int i) const</argsstring>
        <name>popup_allowed</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>is a popup action allowed? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2455" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2455" bodyend="2465"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a285f6b2a088739ce3af9818714d558ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::is_status_bar_hidden</definition>
        <argsstring>() const</argsstring>
        <name>is_status_bar_hidden</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2466" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2466" bodyend="2466"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a4436f16519de9168fd7e8c036176cc27" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::should_restore_geometry</definition>
        <argsstring>() const</argsstring>
        <name>should_restore_geometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2467" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2467" bodyend="2467"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a88df9ad8077acff475ae03a79868579f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::is_modal</definition>
        <argsstring>() const</argsstring>
        <name>is_modal</name>
        <briefdescription>
<para>is choose modal? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2469" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2469" bodyend="2469"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a1abb273598513c78926a8bfca3b48f07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::is_multi</definition>
        <argsstring>() const</argsstring>
        <name>is_multi</name>
        <briefdescription>
<para>is multi-selection allowed? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2471" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2471" bodyend="2471"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a2b532b2e66ccbe3ff09bd088f3a6a238" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::ask_item_attrs</definition>
        <argsstring>() const</argsstring>
        <name>ask_item_attrs</name>
        <briefdescription>
<para>should chooser generate ui_get_chooser_item_attrs events? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2473" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2473" bodyend="2473"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1aa56b8ee9be00ddddf2c8b0050e7ab522" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::is_noidb</definition>
        <argsstring>() const</argsstring>
        <name>is_noidb</name>
        <briefdescription>
<para>can use the chooser before opening the database? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2475" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2475" bodyend="2475"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1ad5b997b4e726b8015046344ab0b966ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::is_force_default</definition>
        <argsstring>() const</argsstring>
        <name>is_force_default</name>
        <briefdescription>
<para>should selection of the already opened non-modal chooser be changed? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2477" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2477" bodyend="2477"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a6654802a4f1c248763f81362ae1ca412" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint chooser_base_t::get_builtin_number</definition>
        <argsstring>() const</argsstring>
        <name>get_builtin_number</name>
        <briefdescription>
<para>get number of the built-in chooser </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2479" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2479" bodyend="2482"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a1e51084dfda711975bf40ddf1e16599c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void chooser_base_t::set_ask_item_attrs</definition>
        <argsstring>(bool enable)</argsstring>
        <name>set_ask_item_attrs</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>enable or disable generation of ui_get_chooser_item_attrs events </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2484" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2484" bodyend="2490"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a5c7a9bd344a8d0e49f1e0dfa3f3dd91b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void chooser_base_t::check_version</definition>
        <argsstring>(uint32 ver) const</argsstring>
        <name>check_version</name>
        <param>
          <type><ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref></type>
          <declname>ver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2492" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2492" bodyend="2492"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a7c9373c6b7343dce6d729d1629c2883e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool chooser_base_t::is_quick_filter_visible_initially</definition>
        <argsstring>() const</argsstring>
        <name>is_quick_filter_visible_initially</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2494" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2494" bodyend="2494"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a27ba81a0cb312512772e02b62da3ea7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int chooser_base_t::get_quick_filter_initial_mode</definition>
        <argsstring>() const</argsstring>
        <name>get_quick_filter_initial_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2496" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2496" bodyend="2496"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a98358c499915613dd870c3a0bff84754" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool idaapi</type>
        <definition>virtual bool idaapi chooser_base_t::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>initialize the chooser and populate it. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>false</parametername>
</parameternamelist>
<parameterdescription>
<para>the chooser is empty, do not display it </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2500" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2500" bodyend="2500"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1a2135b3a87a6c00f806691e7e5d04ac4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t idaapi</type>
        <definition>virtual size_t idaapi chooser_base_t::get_count</definition>
        <argsstring>() const =0</argsstring>
        <name>get_count</name>
        <briefdescription>
<para>get the number of elements in the chooser </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2503" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1afca1307f6019e67b60f0eee8eeda4efe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void idaapi</type>
        <definition>virtual void idaapi chooser_base_t::get_row</definition>
        <argsstring>(qstrvec_t *cols, int *icon_, chooser_item_attrs_t *attrs, size_t n) const =0</argsstring>
        <name>get_row</name>
        <param>
          <type><ref refid="pro_8h_1a823b67c620f6cdca97e1d969ea4a9b02" kindref="member">qstrvec_t</ref> *</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>icon_</declname>
        </param>
        <param>
          <type><ref refid="structchooser__item__attrs__t" kindref="compound">chooser_item_attrs_t</ref> *</type>
          <declname>attrs</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get a description of an element. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">cols</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of strings. <linebreak/>
 will receive the contents of each column </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">icon</parametername>
</parameternamelist>
<parameterdescription>
<para>element&apos;s icon id, -1 - no icon </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">attrs</parametername>
</parameternamelist>
<parameterdescription>
<para>element attributes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>element number (0..<ref refid="structchooser__base__t_1a2135b3a87a6c00f806691e7e5d04ac4f" kindref="member">get_count()</ref>-1) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2511" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1abf98aba4f31b3bce346afb854f9251a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ea_t idaapi</type>
        <definition>virtual ea_t idaapi chooser_base_t::get_ea</definition>
        <argsstring>(size_t) const</argsstring>
        <name>get_ea</name>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get an address of an element. Used to set breakpoint in any chooser which implements this callback. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>element number (0-based) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the effective address, BADADDR if the element has no address </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2521" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2521" bodyend="2521"/>
      </memberdef>
      <memberdef kind="function" id="structchooser__base__t_1acaeea0f879cfc2228aa20adbf9f8a839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void idaapi</type>
        <definition>virtual void idaapi chooser_base_t::closed</definition>
        <argsstring>()</argsstring>
        <name>closed</name>
        <briefdescription>
<para>The chooser window is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2527" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2527" bodyend="2527"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="structchooser__base__t_1a1ba303ca874b35020641d02bf04e5196" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void chooser_base_t::init_popup_names</definition>
        <argsstring>(const char *const default_popup_names[NSTDPOPUPS])</argsstring>
        <name>init_popup_names</name>
        <param>
          <type>const char *const</type>
          <declname>default_popup_names</declname>
          <array>[NSTDPOPUPS]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2532" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2532" bodyend="2539"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Chooser object. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="800">
        <label>chooser_multi_t</label>
        <link refid="structchooser__multi__t"/>
        <childnode refid="799" relation="public-inheritance">
        </childnode>
      </node>
      <node id="799">
        <label>chooser_base_t</label>
        <link refid="structchooser__base__t"/>
      </node>
      <node id="801">
        <label>chooser_t</label>
        <link refid="structchooser__t"/>
        <childnode refid="799" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="802">
        <label>chooser_base_t</label>
        <link refid="structchooser__base__t"/>
        <childnode refid="803" relation="usage">
          <edgelabel>popup_names</edgelabel>
        </childnode>
      </node>
      <node id="803">
        <label>_qstring&lt; char &gt;</label>
        <link refid="class__qstring"/>
      </node>
    </collaborationgraph>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="2322" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="2321" bodyend="2540"/>
    <listofallmembers>
      <member refid="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27faaeb8a2d365caeba576313c9fd9d5d33a" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>ALL_CHANGED</name></member>
      <member refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a1c9909c9fe579274c2a3392f06fdab53" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>ALREADY_EXISTS</name></member>
      <member refid="structchooser__base__t_1a2b532b2e66ccbe3ff09bd088f3a6a238" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>ask_item_attrs</name></member>
      <member refid="structchooser__base__t_1a48cf11bb95e1e074bdb32f5000296c05" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>call_destructor</name></member>
      <member refid="structchooser__base__t_1a34a0659988c1b3684eb0fc23556e9e71" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>can_del</name></member>
      <member refid="structchooser__base__t_1a0b0131e4d491433d7dc6a83020e356ee" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>can_edit</name></member>
      <member refid="structchooser__base__t_1a5f1d401cf47f99d8ba924d1b502b7f9c" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>can_ins</name></member>
      <member refid="structchooser__base__t_1a38886d5a8bd4175119157fea6b7d54c5" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>can_refresh</name></member>
      <member refid="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27f" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>cbres_t</name></member>
      <member refid="structchooser__base__t_1a5c7a9bd344a8d0e49f1e0dfa3f3dd91b" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>check_version</name></member>
      <member refid="structchooser__base__t_1a8d2c10d79b9584b69197c6a946169313" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>chooser_base_t</name></member>
      <member refid="structchooser__base__t_1acaeea0f879cfc2228aa20adbf9f8a839" prot="public" virt="virtual"><scope>chooser_base_t</scope><name>closed</name></member>
      <member refid="structchooser__base__t_1a4e88650ee7434c5b045a769773e36000" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>columns</name></member>
      <member refid="structchooser__base__t_1abc54b8013e874ea5df7a947b20ffb09d" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>deflt_col</name></member>
      <member refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a403da04064cc128f8b3c349032275bf0" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>EMPTY_CHOOSER</name></member>
      <member refid="structchooser__base__t_1a8f07ecd9380abf95304d73b76e7f2703" prot="protected" virt="non-virtual"><scope>chooser_base_t</scope><name>flags</name></member>
      <member refid="structchooser__base__t_1a6654802a4f1c248763f81362ae1ca412" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>get_builtin_number</name></member>
      <member refid="structchooser__base__t_1a1d7b6415a56686b33a01aff41a10c866" prot="public" virt="virtual"><scope>chooser_base_t</scope><name>get_chooser_obj</name></member>
      <member refid="structchooser__base__t_1a2135b3a87a6c00f806691e7e5d04ac4f" prot="public" virt="pure-virtual"><scope>chooser_base_t</scope><name>get_count</name></member>
      <member refid="structchooser__base__t_1abf98aba4f31b3bce346afb854f9251a7" prot="public" virt="virtual"><scope>chooser_base_t</scope><name>get_ea</name></member>
      <member refid="structchooser__base__t_1aad523011a45e691c70f59ff188d28253" prot="public" virt="virtual"><scope>chooser_base_t</scope><name>get_obj_id</name></member>
      <member refid="structchooser__base__t_1a27ba81a0cb312512772e02b62da3ea7f" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>get_quick_filter_initial_mode</name></member>
      <member refid="structchooser__base__t_1afca1307f6019e67b60f0eee8eeda4efe" prot="public" virt="pure-virtual"><scope>chooser_base_t</scope><name>get_row</name></member>
      <member refid="structchooser__base__t_1af7e08caf3a73e8c49ef25936f93fa551" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>header</name></member>
      <member refid="structchooser__base__t_1abdfd5d8dd5fc7b94918412405f64054a" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>height</name></member>
      <member refid="structchooser__base__t_1a0506d5980c2bdd80d6e1dcaf3d8e29f2" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>icon</name></member>
      <member refid="structchooser__base__t_1a98358c499915613dd870c3a0bff84754" prot="public" virt="virtual"><scope>chooser_base_t</scope><name>init</name></member>
      <member refid="structchooser__base__t_1a1ba303ca874b35020641d02bf04e5196" prot="protected" virt="non-virtual"><scope>chooser_base_t</scope><name>init_popup_names</name></member>
      <member refid="structchooser__base__t_1ad5b997b4e726b8015046344ab0b966ee" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>is_force_default</name></member>
      <member refid="structchooser__base__t_1a88df9ad8077acff475ae03a79868579f" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>is_modal</name></member>
      <member refid="structchooser__base__t_1a1abb273598513c78926a8bfca3b48f07" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>is_multi</name></member>
      <member refid="structchooser__base__t_1aa56b8ee9be00ddddf2c8b0050e7ab522" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>is_noidb</name></member>
      <member refid="structchooser__base__t_1a7c9373c6b7343dce6d729d1629c2883e" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>is_quick_filter_visible_initially</name></member>
      <member refid="structchooser__base__t_1a57f8b134145fe413122f32098f71aa84" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>is_same</name></member>
      <member refid="structchooser__base__t_1a285f6b2a088739ce3af9818714d558ff" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>is_status_bar_hidden</name></member>
      <member refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365add3620f9706987cdd059fb99da30f6a1" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>NO_ATTR</name></member>
      <member refid="group__chooser__index_1gga6e8acc5ead68d124f9e463f7a9813365a100e0d1651b8811c7df60f02d991ef6e" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>NO_SELECTION</name></member>
      <member refid="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27fa36a1ee8792e27b346229adf76249f838" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>NOTHING_CHANGED</name></member>
      <member refid="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088a7998d5d429e37e909baaad2949b0af61" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>NSTDPOPUPS</name></member>
      <member refid="structchooser__base__t_1a0cf9f4b67138017a54b510b3e6f9f151" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>popup_allowed</name></member>
      <member refid="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088ae813ea73b0097d2501d117b54458813a" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>POPUP_DEL</name></member>
      <member refid="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088a9f2da0eac3bbffc42f2ea3a2c953ab9c" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>POPUP_EDIT</name></member>
      <member refid="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088a5daf7044c263441f024aa5d4f6eb7d56" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>POPUP_INS</name></member>
      <member refid="structchooser__base__t_1af3d2a7add9d67da4a192b940fdc285aa" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>popup_names</name></member>
      <member refid="structchooser__base__t_1a0409fb6a1724723794f8658e467cf088a787ef96b28d43c6ca16cf679b71db6eb" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>POPUP_REFRESH</name></member>
      <member refid="structchooser__base__t_1a753ae8c73ea5a644ee31571ab5c0e27fa4ef939d83a9e2664b68a18c8e3995308" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>SELECTION_CHANGED</name></member>
      <member refid="structchooser__base__t_1a1e51084dfda711975bf40ddf1e16599c" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>set_ask_item_attrs</name></member>
      <member refid="structchooser__base__t_1a4436f16519de9168fd7e8c036176cc27" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>should_restore_geometry</name></member>
      <member refid="structchooser__base__t_1afed0e6eb1d254ec47a4e8d93a38cb339" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>title</name></member>
      <member refid="structchooser__base__t_1a904eb7c089bfc71f4245a3da1c1ad2a6" prot="protected" virt="non-virtual"><scope>chooser_base_t</scope><name>version</name></member>
      <member refid="structchooser__base__t_1a151d40817511fdc1f71992e142b28cb4" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>width</name></member>
      <member refid="structchooser__base__t_1afd3111894f68258b4fba46c77a96ee45" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>widths</name></member>
      <member refid="structchooser__base__t_1af87d5449fca32811240d52e92bde651e" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>x0</name></member>
      <member refid="structchooser__base__t_1a1f7ed151967b25ea6c668e736ae67146" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>x1</name></member>
      <member refid="structchooser__base__t_1a7203916efc122ed7e1389c4720a66da4" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>y0</name></member>
      <member refid="structchooser__base__t_1a63397b908a324623312859c546ff1881" prot="public" virt="non-virtual"><scope>chooser_base_t</scope><name>y1</name></member>
      <member refid="structchooser__base__t_1aac880eaf15320696fb092242c6967c2d" prot="public" virt="virtual"><scope>chooser_base_t</scope><name>~chooser_base_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
