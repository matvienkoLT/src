<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="config_8hpp" kind="file" language="C++">
    <compoundname>config.hpp</compoundname>
    <includedby refid="idp_8hpp" local="no">obj/x64_linux_gcc_32_opt/idasdk/idp.hpp</includedby>
    <invincdepgraph>
      <node id="158">
        <label>obj/x64_linux_gcc_32_opt/idasdk/intel.hpp</label>
        <link refid="intel_8hpp_source"/>
      </node>
      <node id="161">
        <label>obj/x64_linux_gcc_32_opt/idasdk/ida_highlighter.hpp</label>
        <link refid="ida__highlighter_8hpp_source"/>
      </node>
      <node id="152">
        <label>obj/x64_linux_gcc_32_opt/idasdk/idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp</label>
        <link refid="dbg_8hpp"/>
      </node>
      <node id="159">
        <label>obj/x64_linux_gcc_32_opt/idasdk/graph.hpp</label>
        <link refid="graph_8hpp"/>
      </node>
      <node id="162">
        <label>obj/x64_linux_gcc_32_opt/idasdk/tstfeat.hpp</label>
        <link refid="tstfeat_8hpp_source"/>
      </node>
      <node id="160">
        <label>obj/x64_linux_gcc_32_opt/idasdk/expr.hpp</label>
        <link refid="expr_8hpp"/>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>obj/x64_linux_gcc_32_opt/idasdk/frame.hpp</label>
        <link refid="frame_8hpp"/>
      </node>
      <node id="151">
        <label>obj/x64_linux_gcc_32_opt/idasdk/config.hpp</label>
        <link refid="config_8hpp"/>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp</label>
        <link refid="typeinf_8hpp"/>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</label>
        <link refid="hexrays_8hpp_source"/>
      </node>
      <node id="156">
        <label>obj/x64_linux_gcc_32_opt/idasdk/lumina.hpp</label>
        <link refid="lumina_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structcfgopt__t" prot="public">cfgopt_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___i_d_p_o_p_t___t_1gac216775cfbb5b80faebf141c232ca6e1" prot="public" static="no">
        <name>IDPOPT_STR</name>
        <initializer>1</initializer>
        <briefdescription>
<para>string constant (char *) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="15" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_p_o_p_t___t_1gad2eac856a1f31681b53742e38c474650" prot="public" static="no">
        <name>IDPOPT_NUM</name>
        <initializer>2</initializer>
        <briefdescription>
<para>number (uval_t *) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="16" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_p_o_p_t___t_1ga1d94a7036c65a4c0e4edc674001d4756" prot="public" static="no">
        <name>IDPOPT_BIT</name>
        <initializer>3</initializer>
        <briefdescription>
<para>bit, yes/no (int *) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="17" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_p_o_p_t___t_1gac4e51c4b6b1dd1f9ac0d3b40c6331bf0" prot="public" static="no">
        <name>IDPOPT_I64</name>
        <initializer>5</initializer>
        <briefdescription>
<para>64bit number (int64 *) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="18" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_p_o_p_t___t_1ga96f9878cef63c27341e53d1be3711452" prot="public" static="no">
        <name>IDPOPT_CST</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>lexer (lexer_t*) Custom type, starting with a &apos;{&apos; Values of this type should be handled by ::set_options_t callbacks. E.g.,: <programlisting><codeline><highlight class="normal">&lt;<sp/>ERROR_STRINGS<sp/>=</highlight></codeline>
<codeline><highlight class="normal">&lt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal">&lt;<sp/><sp/><sp/>{0,<sp/>&quot;Unknown<sp/>error&quot;},</highlight></codeline>
<codeline><highlight class="normal">&lt;<sp/><sp/><sp/>{1,<sp/>&quot;Missing<sp/>filename&quot;},</highlight></codeline>
<codeline><highlight class="normal">&lt;<sp/><sp/><sp/>{5,<sp/>&quot;Out-of-memory&quot;}</highlight></codeline>
<codeline><highlight class="normal">&lt;<sp/>}</highlight></codeline>
<codeline><highlight class="normal">&lt;</highlight></codeline>
</programlisting> For values of this type, the data that will be passed as the callback&apos;s &apos;value&apos; parameter is the lexer instance that is being used to parse the configuration file. You can use parse_json() (see <ref refid="parsejson_8hpp" kindref="compound">parsejson.hpp</ref>) to parse JSON-format data NB: the &apos;{&apos; is already consumed by the parser, so you need to push it again if it&apos;s a part of the JSON object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="19" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_p_o_p_t___r_e_t_1ga73f38984b81652d55b21eec967d9f492" prot="public" static="no">
        <name>IDPOPT_OK</name>
        <initializer>NULL</initializer>
        <briefdescription>
<para>ok </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="44" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_p_o_p_t___r_e_t_1ga3cf6776198b983b0b4536fc3c3b0423c" prot="public" static="no">
        <name>IDPOPT_BADKEY</name>
        <initializer>((char*)1)</initializer>
        <briefdescription>
<para>illegal keyword </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="45" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_p_o_p_t___r_e_t_1ga89d2f5b24d6d3e167eee68ba7000c41a" prot="public" static="no">
        <name>IDPOPT_BADTYPE</name>
        <initializer>((char*)2)</initializer>
        <briefdescription>
<para>illegal type of value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="46" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_p_o_p_t___r_e_t_1ga218fa0fe94b7efde34bc41cc7aaab6f9" prot="public" static="no">
        <name>IDPOPT_BADVALUE</name>
        <initializer>((char*)3)</initializer>
        <briefdescription>
<para>illegal value (bad range, for example) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="47" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a_o_p_t___p_r_i_o_1ga9e039964f5960348b80831b491f78773" prot="public" static="no">
        <name>IDPOPT_PRI_DEFAULT</name>
        <initializer>1</initializer>
        <briefdescription>
<para>default priority - taken from config file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="71" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_d_a_o_p_t___p_r_i_o_1gaec10028de82f14b590163205a7e283a6" prot="public" static="no">
        <name>IDPOPT_PRI_HIGH</name>
        <initializer>2</initializer>
        <briefdescription>
<para>high priority - received from UI or script function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="72" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1a3843c3d17be36c8ea2444895296358af" prot="public" static="no">
        <name>IDPOPT_NUM_INT</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>used by <ref refid="structcfgopt__t" kindref="compound">cfgopt_t</ref>. You shouldn&apos;t have to deal with those directly. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="108" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1a8fd60e5df861ddc7e21009c808fdcb14" prot="public" static="no">
        <name>IDPOPT_NUM_CHAR</name>
        <initializer>(1 &lt;&lt; 24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="109" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1aefcf28db660a8db1eb534c58a8a114e5" prot="public" static="no">
        <name>IDPOPT_NUM_SHORT</name>
        <initializer>(2 &lt;&lt; 24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="110" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1abaf4448f736cc5ce354edb71e822b47d" prot="public" static="no">
        <name>IDPOPT_NUM_RANGE</name>
        <initializer>(1 &lt;&lt; 26)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="111" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1aae94ca77ba820c3657e35f5b26aadc04" prot="public" static="no">
        <name>IDPOPT_NUM_UNS</name>
        <initializer>(1 &lt;&lt; 27)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="112" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1a55f3b126439429fd47b6689ab7bd7870" prot="public" static="no">
        <name>IDPOPT_BIT_UINT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="114" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1a2435d32fa308bd49f911a44282209c02" prot="public" static="no">
        <name>IDPOPT_BIT_UCHAR</name>
        <initializer>(1 &lt;&lt; 24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="115" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1aaf179fc1f77504c5976116839c3ba883" prot="public" static="no">
        <name>IDPOPT_BIT_USHORT</name>
        <initializer>(2 &lt;&lt; 24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="116" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1aa7848f673e9705fdd2c7dcd7defd45a9" prot="public" static="no">
        <name>IDPOPT_BIT_BOOL</name>
        <initializer>(3 &lt;&lt; 24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="117" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1a4276edf14ec6a41f4f8e8838d8ddcff3" prot="public" static="no">
        <name>IDPOPT_BIT_INVRES</name>
        <initializer>(1 &lt;&lt; 26)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="118" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1ad1425b2f5549ca9968d58a61f39acc27" prot="public" static="no">
        <name>IDPOPT_STR_QSTRING</name>
        <initializer>(1 &lt;&lt; 24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="120" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1a86db473e1111d174e9a7344452c641c8" prot="public" static="no">
        <name>IDPOPT_STR_LONG</name>
        <initializer>(1 &lt;&lt; 25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="121" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1ad1587b74c0dffb1292e6bd0fcf1a38b1" prot="public" static="no">
        <name>IDPOPT_I64_RANGES</name>
        <initializer>(1 &lt;&lt; 24)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="123" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="config_8hpp_1a69746272a7cd717aae7480e20d10b22c" prot="public" static="no">
        <name>IDPOPT_I64_UNS</name>
        <initializer>(1 &lt;&lt; 25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="124" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="config_8hpp_1ae0ba0c758e8a257327f5d9255d8a00f5" prot="public" static="no">
        <type>const char *idaapi</type>
        <definition>typedef const char* idaapi set_options_t(const char *keyword, int value_type, const void *value)</definition>
        <argsstring>(const char *keyword, int value_type, const void *value)</argsstring>
        <name>set_options_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback - called when a config directive is processed in IDA. Also see read_config_file() and processor_t::set_idp_options <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyword</parametername>
</parameternamelist>
<parameterdescription>
<para>keyword encountered in IDA.CFG/user config file. if NULL, then an interactive dialog form should be displayed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value_type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of value of the keyword - one of <ref refid="group___i_d_p_o_p_t___t" kindref="compound">Option value types</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to value </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>one of <ref refid="group___i_d_p_o_p_t___r_e_t" kindref="compound">Option result codes</ref>, otherwise a pointer to an error message </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="59" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="config_8hpp_1afec3367bf6873a4df2c3c4df0385c833" prot="public" static="no">
        <type>const char *idaapi</type>
        <definition>typedef const char* idaapi cfgopt_handler_t(lexer_t *lx, const token_t &amp;keyword, const token_t &amp;value)</definition>
        <argsstring>(lexer_t *lx, const token_t &amp;keyword, const token_t &amp;value)</argsstring>
        <name>cfgopt_handler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="101" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="config_8hpp_1aac183831da6c994a01e7e7e0b825e3fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export parse_config_value</definition>
        <argsstring>(idc_value_t *out, lexer_t *lx, const token_t &amp;value)</argsstring>
        <name>parse_config_value</name>
        <param>
          <type><ref refid="classidc__value__t" kindref="compound">idc_value_t</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>lexer_t *</type>
          <declname>lx</declname>
        </param>
        <param>
          <type>const <ref refid="structtoken__t" kindref="compound">token_t</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="config_8hpp_1aae6a70c22ea6773b8186d0fb47b00791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman const char *ida_export</type>
        <definition>idaman const char* ida_export cfgopt_t__apply</definition>
        <argsstring>(const cfgopt_t *_this, int vtype, const void *vdata)</argsstring>
        <name>cfgopt_t__apply</name>
        <param>
          <type>const <ref refid="structcfgopt__t" kindref="compound">cfgopt_t</ref> *</type>
          <declname>_this</declname>
        </param>
        <param>
          <type>int</type>
          <declname>vtype</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>vdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="config_8hpp_1a82173a3fd161ab7566ef654f752d95fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export read_config</definition>
        <argsstring>(const char *input, bool is_file, const cfgopt_t opts[], size_t nopts, cfgopt_handler_t *defhdlr=NULL, const char *const *defines=NULL, size_t ndefines=0)</argsstring>
        <name>read_config</name>
        <param>
          <type>const char *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_file</declname>
        </param>
        <param>
          <type>const <ref refid="structcfgopt__t" kindref="compound">cfgopt_t</ref></type>
          <declname>opts</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>nopts</declname>
        </param>
        <param>
          <type>cfgopt_handler_t *</type>
          <declname>defhdlr</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>defines</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>ndefines</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the input, and apply options.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>input file name, or string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_file</parametername>
</parameternamelist>
<parameterdescription>
<para>is input a string, or a file name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opts</parametername>
</parameternamelist>
<parameterdescription>
<para>options destcriptions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nopts</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of entries present in the &apos;opts&apos; array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defhdlr</parametername>
</parameternamelist>
<parameterdescription>
<para>a handler to be called, if a directive couldn&apos;t be found in &apos;opts&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defines</parametername>
</parameternamelist>
<parameterdescription>
<para>a list of preprocessor identifiers to define (so it is possible to use #ifdef checks in the file.) NB: the actual identifier defined by the parser will be surrounded with double underscores (e.g., passing &apos;FOO&apos; will result in &apos;<bold>FOO</bold>&apos; being defined) Additionally, the parser will also define a similar macro with the current processor name (e.g., <bold>ARM</bold>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ndefines</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of defines in the list </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if parsing finished without errors, false if there was a syntax error, callback returned an error, or no file was found at all. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="config_8hpp_1ad9b54b927f0f84a82cfc2389853f6319" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool read_config_file</definition>
        <argsstring>(const char *filename, const cfgopt_t opts[], size_t nopts, cfgopt_handler_t *defhdlr=NULL, const char *const *defines=NULL, size_t ndefines=0)</argsstring>
        <name>read_config_file</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const <ref refid="structcfgopt__t" kindref="compound">cfgopt_t</ref></type>
          <declname>opts</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>nopts</declname>
        </param>
        <param>
          <type>cfgopt_handler_t *</type>
          <declname>defhdlr</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>defines</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>ndefines</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search for all IDA system files with the given name. This function will search, in that order, for the following files:<orderedlist>
<listitem><para>IDADIR%/cfg/&lt;file&gt;</para></listitem><listitem><para>for each directory &apos;ONEDIR&apos; in IDAUSR%: ONEDIR%/cfg/&lt;file&gt;</para></listitem></orderedlist>
</para><para>For each directive in each of those files, the same processing as that of read_config will be performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="267" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="267" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="config_8hpp_1a51e4e04e43ebf840e64480cde7eafe75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool read_config_string</definition>
        <argsstring>(const char *string, const cfgopt_t opts[], size_t nopts, cfgopt_handler_t *defhdlr=NULL, const char *const *defines=NULL, size_t ndefines=0)</argsstring>
        <name>read_config_string</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const <ref refid="structcfgopt__t" kindref="compound">cfgopt_t</ref></type>
          <declname>opts</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>nopts</declname>
        </param>
        <param>
          <type>cfgopt_handler_t *</type>
          <declname>defhdlr</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>defines</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>ndefines</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For each directive in &apos;string&apos;, the same processing as that of read_config will be performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="281" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="281" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="config_8hpp_1a33683e929c9e830669eaf04e5aa22fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman const char *ida_export</type>
        <definition>idaman const char* ida_export cfg_get_cc_parm</definition>
        <argsstring>(comp_t compid, const char *name)</argsstring>
        <name>cfg_get_cc_parm</name>
        <param>
          <type><ref refid="ida_8hpp_1ae36605f575cb0bd001d6b89877734fa2" kindref="member">comp_t</ref></type>
          <declname>compid</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get one of config parameters defined by CC_PARMS in ida.cfg. All parameters for all compilers are stored in local map during last read of ida.cfg - this function just returns previously stored parameter value for given compiler (NULL if no such parameter) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="config_8hpp_1a3ecbb1d7cf6e4e01ecbd219ceef6d9dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* cfg_get_cc_header_path</definition>
        <argsstring>(comp_t compid)</argsstring>
        <name>cfg_get_cc_header_path</name>
        <param>
          <type><ref refid="ida_8hpp_1ae36605f575cb0bd001d6b89877734fa2" kindref="member">comp_t</ref></type>
          <declname>compid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get header path config parameter from ida.cfg. Also see cfg_get_cc_parm() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="303" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="303" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="config_8hpp_1a06f4352515d6ce5d6e2795249dcb04c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* cfg_get_cc_predefined_macros</definition>
        <argsstring>(comp_t compid)</argsstring>
        <name>cfg_get_cc_predefined_macros</name>
        <param>
          <type><ref refid="ida_8hpp_1ae36605f575cb0bd001d6b89877734fa2" kindref="member">comp_t</ref></type>
          <declname>compid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get predefined macros config parameter from ida.cfg. Also see cfg_get_cc_parm() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" line="312" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/config.hpp" bodystart="312" bodyend="315"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/config.hpp"/>
  </compounddef>
</doxygen>
