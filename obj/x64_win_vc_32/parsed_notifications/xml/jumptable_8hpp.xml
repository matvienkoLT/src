<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="jumptable_8hpp" kind="file" language="C++">
    <compoundname>jumptable.hpp</compoundname>
    <includes refid="pro_8h" local="no">pro.h</includes>
    <includes refid="ua_8hpp" local="no">ua.hpp</includes>
    <includes refid="nalt_8hpp" local="no">nalt.hpp</includes>
    <includes local="no">map</includes>
    <incdepgraph>
      <node id="808">
        <label>sys/stat.h</label>
      </node>
      <node id="792">
        <label>stdarg.h</label>
      </node>
      <node id="795">
        <label>assert.h</label>
      </node>
      <node id="813">
        <label>ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="814" relation="include">
        </childnode>
      </node>
      <node id="791">
        <label>stdlib.h</label>
      </node>
      <node id="810">
        <label>ua.hpp</label>
        <link refid="ua_8hpp"/>
        <childnode refid="811" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="816" relation="include">
        </childnode>
      </node>
      <node id="803">
        <label>io.h</label>
      </node>
      <node id="806">
        <label>fcntl.h</label>
      </node>
      <node id="809">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="801">
        <label>malloc.h</label>
      </node>
      <node id="800">
        <label>string</label>
      </node>
      <node id="805">
        <label>map</label>
      </node>
      <node id="804">
        <label>direct.h</label>
      </node>
      <node id="793">
        <label>stddef.h</label>
      </node>
      <node id="789">
        <label>obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp</label>
        <link refid="jumptable_8hpp"/>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="810" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="805" relation="include">
        </childnode>
      </node>
      <node id="817">
        <label>nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="813" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
      </node>
      <node id="812">
        <label>lines.hpp</label>
        <link refid="lines_8hpp"/>
        <childnode refid="813" relation="include">
        </childnode>
      </node>
      <node id="796">
        <label>limits.h</label>
      </node>
      <node id="807">
        <label>sys/types.h</label>
      </node>
      <node id="802">
        <label>string.h</label>
      </node>
      <node id="799">
        <label>new</label>
      </node>
      <node id="815">
        <label>xref.hpp</label>
        <link refid="xref_8hpp"/>
      </node>
      <node id="790">
        <label>pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="791" relation="include">
        </childnode>
        <childnode refid="792" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
        <childnode refid="794" relation="include">
        </childnode>
        <childnode refid="795" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
        <childnode refid="797" relation="include">
        </childnode>
        <childnode refid="798" relation="include">
        </childnode>
        <childnode refid="799" relation="include">
        </childnode>
        <childnode refid="800" relation="include">
        </childnode>
        <childnode refid="801" relation="include">
        </childnode>
        <childnode refid="802" relation="include">
        </childnode>
        <childnode refid="803" relation="include">
        </childnode>
        <childnode refid="804" relation="include">
        </childnode>
        <childnode refid="805" relation="include">
        </childnode>
        <childnode refid="806" relation="include">
        </childnode>
        <childnode refid="807" relation="include">
        </childnode>
        <childnode refid="808" relation="include">
        </childnode>
        <childnode refid="809" relation="include">
        </childnode>
      </node>
      <node id="798">
        <label>time.h</label>
      </node>
      <node id="816">
        <label>bytes.hpp</label>
        <link refid="bytes_8hpp"/>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="814" relation="include">
        </childnode>
      </node>
      <node id="797">
        <label>ctype.h</label>
      </node>
      <node id="814">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
      </node>
      <node id="818">
        <label>netnode.hpp</label>
        <link refid="netnode_8hpp"/>
        <childnode refid="814" relation="include">
        </childnode>
      </node>
      <node id="811">
        <label>kernwin.hpp</label>
        <link refid="kernwin_8hpp"/>
      </node>
      <node id="794">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classjump__pattern__t" prot="public">jump_pattern_t</innerclass>
    <innerclass refid="structbackward__flow__iterator__t" prot="public">backward_flow_iterator_t</innerclass>
    <innerclass refid="structbackward__flow__iterator__t_1_1state__t" prot="protected">backward_flow_iterator_t::state_t</innerclass>
    <innerclass refid="structno__regs__t" prot="public">no_regs_t</innerclass>
    <innerclass refid="structsimple__bfi__t" prot="public">simple_bfi_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="jumptable_8hpp_1a7412d66057db56f5b31cccd3cb3d0beb" prot="public" static="no">
        <name>DECLARE_JUMP_PATTERN_HELPERS</name>
        <param><defname>decl</defname></param>
        <initializer>decl void ida_export check_spoiled_jpt(const <ref refid="classjump__pattern__t" kindref="compound">jump_pattern_t</ref> *_this, <ref refid="classqvector" kindref="compound">tracked_regs_t</ref> *_regs); \
decl bool ida_export match_jpt(<ref refid="classjump__pattern__t" kindref="compound">jump_pattern_t</ref> *_this);\
decl bool ida_export same_value_jpt(<ref refid="classjump__pattern__t" kindref="compound">jump_pattern_t</ref> *_this, const <ref refid="classop__t" kindref="compound">op_t</ref> &amp;op, int r_i);\
decl void ida_export combine_regs_jpt(<ref refid="classjump__pattern__t" kindref="compound">jump_pattern_t</ref> *_this, <ref refid="classqvector" kindref="compound">tracked_regs_t</ref> *dst, const <ref refid="classqvector" kindref="compound">tracked_regs_t</ref> &amp;src, ea_t ea);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="99" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jumptable_8hpp_1a1ee00166f23c29b856652d4be86c88b6" prot="public" static="no">
        <name>JPT_OPT</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="161" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="jumptable_8hpp_1ad6e769cd19b9edf0962fe25f6f06467e" prot="public" static="no">
        <name>JPT_NEAR</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="162" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="jumptable_8hpp_1abc5c98fcc1211af2b80116dd6e0a035d" prot="public" static="no">
        <name>@11</name>
        <enumvalue id="jumptable_8hpp_1abc5c98fcc1211af2b80116dd6e0a035da414189309e2311035d84354a6c5b211c" prot="public">
          <name>JT_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jumptable_8hpp_1abc5c98fcc1211af2b80116dd6e0a035da04c6273d7f88fc1c155b3a23a6a83af7" prot="public">
          <name>JT_SWITCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="jumptable_8hpp_1abc5c98fcc1211af2b80116dd6e0a035da706b78badd666172b4aaacd521b11c8d" prot="public">
          <name>JT_CALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="323" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" bodystart="323" bodyend="323"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="jumptable_8hpp_1ab7f64e62bbd69a3fff443a01960bb3c3" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classop__t" kindref="compound">op_t</ref> &gt;</type>
        <definition>typedef qvector&lt;op_t&gt; tracked_regs_t</definition>
        <argsstring></argsstring>
        <name>tracked_regs_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="98" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jumptable_8hpp_1a4740f2d1369631cff666f9c1ae85fe7b" prot="public" static="no">
        <type>int</type>
        <definition>typedef int is_pattern_t(switch_info_t *si, const insn_t &amp;insn)</definition>
        <argsstring>(switch_info_t *si, const insn_t &amp;insn)</argsstring>
        <name>is_pattern_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="326" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="jumptable_8hpp_1a4f415022887992d95b64e4fb9468db2f" prot="public" static="no">
        <type>int</type>
        <definition>typedef int table_checker_t(switch_info_t *si, ea_t jump_ea, int is_pattern_res)</definition>
        <argsstring>(switch_info_t *si, ea_t jump_ea, int is_pattern_res)</argsstring>
        <name>table_checker_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="329" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="jumptable_8hpp_1a20ca274f906ab5c9bc0ed5bb8b38adb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman int ida_export</type>
        <definition>idaman int ida_export check_flat_jump_table</definition>
        <argsstring>(switch_info_t *si, ea_t jump_ea, int is_pattern_res=JT_SWITCH)</argsstring>
        <name>check_flat_jump_table</name>
        <param>
          <type><ref refid="structswitch__info__t" kindref="compound">switch_info_t</ref> *</type>
          <declname>si</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>jump_ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>is_pattern_res</declname>
          <defval>JT_SWITCH</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jumptable_8hpp_1a520c53673212c811adce3a9a2d30c5ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export check_for_table_jump</definition>
        <argsstring>(switch_info_t *si, const insn_t &amp;insn, is_pattern_t *const patterns[], size_t qty, table_checker_t *check_table=NULL, const char *name=NULL)</argsstring>
        <name>check_for_table_jump</name>
        <param>
          <type><ref refid="structswitch__info__t" kindref="compound">switch_info_t</ref> *</type>
          <declname>si</declname>
        </param>
        <param>
          <type>const <ref refid="classinsn__t" kindref="compound">insn_t</ref> &amp;</type>
          <declname>insn</declname>
        </param>
        <param>
          <type>is_pattern_t *const</type>
          <declname>patterns</declname>
          <array>[]</array>
        </param>
        <param>
          <type>size_t</type>
          <declname>qty</declname>
        </param>
        <param>
          <type>table_checker_t *</type>
          <declname>check_table</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jumptable_8hpp_1ae110de6addb29d0d6db2051efb2c0c18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman void ida_export</type>
        <definition>idaman void ida_export trim_jtable</definition>
        <argsstring>(switch_info_t *si, ea_t jump_ea, bool ignore_refs=false)</argsstring>
        <name>trim_jtable</name>
        <param>
          <type><ref refid="structswitch__info__t" kindref="compound">switch_info_t</ref> *</type>
          <declname>si</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>jump_ea</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_refs</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jumptable_8hpp_1aecc786444ea117349ba1061b217dd794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export find_jtable_size</definition>
        <argsstring>(switch_info_t *si)</argsstring>
        <name>find_jtable_size</name>
        <param>
          <type><ref refid="structswitch__info__t" kindref="compound">switch_info_t</ref> *</type>
          <declname>si</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="jumptable_8hpp_1a4f393b7820c97a82c2ab5f2bf8d10094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman ea_t ida_export</type>
        <definition>idaman ea_t ida_export find_defjump_from_table</definition>
        <argsstring>(ea_t jump_ea, const switch_info_t &amp;si)</argsstring>
        <name>find_defjump_from_table</name>
        <param>
          <type>ea_t</type>
          <declname>jump_ea</declname>
        </param>
        <param>
          <type>const <ref refid="structswitch__info__t" kindref="compound">switch_info_t</ref> &amp;</type>
          <declname>si</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp" line="378" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/jumptable.hpp"/>
  </compounddef>
</doxygen>
