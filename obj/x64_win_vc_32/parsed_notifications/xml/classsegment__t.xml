<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classsegment__t" kind="class" language="C++" prot="public">
    <compoundname>segment_t</compoundname>
    <basecompoundref refid="structrange__t" prot="public" virt="non-virtual">range_t</basecompoundref>
    <includes refid="segment_8hpp" local="no">segment.hpp</includes>
      <sectiondef kind="user-defined">
      <header>Segment flag: ORG directive</header>
      <description><para>See <ref refid="group___s_f_l___1ga76758a64e75c56b04c528c84d3b70efe" kindref="member">SFL_COMORG</ref> </para></description>
      <memberdef kind="function" id="classsegment__t_1a92f578659c0469ffce2e8902024c571f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::comorg</definition>
        <argsstring>(void) const</argsstring>
        <name>comorg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="162" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1ab023a56b3700a15fb3f1297fec982c6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void segment_t::set_comorg</definition>
        <argsstring>(void)</argsstring>
        <name>set_comorg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="163" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a87ccf4e382c2b36c128c40bb6cd4e840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void segment_t::clr_comorg</definition>
        <argsstring>(void)</argsstring>
        <name>clr_comorg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="164" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="164" bodyend="164"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Segment flag: orgbase</header>
      <description><para>See <ref refid="group___s_f_l___1ga33bd87d84e584f97b279e193f0ae958a" kindref="member">SFL_OBOK</ref> </para></description>
      <memberdef kind="function" id="classsegment__t_1ae0e71a4a758c547a0fe14c7b07984331" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::ob_ok</definition>
        <argsstring>(void) const</argsstring>
        <name>ob_ok</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="174" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a7f1362ff2ca8f07f9834cd5b1acec9d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void segment_t::set_ob_ok</definition>
        <argsstring>(void)</argsstring>
        <name>set_ob_ok</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="175" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a566a9e02f5fb0afdbe89f2276cb5f5ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void segment_t::clr_ob_ok</definition>
        <argsstring>(void)</argsstring>
        <name>clr_ob_ok</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="176" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="176" bodyend="176"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Segment flag: hidden</header>
      <description><para>See <ref refid="group___s_f_l___1gac31257ddd90ad0acab343cebc28c2233" kindref="member">SFL_HIDDEN</ref> </para></description>
      <memberdef kind="function" id="classsegment__t_1a376b650cd0f394d787e3f2adb85ce4e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::is_visible_segm</definition>
        <argsstring>(void) const</argsstring>
        <name>is_visible_segm</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="186" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1aab47b32ffad0b8903b223d21fe92b6da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void segment_t::set_visible_segm</definition>
        <argsstring>(bool visible)</argsstring>
        <name>set_visible_segm</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="187" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Segment flag: debugger segment</header>
      <description><para>See <ref refid="group___s_f_l___1ga663d197c2dead5d7c02d36afa81b6738" kindref="member">SFL_DEBUG</ref> </para></description>
      <memberdef kind="function" id="classsegment__t_1af84f190597377e075267b4a87fb30796" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::is_debugger_segm</definition>
        <argsstring>(void) const</argsstring>
        <name>is_debugger_segm</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="198" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a4950bfa9eb8ac8e5ea2f6d8f7fa5273f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void segment_t::set_debugger_segm</definition>
        <argsstring>(bool debseg)</argsstring>
        <name>set_debugger_segm</name>
        <param>
          <type>bool</type>
          <declname>debseg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="199" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="199" bodyend="199"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Segment flag: loader segment</header>
      <description><para>See <ref refid="group___s_f_l___1gac89841edaa1830e41e109c416948c96d" kindref="member">SFL_LOADER</ref> </para></description>
      <memberdef kind="function" id="classsegment__t_1abc9795f915d93405e03a49252edd0e14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::is_loader_segm</definition>
        <argsstring>(void) const</argsstring>
        <name>is_loader_segm</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="209" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="209" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a37858ca069c44d4cf8cb580e7ac0aca8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void segment_t::set_loader_segm</definition>
        <argsstring>(bool ldrseg)</argsstring>
        <name>set_loader_segm</name>
        <param>
          <type>bool</type>
          <declname>ldrseg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="210" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="210" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Segment flag: hide segment type</header>
      <description><para>See <ref refid="group___s_f_l___1ga5897753448a6c769538ed3890b9b8129" kindref="member">SFL_HIDETYPE</ref> </para></description>
      <memberdef kind="function" id="classsegment__t_1a4d9fc371810ba78d32e26890ec7dc19e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::is_hidden_segtype</definition>
        <argsstring>(void) const</argsstring>
        <name>is_hidden_segtype</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="220" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1ae4f40ee5a175a56f0ca70ca17be5f7d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void segment_t::set_hidden_segtype</definition>
        <argsstring>(bool hide)</argsstring>
        <name>set_hidden_segtype</name>
        <param>
          <type>bool</type>
          <declname>hide</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="221" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="221" bodyend="221"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Segment flag: header segment</header>
      <description><para>See <ref refid="group___s_f_l___1gac3bc49be172d44aad904ac8ab8aa8c3c" kindref="member">SFL_HEADER</ref> </para></description>
      <memberdef kind="function" id="classsegment__t_1a7180fe34280c6eec734c2eb9b5cc42bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::is_header_segm</definition>
        <argsstring>(void) const</argsstring>
        <name>is_header_segm</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="231" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a15fc7dca784dfd9ef5e20446c70206aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void segment_t::set_header_segm</definition>
        <argsstring>(bool on)</argsstring>
        <name>set_header_segm</name>
        <param>
          <type>bool</type>
          <declname>on</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="232" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="232" bodyend="232"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsegment__t_1a3492a6234483bd0f1c3cb6ef891f7886" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
        <definition>uval_t segment_t::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>use get/set_segm_name() functions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="74" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1abda643fbdcbd31a4cf56b5abbf51f9fc" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
        <definition>uval_t segment_t::sclass</definition>
        <argsstring></argsstring>
        <name>sclass</name>
        <briefdescription>
<para>use get/set_segm_class() functions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="75" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1a7aa06d5fa4e0fc79e645d082eabf2a6a" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
        <definition>uval_t segment_t::orgbase</definition>
        <argsstring></argsstring>
        <name>orgbase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>this field is IDP dependent. you may keep your information about the segment here </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="76" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1a0cdda6d61e64c64e32d8a2579d08eaa7" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>uchar segment_t::align</definition>
        <argsstring></argsstring>
        <name>align</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__sa__" kindref="compound">Segment alignment codes</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="80" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1a047c9cf9c9e87f5bf7a042bd0fa8d041" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>uchar segment_t::comb</definition>
        <argsstring></argsstring>
        <name>comb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__sc__" kindref="compound">Segment combination codes</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="105" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1a62be35886ad227b02c18313645535543" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>uchar segment_t::perm</definition>
        <argsstring></argsstring>
        <name>perm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group___s_e_g_p_e_r_m__" kindref="compound">Segment permissions</ref> (0 means no information) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="123" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1a362bba1def0b66610f0aac4b633414a8" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>uchar segment_t::bitness</definition>
        <argsstring></argsstring>
        <name>bitness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of bits in the segment addressing<itemizedlist>
<listitem><para>0: 16 bits</para></listitem><listitem><para>1: 32 bits</para></listitem><listitem><para>2: 64 bits </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="134" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1ae0a02d2eb01188198d74bd1c3690b6af" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>ushort segment_t::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
<para><ref refid="group___s_f_l__" kindref="compound">Segment flags</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="153" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1adc8b5c6d79255a7908691ba9ed474bed" prot="public" static="no" mutable="no">
        <type>sel_t</type>
        <definition>sel_t segment_t::sel</definition>
        <argsstring></argsstring>
        <name>sel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>segment selector - should be unique. You can&apos;t change this field after creating the segment. Exception: 16bit OMF files may have several segments with the same selector, but this is not good (no way to denote a segment exactly) so it should be fixed in the future. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="242" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1a1c9379541bb2b1ee1e082b5f2c78b8c1" prot="public" static="no" mutable="no">
        <type>sel_t</type>
        <definition>sel_t segment_t::defsr[SREG_NUM]</definition>
        <argsstring>[SREG_NUM]</argsstring>
        <name>defsr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default segment register values. first element of this array keeps information about value of {reg_first_sreg} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="249" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1a19f7e01c9078347a4dcfe37cb5239b3f" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>uchar segment_t::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>segment type (see <ref refid="group___s_e_g__" kindref="compound">Segment types</ref>). The kernel treats different segment types differently. Segments marked with &apos;*&apos; contain no instructions or data and are not declared as &apos;segments&apos; in the disassembly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="253" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsegment__t_1acba05fd1c8201ad7cb8119e5822ca98f" prot="public" static="no" mutable="no">
        <type><ref refid="pro_8h_1a3df5040891132e50157aee66affdf1de" kindref="member">bgcolor_t</ref></type>
        <definition>bgcolor_t segment_t::color</definition>
        <argsstring></argsstring>
        <name>color</name>
        <briefdescription>
<para>the segment color </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="279" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsegment__t_1ac7cd99c145c959f5fe056b4b85ad0a3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>segment_t::segment_t</definition>
        <argsstring>(void)</argsstring>
        <name>segment_t</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="72" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1afa0ed95c987b0c6f7b1e2b9e05abb967" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::use32</definition>
        <argsstring>(void) const</argsstring>
        <name>use32</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Use 32 bit segment addressing? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="141" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a9a9498a482f8239de925471780966538" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::use64</definition>
        <argsstring>(void) const</argsstring>
        <name>use64</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Use 64 bit segment addressing? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="143" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a1c7a57c78dbc743cf1d1174577fe472f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int segment_t::abits</definition>
        <argsstring>(void) const</argsstring>
        <name>abits</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get number of address bits. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="145" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1abdd7d4f83d44f3d5a4a19b8289ee3da2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int segment_t::abytes</definition>
        <argsstring>(void) const</argsstring>
        <name>abytes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get number of address bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="147" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a9b3c657bd9d334a9e0d96a8e0c253000" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::is_ephemeral_segm</definition>
        <argsstring>(void) const</argsstring>
        <name>is_ephemeral_segm</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ephemeral segments are not analyzed automatically (no flirt, no functions unless required, etc). Most likely these segments will be destroyed at the end of the debugging session unless the user changes their status. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="239" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="239" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classsegment__t_1a054c5ec95c97bda2ccc3b437ad21c967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool segment_t::update</definition>
        <argsstring>(void)</argsstring>
        <name>update</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update segment information. You must call this function after modification of segment characteristics. Note that not all fields of segment structure may be modified directly, there are special functions to modify some fields. <simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="285" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="1184" bodyend="1187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a program segment. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3267">
        <label>segment_t</label>
        <link refid="classsegment__t"/>
        <childnode refid="3268" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3268">
        <label>range_t</label>
        <link refid="structrange__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3269">
        <label>segment_t</label>
        <link refid="classsegment__t"/>
        <childnode refid="3270" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3270">
        <label>range_t</label>
        <link refid="structrange__t"/>
      </node>
    </collaborationgraph>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="69" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" bodystart="68" bodyend="288"/>
    <listofallmembers>
      <member refid="classsegment__t_1a1c7a57c78dbc743cf1d1174577fe472f" prot="public" virt="non-virtual"><scope>segment_t</scope><name>abits</name></member>
      <member refid="classsegment__t_1abdd7d4f83d44f3d5a4a19b8289ee3da2" prot="public" virt="non-virtual"><scope>segment_t</scope><name>abytes</name></member>
      <member refid="classsegment__t_1a0cdda6d61e64c64e32d8a2579d08eaa7" prot="public" virt="non-virtual"><scope>segment_t</scope><name>align</name></member>
      <member refid="classsegment__t_1a362bba1def0b66610f0aac4b633414a8" prot="public" virt="non-virtual"><scope>segment_t</scope><name>bitness</name></member>
      <member refid="structrange__t_1af69f6653edafca6c68050cc689f6a34a" prot="public" virt="non-virtual"><scope>segment_t</scope><name>clear</name></member>
      <member refid="classsegment__t_1a87ccf4e382c2b36c128c40bb6cd4e840" prot="public" virt="non-virtual"><scope>segment_t</scope><name>clr_comorg</name></member>
      <member refid="classsegment__t_1a566a9e02f5fb0afdbe89f2276cb5f5ae" prot="public" virt="non-virtual"><scope>segment_t</scope><name>clr_ob_ok</name></member>
      <member refid="classsegment__t_1acba05fd1c8201ad7cb8119e5822ca98f" prot="public" virt="non-virtual"><scope>segment_t</scope><name>color</name></member>
      <member refid="classsegment__t_1a047c9cf9c9e87f5bf7a042bd0fa8d041" prot="public" virt="non-virtual"><scope>segment_t</scope><name>comb</name></member>
      <member refid="classsegment__t_1a92f578659c0469ffce2e8902024c571f" prot="public" virt="non-virtual"><scope>segment_t</scope><name>comorg</name></member>
      <member refid="structrange__t_1a0830eb0562430bfc98c8ffd89c34c38b" prot="public" virt="non-virtual"><scope>segment_t</scope><name>compare</name></member>
      <member refid="structrange__t_1a639ccf2de4dc8a2272fdb2937427616b" prot="public" virt="non-virtual"><scope>segment_t</scope><name>contains</name></member>
      <member refid="structrange__t_1a188429d8f3c57001a60f2b0f4e5a9c88" prot="public" virt="non-virtual"><scope>segment_t</scope><name>contains</name></member>
      <member refid="classsegment__t_1a1c9379541bb2b1ee1e082b5f2c78b8c1" prot="public" virt="non-virtual"><scope>segment_t</scope><name>defsr</name></member>
      <member refid="structrange__t_1a07d4ba9971d45948b8efdad8bedb2773" prot="public" virt="non-virtual"><scope>segment_t</scope><name>empty</name></member>
      <member refid="structrange__t_1a31e62b2ecbc6b543945e3c2fcaa5ae3d" prot="public" virt="non-virtual"><scope>segment_t</scope><name>end_ea</name></member>
      <member refid="structrange__t_1a2fbe9a8accdb83fe775b546ae4aca51b" prot="public" virt="non-virtual"><scope>segment_t</scope><name>extend</name></member>
      <member refid="classsegment__t_1ae0a02d2eb01188198d74bd1c3690b6af" prot="public" virt="non-virtual"><scope>segment_t</scope><name>flags</name></member>
      <member refid="structrange__t_1ab4b7e2856112ddbf081134b3d71ed7a5" prot="public" virt="non-virtual"><scope>segment_t</scope><name>intersect</name></member>
      <member refid="classsegment__t_1af84f190597377e075267b4a87fb30796" prot="public" virt="non-virtual"><scope>segment_t</scope><name>is_debugger_segm</name></member>
      <member refid="classsegment__t_1a9b3c657bd9d334a9e0d96a8e0c253000" prot="public" virt="non-virtual"><scope>segment_t</scope><name>is_ephemeral_segm</name></member>
      <member refid="classsegment__t_1a7180fe34280c6eec734c2eb9b5cc42bb" prot="public" virt="non-virtual"><scope>segment_t</scope><name>is_header_segm</name></member>
      <member refid="classsegment__t_1a4d9fc371810ba78d32e26890ec7dc19e" prot="public" virt="non-virtual"><scope>segment_t</scope><name>is_hidden_segtype</name></member>
      <member refid="classsegment__t_1abc9795f915d93405e03a49252edd0e14" prot="public" virt="non-virtual"><scope>segment_t</scope><name>is_loader_segm</name></member>
      <member refid="classsegment__t_1a376b650cd0f394d787e3f2adb85ce4e5" prot="public" virt="non-virtual"><scope>segment_t</scope><name>is_visible_segm</name></member>
      <member refid="classsegment__t_1a3492a6234483bd0f1c3cb6ef891f7886" prot="public" virt="non-virtual"><scope>segment_t</scope><name>name</name></member>
      <member refid="classsegment__t_1ae0e71a4a758c547a0fe14c7b07984331" prot="public" virt="non-virtual"><scope>segment_t</scope><name>ob_ok</name></member>
      <member refid="structrange__t_1ac9f6c3adeb6af420bcaa2d2c624fd1f1" prot="public" virt="non-virtual"><scope>segment_t</scope><name>operator!=</name></member>
      <member refid="structrange__t_1a9041a2aa65b7181856d9e110b0b9fbef" prot="public" virt="non-virtual"><scope>segment_t</scope><name>operator&lt;</name></member>
      <member refid="structrange__t_1aa7f77c097f903e791eefca4a81e6b3d3" prot="public" virt="non-virtual"><scope>segment_t</scope><name>operator==</name></member>
      <member refid="structrange__t_1a5972a592e712ca2e09bfff8037561ef2" prot="public" virt="non-virtual"><scope>segment_t</scope><name>operator&gt;</name></member>
      <member refid="classsegment__t_1a7aa06d5fa4e0fc79e645d082eabf2a6a" prot="public" virt="non-virtual"><scope>segment_t</scope><name>orgbase</name></member>
      <member refid="structrange__t_1ac063ce03653e4456e408aea12ffa80e1" prot="public" virt="non-virtual"><scope>segment_t</scope><name>overlaps</name></member>
      <member refid="classsegment__t_1a62be35886ad227b02c18313645535543" prot="public" virt="non-virtual"><scope>segment_t</scope><name>perm</name></member>
      <member refid="structrange__t_1a5e4a06ff3c34f53d752985274c39a3a1" prot="public" virt="non-virtual"><scope>segment_t</scope><name>print</name></member>
      <member refid="structrange__t_1a43ae77e02b4b42dca95b04a5b72b4381" prot="public" virt="non-virtual"><scope>segment_t</scope><name>range_t</name></member>
      <member refid="structrange__t_1a1994b8457d9394a0f50723fc67eef06a" prot="public" virt="non-virtual"><scope>segment_t</scope><name>range_t</name></member>
      <member refid="classsegment__t_1abda643fbdcbd31a4cf56b5abbf51f9fc" prot="public" virt="non-virtual"><scope>segment_t</scope><name>sclass</name></member>
      <member refid="classsegment__t_1ac7cd99c145c959f5fe056b4b85ad0a3a" prot="public" virt="non-virtual"><scope>segment_t</scope><name>segment_t</name></member>
      <member refid="classsegment__t_1adc8b5c6d79255a7908691ba9ed474bed" prot="public" virt="non-virtual"><scope>segment_t</scope><name>sel</name></member>
      <member refid="classsegment__t_1ab023a56b3700a15fb3f1297fec982c6d" prot="public" virt="non-virtual"><scope>segment_t</scope><name>set_comorg</name></member>
      <member refid="classsegment__t_1a4950bfa9eb8ac8e5ea2f6d8f7fa5273f" prot="public" virt="non-virtual"><scope>segment_t</scope><name>set_debugger_segm</name></member>
      <member refid="classsegment__t_1a15fc7dca784dfd9ef5e20446c70206aa" prot="public" virt="non-virtual"><scope>segment_t</scope><name>set_header_segm</name></member>
      <member refid="classsegment__t_1ae4f40ee5a175a56f0ca70ca17be5f7d5" prot="public" virt="non-virtual"><scope>segment_t</scope><name>set_hidden_segtype</name></member>
      <member refid="classsegment__t_1a37858ca069c44d4cf8cb580e7ac0aca8" prot="public" virt="non-virtual"><scope>segment_t</scope><name>set_loader_segm</name></member>
      <member refid="classsegment__t_1a7f1362ff2ca8f07f9834cd5b1acec9d0" prot="public" virt="non-virtual"><scope>segment_t</scope><name>set_ob_ok</name></member>
      <member refid="classsegment__t_1aab47b32ffad0b8903b223d21fe92b6da" prot="public" virt="non-virtual"><scope>segment_t</scope><name>set_visible_segm</name></member>
      <member refid="structrange__t_1acf22d1af607f5bef81df4862f6ad5ac8" prot="public" virt="non-virtual"><scope>segment_t</scope><name>size</name></member>
      <member refid="structrange__t_1a69799eeea6c081e327fed05bcc617585" prot="public" virt="non-virtual"><scope>segment_t</scope><name>start_ea</name></member>
      <member refid="classsegment__t_1a19f7e01c9078347a4dcfe37cb5239b3f" prot="public" virt="non-virtual"><scope>segment_t</scope><name>type</name></member>
      <member refid="classsegment__t_1a054c5ec95c97bda2ccc3b437ad21c967" prot="public" virt="non-virtual"><scope>segment_t</scope><name>update</name></member>
      <member refid="classsegment__t_1afa0ed95c987b0c6f7b1e2b9e05abb967" prot="public" virt="non-virtual"><scope>segment_t</scope><name>use32</name></member>
      <member refid="classsegment__t_1a9a9498a482f8239de925471780966538" prot="public" virt="non-virtual"><scope>segment_t</scope><name>use64</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
