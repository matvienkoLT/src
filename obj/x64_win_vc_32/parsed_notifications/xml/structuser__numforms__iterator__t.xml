<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structuser__numforms__iterator__t" kind="struct" language="C++" prot="public">
    <compoundname>user_numforms_iterator_t</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structuser__numforms__iterator__t_1a30741edab7dc438608a47b571484a4e7" prot="public" static="no" mutable="no">
        <type>iterator_word</type>
        <definition>iterator_word user_numforms_iterator_t::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7880" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7880" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structuser__numforms__iterator__t_1adf9b81f0b405121198d23596582862d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool user_numforms_iterator_t::operator==</definition>
        <argsstring>(const user_numforms_iterator_t &amp;p) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7881" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7881" bodyend="7881"/>
      </memberdef>
      <memberdef kind="function" id="structuser__numforms__iterator__t_1a4ed170fe4bcde0d263af6629b40b0b68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool user_numforms_iterator_t::operator!=</definition>
        <argsstring>(const user_numforms_iterator_t &amp;p) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7882" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7882" bodyend="7882"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7879" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7878" bodyend="7883"/>
    <listofallmembers>
      <member refid="structuser__numforms__iterator__t_1a4ed170fe4bcde0d263af6629b40b0b68" prot="public" virt="non-virtual"><scope>user_numforms_iterator_t</scope><name>operator!=</name></member>
      <member refid="structuser__numforms__iterator__t_1adf9b81f0b405121198d23596582862d1" prot="public" virt="non-virtual"><scope>user_numforms_iterator_t</scope><name>operator==</name></member>
      <member refid="structuser__numforms__iterator__t_1a30741edab7dc438608a47b571484a4e7" prot="public" virt="non-virtual"><scope>user_numforms_iterator_t</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
