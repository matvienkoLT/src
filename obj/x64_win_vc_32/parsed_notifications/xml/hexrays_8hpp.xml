<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="hexrays_8hpp" kind="file" language="C++">
    <compoundname>hexrays.hpp</compoundname>
    <includes refid="pro_8h" local="no">pro.h</includes>
    <includes refid="fpro_8h" local="no">fpro.h</includes>
    <includes refid="ida_8hpp" local="no">ida.hpp</includes>
    <includes refid="idp_8hpp" local="no">idp.hpp</includes>
    <includes refid="gdl_8hpp" local="no">gdl.hpp</includes>
    <includes refid="ieee_8h" local="no">ieee.h</includes>
    <includes refid="loader_8hpp" local="no">loader.hpp</includes>
    <includes refid="kernwin_8hpp" local="no">kernwin.hpp</includes>
    <includes refid="typeinf_8hpp" local="no">typeinf.hpp</includes>
    <includes local="no">set</includes>
    <includes local="no">map</includes>
    <includes local="no">deque</includes>
    <includes local="no">queue</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="522">
        <label>sys/stat.h</label>
      </node>
      <node id="506">
        <label>stdarg.h</label>
      </node>
      <node id="546">
        <label>queue</label>
      </node>
      <node id="509">
        <label>assert.h</label>
      </node>
      <node id="525">
        <label>ida.hpp</label>
        <link refid="ida_8hpp"/>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
      </node>
      <node id="542">
        <label>loader.hpp</label>
        <link refid="loader_8hpp"/>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="505">
        <label>stdlib.h</label>
      </node>
      <node id="534">
        <label>ua.hpp</label>
        <link refid="ua_8hpp"/>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
      </node>
      <node id="537">
        <label>bitrange.hpp</label>
        <link refid="bitrange_8hpp"/>
      </node>
      <node id="517">
        <label>io.h</label>
      </node>
      <node id="520">
        <label>fcntl.h</label>
      </node>
      <node id="523">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="515">
        <label>malloc.h</label>
      </node>
      <node id="514">
        <label>string</label>
      </node>
      <node id="527">
        <label>idp.hpp</label>
        <link refid="idp_8hpp"/>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
        <childnode refid="534" relation="include">
        </childnode>
        <childnode refid="537" relation="include">
        </childnode>
        <childnode refid="538" relation="include">
        </childnode>
      </node>
      <node id="519">
        <label>map</label>
      </node>
      <node id="518">
        <label>direct.h</label>
      </node>
      <node id="507">
        <label>stddef.h</label>
      </node>
      <node id="528">
        <label>nalt.hpp</label>
        <link refid="nalt_8hpp"/>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
      </node>
      <node id="533">
        <label>lines.hpp</label>
        <link refid="lines_8hpp"/>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="544">
        <label>name.hpp</label>
        <link refid="name_8hpp"/>
        <childnode refid="525" relation="include">
        </childnode>
      </node>
      <node id="510">
        <label>limits.h</label>
      </node>
      <node id="521">
        <label>sys/types.h</label>
      </node>
      <node id="516">
        <label>string.h</label>
      </node>
      <node id="539">
        <label>gdl.hpp</label>
        <link refid="gdl_8hpp"/>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="540" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
      </node>
      <node id="513">
        <label>new</label>
      </node>
      <node id="536">
        <label>xref.hpp</label>
        <link refid="xref_8hpp"/>
      </node>
      <node id="531">
        <label>funcs.hpp</label>
        <link refid="funcs_8hpp"/>
        <childnode refid="526" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
      </node>
      <node id="504">
        <label>pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
      </node>
      <node id="530">
        <label>segment.hpp</label>
        <link refid="segment_8hpp"/>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
      </node>
      <node id="512">
        <label>time.h</label>
      </node>
      <node id="524">
        <label>fpro.h</label>
        <link refid="fpro_8h"/>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
      </node>
      <node id="538">
        <label>config.hpp</label>
        <link refid="config_8hpp_source"/>
      </node>
      <node id="532">
        <label>bytes.hpp</label>
        <link refid="bytes_8hpp"/>
        <childnode refid="528" relation="include">
        </childnode>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="526" relation="include">
        </childnode>
      </node>
      <node id="545">
        <label>deque</label>
      </node>
      <node id="511">
        <label>ctype.h</label>
      </node>
      <node id="526">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
      </node>
      <node id="543">
        <label>typeinf.hpp</label>
        <link refid="typeinf_8hpp"/>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="544" relation="include">
        </childnode>
      </node>
      <node id="529">
        <label>netnode.hpp</label>
        <link refid="netnode_8hpp"/>
        <childnode refid="526" relation="include">
        </childnode>
      </node>
      <node id="541">
        <label>ieee.h</label>
        <link refid="ieee_8h"/>
      </node>
      <node id="535">
        <label>kernwin.hpp</label>
        <link refid="kernwin_8hpp"/>
      </node>
      <node id="503">
        <label>obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp</label>
        <link refid="hexrays_8hpp"/>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
        <childnode refid="525" relation="include">
        </childnode>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="539" relation="include">
        </childnode>
        <childnode refid="541" relation="include">
        </childnode>
        <childnode refid="542" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="543" relation="include">
        </childnode>
        <childnode refid="540" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
      </node>
      <node id="540">
        <label>set</label>
      </node>
      <node id="547">
        <label>algorithm</label>
      </node>
      <node id="508">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classvalrng__t" prot="public">valrng_t</innerclass>
    <innerclass refid="structoptinsn__t" prot="public">optinsn_t</innerclass>
    <innerclass refid="structoptblock__t" prot="public">optblock_t</innerclass>
    <innerclass refid="structoperand__locator__t" prot="public">operand_locator_t</innerclass>
    <innerclass refid="structnumber__format__t" prot="public">number_format_t</innerclass>
    <innerclass refid="structvd__printer__t" prot="public">vd_printer_t</innerclass>
    <innerclass refid="structvc__printer__t" prot="public">vc_printer_t</innerclass>
    <innerclass refid="structfile__printer__t" prot="public">file_printer_t</innerclass>
    <innerclass refid="structqstring__printer__t" prot="public">qstring_printer_t</innerclass>
    <innerclass refid="classvdloc__t" prot="public">vdloc_t</innerclass>
    <innerclass refid="structlvar__locator__t" prot="public">lvar_locator_t</innerclass>
    <innerclass refid="classlvar__t" prot="public">lvar_t</innerclass>
    <innerclass refid="structlvars__t" prot="public">lvars_t</innerclass>
    <innerclass refid="structlvar__saved__info__t" prot="public">lvar_saved_info_t</innerclass>
    <innerclass refid="structlvar__uservec__t" prot="public">lvar_uservec_t</innerclass>
    <innerclass refid="structuser__lvar__modifier__t" prot="public">user_lvar_modifier_t</innerclass>
    <innerclass refid="structudcall__t" prot="public">udcall_t</innerclass>
    <innerclass refid="structmicrocode__filter__t" prot="public">microcode_filter_t</innerclass>
    <innerclass refid="classudc__filter__t" prot="public">udc_filter_t</innerclass>
    <innerclass refid="classbitset__t" prot="public">bitset_t</innerclass>
    <innerclass refid="classbitset__t_1_1iterator" prot="public">bitset_t::iterator</innerclass>
    <innerclass refid="structivl__tpl" prot="public">ivl_tpl</innerclass>
    <innerclass refid="structivl__t" prot="public">ivl_t</innerclass>
    <innerclass refid="structivl__with__name__t" prot="public">ivl_with_name_t</innerclass>
    <innerclass refid="classivlset__tpl" prot="public">ivlset_tpl</innerclass>
    <innerclass refid="structivlset__t" prot="public">ivlset_t</innerclass>
    <innerclass refid="classrlist__t" prot="public">rlist_t</innerclass>
    <innerclass refid="structmlist__t" prot="public">mlist_t</innerclass>
    <innerclass refid="classsimple__graph__t" prot="public">simple_graph_t</innerclass>
    <innerclass refid="structop__parent__info__t" prot="public">op_parent_info_t</innerclass>
    <innerclass refid="structminsn__visitor__t" prot="public">minsn_visitor_t</innerclass>
    <innerclass refid="structmop__visitor__t" prot="public">mop_visitor_t</innerclass>
    <innerclass refid="structscif__visitor__t" prot="public">scif_visitor_t</innerclass>
    <innerclass refid="structmlist__mop__visitor__t" prot="public">mlist_mop_visitor_t</innerclass>
    <innerclass refid="structlvar__ref__t" prot="public">lvar_ref_t</innerclass>
    <innerclass refid="structstkvar__ref__t" prot="public">stkvar_ref_t</innerclass>
    <innerclass refid="structscif__t" prot="public">scif_t</innerclass>
    <innerclass refid="structmnumber__t" prot="public">mnumber_t</innerclass>
    <innerclass refid="structfnumber__t" prot="public">fnumber_t</innerclass>
    <innerclass refid="classmop__t" prot="public">mop_t</innerclass>
    <innerclass refid="classmop__pair__t" prot="public">mop_pair_t</innerclass>
    <innerclass refid="classmop__addr__t" prot="public">mop_addr_t</innerclass>
    <innerclass refid="classmcallarg__t" prot="public">mcallarg_t</innerclass>
    <innerclass refid="classmcallinfo__t" prot="public">mcallinfo_t</innerclass>
    <innerclass refid="classmcases__t" prot="public">mcases_t</innerclass>
    <innerclass refid="structvoff__t" prot="public">voff_t</innerclass>
    <innerclass refid="structvivl__t" prot="public">vivl_t</innerclass>
    <innerclass refid="classchain__t" prot="public">chain_t</innerclass>
    <innerclass refid="classblock__chains__t" prot="public">block_chains_t</innerclass>
    <innerclass refid="structchain__visitor__t" prot="public">chain_visitor_t</innerclass>
    <innerclass refid="classgraph__chains__t" prot="public">graph_chains_t</innerclass>
    <innerclass refid="classminsn__t" prot="public">minsn_t</innerclass>
    <innerclass refid="classmblock__t" prot="public">mblock_t</innerclass>
    <innerclass refid="structhexwarn__t" prot="public">hexwarn_t</innerclass>
    <innerclass refid="structmba__ranges__t" prot="public">mba_ranges_t</innerclass>
    <innerclass refid="structrange__item__iterator__t" prot="public">range_item_iterator_t</innerclass>
    <innerclass refid="structmba__item__iterator__t" prot="public">mba_item_iterator_t</innerclass>
    <innerclass refid="structrange__chunk__iterator__t" prot="public">range_chunk_iterator_t</innerclass>
    <innerclass refid="structmba__range__iterator__t" prot="public">mba_range_iterator_t</innerclass>
    <innerclass refid="classmbl__array__t" prot="public">mbl_array_t</innerclass>
    <innerclass refid="classchain__keeper__t" prot="public">chain_keeper_t</innerclass>
    <innerclass refid="classmbl__graph__t" prot="public">mbl_graph_t</innerclass>
    <innerclass refid="classcodegen__t" prot="public">codegen_t</innerclass>
    <innerclass refid="structhexrays__failure__t" prot="public">hexrays_failure_t</innerclass>
    <innerclass refid="structvd__failure__t" prot="public">vd_failure_t</innerclass>
    <innerclass refid="structvd__interr__t" prot="public">vd_interr_t</innerclass>
    <innerclass refid="structgco__info__t" prot="public">gco_info_t</innerclass>
    <innerclass refid="structoperator__info__t" prot="public">operator_info_t</innerclass>
    <innerclass refid="structcnumber__t" prot="public">cnumber_t</innerclass>
    <innerclass refid="structvar__ref__t" prot="public">var_ref_t</innerclass>
    <innerclass refid="structctree__visitor__t" prot="public">ctree_visitor_t</innerclass>
    <innerclass refid="structctree__parentee__t" prot="public">ctree_parentee_t</innerclass>
    <innerclass refid="structcfunc__parentee__t" prot="public">cfunc_parentee_t</innerclass>
    <innerclass refid="structtreeloc__t" prot="public">treeloc_t</innerclass>
    <innerclass refid="structcitem__cmt__t" prot="public">citem_cmt_t</innerclass>
    <innerclass refid="structcitem__locator__t" prot="public">citem_locator_t</innerclass>
    <innerclass refid="structbit__bound__t" prot="public">bit_bound_t</innerclass>
    <innerclass refid="structcitem__t" prot="public">citem_t</innerclass>
    <innerclass refid="structcexpr__t" prot="public">cexpr_t</innerclass>
    <innerclass refid="structceinsn__t" prot="public">ceinsn_t</innerclass>
    <innerclass refid="structcif__t" prot="public">cif_t</innerclass>
    <innerclass refid="structcloop__t" prot="public">cloop_t</innerclass>
    <innerclass refid="structcfor__t" prot="public">cfor_t</innerclass>
    <innerclass refid="structcwhile__t" prot="public">cwhile_t</innerclass>
    <innerclass refid="structcdo__t" prot="public">cdo_t</innerclass>
    <innerclass refid="structcreturn__t" prot="public">creturn_t</innerclass>
    <innerclass refid="structcgoto__t" prot="public">cgoto_t</innerclass>
    <innerclass refid="structcasm__t" prot="public">casm_t</innerclass>
    <innerclass refid="structcinsn__t" prot="public">cinsn_t</innerclass>
    <innerclass refid="structcblock__t" prot="public">cblock_t</innerclass>
    <innerclass refid="structcarg__t" prot="public">carg_t</innerclass>
    <innerclass refid="structcarglist__t" prot="public">carglist_t</innerclass>
    <innerclass refid="structccase__t" prot="public">ccase_t</innerclass>
    <innerclass refid="structccases__t" prot="public">ccases_t</innerclass>
    <innerclass refid="structcswitch__t" prot="public">cswitch_t</innerclass>
    <innerclass refid="structctree__anchor__t" prot="public">ctree_anchor_t</innerclass>
    <innerclass refid="structctree__item__t" prot="public">ctree_item_t</innerclass>
    <innerclass refid="structcfunc__t" prot="public">cfunc_t</innerclass>
    <innerclass refid="structctext__position__t" prot="public">ctext_position_t</innerclass>
    <innerclass refid="structhistory__item__t" prot="public">history_item_t</innerclass>
    <innerclass refid="structvdui__t" prot="public">vdui_t</innerclass>
    <innerclass refid="structuser__numforms__iterator__t" prot="public">user_numforms_iterator_t</innerclass>
    <innerclass refid="structlvar__mapping__iterator__t" prot="public">lvar_mapping_iterator_t</innerclass>
    <innerclass refid="structudcall__map__iterator__t" prot="public">udcall_map_iterator_t</innerclass>
    <innerclass refid="structuser__cmts__iterator__t" prot="public">user_cmts_iterator_t</innerclass>
    <innerclass refid="structuser__iflags__iterator__t" prot="public">user_iflags_iterator_t</innerclass>
    <innerclass refid="structuser__unions__iterator__t" prot="public">user_unions_iterator_t</innerclass>
    <innerclass refid="structuser__labels__iterator__t" prot="public">user_labels_iterator_t</innerclass>
    <innerclass refid="structeamap__iterator__t" prot="public">eamap_iterator_t</innerclass>
    <innerclass refid="structboundaries__iterator__t" prot="public">boundaries_iterator_t</innerclass>
    <innerclass refid="structblock__chains__iterator__t" prot="public">block_chains_iterator_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="hexrays_8hpp_1a22ac348593932c324271ebea84ca77b8" prot="public" static="no">
        <name>hexapi</name>
        <briefdescription>
<para>Public functions are marked with this keyword. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="217" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a648927d7da06931efdcccc70ceca1107" prot="public" static="no">
        <name>MAX_SUPPORTED_STACK_SIZE</name>
        <initializer>0x100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="276" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ad29d747a1206b0643893e5ae24f07eb8" prot="public" static="no">
        <name>HEXRAYS_PLACEMENT_DELETE</name>
        <initializer>void operator delete(void *, void *) {}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="286" column="12" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1aa7aaa5bf1785e095c7a2967f57b2d6f9" prot="public" static="no">
        <name>HEXRAYS_MEMORY_ALLOCATION_FUNCS</name>
        <param></param>
        <initializer>void *operator new  (size_t _s) { return hexrays_alloc(_s); }  \
    void *operator new[](size_t _s) { return hexrays_alloc(_s); }  \
    void *operator new(size_t /*size*/, void *_v) { return _v; } \
    void operator delete  (void *_blk) { hexrays_free(_blk); }   \
    void operator delete[](void *_blk) { hexrays_free(_blk); } \
    HEXRAYS_PLACEMENT_DELETE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="287" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a297bac9946a6465f641e02023b4f03fa" prot="public" static="no">
        <name>VLR_TYPE</name>
        <initializer>0x0F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="326" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1aaad55e0d1723dce91f8b1b0362c7d41b" prot="public" static="no">
        <name>VLR_NONE</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="327" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ab92cd418fb2e3b856638cb28bbd8c3cf" prot="public" static="no">
        <name>VLR_ALL</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="328" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a45d5f0c49eae2c85980f709512e2b8f2" prot="public" static="no">
        <name>VLR_IVLS</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="329" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a7db6a0e0fbb348de43df8d16ff1ca89c" prot="public" static="no">
        <name>VLR_RANGE</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="330" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ac3037adf8ce99b1445459d90a7e83c83" prot="public" static="no">
        <name>VLR_SRANGE</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="331" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ae4705451771e72827e01fdb5e59da77d" prot="public" static="no">
        <name>VLR_BITS</name>
        <initializer>0x05</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="332" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a8f9fba948aac7741c7f18a5a2bcddf34" prot="public" static="no">
        <name>VLR_SECT</name>
        <initializer>0x06</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="333" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a1e4457dee6b0960ec23c0549909a627a" prot="public" static="no">
        <name>VLR_UNION</name>
        <initializer>0x07</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="335" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a489cdb3fe9b76fcaa3e52e954794e4db" prot="public" static="no">
        <name>m_max</name>
        <initializer>0x49</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="682" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a5a4512368f4f9ec1478eebddbed86589" prot="public" static="no">
        <name>DECLARE_COMPARISON_OPERATORS</name>
        <param><defname>type</defname></param>
        <initializer>bool operator==(const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) == 0; }      \
  bool operator!=(const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) != 0; }      \
  bool operator&lt; (const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) &lt;  0; }      \
  bool operator&gt; (const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) &gt;  0; }      \
  bool operator&lt;=(const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) &lt;= 0; }      \
  bool operator&gt;=(const type &amp;r) const { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(r) &gt;= 0; }</initializer>
        <briefdescription>
<para>Macro to declare standard inline comparison operators. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="817" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="817" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a0b2aa18bc777ae38c141204eedd9c608" prot="public" static="no">
        <name>DECLARE_COMPARISONS</name>
        <param><defname>type</defname></param>
        <initializer><ref refid="pro_8h_1a5a4512368f4f9ec1478eebddbed86589" kindref="member">DECLARE_COMPARISON_OPERATORS</ref>(type) \
  friend int <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(const type &amp;a, const type &amp;b) { return <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">a.compare</ref>(b); } \
  int <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare</ref>(const type &amp;r) const</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro to declare comparisons for our classes All comparison operators call the <ref refid="pro_8h_1a6d76b0cbdd0016e7cfd98cd42fbde81d" kindref="member">compare()</ref> function which returns -1/0/1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="827" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_f___1ga4aeed0cb45ae019b8c3aa0b0a8ec1039" prot="public" static="no">
        <name>NF_FIXED</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>number format has been defined by the user </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="861" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_f___1ga7f2a9f9259fc21dfcafd1d42be87355f" prot="public" static="no">
        <name>NF_NEGDONE</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>temporary internal bit: negation has been performed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="862" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="862" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_f___1gaa9c53ef3ce284bf6efa7546aef86f9b0" prot="public" static="no">
        <name>NF_BINVDONE</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>temporary internal bit: inverting bits is done </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="863" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="863" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_f___1ga5425582fc64fb8350bb8c3175ea0eace" prot="public" static="no">
        <name>NF_NEGATE</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>The user asked to negate the constant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="864" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_f___1gac9c977d59c718d0586f3473cdfd95b45" prot="public" static="no">
        <name>NF_BITNOT</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>The user asked to invert bits of the constant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="865" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___n_f___1ga893dfc27d032d302681f99b5aaf7604d" prot="public" static="no">
        <name>NF_STROFF</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>internal bit: used as stroff, valid iff <ref refid="group___f_f__opfuncs2_1gaf25866c2282ae16e2546e226a9f0db45" kindref="member">is_stroff()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="866" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="866" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga5a009de4d7aa4420e339a8800b7b5b32" prot="public" static="no">
        <name>CVAR_USED</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>is used in the code? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1231" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1gac09bae9447e28b98148347917939f59d" prot="public" static="no">
        <name>CVAR_TYPE</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>the type is defined? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1232" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga0e0deefd914fbd16da5827083221186a" prot="public" static="no">
        <name>CVAR_NAME</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>has nice name? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1233" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1gad46cbc82dc6b2e1143810ae6ecbd4c7d" prot="public" static="no">
        <name>CVAR_MREG</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
<para>corresponding mregs were replaced? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1234" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1gadb3ea20d84ec86ec907bf747933699dc" prot="public" static="no">
        <name>CVAR_NOWD</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
<para>width is unknown </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1235" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1gaf07f14a8073d1438799abe9cc604084b" prot="public" static="no">
        <name>CVAR_UNAME</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
<para>user-defined name </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1236" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga395ab5fbf7c46b3900acd3504a0bb503" prot="public" static="no">
        <name>CVAR_UTYPE</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
<para>user-defined type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1237" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1gab1203c5283e2ba34a51a131c3aff82b5" prot="public" static="no">
        <name>CVAR_RESULT</name>
        <initializer>0x00000080</initializer>
        <briefdescription>
<para>function result variable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1238" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1gac08e088e495aafa5841c133ac45d0990" prot="public" static="no">
        <name>CVAR_ARG</name>
        <initializer>0x00000100</initializer>
        <briefdescription>
<para>function argument </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1239" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga877701faee4c246e264eb8d0834f004a" prot="public" static="no">
        <name>CVAR_FAKE</name>
        <initializer>0x00000200</initializer>
        <briefdescription>
<para>fake return variable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1240" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga7311d86ecb06bf69d20949086abfdd0a" prot="public" static="no">
        <name>CVAR_OVER</name>
        <initializer>0x00000400</initializer>
        <briefdescription>
<para>overlapping variable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1241" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga03bac23c25464e45281db4a491e2cac6" prot="public" static="no">
        <name>CVAR_FLOAT</name>
        <initializer>0x00000800</initializer>
        <briefdescription>
<para>used in a fpu insn </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1242" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1gaded60034d97ba7667429f57cab73084b" prot="public" static="no">
        <name>CVAR_SPOILED</name>
        <initializer>0x00001000</initializer>
        <briefdescription>
<para>internal flag, do not use: spoiled var </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1243" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga52eb4cae879ff98659df1c0323ff2858" prot="public" static="no">
        <name>CVAR_MAPDST</name>
        <initializer>0x00002000</initializer>
        <briefdescription>
<para>other variables are mapped to this var </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1244" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1gad086564ce5577952b62929f739d324ab" prot="public" static="no">
        <name>CVAR_PARTIAL</name>
        <initializer>0x00004000</initializer>
        <briefdescription>
<para>variable type is partialy defined </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1245" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga07afef3d56c683c66b1eb81eaf489db4" prot="public" static="no">
        <name>CVAR_THISARG</name>
        <initializer>0x00008000</initializer>
        <briefdescription>
<para>&apos;this&apos; argument of c++ member functions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1246" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga424eaac1f7e492a6657ad85590c57bec" prot="public" static="no">
        <name>CVAR_FORCED</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
<para>otherwise we could reuse an existing var </para>        </briefdescription>
        <detaileddescription>
<para>variable was created by an explicit request </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1247" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1ga0c0a1b7ab6e808409a73b264985d4865" prot="public" static="no">
        <name>CVAR_REGNAME</name>
        <initializer>0x00020000</initializer>
        <briefdescription>
<para>has a register name (like _RAX) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1249" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v_a_r___1gae5d2fd429d8a8e1ab342b50dcae191a9" prot="public" static="no">
        <name>CVAR_NOPTR</name>
        <initializer>0x00040000</initializer>
        <briefdescription>
<para>variable can not be a pointer (user choice) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1250" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1aae67d6717aa21b75a10a6a2499ab48c7" prot="public" static="no">
        <name>SVW_INT</name>
        <initializer>0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1391" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1accefda22874936fbf6b67082661154d8" prot="public" static="no">
        <name>SVW_FLOAT</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1392" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1aa9e3eaa840ac96d872b38c54607a46df" prot="public" static="no">
        <name>SVW_SOFT</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1393" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_v_i_n_f___1ga4fd9af23ec0503cf520fe4d3f7b431dd" prot="public" static="no">
        <name>LVINF_KEEP</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>preserve saved user settings regardless of vars for example, if a var loses all its user-defined attributes or even gets destroyed, keep its <ref refid="structlvar__saved__info__t" kindref="compound">lvar_saved_info_t</ref>. this is used for ephemeral variables that get destroyed by macro recognition. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1455" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_v_i_n_f___1ga7c4836a032b358605e4f108f6ffbeffb" prot="public" static="no">
        <name>LVINF_FORCE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>force allocation of a new variable. forces the decompiler to create a new variable at ll.defea </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1461" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_v_i_n_f___1gaf1641adaaec40368005c91d48b4a1d37" prot="public" static="no">
        <name>LVINF_NOPTR</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>variable type should not be a pointer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1464" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___u_l_v___1ga249af858cf4546babad85e23310e59b9" prot="public" static="no">
        <name>ULV_PRECISE_DEFEA</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>Use precise defea&apos;s for lvar locations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1518" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a7f3c417d2625fbf9e5a9b6fc856d0c8f" prot="public" static="no">
        <name>ALLMEM</name>
        <initializer>ivl_t::allmem</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1839" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1839" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_h_i_n_s___1gac1a56ceb3c5f41aac97e14b5e0b31aa5" prot="public" static="no">
        <name>SHINS_NUMADDR</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>display definition addresses for numbers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2244" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_h_i_n_s___1ga699be2c17dc5ee9b5a55edb8851d6825" prot="public" static="no">
        <name>SHINS_VALNUM</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>display value numbers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2245" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_h_i_n_s___1gaceb2cb41ad1c22fcbe9d6d3caff51193" prot="public" static="no">
        <name>SHINS_SHORT</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>do not display use-def chains and other attrs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2246" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___s_h_i_n_s___1ga72b1e02f58e19300dbceb80879850791" prot="public" static="no">
        <name>SHINS_LDXEA</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>display address of ldx expressions (not used) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2247" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a4757322892bdfac5ccce370e1edc21f0" prot="public" static="no">
        <name>OPROP_IMPDONE</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>imported operand (a pointer) has been dereferenced </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2284" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1af6307780f468be2ef99a904c899c6840" prot="public" static="no">
        <name>OPROP_UDT</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>a struct or union </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2285" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a6ca29060e435d712db7bca355bc3f2b7" prot="public" static="no">
        <name>OPROP_FLOAT</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>possibly floating value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2286" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a7efd4b84f850201b765891793e6eeb36" prot="public" static="no">
        <name>OPROP_CCFLAGS</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>condition codes register value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2287" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ac1c954d2517891fb3e61c822becb53dd" prot="public" static="no">
        <name>OPROP_UDEFVAL</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>uses undefined value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2288" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1ga769281bd7ae8161da9ed755ea2b43491" prot="public" static="no">
        <name>FUNC_NAME_MEMCPY</name>
        <initializer>&quot;memcpy&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2902" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2902" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1ga677591ae7d0665c537b65386d2e0e76f" prot="public" static="no">
        <name>FUNC_NAME_MEMSET</name>
        <initializer>&quot;memset&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2903" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2903" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1gab1816fe3585f1cb4f43f8542ad71f7eb" prot="public" static="no">
        <name>FUNC_NAME_MEMSET32</name>
        <initializer>&quot;memset32&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2904" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2904" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1gab2b85337cf161b3c8a95319e760c94aa" prot="public" static="no">
        <name>FUNC_NAME_MEMSET64</name>
        <initializer>&quot;memset64&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2905" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1ga83684be4be522b72225fe73e4250bb6a" prot="public" static="no">
        <name>FUNC_NAME_STRCPY</name>
        <initializer>&quot;strcpy&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2906" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2906" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1gaa1c33535b096100f5a98b5e7abdd578e" prot="public" static="no">
        <name>FUNC_NAME_STRLEN</name>
        <initializer>&quot;strlen&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2907" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2907" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1gaef6a23e7680e92246ec5a8e9a93eac64" prot="public" static="no">
        <name>FUNC_NAME_STRCAT</name>
        <initializer>&quot;strcat&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2908" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2908" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1gad9a2346f21918c202f4696e52c78e7ca" prot="public" static="no">
        <name>FUNC_NAME_TAIL</name>
        <initializer>&quot;tail&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2909" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2909" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1gab93012b2bf40b57efbde4a3f2b1937c4" prot="public" static="no">
        <name>FUNC_NAME_VA_ARG</name>
        <initializer>&quot;va_arg&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2910" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2910" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1gafb5de9751635ae04887e2c8f5083bcec" prot="public" static="no">
        <name>FUNC_NAME_EMPTY</name>
        <initializer>&quot;$empty&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2911" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2911" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1ga3c4c983ed7a1d863f3a2c70d449de15b" prot="public" static="no">
        <name>FUNC_NAME_PRESENT</name>
        <initializer>&quot;$present&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2912" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2912" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_u_n_c___n_a_m_e___1gac4714ea3b8ececb536a45f27e08f287a" prot="public" static="no">
        <name>FUNC_NAME_CONTAINING_RECORD</name>
        <initializer>&quot;CONTAINING_RECORD&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2913" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2913" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a37518bc74bd0a87c02ca65a1fe8a5842" prot="public" static="no">
        <name>MAX_FUNC_ARGS</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2919" column="10" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2919" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c_i___1ga00f330b4d16a1fcf3b3b323c6e120ff4" prot="public" static="no">
        <name>FCI_PROP</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>call has been propagated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2949" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2949" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c_i___1ga77c53e1cff0e358dd8e79419e26c4cdb" prot="public" static="no">
        <name>FCI_DEAD</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>some return registers were determined dead </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2950" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2950" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c_i___1ga6d351fa6e13c3fca88b9d9b5ebb41bfb" prot="public" static="no">
        <name>FCI_FINAL</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>call type is final, should not be changed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2951" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2951" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c_i___1gac4d672e35fd09d15d8cd2fc91b9a9486" prot="public" static="no">
        <name>FCI_NORET</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>call does not return </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2952" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2952" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c_i___1gad71f485c76d6599272172a9c67775692" prot="public" static="no">
        <name>FCI_PURE</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>pure function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2953" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2953" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c_i___1ga32f4ed41cff7138456dbdfaa8f7ca0fe" prot="public" static="no">
        <name>FCI_NOSIDE</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>call does not have side effects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2954" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2954" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_c_i___1gae72a9a0cefa2e61c68809a3c8cf017fb" prot="public" static="no">
        <name>FCI_SPLOK</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>spoiled/visible_memory lists have been optimized. for some functions we can reduce them as soon as information about the arguments becomes available. in order not to try optimize them again we use this bit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2955" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2955" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_f___1ga3ea6e16ef1e39adf35257ab60f1a5017" prot="public" static="no">
        <name>CHF_INITED</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>is chain initialized? (valid only after lvar allocation) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3106" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_f___1ga0c01aa19b950a4adddb4bdb1bc65f2ee" prot="public" static="no">
        <name>CHF_REPLACED</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>chain operands have been replaced? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3107" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_f___1ga12b8144b67c27822eef90517bb30d127" prot="public" static="no">
        <name>CHF_OVER</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>overlapped chain </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3108" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_f___1ga19395960a3efd0273fe5fd5415401bf2" prot="public" static="no">
        <name>CHF_FAKE</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>fake chain created by widen_chains() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3109" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_f___1ga7fdf2f9fe910f02ed9e446f5c2dbc74f" prot="public" static="no">
        <name>CHF_PASSTHRU</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>pass-thru chain, must use the input variable to the block </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3110" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_h_f___1gaf5066a9fa983f7f193fda717efdf0502" prot="public" static="no">
        <name>CHF_TERM</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>terminating chain; the variable does not survive across the block </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3111" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a1c0de8d10b7164914f384da23602f8cd" prot="public" static="no">
        <name>SIZEOF_BLOCK_CHAINS</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3152" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_c_a___1gae25ebf8833f74a903ead6eb7a914e754" prot="public" static="no">
        <name>GCA_EMPTY</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>include empty chains </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3227" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_c_a___1ga8a01e3040ca3cc5e612e6f70801f3083" prot="public" static="no">
        <name>GCA_SPEC</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>include chains for special registers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3228" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_c_a___1gad19ac20bfc55f947eeb15ea0c7ff5233" prot="public" static="no">
        <name>GCA_ALLOC</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>enumerate only allocated chains </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3229" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_c_a___1ga0c5776df74e643f52f6e7a448a064954" prot="public" static="no">
        <name>GCA_NALLOC</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>enumerate only non-allocated chains </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3230" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_c_a___1gab0d64e0a9b328620fe6b4d404d8bd762" prot="public" static="no">
        <name>GCA_OFIRST</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>consider only chains of the first block </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3231" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_c_a___1ga054cbec1f944e0270a9e9dfa2573c7df" prot="public" static="no">
        <name>GCA_OLAST</name>
        <initializer>0x20</initializer>
        <briefdescription>
<para>consider only chains of the last block </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3232" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga09c99c3d0fdab277ee8125ebe85c9efa" prot="public" static="no">
        <name>IPROP_OPTIONAL</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>optional instruction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3268" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga29010d9634aea8b31ba1e365c5545efc" prot="public" static="no">
        <name>IPROP_PERSIST</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>persistent insn; they are not destroyed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3269" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga4305fcb44e8edcc8fc7945129c2f5577" prot="public" static="no">
        <name>IPROP_WILDMATCH</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>match multiple insns </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3270" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga548898d3e5ef546aac7c56c98f6acb28" prot="public" static="no">
        <name>IPROP_CLNPOP</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>(e.g. &quot;pop ecx&quot; is often used for that) </para>        </briefdescription>
        <detaileddescription>
<para>the purpose of the instruction is to clean stack </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3273" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gad9d5ed4a40f0aae9b67671a8c00c5733" prot="public" static="no">
        <name>IPROP_FPINSN</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>floating point insn </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3275" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga6b569852b37e8090b936d207f45a5bc6" prot="public" static="no">
        <name>IPROP_FARCALL</name>
        <initializer>0x0020</initializer>
        <briefdescription>
<para>call of a far function using push cs/call sequence </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3276" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gaad6b06fbf13e978c9740faef3c18c727" prot="public" static="no">
        <name>IPROP_TAILCALL</name>
        <initializer>0x0040</initializer>
        <briefdescription>
<para>tail call </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3277" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gaee04ae254c04502ea1d8d64ecc551c3c" prot="public" static="no">
        <name>IPROP_ASSERT</name>
        <initializer>0x0080</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>assertion: usually mov #val, op. assertions are used to help the optimizer. assertions are ignored when generating ctree </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3278" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga7fad4ba9ab0dd259008c2302089c80e8" prot="public" static="no">
        <name>IPROP_SPLIT</name>
        <initializer>0x0700</initializer>
        <briefdescription>
<para>the instruction has been split: </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3283" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga6095edd96b0b97e761733ecae096216a" prot="public" static="no">
        <name>IPROP_SPLIT1</name>
        <initializer>0x0100</initializer>
        <briefdescription>
<para>into 1 byte </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3284" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gac3d9ecb5fb567ae267042bb3806531b2" prot="public" static="no">
        <name>IPROP_SPLIT2</name>
        <initializer>0x0200</initializer>
        <briefdescription>
<para>into 2 bytes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3285" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga24bf9e71eca4b5bebd362d500d33941f" prot="public" static="no">
        <name>IPROP_SPLIT4</name>
        <initializer>0x0300</initializer>
        <briefdescription>
<para>into 4 bytes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3286" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gac7b47f84c3955893db1ac26f3c10489c" prot="public" static="no">
        <name>IPROP_SPLIT8</name>
        <initializer>0x0400</initializer>
        <briefdescription>
<para>into 8 bytes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3287" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga9cd2c420b4abb01eab66ba9d169bbe7c" prot="public" static="no">
        <name>IPROP_COMBINED</name>
        <initializer>0x0800</initializer>
        <briefdescription>
<para>insn has been modified because of a partial reference </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3288" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gadc42e5bc93d9f6c989d7fdd50ce21887" prot="public" static="no">
        <name>IPROP_EXTSTX</name>
        <initializer>0x1000</initializer>
        <briefdescription>
<para>this is m_ext propagated into m_stx </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3289" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gae1154df8c951983db01cca50a6492880" prot="public" static="no">
        <name>IPROP_IGNLOWSRC</name>
        <initializer>0x2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>low part of the instruction source operand has been created artificially (this bit is used only for &apos;and x, 80...&apos;) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3290" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga7cea7c381f96c44a83e1488fe97ab137" prot="public" static="no">
        <name>IPROP_INV_JX</name>
        <initializer>0x4000</initializer>
        <briefdescription>
<para>inverted conditional jump </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3293" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1ga16dd577ad799a76a9496857493ea5263" prot="public" static="no">
        <name>IPROP_WAS_NORET</name>
        <initializer>0x8000</initializer>
        <briefdescription>
<para>was noret icall </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3294" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gadfec3a6c2784904a58f2e7c6f2ae035f" prot="public" static="no">
        <name>IPROP_MULTI_MOV</name>
        <initializer>0x10000</initializer>
        <briefdescription>
<para>(example: STM on ARM may transfer multiple registers) </para>        </briefdescription>
        <detaileddescription>
<para>the minsn was generated as part of insn that moves multiple registersbits that can be set by plugins: </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3295" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gafb70e8dd332ec8c1a13e6692dcb24ad5" prot="public" static="no">
        <name>IPROP_DONT_PROP</name>
        <initializer>0x20000</initializer>
        <briefdescription>
<para>may not propagate </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3299" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___i_p_r_o_p___1gac039ef7f8ab666f5780c9490b5a15a4d" prot="public" static="no">
        <name>IPROP_DONT_COMB</name>
        <initializer>0x40000</initializer>
        <briefdescription>
<para>may not combine this instruction with others </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3300" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_p_t_i___1gadd32f0f8010c841d875b966d78bd4d29" prot="public" static="no">
        <name>OPTI_ADDREXPRS</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>optimize all address expressions (&amp;x+N; &amp;x-&amp;y) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3392" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_p_t_i___1gaaf4d77e28c2c47799ae30d7822ea62b0" prot="public" static="no">
        <name>OPTI_MINSTKREF</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>may update minstkref </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3393" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___o_p_t_i___1ga7ae17560e84c49d82779694aeccbdee4" prot="public" static="no">
        <name>OPTI_COMBINSNS</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>may combine insns (only for optimize_insn) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3394" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_q___1ga5d7438c4e6f0c813433665e837dd5d8d" prot="public" static="no">
        <name>EQ_IGNSIZE</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>ignore operand sizes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3431" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_q___1ga6eb812c87fd4d200874888180c91f6bc" prot="public" static="no">
        <name>EQ_IGNCODE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>ignore instruction opcodes </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3432" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_q___1ga2bdb947487566d8cfe80d7434341b151" prot="public" static="no">
        <name>EQ_CMPDEST</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>compare instruction destinations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3433" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_q___1ga71efe5eda0fde4a2ff7876bbbf1ec454" prot="public" static="no">
        <name>EQ_OPTINSN</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>optimize mop_d operands </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3434" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ac7be76f31ad9c9e1473863914a97b50e" prot="public" static="no">
        <name>MAXRANGE</name>
        <initializer><ref refid="classbitrange__t" kindref="compound">bitrange_t</ref>(0, USHRT_MAX)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3557" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gae47f3f4e1996648685f5412fdea921f6" prot="public" static="no">
        <name>MBL_PRIV</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>the specified are accepted (used in patterns) </para>        </briefdescription>
        <detaileddescription>
<para>private block - no instructions except </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3576" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1ga246246cea3c097eb3df550edc4a40ca5" prot="public" static="no">
        <name>MBL_NONFAKE</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>regular block </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3578" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gae1efe66415fb7894cc9e714cc4ca17e1" prot="public" static="no">
        <name>MBL_FAKE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>fake block (after a tail call) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3579" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gaf8908b7df852b8193eea29119ba6cccf" prot="public" static="no">
        <name>MBL_GOTO</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>this block is a goto target </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3580" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gad6ef3c62fff3243180812e2f9fe12282" prot="public" static="no">
        <name>MBL_TCAL</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>aritifical call block for tail calls </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3581" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gac0c6a0e8da117d45202263e5c540f569" prot="public" static="no">
        <name>MBL_PUSH</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>needs &quot;convert push/pop instructions&quot; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3582" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gac9147452527cb7bd0c40a8a413af4ff3" prot="public" static="no">
        <name>MBL_DMT64</name>
        <initializer>0x0020</initializer>
        <briefdescription>
<para>needs &quot;demote 64bits&quot; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3583" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1ga8efc6c8b9fc81a833a77e000e7d252da" prot="public" static="no">
        <name>MBL_COMB</name>
        <initializer>0x0040</initializer>
        <briefdescription>
<para>needs &quot;combine&quot; pass </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3584" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1ga072ec8c9510013b7ca63e93fa486df36" prot="public" static="no">
        <name>MBL_PROP</name>
        <initializer>0x0080</initializer>
        <briefdescription>
<para>needs &apos;propagation&apos; pass </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3585" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1ga15535d3f77bfa829d108f5f4fcf82377" prot="public" static="no">
        <name>MBL_DEAD</name>
        <initializer>0x0100</initializer>
        <briefdescription>
<para>needs &quot;eliminate deads&quot; pass </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3586" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gaaf379b33b05c5bba5aca901578ce062e" prot="public" static="no">
        <name>MBL_LIST</name>
        <initializer>0x0200</initializer>
        <briefdescription>
<para>use/def lists are ready (not dirty) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3587" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1ga1a030aa024af66694d51f08c1330b46c" prot="public" static="no">
        <name>MBL_INCONST</name>
        <initializer>0x0400</initializer>
        <briefdescription>
<para>inconsistent lists: we are building them </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3588" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gaa5a19dbea9d928b7d02b2c9004a48e4d" prot="public" static="no">
        <name>MBL_CALL</name>
        <initializer>0x0800</initializer>
        <briefdescription>
<para>call information has been built </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3589" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gaa3e9e301fa952631a63957abb7c3c77e" prot="public" static="no">
        <name>MBL_BACKPROP</name>
        <initializer>0x1000</initializer>
        <briefdescription>
<para>performed backprop_cc </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3590" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gaaa7799707587b77c91a443b2e6f3fc2c" prot="public" static="no">
        <name>MBL_NORET</name>
        <initializer>0x2000</initializer>
        <briefdescription>
<para>dead end block: doesn&apos;t return execution control </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3591" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1gaec2b03d75160b95447e770a4bb7638f2" prot="public" static="no">
        <name>MBL_DSLOT</name>
        <initializer>0x4000</initializer>
        <briefdescription>
<para>block for delay slot </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3592" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3592" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___m_b_l___1ga7319bf87a9906cf1d543e50befb4fa93" prot="public" static="no">
        <name>MBL_VALRANGES</name>
        <initializer>0x8000</initializer>
        <briefdescription>
<para>should optimize using value ranges </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3593" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3593" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_d___1ga21500c86510921e2d0522eab075ce787" prot="public" static="no">
        <name>FD_BACKWARD</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>search direction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3911" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3911" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_d___1ga6b30cd85cba807971a0048e47842c646" prot="public" static="no">
        <name>FD_FORWARD</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>search direction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3912" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3912" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_d___1gacb703d3183091846813a9c30bc58cf4d" prot="public" static="no">
        <name>FD_USE</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>look for use </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3913" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3913" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_d___1ga557d3d288b8d203fb74be1e720451fcc" prot="public" static="no">
        <name>FD_DEF</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>look for definition </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3914" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3914" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___f_d___1gacafbc2c88542f63c2b51fec28a3257c2" prot="public" static="no">
        <name>FD_DIRTY</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>by function calls and indirect memory access </para>        </briefdescription>
        <detaileddescription>
<para>ignore possible implicit definitions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3915" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3915" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_r___1ga71f000e24836abe9ab8322d69b7a410e" prot="public" static="no">
        <name>VR_AT_START</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>get value ranges at the block start </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3944" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3944" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_r___1ga20414aba74f50a6c7d822bbbda02bbe4" prot="public" static="no">
        <name>VR_AT_END</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>the last instruction </para>        </briefdescription>
        <detaileddescription>
<para>get value ranges at the block end, just before </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3945" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3945" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_r___1ga049fa8eb89873c01bab7d587af0f61a5" prot="public" static="no">
        <name>VR_EXACT</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>valrng size will be &gt;= vivl.size </para>        </briefdescription>
        <detaileddescription>
<para>find exact match. if not set, the returned </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3947" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3947" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ae531017c536d5d960cd5bff3c337a48f" prot="public" static="no">
        <name>MBA_PRCDEFS</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
<para>use precise defeas for chain-allocated lvars </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4160" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a97bc2bb747b5250f530efc2e7e66f788" prot="public" static="no">
        <name>MBA_NOFUNC</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
<para>function is not present, addresses might be wrong </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4161" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a88a868cbfa0321c4434a4e7c5de9f858" prot="public" static="no">
        <name>MBA_PATTERN</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
<para>microcode pattern, callinfo is present </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4162" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a893c39a1397865971bb5a85fea49f620" prot="public" static="no">
        <name>MBA_LOADED</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
<para>loaded gdl, no instructions (debugging) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4163" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1af270db94220a89c4a8aef89649c3d682" prot="public" static="no">
        <name>MBA_RETFP</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
<para>function returns floating point value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4164" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a6ce341e1d6e0081dae55ac91a7644295" prot="public" static="no">
        <name>MBA_SPLINFO</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
<para>(final_type ? idb_spoiled : spoiled_regs) is valid </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4165" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a0490f915d5b214128bbe9a82226d7249" prot="public" static="no">
        <name>MBA_PASSREGS</name>
        <initializer>0x00000040</initializer>
        <briefdescription>
<para>has <ref refid="classmcallinfo__t_1af329f108764209ec634c23e6df914c44" kindref="member">mcallinfo_t::pass_regs</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4166" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a362d42fd704e8ed207645a59b8cbd7eb" prot="public" static="no">
        <name>MBA_THUNK</name>
        <initializer>0x00000080</initializer>
        <briefdescription>
<para>thunk function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4167" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a4160ebc05337833a5e7f12c75c3d8c5e" prot="public" static="no">
        <name>MBA_CMNSTK</name>
        <initializer>0x00000100</initializer>
        <briefdescription>
<para>stkvars+stkargs should be considered as one area </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4168" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a51ea74eb911aa7765ad64ec0cfe47ff9" prot="public" static="no">
        <name>MBA_PREOPT</name>
        <initializer>0x00000200</initializer>
        <briefdescription>
<para>preoptimization stage complete </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4171" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a2178ca48f084dadf1e525fd6e1ece9a7" prot="public" static="no">
        <name>MBA_CMBBLK</name>
        <initializer>0x00000400</initializer>
        <briefdescription>
<para>request to combine blocks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4172" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a5bd3dc92e2cdfd7b5ce5160fee7630dd" prot="public" static="no">
        <name>MBA_ASRTOK</name>
        <initializer>0x00000800</initializer>
        <briefdescription>
<para>assertions have been generated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4173" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a584beba98d06dc3607cd1801e1f6fc6d" prot="public" static="no">
        <name>MBA_CALLS</name>
        <initializer>0x00001000</initializer>
        <briefdescription>
<para>callinfo has been built </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4174" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a59cd84efa21101fb043aea4785488513" prot="public" static="no">
        <name>MBA_ASRPROP</name>
        <initializer>0x00002000</initializer>
        <briefdescription>
<para>assertion have been propagated </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4175" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a663e15e3d48175222f9b421552f51deb" prot="public" static="no">
        <name>MBA_SAVRST</name>
        <initializer>0x00004000</initializer>
        <briefdescription>
<para>save-restore analysis has been performed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4176" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a6acdc30c1ef92324f69a349874488637" prot="public" static="no">
        <name>MBA_RETREF</name>
        <initializer>0x00008000</initializer>
        <briefdescription>
<para>return type has been refined </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4177" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a9539926ede1add5df8f2000f8dd56ace" prot="public" static="no">
        <name>MBA_GLBOPT</name>
        <initializer>0x00010000</initializer>
        <briefdescription>
<para>microcode has been optimized globally </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4178" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a6b2e26d721d9f49aff1ac72859f8f6e4" prot="public" static="no">
        <name>MBA_OVERVAR</name>
        <initializer>0x00020000</initializer>
        <briefdescription>
<para>an overlapped variable has been detected </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4179" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a81fbc27a5e9567c8dc0ec07e477ca614" prot="public" static="no">
        <name>MBA_LVARS0</name>
        <initializer>0x00040000</initializer>
        <briefdescription>
<para>lvar pre-allocation has been performed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4180" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a6f7a170d4022858451f6a053b0dd4d99" prot="public" static="no">
        <name>MBA_LVARS1</name>
        <initializer>0x00080000</initializer>
        <briefdescription>
<para>lvar real allocation has been performed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4181" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ab1fef889a5ee21f6f40ddbec0c93c53e" prot="public" static="no">
        <name>MBA_DELPAIRS</name>
        <initializer>0x00100000</initializer>
        <briefdescription>
<para>pairs have been deleted once </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4182" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a9ffa20fbeeef8b75ce07ef73a3593888" prot="public" static="no">
        <name>MBA_CHVARS</name>
        <initializer>0x00200000</initializer>
        <briefdescription>
<para>can verify chain varnums </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4183" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a17622b4af57aef632b2e54fdfdfad06d" prot="public" static="no">
        <name>MBA_SHORT</name>
        <initializer>0x00400000</initializer>
        <briefdescription>
<para>use short display </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4186" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1aaca3579b3388f19f7a76eb3c53d3c179" prot="public" static="no">
        <name>MBA_COLGDL</name>
        <initializer>0x00800000</initializer>
        <briefdescription>
<para>display graph after each reduction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4187" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a9de3d18c842c14527c39b10b8520c079" prot="public" static="no">
        <name>MBA_INSGDL</name>
        <initializer>0x01000000</initializer>
        <briefdescription>
<para>display instruction in graphs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4188" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a7c973555266c902fcaa7951006419ccc" prot="public" static="no">
        <name>MBA_NICE</name>
        <initializer>0x02000000</initializer>
        <briefdescription>
<para>apply transformations to c code </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4189" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a98135b26f4984aa4caa6f9e4e27b219c" prot="public" static="no">
        <name>MBA_REFINE</name>
        <initializer>0x04000000</initializer>
        <briefdescription>
<para>may refine return value size </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4190" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a997f2c05012a6cdc1c6fab27eefa6702" prot="public" static="no">
        <name>MBA_DELASRT</name>
        <initializer>0x08000000</initializer>
        <briefdescription>
<para>may delete assertions at the end of glbopt </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4191" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a6506178a1cd859d57d1b32c8cf03362c" prot="public" static="no">
        <name>MBA_WINGR32</name>
        <initializer>0x10000000</initializer>
        <briefdescription>
<para>use wingraph32 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4192" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1aae777e174b85506c6edadbfcdebf78c3" prot="public" static="no">
        <name>MBA_NUMADDR</name>
        <initializer>0x20000000</initializer>
        <briefdescription>
<para>display definition addresses for numbers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4193" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1af0af11f1fa4d52585cfca288fafbf6f6" prot="public" static="no">
        <name>MBA_VALNUM</name>
        <initializer>0x40000000</initializer>
        <briefdescription>
<para>display value numbers </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4194" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a841035055c12d485e81c5f9fcf8b7c2f" prot="public" static="no">
        <name>MBA_INITIAL_FLAGS</name>
        <initializer>(MBA_INSGDL|MBA_NICE|MBA_CMBBLK|MBA_REFINE|MBA_DELASRT\
        |MBA_PRCDEFS|MBA_WINGR32|MBA_VALNUM)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4196" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ae2756acd5afc409f60d43f4be4ca913a" prot="public" static="no">
        <name>MBA2_LVARNAMES_OK</name>
        <initializer>0x00000001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4199" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a405893a355d8e6e6e42264bb89f9a63c" prot="public" static="no">
        <name>MBA2_LVARS_RENAMED</name>
        <initializer>0x00000002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4200" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a0fce53942d6b403fe7b1457b6049cf1f" prot="public" static="no">
        <name>MBA2_OVER_CHAINS</name>
        <initializer>0x00000004</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4201" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ad0b52375a9658376c64f70b0eb9248ef" prot="public" static="no">
        <name>MBA2_VALRNG_DONE</name>
        <initializer>0x00000008</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4202" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ab228597b19c17a933c49b56bcc5b1b2f" prot="public" static="no">
        <name>MBA2_IS_CTR</name>
        <initializer>0x00000010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4203" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a965c337e544a9fd714902a99732da124" prot="public" static="no">
        <name>MBA2_IS_DTR</name>
        <initializer>0x00000020</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4204" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a22f222066a117ddfcfec9b212e62ae68" prot="public" static="no">
        <name>MBA2_INITIAL_FLAGS</name>
        <initializer>(MBA2_LVARNAMES_OK|MBA2_LVARS_RENAMED)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4206" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ae2b5bd4ad6bf555295926009870f58fe" prot="public" static="no">
        <name>MBA2_ALL_FLAGS</name>
        <initializer>0x0000003F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4207" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ad43c3d53d3a906ac4e2756e16b256a44" prot="public" static="no">
        <name>NALT_VD</name>
        <initializer>2</initializer>
        <briefdescription>
<para>this index is not used by ida </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4388" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_o_c_o_p_t___1gac433c8a1a3046bf314d2365bd4ee2d99" prot="public" static="no">
        <name>LOCOPT_ALL</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>is not set, only dirty blocks will be optimized </para>        </briefdescription>
        <detaileddescription>
<para>redo optimization for all blocks. if this bit </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4443" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_o_c_o_p_t___1ga296bfb3571a0114784e3a138acbbcaab" prot="public" static="no">
        <name>LOCOPT_REFINE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>refine return type, ok to fail </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4445" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___l_o_c_o_p_t___1ga9e5610f6ff0180e7170b17906a56797f" prot="public" static="no">
        <name>LOCOPT_REFINE2</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>refine return type, try harder </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4446" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_c_f_l___1ga2e5c95e007e82831b2daee9dc12a5854" prot="public" static="no">
        <name>ACFL_LOCOPT</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>perform local propagation (requires ACFL_BLKOPT) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4467" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_c_f_l___1gab7c986dc790fd09e35d5daf6ff31fc8d" prot="public" static="no">
        <name>ACFL_BLKOPT</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>perform interblock transformations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4468" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_c_f_l___1ga55ce9942ccdb99ed16fa0d5444d8e059" prot="public" static="no">
        <name>ACFL_GLBPROP</name>
        <initializer>0x04</initializer>
        <briefdescription>
<para>perform global propagation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4469" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_c_f_l___1ga04ca2ba3441d3f24c2a6f45508c596f0" prot="public" static="no">
        <name>ACFL_GLBDEL</name>
        <initializer>0x08</initializer>
        <briefdescription>
<para>perform dead code eliminition </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4470" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___a_c_f_l___1gacd789976bcb9fc19118483acdb3f462c" prot="public" static="no">
        <name>ACFL_GUESS</name>
        <initializer>0x10</initializer>
        <briefdescription>
<para>may guess calling conventions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4471" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_r_u_n___1ga97680bee7e174d30ee06e95120df7310" prot="public" static="no">
        <name>VDRUN_NEWFILE</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>Create a new file or overwrite existing file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4900" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4900" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_r_u_n___1gabc11dff1df6a11f2e89b6a85f30e0320" prot="public" static="no">
        <name>VDRUN_APPEND</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>Create a new file or append to existing file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4901" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_r_u_n___1gaf7174cc47bbc3abcd55dbc425e2bd5ef" prot="public" static="no">
        <name>VDRUN_ONLYNEW</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>Fail if output file already exists. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4902" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4902" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_r_u_n___1ga935c60e4c1c2c0a4767228a56162eb6d" prot="public" static="no">
        <name>VDRUN_SILENT</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>Silent decompilation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4903" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4903" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_r_u_n___1gae392112cb50f18fe1c6a7396e573e487" prot="public" static="no">
        <name>VDRUN_SENDIDB</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>Send problematic databases to hex-rays.com. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4904" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4904" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_r_u_n___1gaa3a94d3ab44c4806ec2015eff6f6b758" prot="public" static="no">
        <name>VDRUN_MAYSTOP</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>the user can cancel decompilation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4905" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_r_u_n___1ga2de5694fdcd4f593ce2620dc0fa391a8" prot="public" static="no">
        <name>VDRUN_CMDLINE</name>
        <initializer>0x0020</initializer>
        <briefdescription>
<para>called from ida&apos;s command line </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4906" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4906" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_r_u_n___1gaaee9a4f58fed0181979fb91095b49d2e" prot="public" static="no">
        <name>VDRUN_STATS</name>
        <initializer>0x0040</initializer>
        <briefdescription>
<para>print statistics into vd_stats.txt </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4907" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4907" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_r_u_n___1ga25bc81c375f73458a546f6fba0773e9e" prot="public" static="no">
        <name>VDRUN_LUMINA</name>
        <initializer>0x0080</initializer>
        <briefdescription>
<para>use lumina server </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4908" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4908" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a0f917810c04afd340055db6721c2bf0c" prot="public" static="no">
        <name>GCO_STK</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>a stack variable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4978" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4978" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a478e81f34b0d8a9a08875d38ec148dfb" prot="public" static="no">
        <name>GCO_REG</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>is register? otherwise a stack variable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4979" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4979" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a19672c2070f553e46db38ad55c93301b" prot="public" static="no">
        <name>GCO_USE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>is source operand? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4980" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1af483b79563518afcea4c1c340d1e57a4" prot="public" static="no">
        <name>GCO_DEF</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>is destination operand? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4981" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4981" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v___1ga385bcb9903f94773c8071895341d5ce2" prot="public" static="no">
        <name>CV_FAST</name>
        <initializer>0x0000</initializer>
        <briefdescription>
<para>do not maintain parent information </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5297" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v___1ga279405e5dcaf13c8c430657c7290f134" prot="public" static="no">
        <name>CV_PRUNE</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>this bit is set by visit...() to prune the walk </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5298" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v___1ga9b2d109cab07925613d27b947762fa36" prot="public" static="no">
        <name>CV_PARENTS</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>maintain parent information </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5299" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v___1gab980b547ca14290c72d783c32cbd9c04" prot="public" static="no">
        <name>CV_POST</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>call the leave...() functions </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5300" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v___1ga266cbccf6172eca1ca42afaddaf40f41" prot="public" static="no">
        <name>CV_RESTART</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>restart enumeration at the top expr (apply_to_exprs) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5301" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_v___1gafa8b1f61bb64b94971309b12c7df2b85" prot="public" static="no">
        <name>CV_INSNS</name>
        <initializer>0x0010</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>visit only statements, prune all expressions do not use before the final ctree maturity because expressions may contain statements at intermediate stages (see cot_insn). Otherwise you risk missing statements embedded into expressions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5302" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1ga1ecb041b45c4a83925eb7aa419c590f5" prot="public" static="no">
        <name>EXFL_CPADONE</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>pointer arithmetic correction done </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5651" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5651" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1ga706ea35c0f22d780db644924a2b93d69" prot="public" static="no">
        <name>EXFL_LVALUE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>expression is lvalue even if it doesn&apos;t look like it </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5652" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1ga66ae2d4ab8ad523a944d7fee5d47d96b" prot="public" static="no">
        <name>EXFL_FPOP</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>floating point operation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5653" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1ga294d66cd552377b8b4b9061f4837520d" prot="public" static="no">
        <name>EXFL_ALONE</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>standalone helper </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5654" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1ga5f037b117acfd288d5008e5ed9743cab" prot="public" static="no">
        <name>EXFL_CSTR</name>
        <initializer>0x0010</initializer>
        <briefdescription>
<para>string literal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5655" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1gac33ac962623669517f70f1614399ce9a" prot="public" static="no">
        <name>EXFL_PARTIAL</name>
        <initializer>0x0020</initializer>
        <briefdescription>
<para>type of the expression is considered partial </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5656" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1ga8151eabb19e66480ce17784cab4ab14b" prot="public" static="no">
        <name>EXFL_UNDEF</name>
        <initializer>0x0040</initializer>
        <briefdescription>
<para>expression uses undefined value </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5657" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1gac3bd791e5c656bff8e2c78d8cfc49e61" prot="public" static="no">
        <name>EXFL_JUMPOUT</name>
        <initializer>0x0080</initializer>
        <briefdescription>
<para>jump out-of-function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5658" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1ga9ab7c406590be25350fd04ff7ae84240" prot="public" static="no">
        <name>EXFL_VFTABLE</name>
        <initializer>0x0100</initializer>
        <briefdescription>
<para>is ptr to vftable (used for cot_memptr, cot_memref) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5659" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___e_x_f_l___1ga04856cb51088c07bb6828a9c54f73979" prot="public" static="no">
        <name>EXFL_ALL</name>
        <initializer>0x01FF</initializer>
        <briefdescription>
<para>all currently defined bits </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5660" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5660" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1aa21cfae275ba6151455c2b17c8c1c5e4" prot="public" static="no">
        <name>CFL_FINAL</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>call type is final, should not be changed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6093" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6093" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1ae4e949c8f63556a7b8b73cab0be3de6e" prot="public" static="no">
        <name>CFL_HELPER</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>created from a decompiler helper function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6094" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6094" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a5d43410d29122a0592e587dc4a14c6f6" prot="public" static="no">
        <name>ANCHOR_INDEX</name>
        <initializer>0x1FFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6136" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a17fd5210d17779b6c606363bce556b74" prot="public" static="no">
        <name>ANCHOR_MASK</name>
        <initializer>0xC0000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6137" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a2f9d19a9c1b2bdf04b49c00039569c4e" prot="public" static="no">
        <name>ANCHOR_CITEM</name>
        <initializer>0x00000000</initializer>
        <briefdescription>
<para>c-tree item </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6138" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a634385ebb9bbc115c3c45e600968cddd" prot="public" static="no">
        <name>ANCHOR_LVAR</name>
        <initializer>0x40000000</initializer>
        <briefdescription>
<para>declaration of local variable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6139" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a228752ee4b0bff0c2b8ffc4e0af9ba6b" prot="public" static="no">
        <name>ANCHOR_ITP</name>
        <initializer>0x80000000</initializer>
        <briefdescription>
<para>item type preciser </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6140" column="11" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a5c42bda9e65289fb0e1ca79df9bd2729" prot="public" static="no">
        <name>ANCHOR_BLKCMT</name>
        <initializer>0x20000000</initializer>
        <briefdescription>
<para>block comment (for ctree items) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6141" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_l_n___1ga8467a1fc9cc304e25c944dd44b651b79" prot="public" static="no">
        <name>GLN_CURRENT</name>
        <initializer>0x01</initializer>
        <briefdescription>
<para>get label of the current item </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6213" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_l_n___1ga6ed2581a821f03b0d216261b9a13fcdd" prot="public" static="no">
        <name>GLN_GOTO_TARGET</name>
        <initializer>0x02</initializer>
        <briefdescription>
<para>get goto target </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6214" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___g_l_n___1gadebe307b05f7cce5bb9a7c65b49ebe6e" prot="public" static="no">
        <name>GLN_ALL</name>
        <initializer>0x03</initializer>
        <briefdescription>
<para>get both </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6215" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a1f63a79600be747fa00777519af28b8a" prot="public" static="no">
        <name>INS_EPILOG</name>
        <initializer>((<ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *)1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6404" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___c_i_t___1ga4ab812985cd59b921d6bf39dfbb75e74" prot="public" static="no">
        <name>CIT_COLLAPSED</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>display element in collapsed form </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6424" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1a5d9a84528b4dac584f2c08dc015adb8a" prot="public" static="no">
        <name>CFS_BOUNDS</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>&apos;eamap&apos; and &apos;boundaries&apos; are ready </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6429" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1abd92683d9fdaaa4e639c4b9d18d5c8d2" prot="public" static="no">
        <name>CFS_TEXT</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>&apos;sv&apos; is ready (and hdrlines) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6430" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="hexrays_8hpp_1aa802a5d60d656b5db30e13a4db2eacd5" prot="public" static="no">
        <name>CFS_LVARS_HIDDEN</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>local variable definitions are collapsed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6431" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_c_o_m_p___1gac6d1339ec4433df8f57ec2fcb9dac3ad" prot="public" static="no">
        <name>DECOMP_NO_WAIT</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>do not display waitbox </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6584" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_c_o_m_p___1gaa2583dff1010f5fd5fedf36d85275c6d" prot="public" static="no">
        <name>DECOMP_NO_CACHE</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>do not use decompilation cache </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6585" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_c_o_m_p___1ga00815eb7bce52dba1707ee4c7ebb4cab" prot="public" static="no">
        <name>DECOMP_NO_FRAME</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>do not use function frame info (only snippet mode) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6586" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___d_e_c_o_m_p___1ga79881f4dfb22869210c4cfae7b05c1b3" prot="public" static="no">
        <name>DECOMP_WARNINGS</name>
        <initializer>0x0008</initializer>
        <briefdescription>
<para>display warnings in the output window </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6587" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_u_i___1ga4f201bb67a5f0cb14d0299488eb8b98d" prot="public" static="no">
        <name>VDUI_VISIBLE</name>
        <initializer>0x0001</initializer>
        <briefdescription>
<para>is visible? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6991" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6991" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_u_i___1gacf0e1b6ef0b81c9922adc0e62c4a23dc" prot="public" static="no">
        <name>VDUI_VALID</name>
        <initializer>0x0002</initializer>
        <briefdescription>
<para>is valid? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6992" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6992" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___v_d_u_i___1ga95871315aeaa6cd0ebe405cb470886fa" prot="public" static="no">
        <name>VDUI_LOCKED</name>
        <initializer>0x0004</initializer>
        <briefdescription>
<para>is locked? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6993" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6993" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="hexrays_8hpp_1a73c53bacb25588538843a1dcfe5f382b" prot="public" static="no">
        <name>@100</name>
        <enumvalue id="hexrays_8hpp_1a73c53bacb25588538843a1dcfe5f382baa0ff8f4be3567839bf99c812ed72db0b" prot="public">
          <name>MAX_VLR_SIZE</name>
          <initializer>= sizeof(uvlr_t)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="301" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564" prot="public" static="no">
        <name>cmpop_t</name>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564a4f7a05a4dd2419588d43434fe752fe94" prot="public">
          <name>CMP_NZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564a8e6601d432a05b3af75d7eb7a7ba1bd8" prot="public">
          <name>CMP_Z</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564ace74c4231a0c5ea84952044ddb58189a" prot="public">
          <name>CMP_AE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564a6b5c7d6c88d8500ccf4c34428645c57c" prot="public">
          <name>CMP_B</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564a17105a6f859c12fb4bfde1ae8681c6bc" prot="public">
          <name>CMP_A</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564ab9d7369ed7af92458eea41ed28c1d27a" prot="public">
          <name>CMP_BE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564a22ef88c128421baa3180f5ab29776103" prot="public">
          <name>CMP_GT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564a6079dfc4afa6793daf9ff9088f850171" prot="public">
          <name>CMP_GE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564a2c3799538a8fd6f41c1f80941893ad34" prot="public">
          <name>CMP_LT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ac4222a9692736d391e7feeab1559a564a695ce417b3c1809628af09f78a7382f2" prot="public">
          <name>CMP_LE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="307" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="306" bodyend="318"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1ab389704d45fb9eef07e2e87a7d0a63f8" prot="public" static="no">
        <name>access_type_t</name>
        <enumvalue id="hexrays_8hpp_1ab389704d45fb9eef07e2e87a7d0a63f8a4c66cd69a45985317939a53d820fb9da" prot="public">
          <name>NO_ACCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ab389704d45fb9eef07e2e87a7d0a63f8a3ffa6efae04a5a66bad75f41a2e8708d" prot="public">
          <name>WRITE_ACCESS</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ab389704d45fb9eef07e2e87a7d0a63f8ac223a4833c94fa66ccb85f033d259d8a" prot="public">
          <name>READ_ACCESS</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ab389704d45fb9eef07e2e87a7d0a63f8abfc23c73884dfe533ea8d4f7bb5c8bb1" prot="public">
          <name>RW_ACCESS</name>
          <initializer>= WRITE_ACCESS | READ_ACCESS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="430" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="429" bodyend="435"/>
      </memberdef>
      <memberdef kind="enum" id="group___m_e_r_r___1ga124713999eb84ddba531f5c2e9eedcab" prot="public" static="no">
        <name>merror_t</name>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba828d4b355538f8be784e181fe31c81b6" prot="public">
          <name>MERR_OK</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>ok </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba68b0d57d3cddc5440c9b6ab0a2225893" prot="public">
          <name>MERR_BLOCK</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>no error, switch to new block </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabae97ffaf6a530a2615dabe4a5ff56eb2f" prot="public">
          <name>MERR_INTERR</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>internal error </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba83f4df23022f1613014b3e41447c8866" prot="public">
          <name>MERR_INSN</name>
          <initializer>= -2</initializer>
          <briefdescription>
<para>can not convert to microcode </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabafe1f012abeacb3a827f9f2f96a29744d" prot="public">
          <name>MERR_MEM</name>
          <initializer>= -3</initializer>
          <briefdescription>
<para>not enough memory </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba4ad1dd951937c72db8e3b350622be233" prot="public">
          <name>MERR_BADBLK</name>
          <initializer>= -4</initializer>
          <briefdescription>
<para>bad block found </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabaecb0b359efb51d8e01603fa94d107ed8" prot="public">
          <name>MERR_BADSP</name>
          <initializer>= -5</initializer>
          <briefdescription>
<para>positive sp value has been found </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabae6179e1f06d68931573cf02fc94f2bc7" prot="public">
          <name>MERR_PROLOG</name>
          <initializer>= -6</initializer>
          <briefdescription>
<para>prolog analysis failed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabaeef0df7fa07cb56835778cee12f2ce93" prot="public">
          <name>MERR_SWITCH</name>
          <initializer>= -7</initializer>
          <briefdescription>
<para>wrong switch idiom </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba5c2899a4f850a838b24886077aac8836" prot="public">
          <name>MERR_EXCEPTION</name>
          <initializer>= -8</initializer>
          <briefdescription>
<para>exception analysis failed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba4230a517b31fe744ccd19c3af711afcc" prot="public">
          <name>MERR_HUGESTACK</name>
          <initializer>= -9</initializer>
          <briefdescription>
<para>stack frame is too big </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabae94fce8ec92a80b153553d3efaa29519" prot="public">
          <name>MERR_LVARS</name>
          <initializer>= -10</initializer>
          <briefdescription>
<para>local variable allocation failed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabab854826da84451d9db934d4d457a15f3" prot="public">
          <name>MERR_BITNESS</name>
          <initializer>= -11</initializer>
          <briefdescription>
<para>only 32/16bit functions can be decompiled </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabaa604a61090fae9ed33ebdd8a0ddb993b" prot="public">
          <name>MERR_BADCALL</name>
          <initializer>= -12</initializer>
          <briefdescription>
<para>could not determine call arguments </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba2c7b88015ade2287151e2f02baa09b68" prot="public">
          <name>MERR_BADFRAME</name>
          <initializer>= -13</initializer>
          <briefdescription>
<para>function frame is wrong </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba187a5b4e63e4d0ceb37ce9e3b0866da9" prot="public">
          <name>MERR_UNKTYPE</name>
          <initializer>= -14</initializer>
          <briefdescription>
<para>undefined type s (currently unused error code) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba4b9faf0162e87c7ecdb7831494d75dc5" prot="public">
          <name>MERR_BADIDB</name>
          <initializer>= -15</initializer>
          <briefdescription>
<para>inconsistent database information </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabaaceef4c306d51fc589007c86519d55ca" prot="public">
          <name>MERR_SIZEOF</name>
          <initializer>= -16</initializer>
          <briefdescription>
<para>wrong basic type sizes in compiler settings </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabad0c491229fbe00eb203c509ecf229389" prot="public">
          <name>MERR_REDO</name>
          <initializer>= -17</initializer>
          <briefdescription>
<para>redecompilation has been requested </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba1843ee7cac69b0cca3c1d412ac46bf0f" prot="public">
          <name>MERR_CANCELED</name>
          <initializer>= -18</initializer>
          <briefdescription>
<para>decompilation has been cancelled </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba98228398169970e1ed347894871db41d" prot="public">
          <name>MERR_RECDEPTH</name>
          <initializer>= -19</initializer>
          <briefdescription>
<para>max recursion depth reached during lvar allocation </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabaea7661aa23e57a4449d43493ed85a124" prot="public">
          <name>MERR_OVERLAP</name>
          <initializer>= -20</initializer>
          <briefdescription>
<para>variables would overlap: s </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba70df27ba45b9e33cb7009d5a59bb6e36" prot="public">
          <name>MERR_PARTINIT</name>
          <initializer>= -21</initializer>
          <briefdescription>
<para>partially initialized variable s </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba8cee9f236554c523fe6c868a855476e6" prot="public">
          <name>MERR_COMPLEX</name>
          <initializer>= -22</initializer>
          <briefdescription>
<para>too complex function </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba0a3d7044b7712c306d319d8b3c9f231e" prot="public">
          <name>MERR_LICENSE</name>
          <initializer>= -23</initializer>
          <briefdescription>
<para>no license available </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba021d29fc4a49eef6e53b7ade91b6ea77" prot="public">
          <name>MERR_ONLY32</name>
          <initializer>= -24</initializer>
          <briefdescription>
<para>only 32-bit functions can be decompiled for the current database </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba98020aa51de595a2259e45a30cf8a9d2" prot="public">
          <name>MERR_ONLY64</name>
          <initializer>= -25</initializer>
          <briefdescription>
<para>only 64-bit functions can be decompiled for the current database </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba41f0de7d818dd6fa3b1627c6857e8bcd" prot="public">
          <name>MERR_BUSY</name>
          <initializer>= -26</initializer>
          <briefdescription>
<para>already decompiling a function </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba996ec0581737326d79c79f5551ac685b" prot="public">
          <name>MERR_FARPTR</name>
          <initializer>= -27</initializer>
          <briefdescription>
<para>far memory model is supported only for pc </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabaaf7017b89c358c8e2c1ce07b8c067d90" prot="public">
          <name>MERR_EXTERN</name>
          <initializer>= -28</initializer>
          <briefdescription>
<para>special segments can not be decompiled </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba6ecc8b50367996ea3a546698bcdb7e23" prot="public">
          <name>MERR_FUNCSIZE</name>
          <initializer>= -29</initializer>
          <briefdescription>
<para>too big function </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba769ba5b4ea369b905656b05e73fc4e06" prot="public">
          <name>MERR_BADRANGES</name>
          <initializer>= -30</initializer>
          <briefdescription>
<para>bad input ranges </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcaba9ca3829309621ade0c278386a2fd9e82" prot="public">
          <name>MERR_STOP</name>
          <initializer>= -31</initializer>
          <briefdescription>
<para>no error, stop the analysis </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabaf8b57e9ffe76a9f9563838c84a3ae50e" prot="public">
          <name>MERR_MAX_ERR</name>
          <initializer>= 31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___m_e_r_r___1gga124713999eb84ddba531f5c2e9eedcabac3c1a466ad675fd8adac1d02413bd761" prot="public">
          <name>MERR_LOOP</name>
          <initializer>= -32</initializer>
          <briefdescription>
<para>internal code: redo last loop (never reported) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="481" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="480" bodyend="517"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6" prot="public" static="no">
        <name>mcode_t</name>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a96acbb936a1f9ffa7f0a3ad1d7576136" prot="public">
          <name>m_nop</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a0025e6d928197d4ad4bdabaaec1d9137" prot="public">
          <name>m_stx</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a1c1d789ba3cb0ea885b856b914c01510" prot="public">
          <name>m_ldx</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a6ab9c664cf2b69372bafad5022ca0d17" prot="public">
          <name>m_ldc</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6afa0fc7e6d8a397d736e51e216f5565c1" prot="public">
          <name>m_mov</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a6f56b2a1710b028f1c2bb1769fab229f" prot="public">
          <name>m_neg</name>
          <initializer>= 0x05</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a92e726e48efc0a214b0cfaa1823baa4c" prot="public">
          <name>m_lnot</name>
          <initializer>= 0x06</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a283ae8622c210e6087c7e94c6357292a" prot="public">
          <name>m_bnot</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6afabc6e53e5cef860e75479035b06aac4" prot="public">
          <name>m_xds</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a394d2ed1683e35d2974f30041afcb7f3" prot="public">
          <name>m_xdu</name>
          <initializer>= 0x09</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a175299f83e4a175c2b38250788bbdb7b" prot="public">
          <name>m_low</name>
          <initializer>= 0x0A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6af2a236bbfd840c018599e8bbfd5f89af" prot="public">
          <name>m_high</name>
          <initializer>= 0x0B</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a9216ee1a3b9cc4f6acfa38f94d5ed628" prot="public">
          <name>m_add</name>
          <initializer>= 0x0C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ac2a0610c71bbf38897fbbf09c1ddbe0c" prot="public">
          <name>m_sub</name>
          <initializer>= 0x0D</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a571754b9f86266b16fde2b2196dc6baf" prot="public">
          <name>m_mul</name>
          <initializer>= 0x0E</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a6b428f9b98cbb21169ba00f221cea2a8" prot="public">
          <name>m_udiv</name>
          <initializer>= 0x0F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a49c51bb068b296fd8e3924879212128c" prot="public">
          <name>m_sdiv</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ac4a3c22c80ce3fb3ea0d0bbd015ad490" prot="public">
          <name>m_umod</name>
          <initializer>= 0x11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a98eade6b9312e2dcecfbb5dd59c920a7" prot="public">
          <name>m_smod</name>
          <initializer>= 0x12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a6586779fa3cce4c479a6ea7d309891f4" prot="public">
          <name>m_or</name>
          <initializer>= 0x13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a2c55800426d4c7c5be40a9ac8e93151d" prot="public">
          <name>m_and</name>
          <initializer>= 0x14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6aafa32a34a8473b111fcb23dec6d47288" prot="public">
          <name>m_xor</name>
          <initializer>= 0x15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a67a6b1842ab693d7ae4eb77f843f39dd" prot="public">
          <name>m_shl</name>
          <initializer>= 0x16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a8a5fff06c12cbe0df7b1768999d2d347" prot="public">
          <name>m_shr</name>
          <initializer>= 0x17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a8c3a9b181f2881f229dfa9c973912952" prot="public">
          <name>m_sar</name>
          <initializer>= 0x18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a4fb359646ac29630d2a305860e16efcc" prot="public">
          <name>m_cfadd</name>
          <initializer>= 0x19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a02c170ee00a4aa83caf41947d5f7527a" prot="public">
          <name>m_ofadd</name>
          <initializer>= 0x1A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a9655f2366253224d865915d3a8651d07" prot="public">
          <name>m_cfshl</name>
          <initializer>= 0x1B</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a74b62e741a650ea2ef923a985584302b" prot="public">
          <name>m_cfshr</name>
          <initializer>= 0x1C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a9465f7038eadfecf4fdc2c6746bb0d02" prot="public">
          <name>m_sets</name>
          <initializer>= 0x1D</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a5f0b9eff8d064dbbb945aebe981b04c4" prot="public">
          <name>m_seto</name>
          <initializer>= 0x1E</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a8ae80e497e0d06cf835e734569fef7df" prot="public">
          <name>m_setp</name>
          <initializer>= 0x1F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a7471243331fc08b40dc5069d8ea78f8f" prot="public">
          <name>m_setnz</name>
          <initializer>= 0x20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a7c35277fe797338ef06b8693ecf4a8bb" prot="public">
          <name>m_setz</name>
          <initializer>= 0x21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a6a1f3d639b43e7ab7df554e1ab0e468e" prot="public">
          <name>m_setae</name>
          <initializer>= 0x22</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a22b6f3503dc7ce36d37b62a83e356e73" prot="public">
          <name>m_setb</name>
          <initializer>= 0x23</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a4f2b206ea463be9f4a4117f05f268776" prot="public">
          <name>m_seta</name>
          <initializer>= 0x24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a06e54172db9ccc8e7460f7e28b76a5b5" prot="public">
          <name>m_setbe</name>
          <initializer>= 0x25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a3ae97c71ebaf47cf189cbc104bedd50b" prot="public">
          <name>m_setg</name>
          <initializer>= 0x26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a6fe2f5cbd0ff788db8b81e2344959c27" prot="public">
          <name>m_setge</name>
          <initializer>= 0x27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6aa2e4645dd325b9c9f5fd01a62c0b58f7" prot="public">
          <name>m_setl</name>
          <initializer>= 0x28</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6aabb67c4b5eb01cec082ca993cd933d15" prot="public">
          <name>m_setle</name>
          <initializer>= 0x29</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a84264b3c5d0742fee4e2828784357ad6" prot="public">
          <name>m_jcnd</name>
          <initializer>= 0x2A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ac34c9ecd26a90b7c066c988f3c500348" prot="public">
          <name>m_jnz</name>
          <initializer>= 0x2B</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a61cee53bdf6a4a362b48c8103a40dbeb" prot="public">
          <name>m_jz</name>
          <initializer>= 0x2C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a42b686b961c92c3707d668b3d363e1c1" prot="public">
          <name>m_jae</name>
          <initializer>= 0x2D</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ac8542d4a76a0b74af2e0b565ae509630" prot="public">
          <name>m_jb</name>
          <initializer>= 0x2E</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a5874154c62e3e95409c27abee34dad87" prot="public">
          <name>m_ja</name>
          <initializer>= 0x2F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a0f7cf41210cca6db20f4d1d0b09c8314" prot="public">
          <name>m_jbe</name>
          <initializer>= 0x30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ae7616d964d96cce0f606ccca8acd21fc" prot="public">
          <name>m_jg</name>
          <initializer>= 0x31</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ad6cdfc5feacb29499782acdfe0d14a59" prot="public">
          <name>m_jge</name>
          <initializer>= 0x32</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6af6c6b9a702df4e13cf69334c800020ea" prot="public">
          <name>m_jl</name>
          <initializer>= 0x33</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a8425497afd4434bd1afb194f3bc6224e" prot="public">
          <name>m_jle</name>
          <initializer>= 0x34</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6abb84e646e2f6940089f8e9e1c48f275f" prot="public">
          <name>m_jtbl</name>
          <initializer>= 0x35</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6acd976d2fe17aa4d75915b49670af6837" prot="public">
          <name>m_ijmp</name>
          <initializer>= 0x36</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6aa491ce460d8c137e3a501e4469270050" prot="public">
          <name>m_goto</name>
          <initializer>= 0x37</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a0e7099cdee480462dfe3f3a4adde3122" prot="public">
          <name>m_call</name>
          <initializer>= 0x38</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ac1383727cd2df6626e88f40e21dd288b" prot="public">
          <name>m_icall</name>
          <initializer>= 0x39</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a90cc7a38750081640db6e2a29eb0474e" prot="public">
          <name>m_ret</name>
          <initializer>= 0x3A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a35b8514351e07f50b2e038bb388b4811" prot="public">
          <name>m_push</name>
          <initializer>= 0x3B</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6aa1f6f4d6674f10d027a83a8804d236ee" prot="public">
          <name>m_pop</name>
          <initializer>= 0x3C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a1936121b3075738d5037c67eca851716" prot="public">
          <name>m_und</name>
          <initializer>= 0x3D</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6abe686cd9f993bd5eaefa4007f84a4b3b" prot="public">
          <name>m_ext</name>
          <initializer>= 0x3E</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ac693abf1ae6333f6138aab85bfad4fc2" prot="public">
          <name>m_f2i</name>
          <initializer>= 0x3F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6acff664076b5076c970a02e92b08b4436" prot="public">
          <name>m_f2u</name>
          <initializer>= 0x40</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a492838fabc1d9dc552c936a031ad214f" prot="public">
          <name>m_i2f</name>
          <initializer>= 0x41</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ae29634ce3cf08c5b69bfb20c113d82a5" prot="public">
          <name>m_u2f</name>
          <initializer>= 0x42</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6ac939aa2f20f85300576ed8ab538a9d5e" prot="public">
          <name>m_f2f</name>
          <initializer>= 0x43</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a9c05964b694570fcceea6d696530aa49" prot="public">
          <name>m_fneg</name>
          <initializer>= 0x44</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a3c79186057cfc7ba84651af16e7c9f42" prot="public">
          <name>m_fadd</name>
          <initializer>= 0x45</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a3a5fba0380cf89d1c9a6ec5984fcb595" prot="public">
          <name>m_fsub</name>
          <initializer>= 0x46</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a90a54d750a14ff7bff4e09869c667365" prot="public">
          <name>m_fmul</name>
          <initializer>= 0x47</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a4ffbeedd1d9eb64d250216cc0b90f2c6a073321510c9eddefd446de77aa9d392c" prot="public">
          <name>m_fdiv</name>
          <initializer>= 0x48</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="608" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="607" bodyend="683"/>
      </memberdef>
      <memberdef kind="enum" id="group__type_1ga5854abf74a525c70636b60ceea22eb58" prot="public" static="no">
        <name>type_source_t</name>
        <enumvalue id="group__type_1gga5854abf74a525c70636b60ceea22eb58aec905da0daf1b66d88bd8c828928c54b" prot="public">
          <name>GUESSED_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__type_1gga5854abf74a525c70636b60ceea22eb58a865fef498edd23fcb22ac3a14a206d4f" prot="public">
          <name>GUESSED_WEAK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__type_1gga5854abf74a525c70636b60ceea22eb58ac35e10b58d4cda5d78449a99beaa47d6" prot="public">
          <name>GUESSED_FUNC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__type_1gga5854abf74a525c70636b60ceea22eb58a942facd5b9599b51a725ab52f47438ac" prot="public">
          <name>GUESSED_DATA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__type_1gga5854abf74a525c70636b60ceea22eb58ac3d69ea137e3c873efc638d0604bfd42" prot="public">
          <name>TS_NOELL</name>
          <initializer>= 0x8000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__type_1gga5854abf74a525c70636b60ceea22eb58aa597428fce1756681e3b42abb8dc6070" prot="public">
          <name>TS_SHRINK</name>
          <initializer>= 0x4000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__type_1gga5854abf74a525c70636b60ceea22eb58a661418ad852d7d21f1b2a9325c3e3b04" prot="public">
          <name>TS_DONTREF</name>
          <initializer>= 0x2000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__type_1gga5854abf74a525c70636b60ceea22eb58afa17a1eb7d14d69d513731b049c57e60" prot="public">
          <name>TS_MASK</name>
          <initializer>= 0xE000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type source (where the type information comes from) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1101" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1100" bodyend="1110"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1aa0588c988a189345414477afda5de22c" prot="public" static="no">
        <name>side_effect_t</name>
        <enumvalue id="hexrays_8hpp_1aa0588c988a189345414477afda5de22ca94b959bd653d8ce11373fb607644d474" prot="public">
          <name>NO_SIDEFF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>change operand size but ignore side effects if you decide to keep the changed operand, handle_new_size() must be called </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aa0588c988a189345414477afda5de22caf55b37d6d243d09bb5a209c01547c187" prot="public">
          <name>WITH_SIDEFF</name>
          <briefdescription>
<para>change operand size and handle side effects </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aa0588c988a189345414477afda5de22ca1cd93e31b82366edf6f60ac3908586ab" prot="public">
          <name>ONLY_SIDEFF</name>
          <briefdescription>
<para>only handle side effects </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aa0588c988a189345414477afda5de22ca25a11b8167d6ef279f0b8ad332b94bf0" prot="public">
          <name>ANY_REGSIZE</name>
          <initializer>= 0x80</initializer>
          <briefdescription>
<para>any register size is permitted </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>How to handle side effect of change_size() Sometimes we need to create a temporary operand and change its size in order to check some hypothesis. If we revert our changes, we do not want that the database (global variables, stack frame, etc) changes in any manner. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2256" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2255" bodyend="2263"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433" prot="public" static="no">
        <name>funcrole_t</name>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a194f1071e79f1de6c8bdac44791910e7" prot="public">
          <name>ROLE_UNK</name>
          <briefdescription>
<para>unknown function role </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a33a18bd6add3f7db474a04827742d9ef" prot="public">
          <name>ROLE_EMPTY</name>
          <briefdescription>
<para>empty, does not do anything (maybe spoils regs) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433acca8cf5cfca8bb4cfe0e76f194dac5f6" prot="public">
          <name>ROLE_MEMSET</name>
          <briefdescription>
<para>memset(void *dst, uchar value, size_t count); </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433ade0fe4f154e83e6a8352f6c4aac2d4ff" prot="public">
          <name>ROLE_MEMSET32</name>
          <briefdescription>
<para>memset32(void *dst, uint32 value, size_t count); </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a35439cea7c8ae4af99435b7798aee723" prot="public">
          <name>ROLE_MEMSET64</name>
          <briefdescription>
<para>memset32(void *dst, uint64 value, size_t count); </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a7d21e53c89d841133ba4c7a396089c35" prot="public">
          <name>ROLE_MEMCPY</name>
          <briefdescription>
<para>memcpy(void *dst, const void *src, size_t count); </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433abf48dec3e5fbf771f77bb6efc8619867" prot="public">
          <name>ROLE_STRCPY</name>
          <briefdescription>
<para><ref refid="pro_8h_1a3c76c079d1e0dea93d871d02e407150e" kindref="member">strcpy(char *dst, const char *src)</ref>; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433ab93744ac158c3f1ecfaa097c63086832" prot="public">
          <name>ROLE_STRLEN</name>
          <briefdescription>
<para>strlen(const char *src); </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a5ee546a9c07efa61a3d55ef8e1460624" prot="public">
          <name>ROLE_STRCAT</name>
          <briefdescription>
<para><ref refid="pro_8h_1ad140927f9ba5dc16bf8d64b9fb92c187" kindref="member">strcat(char *dst, const char *src)</ref>; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a623680e93350fc0fa2fe3dc2012764d8" prot="public">
          <name>ROLE_TAIL</name>
          <briefdescription>
<para>char *tail(const char *str); </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a3035d4cd664e14725c9352d986aa2187" prot="public">
          <name>ROLE_BUG</name>
          <briefdescription>
<para>BUG() helper macro: never returns, causes exception. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a35c97d592f7c90605dc6befa9c9ba34c" prot="public">
          <name>ROLE_ALLOCA</name>
          <briefdescription>
<para>alloca() function </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433ae22f716b32b114fab84d687e8bd3bf04" prot="public">
          <name>ROLE_BSWAP</name>
          <briefdescription>
<para>bswap() function (any size) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a937e8fc2af91b081b11bc424b7f00532" prot="public">
          <name>ROLE_PRESENT</name>
          <briefdescription>
<para>present() function (used in patterns) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433ad833067dc6c90309adbba88e04cb4835" prot="public">
          <name>ROLE_CONTAINING_RECORD</name>
          <briefdescription>
<para>CONTAINING_RECORD() macro. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a397b5f7de3e1f48b7796cb4a8ea3ab04" prot="public">
          <name>ROLE_FASTFAIL</name>
          <briefdescription>
<para>__fastfail() </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a6acd8a97a6a5cc758931b8b6135e6b33" prot="public">
          <name>ROLE_READFLAGS</name>
          <briefdescription>
<para>__readeflags, __readcallersflags </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433acce20ece0914bd1dce5e65f93abcaea5" prot="public">
          <name>ROLE_IS_MUL_OK</name>
          <briefdescription>
<para>is_mul_ok </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a3df59cf2f9ba10fb4cdb2a77dbfca4df" prot="public">
          <name>ROLE_SATURATED_MUL</name>
          <briefdescription>
<para>saturated_mul </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a2daf95679e1cc2c6d6a5965389c3239e" prot="public">
          <name>ROLE_BITTEST</name>
          <briefdescription>
<para>[lock] bt </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a52927050cb766f622b4540602a3d91ff" prot="public">
          <name>ROLE_BITTESTANDSET</name>
          <briefdescription>
<para>[lock] bts </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433adcd8f2e18507c2b16176294ce261b723" prot="public">
          <name>ROLE_BITTESTANDRESET</name>
          <briefdescription>
<para>[lock] btr </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a9888a5f972c69066f6c5a8801d6c8ec0" prot="public">
          <name>ROLE_BITTESTANDCOMPLEMENT</name>
          <briefdescription>
<para>[lock] btc </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a19aa879e07ee1771f232825fb3980ac7" prot="public">
          <name>ROLE_VA_ARG</name>
          <briefdescription>
<para>va_arg() macro </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a0f9c9ddf4aa845ba377997dd9b6184f9" prot="public">
          <name>ROLE_VA_COPY</name>
          <briefdescription>
<para>va_copy() function </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433ab1313718fac0e66a75fd26d6861a876f" prot="public">
          <name>ROLE_VA_START</name>
          <briefdescription>
<para>va_start() function </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433ace2d8b0130d4324d8dc47a277dff1f18" prot="public">
          <name>ROLE_VA_END</name>
          <briefdescription>
<para>va_end() function </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433aeb84b2c502e1f30849324977aa422cc2" prot="public">
          <name>ROLE_ROL</name>
          <briefdescription>
<para>rotate left </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433ac351be5d30d576552d3cbf1a203a54ba" prot="public">
          <name>ROLE_ROR</name>
          <briefdescription>
<para>rotate right </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a67e9683c695e627ad71c0c4f98638094" prot="public">
          <name>ROLE_CFSUB3</name>
          <briefdescription>
<para>carry flag after subtract with carry </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433a8611d6a1e43f4bd3dce430f0563f02cd" prot="public">
          <name>ROLE_OFSUB3</name>
          <briefdescription>
<para>overflow flag after subtract with carry </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9478271479ecc04e2da33632f42b4433aade07b496deb1e2a948db0402f102587" prot="public">
          <name>ROLE_ABS</name>
          <briefdescription>
<para>integer absolute value </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function roles. They are used to calculate use/def lists and to recognize functions without using string comparisons. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2865" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2864" bodyend="2898"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1ad3be55ba2729b2e86049b98f74105203" prot="public" static="no">
        <name>mblock_type_t</name>
        <enumvalue id="hexrays_8hpp_1ad3be55ba2729b2e86049b98f74105203a06e42020ee6453eba85af5b155f3e45e" prot="public">
          <name>BLT_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>unknown block type </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ad3be55ba2729b2e86049b98f74105203a57da632c77fbf432217bb986baf7862c" prot="public">
          <name>BLT_STOP</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>stops execution regularly (must be the last block) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ad3be55ba2729b2e86049b98f74105203ac29b2ee354d280fbe0c05c75c6fe2d27" prot="public">
          <name>BLT_0WAY</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>does not have successors (tail is a noret function) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ad3be55ba2729b2e86049b98f74105203ad6c099a8aa619efc98703767b154c174" prot="public">
          <name>BLT_1WAY</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>passes execution to one block (regular or goto block) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ad3be55ba2729b2e86049b98f74105203a6522045fa6a2eec4793ceec8970a1338" prot="public">
          <name>BLT_2WAY</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>passes execution to two blocks (conditional jump) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ad3be55ba2729b2e86049b98f74105203af047f1657c544d7e792cabefb034f3e3" prot="public">
          <name>BLT_NWAY</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>passes execution to many blocks (switch idiom) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ad3be55ba2729b2e86049b98f74105203a31b6df013c3a0328a34446c2c62b62f3" prot="public">
          <name>BLT_XTRN</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>external block (out of function address) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Basic block types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3546" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3545" bodyend="3554"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5" prot="public" static="no">
        <name>warnid_t</name>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a442bc44030418babbd96beaa2ed8d6cd" prot="public">
          <name>WARN_VARARG_REGS</name>
          <briefdescription>
<para>0 can not handle register arguments in vararg function, discarded them </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a16bdc375c7aaf6047a2273f0ee7b2aed" prot="public">
          <name>WARN_ILL_PURGED</name>
          <briefdescription>
<para>1 odd caller purged bytes d, correcting </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a14d874ff50aab5dde9a87c266604dd0d" prot="public">
          <name>WARN_ILL_FUNCTYPE</name>
          <briefdescription>
<para>2 invalid function type has been ignored </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5abc804be9e20027cf2149c49943f3847b" prot="public">
          <name>WARN_VARARG_TCAL</name>
          <briefdescription>
<para>3 can not handle tail call to vararg </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5aa8d51c681df79aac5b09830c05862b65" prot="public">
          <name>WARN_VARARG_NOSTK</name>
          <briefdescription>
<para>4 call vararg without local stack </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a386e4c05f6847ca4cbe5c8b37dd1ba11" prot="public">
          <name>WARN_VARARG_MANY</name>
          <briefdescription>
<para>5 too many varargs, some ignored </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5abffeb9b9a2cda3bdfe16c811eed946a5" prot="public">
          <name>WARN_ADDR_OUTARGS</name>
          <briefdescription>
<para>6 can not handle address arithmetics in outgoing argument area of stack frame <ndash/> unused </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5af278c1054de365d2747ac42379e275dd" prot="public">
          <name>WARN_DEP_UNK_CALLS</name>
          <briefdescription>
<para>7 found interdependent unknown calls </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a9fe3e4ff70dfdc99cb391d853552323b" prot="public">
          <name>WARN_ILL_ELLIPSIS</name>
          <briefdescription>
<para>8 erroneously detected ellipsis type has been ignored </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a04b8246a1bf7125d3953265bed99e050" prot="public">
          <name>WARN_GUESSED_TYPE</name>
          <briefdescription>
<para>9 using guessed type s; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5aa4d37ebe058acd3f8a166c6a2aad7c18" prot="public">
          <name>WARN_EXP_LINVAR</name>
          <briefdescription>
<para>10 failed to expand a linear variable </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a79dbc0b44ee9f564a08e02fc081d97b7" prot="public">
          <name>WARN_WIDEN_CHAINS</name>
          <briefdescription>
<para>11 failed to widen chains </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a42227352f401f484b28b9bcd85c3fa14" prot="public">
          <name>WARN_BAD_PURGED</name>
          <briefdescription>
<para>12 inconsistent function type and number of purged bytes </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a2c488afe53087134d8fef331d1300d96" prot="public">
          <name>WARN_CBUILD_LOOPS</name>
          <briefdescription>
<para>13 too many cbuild loops </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a9d09f94ea563e2a67f3d6c3c46ddb944" prot="public">
          <name>WARN_NO_SAVE_REST</name>
          <briefdescription>
<para>14 could not find valid save-restore pair for s </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a13d43584e4070571ef5d677c65c533b7" prot="public">
          <name>WARN_ODD_INPUT_REG</name>
          <briefdescription>
<para>15 odd input register s </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a268c6b51a58b0c41ec250ec3191a5dbe" prot="public">
          <name>WARN_ODD_ADDR_USE</name>
          <briefdescription>
<para>16 odd use of a variable address </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5aaae64f82732a909ece2d17265002a578" prot="public">
          <name>WARN_MUST_RET_FP</name>
          <briefdescription>
<para>17 function return type is incorrect (must be floating point) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a885c9cc4cf222c37c4d57cd4a0457be1" prot="public">
          <name>WARN_ILL_FPU_STACK</name>
          <briefdescription>
<para>18 inconsistent fpu stack </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a8dc641dc2a34b41144916a8320156e98" prot="public">
          <name>WARN_SELFREF_PROP</name>
          <briefdescription>
<para>19 self-referencing variable has been detected </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5ab5d9a03865661cc49327d78371f1218b" prot="public">
          <name>WARN_WOULD_OVERLAP</name>
          <briefdescription>
<para>20 variables would overlap: s </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5ad4e2671f161d9f6fa9a1dfbca89f7327" prot="public">
          <name>WARN_ARRAY_INARG</name>
          <briefdescription>
<para>21 array has been used for an input argument </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5ad454fbbf044c9b4a7a11bb40108df0d0" prot="public">
          <name>WARN_MAX_ARGS</name>
          <briefdescription>
<para>22 too many input arguments, some ignored </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5ab30be8ee2793fb7be27f77c9c90075ab" prot="public">
          <name>WARN_BAD_FIELD_TYPE</name>
          <briefdescription>
<para>23 incorrect structure member type for s::s, ignored </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a7956040ff534cd0808859327208f6186" prot="public">
          <name>WARN_WRITE_CONST</name>
          <briefdescription>
<para>24 write access to const memory at a has been detected </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a523caeead32c83da7db4ec1790704c61" prot="public">
          <name>WARN_BAD_RETVAR</name>
          <briefdescription>
<para>25 wrong return variable </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a3f1c7a568a2b57543dcc676980262ff2" prot="public">
          <name>WARN_FRAG_LVAR</name>
          <briefdescription>
<para>26 fragmented variable at s may be wrong </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5abfe30c5ec25410781b203d958cfe9324" prot="public">
          <name>WARN_HUGE_STKOFF</name>
          <briefdescription>
<para>27 exceedingly huge offset into the stack frame </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a1fd5bed9154cd457a7a96c939fabdfa3" prot="public">
          <name>WARN_UNINITED_REG</name>
          <briefdescription>
<para>28 reference to an uninitialized register has been removed: s </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a131d05299a60b0b95f14dfefe9f9cb52" prot="public">
          <name>WARN_FIXED_MACRO</name>
          <briefdescription>
<para>29 fixed broken macro-insn </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a8eef9497a8179153090b65c0d4c0f2f2" prot="public">
          <name>WARN_WRONG_VA_OFF</name>
          <briefdescription>
<para>30 wrong offset of va_list variable </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a5f79dc14eb31f7d745af802eeca262b7" prot="public">
          <name>WARN_CR_NOFIELD</name>
          <briefdescription>
<para>31 CONTAINING_RECORD: no field &apos;s&apos; in struct &apos;s&apos; at d </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5ae1a6fa871a861a41f0435e4066b5a619" prot="public">
          <name>WARN_CR_BADOFF</name>
          <briefdescription>
<para>32 CONTAINING_RECORD: too small offset d for struct &apos;s&apos; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a071690c7b06a93d21144c4bffec19725" prot="public">
          <name>WARN_BAD_STROFF</name>
          <briefdescription>
<para>33 user specified stroff has not been processed: s </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a36aeee65258c520bcae3daf451442d48" prot="public">
          <name>WARN_BAD_VARSIZE</name>
          <briefdescription>
<para>34 inconsistent variable size for &apos;s&apos; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a42f9455b2d2b2e992ad0956b4bac042a" prot="public">
          <name>WARN_UNSUPP_REG</name>
          <briefdescription>
<para>35 unsupported processor register &apos;s&apos; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5adf4bbbe5f55f10fc4547a3f358ce0e95" prot="public">
          <name>WARN_UNALIGNED_ARG</name>
          <briefdescription>
<para>36 unaligned function argument &apos;s&apos; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5af31107ef08981a5bd78d79dae7f0dcbb" prot="public">
          <name>WARN_BAD_STD_TYPE</name>
          <briefdescription>
<para>37 corrupted or unexisting local type &apos;s&apos; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a7322b0690e2065f1d35e0e7cb8598ce0" prot="public">
          <name>WARN_BAD_CALL_SP</name>
          <briefdescription>
<para>38 bad sp value at call </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a47fb2247b03eba44e319aeaf426771c5" prot="public">
          <name>WARN_MISSED_SWITCH</name>
          <briefdescription>
<para>39 wrong markup of switch jump, skipped it </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5ae24063f6bd47fa7b81b0c6f64e6d68c1" prot="public">
          <name>WARN_BAD_SP</name>
          <briefdescription>
<para>40 positive sp value a has been found </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a90c48624184b1f0e0db2b2884eea499d" prot="public">
          <name>WARN_BAD_STKPNT</name>
          <briefdescription>
<para>41 wrong sp change point </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a493c0ef16413608c18fcfaa5b28c270f" prot="public">
          <name>WARN_UNDEF_LVAR</name>
          <briefdescription>
<para>42 variable &apos;s&apos; is possibly undefined </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5ab12c1f8a934ccdb491b855ad952eebcf" prot="public">
          <name>WARN_JUMPOUT</name>
          <briefdescription>
<para>43 control flows out of bounds </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5aed059b77883a6769e49b82483a48e1db" prot="public">
          <name>WARN_BAD_VALRNG</name>
          <briefdescription>
<para>44 values range analysis failed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1aebdeaae88840f33976d20594542de4b5a3da5514833e4ef4fc7b1aacac19eceda" prot="public">
          <name>WARN_MAX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Warning ids. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3959" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3958" bodyend="4007"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083" prot="public" static="no">
        <name>mba_maturity_t</name>
        <enumvalue id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083abbd862382fb4ee573d57006354b1c320" prot="public">
          <name>MMAT_ZERO</name>
          <briefdescription>
<para>microcode does not exist </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083aefa609bb77c8a4839e52637ea5915d5c" prot="public">
          <name>MMAT_GENERATED</name>
          <briefdescription>
<para>generated microcode </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083a9d5b397f94b5948906c2c5d4c5aca0ad" prot="public">
          <name>MMAT_PREOPTIMIZED</name>
          <briefdescription>
<para>preoptimized pass is complete </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083a4bead023125f17806d739fc6ca288978" prot="public">
          <name>MMAT_LOCOPT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>local optimization of each basic block is complete. control flow graph is ready too. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083a78d6912c67859bff67df347beac2c1d3" prot="public">
          <name>MMAT_CALLS</name>
          <briefdescription>
<para>detected call arguments </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083a85343a5fa31d2d1949a514b54d0acc5e" prot="public">
          <name>MMAT_GLBOPT1</name>
          <briefdescription>
<para>performed the first pass of global optimization </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083ad9c794d25e4d154fe791162b19a523f8" prot="public">
          <name>MMAT_GLBOPT2</name>
          <briefdescription>
<para>most global optimization passes are done </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083ac695d03895f45301b6497d07e2b259c1" prot="public">
          <name>MMAT_GLBOPT3</name>
          <briefdescription>
<para>completed all global optimization </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1ae93e2420cb256ed6452f43c5b0228083a67e36522243ae03a2ee65eb4676494af" prot="public">
          <name>MMAT_LVARS</name>
          <briefdescription>
<para>allocated local variables </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Microcode maturity levels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4034" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4033" bodyend="4045"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a0d8066e2867dcb3e663632bc4bdc8ffa" prot="public" static="no">
        <name>memreg_index_t</name>
        <enumvalue id="hexrays_8hpp_1a0d8066e2867dcb3e663632bc4bdc8ffaa332a05724d2fdf4762f6ca6690cdb7ad" prot="public">
          <name>MMIDX_GLBLOW</name>
          <briefdescription>
<para>global memory: low part </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a0d8066e2867dcb3e663632bc4bdc8ffaafb158b0a0dd77d7c9c97f12da5a44412" prot="public">
          <name>MMIDX_LVARS</name>
          <briefdescription>
<para>stack: local variables </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a0d8066e2867dcb3e663632bc4bdc8ffaadb23df3f659aa498d62602967a629b2c" prot="public">
          <name>MMIDX_RETADDR</name>
          <briefdescription>
<para>stack: return address </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a0d8066e2867dcb3e663632bc4bdc8ffaa13ba6bae9721d00fe5fc26bbf570f5bf" prot="public">
          <name>MMIDX_SHADOW</name>
          <briefdescription>
<para>stack: shadow arguments </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a0d8066e2867dcb3e663632bc4bdc8ffaa85e8bfc7d09790603ef87e996108c1c9" prot="public">
          <name>MMIDX_ARGS</name>
          <briefdescription>
<para>stack: regular stack arguments </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a0d8066e2867dcb3e663632bc4bdc8ffaa390ed55bf086b92d7ea5ec255a159038" prot="public">
          <name>MMIDX_GLBHIGH</name>
          <briefdescription>
<para>global memory: high part </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>&lt; memory region types </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4049" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4048" bodyend="4056"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a781af894a894a59f9229aef3f6ee4329" prot="public" static="no">
        <name>gctype_t</name>
        <enumvalue id="hexrays_8hpp_1a781af894a894a59f9229aef3f6ee4329a629812e3d0d9e7a338bc2016eeabc388" prot="public">
          <name>GC_REGS_AND_STKVARS</name>
          <briefdescription>
<para>registers and stkvars (restricted memory only) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a781af894a894a59f9229aef3f6ee4329a21c35873e65e8aecad005cb318fdbc8f" prot="public">
          <name>GC_ASR</name>
          <briefdescription>
<para>all the above and assertions </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a781af894a894a59f9229aef3f6ee4329aae12c01d797e354a3c4814a643d61e5d" prot="public">
          <name>GC_XDSU</name>
          <briefdescription>
<para>only registers calculated with FULL_XDSU </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a781af894a894a59f9229aef3f6ee4329a2710ffdaac76c5e15d7343aa6d51b36a" prot="public">
          <name>GC_END</name>
          <briefdescription>
<para>number of chain types </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a781af894a894a59f9229aef3f6ee4329a03b247d930a942a65e3d56345f819efa" prot="public">
          <name>GC_DIRTY_ALL</name>
          <initializer>= (1 &lt;&lt; (2*GC_END))-1</initializer>
          <briefdescription>
<para>bitmask to represent all chains </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Kind of use-def and def-use chains. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4617" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4616" bodyend="4623"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0" prot="public" static="no">
        <name>ctype_t</name>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0abde4533ce60b7573b9c22f02f289eb83" prot="public">
          <name>cot_empty</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ac0d1d56d6105aff75d40a7ad0560245f" prot="public">
          <name>cot_comma</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>x, y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a4d4dfc2e78620acca875cbef70a5ee21" prot="public">
          <name>cot_asg</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>x = y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a255c865623e48382f9182859adf83bb6" prot="public">
          <name>cot_asgbor</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>x |= y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a018b53cf2e54a923bc1fee7386d8fda4" prot="public">
          <name>cot_asgxor</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>x ^= y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0abb1cd1f9b1546ff7d472fad75dd4bfd2" prot="public">
          <name>cot_asgband</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>x &amp;= y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a63ec43859f35a8256e75adf0fdfdce9f" prot="public">
          <name>cot_asgadd</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>x += y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0acc3c5a436a3cafbeda264d1da62d172f" prot="public">
          <name>cot_asgsub</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>x -= y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a6f6c2f0e15e498f43f0369c2b1c0cc82" prot="public">
          <name>cot_asgmul</name>
          <initializer>= 8</initializer>
          <briefdescription>
<para>x *= y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a5daff1f679a7a606e2c5a20792451879" prot="public">
          <name>cot_asgsshr</name>
          <initializer>= 9</initializer>
          <briefdescription>
<para>x &gt;&gt;= y signed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a96115a4ea44aa521f51dd52d815a7d3d" prot="public">
          <name>cot_asgushr</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>x &gt;&gt;= y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a31039bd83227a7c1620f41bb6abb3b86" prot="public">
          <name>cot_asgshl</name>
          <initializer>= 11</initializer>
          <briefdescription>
<para>x &lt;&lt;= y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a10dee8c6444fa35a94386e5044e850e3" prot="public">
          <name>cot_asgsdiv</name>
          <initializer>= 12</initializer>
          <briefdescription>
<para>x /= y signed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0aece55d097aa8a2ad98d83c6ab8678a6f" prot="public">
          <name>cot_asgudiv</name>
          <initializer>= 13</initializer>
          <briefdescription>
<para>x /= y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0abe405dadd74d94e57c405b232923325b" prot="public">
          <name>cot_asgsmod</name>
          <initializer>= 14</initializer>
          <briefdescription>
<para>x %= y signed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ae741005f95f8e08cfbf54648825d3832" prot="public">
          <name>cot_asgumod</name>
          <initializer>= 15</initializer>
          <briefdescription>
<para>x %= y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a2294c2e3c0cc5e29e73b87ada108765c" prot="public">
          <name>cot_tern</name>
          <initializer>= 16</initializer>
          <briefdescription>
<para>x ? y : z </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a221a986fdfff382fe14508306e2a321c" prot="public">
          <name>cot_lor</name>
          <initializer>= 17</initializer>
          <briefdescription>
<para>x || y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0af9f8d4eb12bdc21b12d684e3ff1b8557" prot="public">
          <name>cot_land</name>
          <initializer>= 18</initializer>
          <briefdescription>
<para>x &amp;&amp; y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0adaf24475c92cf312f0bc97292ff21974" prot="public">
          <name>cot_bor</name>
          <initializer>= 19</initializer>
          <briefdescription>
<para>x | y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a402d9ff0fde97ea08c159c97fc42952a" prot="public">
          <name>cot_xor</name>
          <initializer>= 20</initializer>
          <briefdescription>
<para>x ^ y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0abfec360a3a6fe4e10b83d71c2e664d46" prot="public">
          <name>cot_band</name>
          <initializer>= 21</initializer>
          <briefdescription>
<para>x &amp; y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a5fa0a951d40d2c2a5d13a86da44dfd03" prot="public">
          <name>cot_eq</name>
          <initializer>= 22</initializer>
          <briefdescription>
<para>x == y int or fpu (see EXFL_FPOP) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a6937ad2feaaca0ac0e952757cf4627bb" prot="public">
          <name>cot_ne</name>
          <initializer>= 23</initializer>
          <briefdescription>
<para>x != y int or fpu (see EXFL_FPOP) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ab48498939824fc7b081636ee6f059b52" prot="public">
          <name>cot_sge</name>
          <initializer>= 24</initializer>
          <briefdescription>
<para>x &gt;= y signed or fpu (see EXFL_FPOP) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a90e5194bfc42898a527cffd55f03e2e9" prot="public">
          <name>cot_uge</name>
          <initializer>= 25</initializer>
          <briefdescription>
<para>x &gt;= y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0aa9173b87ccb720918e8daeb9a7999b2c" prot="public">
          <name>cot_sle</name>
          <initializer>= 26</initializer>
          <briefdescription>
<para>x &lt;= y signed or fpu (see EXFL_FPOP) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a05e7a65f62a19e871a7e5665c924e289" prot="public">
          <name>cot_ule</name>
          <initializer>= 27</initializer>
          <briefdescription>
<para>x &lt;= y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a17715a916c50aa288cd9d335cf0a8769" prot="public">
          <name>cot_sgt</name>
          <initializer>= 28</initializer>
          <briefdescription>
<para>x &gt; y signed or fpu (see EXFL_FPOP) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ae7f52639583bb0f550fa82662fc36064" prot="public">
          <name>cot_ugt</name>
          <initializer>= 29</initializer>
          <briefdescription>
<para>x &gt; y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a5438eb41bc3c4447edd4d4dfac23f16d" prot="public">
          <name>cot_slt</name>
          <initializer>= 30</initializer>
          <briefdescription>
<para>x &lt; y signed or fpu (see EXFL_FPOP) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a82e5ea8a98e1222e75e17e6dde2fc23d" prot="public">
          <name>cot_ult</name>
          <initializer>= 31</initializer>
          <briefdescription>
<para>x &lt; y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a4b00be03c50d2b4d4f3566286e1ca672" prot="public">
          <name>cot_sshr</name>
          <initializer>= 32</initializer>
          <briefdescription>
<para>x &gt;&gt; y signed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0aaa590e1a3ae18c8444fd0840ed5361d3" prot="public">
          <name>cot_ushr</name>
          <initializer>= 33</initializer>
          <briefdescription>
<para>x &gt;&gt; y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a3bd08ed3ba07ca5a7c3df978d5c03395" prot="public">
          <name>cot_shl</name>
          <initializer>= 34</initializer>
          <briefdescription>
<para>x &lt;&lt; y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a47e3be0600d73972616176ba76eb3876" prot="public">
          <name>cot_add</name>
          <initializer>= 35</initializer>
          <briefdescription>
<para>x + y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a51778ca6f27e8da710b613b7796190c9" prot="public">
          <name>cot_sub</name>
          <initializer>= 36</initializer>
          <briefdescription>
<para>x - y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a585f960ba8ca2e2add209b90a4870853" prot="public">
          <name>cot_mul</name>
          <initializer>= 37</initializer>
          <briefdescription>
<para>x * y </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a18efb9fbca30bbeddf0db12a1b6599a4" prot="public">
          <name>cot_sdiv</name>
          <initializer>= 38</initializer>
          <briefdescription>
<para>x / y signed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a5c78aaf8a1c3461f7b75c832bbb82162" prot="public">
          <name>cot_udiv</name>
          <initializer>= 39</initializer>
          <briefdescription>
<para>x / y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ad8435817cee0dde6daeb2893f7448a90" prot="public">
          <name>cot_smod</name>
          <initializer>= 40</initializer>
          <briefdescription>
<para>x % y signed </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0adf21c2367cf9e61f012cc9815291ab60" prot="public">
          <name>cot_umod</name>
          <initializer>= 41</initializer>
          <briefdescription>
<para>x % y unsigned </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a92d2ab3c295a723c52a22e35fa6c87b8" prot="public">
          <name>cot_fadd</name>
          <initializer>= 42</initializer>
          <briefdescription>
<para>x + y fp </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0aaf1aaab331d29b3cab5bc8ffe113b781" prot="public">
          <name>cot_fsub</name>
          <initializer>= 43</initializer>
          <briefdescription>
<para>x - y fp </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0af0992404f1ed4e25a1a3025fc33a7733" prot="public">
          <name>cot_fmul</name>
          <initializer>= 44</initializer>
          <briefdescription>
<para>x * y fp </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0aaacf6f8798f955a8dc0cd1f45fd50fc1" prot="public">
          <name>cot_fdiv</name>
          <initializer>= 45</initializer>
          <briefdescription>
<para>x / y fp </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a7f920e9ff2b30743fdfddc32d81511de" prot="public">
          <name>cot_fneg</name>
          <initializer>= 46</initializer>
          <briefdescription>
<para>-x fp </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a3f9c134a1a69d1297ff6ec52cd1e547c" prot="public">
          <name>cot_neg</name>
          <initializer>= 47</initializer>
          <briefdescription>
<para>-x </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a161387b6f314e3dfa11920286c24cd11" prot="public">
          <name>cot_cast</name>
          <initializer>= 48</initializer>
          <briefdescription>
<para>(type)x </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a2bbacb6bfac7ceb050684d26e9ebc7b9" prot="public">
          <name>cot_lnot</name>
          <initializer>= 49</initializer>
          <briefdescription>
<para>!x </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ac088fd9675476002ebd43dc876b712ce" prot="public">
          <name>cot_bnot</name>
          <initializer>= 50</initializer>
          <briefdescription>
<para>~x </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a35b1ffbacbd4d1d201d6de50a9977dcf" prot="public">
          <name>cot_ptr</name>
          <initializer>= 51</initializer>
          <briefdescription>
<para>*x, access size in &apos;ptrsize&apos; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a6799b9cf10e5fe9cdd086ccb837dfe50" prot="public">
          <name>cot_ref</name>
          <initializer>= 52</initializer>
          <briefdescription>
<para>&amp;x </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a9e13635fea62ee314b0d032d6e66ca3d" prot="public">
          <name>cot_postinc</name>
          <initializer>= 53</initializer>
          <briefdescription>
<para>x++ </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a98405437f1d8cceaa0519ef9256c7b78" prot="public">
          <name>cot_postdec</name>
          <initializer>= 54</initializer>
          <briefdescription>
<para>x<ndash/> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a39caab105aebe16aaa688586807febab" prot="public">
          <name>cot_preinc</name>
          <initializer>= 55</initializer>
          <briefdescription>
<para>++x </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a6f44217d3f291ef8f559b5c1135dde3d" prot="public">
          <name>cot_predec</name>
          <initializer>= 56</initializer>
          <briefdescription>
<para><ndash/>x </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a04db2a2dc7ccd674cd65961a1cbfa946" prot="public">
          <name>cot_call</name>
          <initializer>= 57</initializer>
          <briefdescription>
<para>x(...) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0aede7553d322ba29d15ccd822dbbfdfb2" prot="public">
          <name>cot_idx</name>
          <initializer>= 58</initializer>
          <briefdescription>
<para>x[y] </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a985246cb4ee06530ecc79b008c0fb4de" prot="public">
          <name>cot_memref</name>
          <initializer>= 59</initializer>
          <briefdescription>
<para>x.m </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ae3e4d82180f45fb9b5bea23c1b7652b8" prot="public">
          <name>cot_memptr</name>
          <initializer>= 60</initializer>
          <briefdescription>
<para>x-&gt;m, access size in &apos;ptrsize&apos; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0abf0d759e3d58f292b7f2d58426a61d97" prot="public">
          <name>cot_num</name>
          <initializer>= 61</initializer>
          <briefdescription>
<para>n </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a9674f15283ef263bc5761ab2acf7d351" prot="public">
          <name>cot_fnum</name>
          <initializer>= 62</initializer>
          <briefdescription>
<para>fpc </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ab10a41eba4c966ed6e9c296f320ef23c" prot="public">
          <name>cot_str</name>
          <initializer>= 63</initializer>
          <briefdescription>
<para>string constant </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a3cf15987b186f45a388c6ea4c1570eb7" prot="public">
          <name>cot_obj</name>
          <initializer>= 64</initializer>
          <briefdescription>
<para>obj_ea </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ab14b83968b335f22073c50ab2fedd724" prot="public">
          <name>cot_var</name>
          <initializer>= 65</initializer>
          <briefdescription>
<para>v </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a1e04580eba6dd1426bc64a5d80adb8c0" prot="public">
          <name>cot_insn</name>
          <initializer>= 66</initializer>
          <briefdescription>
<para>instruction in expression, internal representation only </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0aa0ca317b22e32a4b0230786931fa5d68" prot="public">
          <name>cot_sizeof</name>
          <initializer>= 67</initializer>
          <briefdescription>
<para>sizeof(x) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a75bce0902fc680af4297ac54d66b5f23" prot="public">
          <name>cot_helper</name>
          <initializer>= 68</initializer>
          <briefdescription>
<para>arbitrary name </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a50ddd952a8aa6bd6026b864ed5a0e167" prot="public">
          <name>cot_type</name>
          <initializer>= 69</initializer>
          <briefdescription>
<para>arbitrary type </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a2c3ace21bc1e2030b49487ec5b12f02f" prot="public">
          <name>cot_last</name>
          <initializer>= cot_type</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a6a92c798d86151a3fc2b8a12f139f56a" prot="public">
          <name>cit_empty</name>
          <initializer>= 70</initializer>
          <briefdescription>
<para>instruction types start here </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a25d2c0fb54baba4b449d374edb848ff0" prot="public">
          <name>cit_block</name>
          <initializer>= 71</initializer>
          <briefdescription>
<para>block-statement: { ... } </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0af156f7e5b609957950beb952ba0d2f6e" prot="public">
          <name>cit_expr</name>
          <initializer>= 72</initializer>
          <briefdescription>
<para>expression-statement: expr; </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0acd186c30817c03599e1ad0ce42fe199c" prot="public">
          <name>cit_if</name>
          <initializer>= 73</initializer>
          <briefdescription>
<para>if-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0afe3e0ce4aa8882102a767de33bee574f" prot="public">
          <name>cit_for</name>
          <initializer>= 74</initializer>
          <briefdescription>
<para>for-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0aaca49ab97bca5b0f2d2e6491c39663fa" prot="public">
          <name>cit_while</name>
          <initializer>= 75</initializer>
          <briefdescription>
<para>while-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a1dcca29c00738911e55030bb877d8f17" prot="public">
          <name>cit_do</name>
          <initializer>= 76</initializer>
          <briefdescription>
<para>do-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0abab1dd3147e79cc9dd74c74aee948012" prot="public">
          <name>cit_switch</name>
          <initializer>= 77</initializer>
          <briefdescription>
<para>switch-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a12699ff52b8f018c9315554573ffe1dc" prot="public">
          <name>cit_break</name>
          <initializer>= 78</initializer>
          <briefdescription>
<para>break-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a2a8878ff149fda2e3e173e5e01eb6228" prot="public">
          <name>cit_continue</name>
          <initializer>= 79</initializer>
          <briefdescription>
<para>continue-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a609856ee4675237c2d6d121cb6fa1dc9" prot="public">
          <name>cit_return</name>
          <initializer>= 80</initializer>
          <briefdescription>
<para>return-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ab6bf78497a6b4f7c89314505478d8684" prot="public">
          <name>cit_goto</name>
          <initializer>= 81</initializer>
          <briefdescription>
<para>goto-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0a6aff3f04ea2390c8bf3d689d52200813" prot="public">
          <name>cit_asm</name>
          <initializer>= 82</initializer>
          <briefdescription>
<para>asm-statement </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8fff5d4d0a6974af5b5aa3feeebab2a0ae668f755ce0e9e67fbc1f39cb4b496bc" prot="public">
          <name>cit_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ctree element type. At the beginning of this list there are expression elements (cot_...), followed by statement elements (cit_...). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5006" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5005" bodyend="5092"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184c" prot="public" static="no">
        <name>ctree_maturity_t</name>
        <enumvalue id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184cae9a57608e70fd3ef9f54dae414122d57" prot="public">
          <name>CMAT_ZERO</name>
          <briefdescription>
<para>does not exist </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184ca5adf02f5191d83c97306a8e15514c901" prot="public">
          <name>CMAT_BUILT</name>
          <briefdescription>
<para>just generated </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184cadbb420d70850c3d0d806cb11fe93ff35" prot="public">
          <name>CMAT_TRANS1</name>
          <briefdescription>
<para>applied first wave of transformations </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184caa471f93cdbb1297165319b5b6f876ca5" prot="public">
          <name>CMAT_NICE</name>
          <briefdescription>
<para>nicefied expressions </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184cab42bcdac3660ab857dec626873abb1be" prot="public">
          <name>CMAT_TRANS2</name>
          <briefdescription>
<para>applied second wave of transformations </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184ca3b9f82f9f2d58e82518a83151aade2d3" prot="public">
          <name>CMAT_CPA</name>
          <briefdescription>
<para>corrected pointer arithmetic </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184cab57ebccc9a92e05a11dedb35d2172afc" prot="public">
          <name>CMAT_TRANS3</name>
          <briefdescription>
<para>applied third wave of transformations </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184ca563e5197afb955a36716bfad1c8293de" prot="public">
          <name>CMAT_CASTED</name>
          <briefdescription>
<para>added necessary casts </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a790f6dc7bb52f65a7290154cd553184ca4917ec6f3a02f1564ec4e632befb4de6" prot="public">
          <name>CMAT_FINAL</name>
          <briefdescription>
<para>ready-to-use </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ctree maturity level. The level will increase as we switch from one phase of ctree generation to the next one </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5432" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5431" bodyend="5442"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aee" prot="public" static="no">
        <name>item_preciser_t</name>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeea82c1daf378bfd6fa225dc8fa5a91ac68" prot="public">
          <name>ITP_EMPTY</name>
          <briefdescription>
<para>nothing </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeeae6cda3c9b87540485cb14ddbb2c626d5" prot="public">
          <name>ITP_ARG1</name>
          <briefdescription>
<para>, (64 entries are reserved for 64 call arguments) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeead5012bb15523c770285f72eccc93db4f" prot="public">
          <name>ITP_ARG64</name>
          <initializer>= ITP_ARG1+63</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeeae189fd93856b509ad2491f7b0c620e8c" prot="public">
          <name>ITP_BRACE1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeea4e5d28089078487dc5eaf6cf81f8130f" prot="public">
          <name>ITP_INNER_LAST</name>
          <initializer>= ITP_BRACE1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeea0939470f22505bc1188a06f471245030" prot="public">
          <name>ITP_ASM</name>
          <briefdescription>
<para>__asm-line </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeeac7a09e93bb41be1c94cb6d4eff6bd0b5" prot="public">
          <name>ITP_ELSE</name>
          <briefdescription>
<para>else-line </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeeac8bd611d0c62d2baf4f9a713bbb70f9d" prot="public">
          <name>ITP_DO</name>
          <briefdescription>
<para>do-line </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeea32ba0263a219d2eb439f8b04be79cbe0" prot="public">
          <name>ITP_SEMI</name>
          <briefdescription>
<para>semicolon </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeeadeefd3c225dbac505b46194a6b719332" prot="public">
          <name>ITP_CURLY1</name>
          <briefdescription>
<para>{ </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeea5c0538282bf8983630d40d8f2c330b9b" prot="public">
          <name>ITP_CURLY2</name>
          <briefdescription>
<para>} </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeeaed17f59a33131ad37308383c917e694c" prot="public">
          <name>ITP_BRACE2</name>
          <briefdescription>
<para>) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeea995d26e1090cee6e3be07be3a541926d" prot="public">
          <name>ITP_COLON</name>
          <briefdescription>
<para>: (label) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeeaf7bdb6a6072fa3aedfe529a916b29cb8" prot="public">
          <name>ITP_BLOCK1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>opening block comment. this comment is printed before the item (other comments are indented and printed after the item) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeea195981882d4a23d2dd9119e8c1fb0e9e" prot="public">
          <name>ITP_BLOCK2</name>
          <briefdescription>
<para>closing block comment. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeea0dce5d59592f892f0965c63cc5860a25" prot="public">
          <name>ITP_CASE</name>
          <initializer>= 0x40000000</initializer>
          <briefdescription>
<para>bit for switch cases </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a219c95f85c085e6f539b8d3b96074aeea73c598526d47b0c5595ada5c3e841909" prot="public">
          <name>ITP_SIGN</name>
          <initializer>= 0x20000000</initializer>
          <briefdescription>
<para>if this bit is set too, then we have a negative case value </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comment item preciser. Item preciser is used to assign comments to ctree items A ctree item may have several comments attached to it. For example, an if-statement may have the following comments: <preformatted>
 if ( ... )    // cmt1
 {             // cmt2
 }             // cmt3
 else          // cmt4
 {                     -- usually the else block has a separate ea
 } </preformatted> The first 4 comments will have the same ea. In order to denote the exact line for the comment, we store the item_preciser along with ea. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5458" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5457" bodyend="5481"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a36bde2dda12c865569b86afef70b5afd" prot="public" static="no">
        <name>cmt_retrieval_type_t</name>
        <enumvalue id="hexrays_8hpp_1a36bde2dda12c865569b86afef70b5afda2e15a5c949a26c6bf834b61d4b25cd47" prot="public">
          <name>RETRIEVE_ONCE</name>
          <briefdescription>
<para>Retrieve comment if it has not been used yet. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a36bde2dda12c865569b86afef70b5afda24eb4cba0c0b595bfdebc5d0eee85dc9" prot="public">
          <name>RETRIEVE_ALWAYS</name>
          <briefdescription>
<para>Retrieve comment even if it has been used. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Comment retrieval type. Ctree remembers what comments have already been retrieved. This is done because our mechanism of item_precisers is still not perfect and in theory some listing lines can not be told apart. To avoid comment duplication, we remember if a comment has already been used or not. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5506" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5505" bodyend="5509"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a8c688eb2cb3b3c76d46ac2c1a9063f90" prot="public" static="no">
        <name>use_curly_t</name>
        <enumvalue id="hexrays_8hpp_1a8c688eb2cb3b3c76d46ac2c1a9063f90a48bcf33218ded972840e5cf8816820b9" prot="public">
          <name>CALC_CURLY_BRACES</name>
          <briefdescription>
<para>print curly braces if necessary </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8c688eb2cb3b3c76d46ac2c1a9063f90acbe2b0adc476c09f747d3015e21f2598" prot="public">
          <name>NO_CURLY_BRACES</name>
          <briefdescription>
<para>don&apos;t print curly braces </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a8c688eb2cb3b3c76d46ac2c1a9063f90a0e711536894e9d113596e0bb0d60f30e" prot="public">
          <name>USE_CURLY_BRACES</name>
          <briefdescription>
<para>print curly braces without any checks </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Should curly braces be printed? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5886" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5885" bodyend="5890"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a05b1756b916909b8b3824603bc01b4d4" prot="public" static="no">
        <name>cursor_item_type_t</name>
        <enumvalue id="hexrays_8hpp_1a05b1756b916909b8b3824603bc01b4d4aa2a0382e0fc8cd62fd1537471fb6d883" prot="public">
          <name>VDI_NONE</name>
          <briefdescription>
<para>undefined </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a05b1756b916909b8b3824603bc01b4d4ad95b749e93a2bb7078f934f1c7d79bca" prot="public">
          <name>VDI_EXPR</name>
          <briefdescription>
<para>c-tree item </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a05b1756b916909b8b3824603bc01b4d4a4e24c68cea9d1ceb17990386f7ecbb0a" prot="public">
          <name>VDI_LVAR</name>
          <briefdescription>
<para>declaration of local variable </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a05b1756b916909b8b3824603bc01b4d4a1282da9138837a00f7d8acc7d47664c2" prot="public">
          <name>VDI_FUNC</name>
          <briefdescription>
<para>the function itself (the very first line with the function prototype) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a05b1756b916909b8b3824603bc01b4d4a4acfb17c927cbda9c2168c7ba06d28fc" prot="public">
          <name>VDI_TAIL</name>
          <briefdescription>
<para>cursor is at (beyond) the line end (commentable line) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type of the cursor item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6154" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6153" bodyend="6160"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a589dccc39c98c53f3eb82feb2f195a0a" prot="public" static="no">
        <name>allow_unused_labels_t</name>
        <enumvalue id="hexrays_8hpp_1a589dccc39c98c53f3eb82feb2f195a0aa8cf56e9b37ecc257e04095b903969ed1" prot="public">
          <name>FORBID_UNUSED_LABELS</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Unused labels cause interr. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a589dccc39c98c53f3eb82feb2f195a0aa6a9ba469e0832c6f7dea10ec3a071a5b" prot="public">
          <name>ALLOW_UNUSED_LABELS</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Unused labels are permitted. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Unused label disposition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6225" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6224" bodyend="6228"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36" prot="public" static="no">
        <name>hexrays_event_t</name>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36aff9deea11e056e20f869c6aeb9ef4e96" prot="public">
          <name>hxe_flowchart</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flowchart has been generated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classqflow__chart__t" kindref="compound">qflow_chart_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36adb76924a21e2d6704738d9c6b9a981a4" prot="public">
          <name>hxe_stkpnts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>SP change points have been calculated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mba</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stkpnts</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structstkpnts__t" kindref="compound">stkpnts_t</ref> *) return <ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a58c48b6c37d1f6c48c0c920d0711b89e" prot="public">
          <name>hxe_prolog</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Prolog analysis has been finished. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mba</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fc</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classqflow__chart__t" kindref="compound">qflow_chart_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reachable_blocks</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classbitset__t" kindref="compound">bitset_t</ref> *) return <ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36ae5f6e0750385dc6905ddf663b01ddb86" prot="public">
          <name>hxe_microcode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Microcode has been generated. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mba</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *) return <ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a842de331271b3b7731e1215fd187eafe" prot="public">
          <name>hxe_preoptimized</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Microcode has been preoptimized. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mba</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *) return <ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a6214856f85f0501f932daf3be6487f24" prot="public">
          <name>hxe_locopt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Basic block level optimization has been finished. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mba</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *) return <ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36ace91ab56e0510504035d910f5ba91024" prot="public">
          <name>hxe_prealloc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Local variables: preallocation step begins. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mba</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *) This event may occur several times Should return: 1 if modified microcode Negative values are <ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> error codes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36aa1201525f3f92e2cd79a7951d6ae3689" prot="public">
          <name>hxe_glbopt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Global optimization has been finished. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mba</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *) return <ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a049fdeadd7055801748709d6b0b95e5d" prot="public">
          <name>hxe_structural</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Structural analysis has been finished. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ct</parametername>
</parameternamelist>
<parameterdescription>
<para>(control_graph_t *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a743e5b954f87dd489b98158c16b0305b" prot="public">
          <name>hxe_maturity</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Ctree maturity level is being changed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfunc</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structcfunc__t" kindref="compound">cfunc_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_maturity</parametername>
</parameternamelist>
<parameterdescription>
<para>(ctree_maturity_t) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36aef8641d000c11f0b8185a2807ac8fcd9" prot="public">
          <name>hxe_interr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Internal error has occurred. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>errcode</parametername>
</parameternamelist>
<parameterdescription>
<para>(int ) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a4605ef9b2c07d51fb4fc6c6b583f9e48" prot="public">
          <name>hxe_combine</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trying to combine instructions of basic block. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blk</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmblock__t" kindref="compound">mblock_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>insn</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classminsn__t" kindref="compound">minsn_t</ref> *) Should return: 1 if combined the current instruction with a preceding one </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a06cb39b4a92a95229bb0918b865dd359" prot="public">
          <name>hxe_print_func</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Printing ctree and generating text. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfunc</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structcfunc__t" kindref="compound">cfunc_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vp</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvc__printer__t" kindref="compound">vc_printer_t</ref> *) Returns: 1 if text has been generated by the plugin </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a8ce01ce2d73b54e8b6f338ba5a1311dc" prot="public">
          <name>hxe_func_printed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Function text has been generated. Plugins may modify the text in <ref refid="structcfunc__t_1a225b99917d27f6e52ea3841b4c39c246" kindref="member">cfunc_t::sv</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfunc</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structcfunc__t" kindref="compound">cfunc_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a132891cb8e63498718a18797957f5f08" prot="public">
          <name>hxe_resolve_stkaddrs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The optimizer is about to resolve stack addresses. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mba</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a058ba3114cec3f065a490d6f5628b85a" prot="public">
          <name>hxe_open_pseudocode</name>
          <initializer>=100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>New pseudocode view has been opened. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a9cdad42968684ad266b72189a99625b2" prot="public">
          <name>hxe_switch_pseudocode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Existing pseudocode view has been reloaded with a new function. Its text has not been refreshed yet, only cfunc and mba pointers are ready. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36ad0dbb1c295ad7e854143557ad7fdf343" prot="public">
          <name>hxe_refresh_pseudocode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Existing pseudocode text has been refreshed. Adding/removing pseudocode lines is forbidden in this event. This event is obsolete, please use hxe_func_printed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) See also hxe_text_ready, which happens earlier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a30c0a36c8dc183bc39124cf221cd59e0" prot="public">
          <name>hxe_close_pseudocode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Pseudocode view is being closed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36ad20a80a01623424ecc7f054d3cde3323" prot="public">
          <name>hxe_keyboard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Keyboard has been hit. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_code</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) VK_... </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shift_state</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) Should return: 1 if the event has been handled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a17ba691a6b731fc7429f605b204cc377" prot="public">
          <name>hxe_right_click</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mouse right click. Use hxe_populating_popup instead, in case you want to add items in the popup menu. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36ae386547e188b0e1002e817409e8239fb" prot="public">
          <name>hxe_double_click</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mouse double click. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shift_state</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) Should return: 1 if the event has been handled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a3beb3be0ebfeb541e81ec6fc0de95710" prot="public">
          <name>hxe_curpos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Current cursor position has been changed. (for example, by left-clicking or using keyboard)<linebreak/>
 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a8b9b1980c9f77705c5bd17c99d5fe59f" prot="public">
          <name>hxe_create_hint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Create a hint for the current item. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result_hint</parametername>
</parameternamelist>
<parameterdescription>
<para>(qstring *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>implines</parametername>
</parameternamelist>
<parameterdescription>
<para>(int *) Possible return values: 0: the event has not been handled 1: hint has been created (should set *implines to nonzero as well) 2: hint has been created but the standard hints must be appended by the decompiler </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a967d497bb55b82e37691747212124fb6" prot="public">
          <name>hxe_text_ready</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Decompiled text is ready. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) This event can be used to modify the output text (sv). The text uses regular color codes (see <ref refid="lines_8hpp" kindref="compound">lines.hpp</ref>) COLOR_ADDR is used to store pointers to ctree elements </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36ac0b0b1e5396f68f3a174be6cdb4ff3b3" prot="public">
          <name>hxe_populating_popup</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Populating popup menu. We can add menu items now. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>widget</parametername>
</parameternamelist>
<parameterdescription>
<para>(TWidget *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>popup_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>(TPopupMenu *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36aaef4f73ee7f344427507aeaccef63ec1" prot="public">
          <name>lxe_lvar_name_changed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Local variable got renamed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classlvar__t" kindref="compound">lvar_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_user_name</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool) Please note that it is possible to read/write user settings for lvars directly from the idb. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a8b1930bbafa4da22e5fdd5403fe8bf1c" prot="public">
          <name>lxe_lvar_type_changed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Local variable type got changed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classlvar__t" kindref="compound">lvar_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tinfo</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *) Please note that it is possible to read/write user settings for lvars directly from the idb. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a7b84a8c19a2063481e3536ea34329c75" prot="public">
          <name>lxe_lvar_cmt_changed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Local variable comment got changed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classlvar__t" kindref="compound">lvar_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmt</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) Please note that it is possible to read/write user settings for lvars directly from the idb. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36af86cd4adfecd0215cac1cd76a3127cb6" prot="public">
          <name>lxe_lvar_mapping_changed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Local variable mapping got changed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vu</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structvdui__t" kindref="compound">vdui_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classlvar__t" kindref="compound">lvar_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="classlvar__t" kindref="compound">lvar_t</ref> *) Please note that it is possible to read/write user settings for lvars directly from the idb. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a7c1ea443e86c64bdccdcad64042e4a36a1d7d17c1b9dcc1ac2cffd11a4cfcaf86" prot="public">
          <name>hxe_cmt_changed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comment got changed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfunc</parametername>
</parameternamelist>
<parameterdescription>
<para>(<ref refid="structcfunc__t" kindref="compound">cfunc_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>(const <ref refid="structtreeloc__t" kindref="compound">treeloc_t</ref> *) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmt</parametername>
</parameternamelist>
<parameterdescription>
<para>(const char *) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decompiler events. Use install_hexrays_callback() to install a handler for decompiler events. When the possible return value is not specified, your callback must return zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6729" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6728" bodyend="6890"/>
      </memberdef>
      <memberdef kind="enum" id="group__vdui_1ga57493d56aec72d0d539dced15a738c50" prot="public" static="no">
        <name>input_device_t</name>
        <enumvalue id="group__vdui_1gga57493d56aec72d0d539dced15a738c50ae84891dc5d0466585a7daa0caf2f12c7" prot="public">
          <name>USE_KEYBOARD</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Keyboard. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__vdui_1gga57493d56aec72d0d539dced15a738c50a1b05ff75a19c359e63dcd511b019b634" prot="public">
          <name>USE_MOUSE</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Mouse. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Type of the input device. How the user command has been invoked </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6927" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6926" bodyend="6930"/>
      </memberdef>
      <memberdef kind="enum" id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31" prot="public" static="no">
        <name>hexcall_t</name>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0df6046e239489bf1e5479e7f8ed12d9" prot="public">
          <name>hx_user_numforms_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a000904c97f47dd61836e78e726cbbe27" prot="public">
          <name>hx_user_numforms_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af1466729b5e2b6d8220f704cbfdc9dfa" prot="public">
          <name>hx_user_numforms_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6080422750e0cc92a81c41e98524b3a2" prot="public">
          <name>hx_user_numforms_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af5e46c2cada0c87a2679eabba384e3fa" prot="public">
          <name>hx_user_numforms_first</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a39d509942dfae9cd41414236be9a714a" prot="public">
          <name>hx_user_numforms_second</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa101b8df2cf55a018e7e8c4cad124b25" prot="public">
          <name>hx_user_numforms_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9affcb8fbed2826af64c34de9ca0936a" prot="public">
          <name>hx_user_numforms_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab835b8ddf7efa83aed360bcfef627d00" prot="public">
          <name>hx_user_numforms_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abed19ed8312f1c89196d39c211b9c496" prot="public">
          <name>hx_user_numforms_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31affd036f5fba6c22071b5939734e34913" prot="public">
          <name>hx_user_numforms_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a319d36197ccd44abbe1e9477ba5b2ede" prot="public">
          <name>hx_user_numforms_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab8b9d23a5cb06a7308101cfe9d7419e1" prot="public">
          <name>hx_user_numforms_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad6ff21760f9b99f8abaf28d68bd866af" prot="public">
          <name>hx_lvar_mapping_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0ddbb6716872c6836a0fec0d688f9031" prot="public">
          <name>hx_lvar_mapping_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab5412598dfa8640d1e26671355a81506" prot="public">
          <name>hx_lvar_mapping_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31afdbe29fb2b7bd19b5e64ac8944981479" prot="public">
          <name>hx_lvar_mapping_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abde2f5b2acb3d5b0f96838a2f953bf12" prot="public">
          <name>hx_lvar_mapping_first</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2e3ad17e0aeb7821c97e8eaf6172aa93" prot="public">
          <name>hx_lvar_mapping_second</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af83802574abd99fc835afe71dda1a943" prot="public">
          <name>hx_lvar_mapping_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a58ba2c6ef8c1f8e3e1fd868a5c579506" prot="public">
          <name>hx_lvar_mapping_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae77a71161f19ce292c2aea5390a299bf" prot="public">
          <name>hx_lvar_mapping_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2b8310e903036c6ed626fe23df1f4c70" prot="public">
          <name>hx_lvar_mapping_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af460e367ab1af7107ce1236d816a5ac8" prot="public">
          <name>hx_lvar_mapping_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a28ad90173baff9060b9450886e325bfc" prot="public">
          <name>hx_lvar_mapping_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a36b5586075f16f8cafab944e20dc7111" prot="public">
          <name>hx_lvar_mapping_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0b9e6a37d69b7ed5986a9dafb7e0e428" prot="public">
          <name>hx_udcall_map_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aca7ce0faef18db6f7e5656a917b5721c" prot="public">
          <name>hx_udcall_map_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac7cc38af857ba8b93ab43e86b3e69dfc" prot="public">
          <name>hx_udcall_map_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af56fa89c081c8346923365b36ff87ab6" prot="public">
          <name>hx_udcall_map_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abb6d07bfe87a10bb26a8d57052ec6cac" prot="public">
          <name>hx_udcall_map_first</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af04ffde482fdde1c299d4c6b9591857a" prot="public">
          <name>hx_udcall_map_second</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac231623f9c871a9ff4d4a2391f6e4989" prot="public">
          <name>hx_udcall_map_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5bd1ef1d9315140b4cbce616ba78be0b" prot="public">
          <name>hx_udcall_map_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a275e9474aabc38958eaeb98d96920dc3" prot="public">
          <name>hx_udcall_map_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3268a5cba82bef9efcc87c30ccbe041e" prot="public">
          <name>hx_udcall_map_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abbcd49070ef4eace86b47c9e05d13e7c" prot="public">
          <name>hx_udcall_map_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5b8b8a56f5a0d7d37cda8186588f28f2" prot="public">
          <name>hx_udcall_map_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa0d5a234424e0aaf5b44220adb6d7f56" prot="public">
          <name>hx_udcall_map_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a856db83e5dde88e92738c883918b3a04" prot="public">
          <name>hx_user_cmts_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a20d4097fd34a36febe0c7f675fb93942" prot="public">
          <name>hx_user_cmts_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2b3dce0b8683eda3fb366ae63e489234" prot="public">
          <name>hx_user_cmts_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae53014cf9e023315b275ef162edbd0b0" prot="public">
          <name>hx_user_cmts_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a318d747dba46fa924a50aff306627414" prot="public">
          <name>hx_user_cmts_first</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae80a06a3e19711c920033b79721e6c64" prot="public">
          <name>hx_user_cmts_second</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a300a984f080286a2729dd8443b7eecd2" prot="public">
          <name>hx_user_cmts_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6a8f159af70976ab86372ade53fe8c19" prot="public">
          <name>hx_user_cmts_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a206687d5adb8dd5bbbd0a6f7b8d03e56" prot="public">
          <name>hx_user_cmts_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3ea221c1be0bf4e9d673add1bac5e8d6" prot="public">
          <name>hx_user_cmts_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae120b6d7f7bf6820d085cf5befd0e356" prot="public">
          <name>hx_user_cmts_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a383945e75b2dc7a236a1e1a8a6d7f40a" prot="public">
          <name>hx_user_cmts_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6e97da7a4085214bbcab0d18c2f2a1be" prot="public">
          <name>hx_user_cmts_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa7a8b4341bdb97e7bc894dc8cbbbfe28" prot="public">
          <name>hx_user_iflags_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a79ff35b4a8a615589247feaa349c95a9" prot="public">
          <name>hx_user_iflags_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3b8a3f7ef052d4064712c484e0a6f990" prot="public">
          <name>hx_user_iflags_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6e75f5ff6b76f5517df63cacb63e1761" prot="public">
          <name>hx_user_iflags_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a24758a0806b6cf2af28e9cc042c8cdd0" prot="public">
          <name>hx_user_iflags_first</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a749a77c770bd503980328089ad735644" prot="public">
          <name>hx_user_iflags_second</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1e2a9b9c99546a8b2f151863cde5ef5c" prot="public">
          <name>hx_user_iflags_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31acfc005ae7bbdfd602a854e73b77f6dad" prot="public">
          <name>hx_user_iflags_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a531d0dfcf3607b1a286e4eb2ac9fd4a2" prot="public">
          <name>hx_user_iflags_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9c43c092525cd907e61414f6929f2b5b" prot="public">
          <name>hx_user_iflags_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a25bbdeb4e5c2e777c169b97e226dc2d0" prot="public">
          <name>hx_user_iflags_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6e39f73a0cc5fb7f84a2c38aca47f445" prot="public">
          <name>hx_user_iflags_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af9a4b9fd6f729231f26701d98a6e3e9d" prot="public">
          <name>hx_user_iflags_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a730ca4afcf4ce85037c813eed2a56309" prot="public">
          <name>hx_user_unions_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a59600b70fc53bb978213bee1117cd576" prot="public">
          <name>hx_user_unions_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae3d23888307b701caaf061de5bdf8bb7" prot="public">
          <name>hx_user_unions_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7b20229390d6daa59c8a5866fafde176" prot="public">
          <name>hx_user_unions_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abe659998a0ff3b067e8b2fe56edb16b4" prot="public">
          <name>hx_user_unions_first</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad0a549b1aa66283234f4434b91d215a1" prot="public">
          <name>hx_user_unions_second</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac7212c57f408d85fbcbdc54b01456569" prot="public">
          <name>hx_user_unions_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31acdaf0d97793dac2f959498c049e8fdaa" prot="public">
          <name>hx_user_unions_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae63b1a5fc6fd91ec50fd272d7b43f9fb" prot="public">
          <name>hx_user_unions_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aab9b42331dced1a149561be3e193833d" prot="public">
          <name>hx_user_unions_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a353e3e17e77675fd5d169f293a2e6da6" prot="public">
          <name>hx_user_unions_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a021de08ade046ee109d11a1cfca690a6" prot="public">
          <name>hx_user_unions_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a797f604fce6fc77453a7bef8fe48ebc3" prot="public">
          <name>hx_user_unions_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0d680779ace8e9f95faefc3fcdeb6c49" prot="public">
          <name>hx_user_labels_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6725db0d420eea27f926b38a76173f68" prot="public">
          <name>hx_user_labels_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aacadc3fa3dbe117407c544045f73b6d4" prot="public">
          <name>hx_user_labels_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac2d350399c6aa38f18d43d13d1873f2e" prot="public">
          <name>hx_user_labels_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0184b886356ab974c57fa512f9d1ad86" prot="public">
          <name>hx_user_labels_first</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0c54b29cd693f4d8ad17ab45f60ceb1b" prot="public">
          <name>hx_user_labels_second</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3dead5cb6af88b9ab4b9e8dd948a0fe4" prot="public">
          <name>hx_user_labels_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a92b83d3e721f31653ce94461b7774ecc" prot="public">
          <name>hx_user_labels_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa151d70a2f80d291a5e6d661b4d7a70e" prot="public">
          <name>hx_user_labels_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a52f689c803a944eace9be32109a6e94b" prot="public">
          <name>hx_user_labels_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a32c2e8adc9094de439fed056e1094008" prot="public">
          <name>hx_user_labels_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31adc9c5d4240eec5aac866b81225dfcea4" prot="public">
          <name>hx_user_labels_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1e6ff37f043e9082b3b509618fa5e235" prot="public">
          <name>hx_user_labels_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a74dde9025f316b08b0cc717e88296a4a" prot="public">
          <name>hx_eamap_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a37c8bfb3ec0de2c984925cc5e6149add" prot="public">
          <name>hx_eamap_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a19f1cc699bd1e04d53e8cf83d5ac5b40" prot="public">
          <name>hx_eamap_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9ffe2fa7f6c590b7f9e7239a02dba8f4" prot="public">
          <name>hx_eamap_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae64b8d8710e583e5919001fc64f48f0a" prot="public">
          <name>hx_eamap_first</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1bd577d37003170b38773f2f5b80c333" prot="public">
          <name>hx_eamap_second</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0df53b29cf4d517f5fc0fe639fda331a" prot="public">
          <name>hx_eamap_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4c3aa0fa5934cff4d930981c89037af2" prot="public">
          <name>hx_eamap_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31adedbf7f18f28e1b8b479ce9c44bb3fcf" prot="public">
          <name>hx_eamap_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a56c219eeda888c2a01e3b22789ab74e5" prot="public">
          <name>hx_eamap_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8260c6e0b0b1135fea070137c60e5c7e" prot="public">
          <name>hx_eamap_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab37831952492351751829f0291bc603f" prot="public">
          <name>hx_eamap_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aaa58ef2002cd3386c55881722459c3da" prot="public">
          <name>hx_eamap_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1cd033c8cdc369f9736b57a29bddf0a0" prot="public">
          <name>hx_boundaries_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa053d45c8b123c0cee92d726dfc34255" prot="public">
          <name>hx_boundaries_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad7de0bfd236e174ba6a2123598f04934" prot="public">
          <name>hx_boundaries_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a280d0ad62d68a089d9d7a12ba432c4a0" prot="public">
          <name>hx_boundaries_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad4e0a129ad368752a74bf5b24e15bc14" prot="public">
          <name>hx_boundaries_first</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae989f5e7f66ccad0e9463574a2e94e30" prot="public">
          <name>hx_boundaries_second</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7592ce3b8ccc5f51b8a31bf7c38c0cdd" prot="public">
          <name>hx_boundaries_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ade5c505b744ea3ce72696b0e53dacb9b" prot="public">
          <name>hx_boundaries_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3d03f40aafbbf05ec6416af7099ac9aa" prot="public">
          <name>hx_boundaries_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a17dda5cfa92d8d37f247a5df30f08c06" prot="public">
          <name>hx_boundaries_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6421e5f01208ece6d13116573f124beb" prot="public">
          <name>hx_boundaries_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a13f2058f408c75ea3a5efd76c76e8b91" prot="public">
          <name>hx_boundaries_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae341984592c9eac8cf15062ddd484ab2" prot="public">
          <name>hx_boundaries_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abb129d465fc0ae4199c78252f024aea7" prot="public">
          <name>hx_block_chains_begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae92c0b92fe779948b511a7f428921882" prot="public">
          <name>hx_block_chains_end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aac5db06fb35ba9912330caff65740ff6" prot="public">
          <name>hx_block_chains_next</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0555b0c6245f3025816eb3d922cfc6b8" prot="public">
          <name>hx_block_chains_prev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a66de0ce9885754220a41567622dfc1aa" prot="public">
          <name>hx_block_chains_get</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8e2d3b835905b5d86243666befe9b9f1" prot="public">
          <name>hx_block_chains_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a71c60d3f868e6deb601d383031d0c704" prot="public">
          <name>hx_block_chains_insert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a54889a1d6936c3e995d8b85411338a05" prot="public">
          <name>hx_block_chains_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7e50a17c6994d13f7878c54bb978761d" prot="public">
          <name>hx_block_chains_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad58d6632d2b39c7df8abb17e8550139b" prot="public">
          <name>hx_block_chains_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab982bdb714858de526d7938c994269c2" prot="public">
          <name>hx_block_chains_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab1373502411a73bf18131bca935d0fff" prot="public">
          <name>hx_block_chains_new</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a98b10d21ad15e063b6ddbcd081c80009" prot="public">
          <name>hx_valrng_t_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0f37362a9b062e26766a9704682e0c36" prot="public">
          <name>hx_valrng_t_copy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0435ef8c02446ca221e3ef0d18c1c084" prot="public">
          <name>hx_valrng_t_assign</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a12c398bdfa4a7b5150da59fc4356c92c" prot="public">
          <name>hx_valrng_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a09c25744b8bed8cd46a2475f43366d79" prot="public">
          <name>hx_valrng_t_set_eq</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab6815ee8536a5deccd845d1896bb7179" prot="public">
          <name>hx_valrng_t_set_cmp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa33bde75eccb124faabb99991c74c5d4" prot="public">
          <name>hx_valrng_t_reduce_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9444115b4f629e2226d39ff0b9e05186" prot="public">
          <name>hx_valrng_t_intersect_with</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aeccf636f45861f0b69865abaf337aab0" prot="public">
          <name>hx_valrng_t_unite_with</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa51b27eeee721088b60f91be328799b4" prot="public">
          <name>hx_valrng_t_inverse</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af49411dd8cd6e7160114e60ef8bc154c" prot="public">
          <name>hx_valrng_t_has</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad8e047ce0aef3b0fbe460a5bab946afc" prot="public">
          <name>hx_valrng_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4da8fdadb6df41ded30d121ff91acbdd" prot="public">
          <name>hx_valrng_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a43f9839c2f497d6613834edf65c86757" prot="public">
          <name>hx_valrng_t_cvt_to_single_value</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31adfe86d6de9f33d7f6dea4d94e9e150e0" prot="public">
          <name>hx_valrng_t_cvt_to_cmp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a101714c466ddf96480ef8ef06395968f" prot="public">
          <name>hx_get_merror_desc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abd4377eb8c3287cd1ee718a8e4101e21" prot="public">
          <name>hx_reg2mreg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a34d192ffbf0b2ff2fbe88b5a31600211" prot="public">
          <name>hx_mreg2reg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a63e1efc61ee60b81400d0b2ad68fd272" prot="public">
          <name>hx_install_optinsn_handler</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9da7267401f6ca7c4f42f93a20265e34" prot="public">
          <name>hx_remove_optinsn_handler</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4fad99d0dc992cf693510c4531cc9a9f" prot="public">
          <name>hx_install_optblock_handler</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a11c89b0738bf6f6ca5ce447b3c647962" prot="public">
          <name>hx_remove_optblock_handler</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad74203ac681b8c66fc6e9e4399c8d0f8" prot="public">
          <name>hx_must_mcode_close_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad40c17f6a5a446799a424b170c2ba082" prot="public">
          <name>hx_is_mcode_propagatable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31addc735f4f8cd3b1e8843ee14b3c49f13" prot="public">
          <name>hx_negate_mcode_relation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aeefcac0c4d038c88bc8374528684050b" prot="public">
          <name>hx_swap_mcode_relation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a20a76d08e1f795c0301a92dc58272b9b" prot="public">
          <name>hx_get_signed_mcode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a50fd0985a20dd13f7e191b9be019d57c" prot="public">
          <name>hx_get_unsigned_mcode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abba7ef68ba6811aebb70247a7ed96018" prot="public">
          <name>hx_mcode_modifies_d</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9315d8a8f4e3b07c1ee668cab6812fdb" prot="public">
          <name>hx_operand_locator_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa28678fda3b293cf037cc32b075007ab" prot="public">
          <name>hx_vd_printer_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac87a6c61b5afe1a947127819a67b072e" prot="public">
          <name>hx_file_printer_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a945b73da5a236c954667e6647accd902" prot="public">
          <name>hx_qstring_printer_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9c0be71e55f4376aa362c9218ba87696" prot="public">
          <name>hx_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31add3ae32152dba01d652d1c46507a5b39" prot="public">
          <name>hx_is_type_correct</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7debb6a59b964b64565d4bdfa19fce13" prot="public">
          <name>hx_is_small_struni</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af06f9f0e72b52d9fa2b4a721f42fcfd1" prot="public">
          <name>hx_is_nonbool_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31addc0f7c189197e4c1221e7a494d0830b" prot="public">
          <name>hx_is_bool_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab44b3ea8d330bfab8aece5bfb06361fc" prot="public">
          <name>hx_partial_type_num</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7918fd9a52358f22ec3dd30c2c7cf779" prot="public">
          <name>hx_get_float_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5232542843ac746f1e06e5a39482eccb" prot="public">
          <name>hx_get_int_type_by_width_and_sign</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae3a9421290e15048835b0f6ef4e1bf55" prot="public">
          <name>hx_get_unk_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1c54b32620f19d2bfb3b95ea7592e4d9" prot="public">
          <name>hx_dummy_ptrtype</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ade67c5b19813528e9402f0826b4c8e8f" prot="public">
          <name>hx_get_member_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6febf99131f03a11352ddac35c3da974" prot="public">
          <name>hx_make_pointer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a17ba9df636c000dfe00cd92b30fa01e9" prot="public">
          <name>hx_create_typedef</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a49fd8685044b590c1114a26d1e5ff061" prot="public">
          <name>hx_get_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4479de23a61795a8e8aa6c0b982b00ff" prot="public">
          <name>hx_set_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a206eae29ac86f269553e743949675b50" prot="public">
          <name>hx_vdloc_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31adcc5499d489c24cd9ef391a56465d691" prot="public">
          <name>hx_vdloc_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aba2dd04bb4d261802ead512ce590e130" prot="public">
          <name>hx_vdloc_t_is_aliasable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9d4a0786b5c86912df7e14010840990c" prot="public">
          <name>hx_print_vdloc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa9dade84b1c9f8625f99fb56097985f9" prot="public">
          <name>hx_arglocs_overlap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0df2a2af0f0842255a81b0f639b2e0e6" prot="public">
          <name>hx_lvar_locator_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2fd517f034054ca3bc4cf4a357af99c5" prot="public">
          <name>hx_lvar_locator_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a07c012cbab1442a7a13412fa1460f01a" prot="public">
          <name>hx_lvar_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8c59a79af5f68d6afec569a5c023b6a9" prot="public">
          <name>hx_lvar_t_is_promoted_arg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aee20599fc75175b3e9052c41c7eff16e" prot="public">
          <name>hx_lvar_t_accepts_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2271554b5bdf76ce5d27b112096c2174" prot="public">
          <name>hx_lvar_t_set_lvar_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aeaaffddbe87e31d50aa6ac0efe673438" prot="public">
          <name>hx_lvar_t_set_width</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a32fa1d49d6442ffc6ea814ef3ead5ce4" prot="public">
          <name>hx_lvar_t_append_list</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af33c4e20f1868dc6b48771b51bc392c7" prot="public">
          <name>hx_lvars_t_find_stkvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6988f126b5dc82c2ea2321e3b8f75509" prot="public">
          <name>hx_lvars_t_find</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4ed9782d3b8d7cdc2528ffe34bb63d6f" prot="public">
          <name>hx_lvars_t_find_lvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9713f5efe6b69c5e535f051a4948e85a" prot="public">
          <name>hx_restore_user_lvar_settings</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1afa152aeb7eb19007ab472801d48877" prot="public">
          <name>hx_save_user_lvar_settings</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ada1d3646d0e0f9cf451d875b4afaa91f" prot="public">
          <name>hx_modify_user_lvars</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a50e53cba0b4e9fc37331cf318682d217" prot="public">
          <name>hx_restore_user_defined_calls</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af80e5c6d7c3d70314f8198b9e95a558c" prot="public">
          <name>hx_save_user_defined_calls</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2cae3389a544e26b341e59342b3c2e51" prot="public">
          <name>hx_parse_user_call</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31afb3ef7c79fe759dbe6fcd19ab8cc8ef9" prot="public">
          <name>hx_convert_to_user_call</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a59be88683bdf018cead627651941e766" prot="public">
          <name>hx_install_microcode_filter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a58c64b543df7303032ee7c24a4765144" prot="public">
          <name>hx_udc_filter_t_init</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a70b889f7c378adc51455b80aeb24b606" prot="public">
          <name>hx_udc_filter_t_apply</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8574f29b7938ac91a30862e89a28dfbe" prot="public">
          <name>hx_bitset_t_bitset_t</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac2237be11a53f7cc52306efcf7cd5f2d" prot="public">
          <name>hx_bitset_t_copy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a791f2861d933386796bd9043fe7ae59f" prot="public">
          <name>hx_bitset_t_add</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1311b3ca0aeb440979e99d1ee104bbd5" prot="public">
          <name>hx_bitset_t_add_</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aad1d4597bec922e87fb8dee723e608c4" prot="public">
          <name>hx_bitset_t_add__</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa929bb994d313704cd683991308fe268" prot="public">
          <name>hx_bitset_t_sub</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a79787de0281d76232e77f61b0eef6858" prot="public">
          <name>hx_bitset_t_sub_</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a70994ffb94b045e8ed244e2fdd4227b8" prot="public">
          <name>hx_bitset_t_sub__</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6ba9408498a364a965c1b154cf90986a" prot="public">
          <name>hx_bitset_t_cut_at</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9bc0e41e11499c033264f7b7fe9da70e" prot="public">
          <name>hx_bitset_t_shift_down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a77572c43a0327b27d429195b5bb25682" prot="public">
          <name>hx_bitset_t_has</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aaf9c471406ab072eae0249263c3dccf3" prot="public">
          <name>hx_bitset_t_has_all</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2902d4b7b9d333ad41db35c804a64343" prot="public">
          <name>hx_bitset_t_has_any</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae1241ec655bbf0204c5fdf21f87581ba" prot="public">
          <name>hx_bitset_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac820a899478273bfea80b8fb2b5f40f5" prot="public">
          <name>hx_bitset_t_empty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a37b71940651991df1b8aad83e0a44b22" prot="public">
          <name>hx_bitset_t_count</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a775103399596ac284ce3941f3e31aae2" prot="public">
          <name>hx_bitset_t_count_</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac272948733c39602313e07d507da5adb" prot="public">
          <name>hx_bitset_t_last</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5f23d75ee5ca9a3477e9d34a47adea6d" prot="public">
          <name>hx_bitset_t_fill_with_ones</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3803a04bea9403ff652583b71e62d70b" prot="public">
          <name>hx_bitset_t_has_common</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7170d0952064f3355fab1ab6e670402d" prot="public">
          <name>hx_bitset_t_intersect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0df96756a774bf43bdba2e0e1faa07ae" prot="public">
          <name>hx_bitset_t_is_subset_of</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab777ffa85815f7007ae9fe1116038374" prot="public">
          <name>hx_bitset_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a406b41ff773865af774335e480d33ade" prot="public">
          <name>hx_bitset_t_goup</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abc7743c818aadf6a1292a4cbdb883808" prot="public">
          <name>hx_ivl_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aeba8050b38ed16934800a85b8daed38b" prot="public">
          <name>hx_ivl_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ade0d5e2314743b11c6170c5ee36166f0" prot="public">
          <name>hx_ivlset_t_add</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad4634ffee6267da67791a4ce36f82f8a" prot="public">
          <name>hx_ivlset_t_add_</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7f7d5a0c71b8e7afddba741d1c5109d5" prot="public">
          <name>hx_ivlset_t_addmasked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7053ffd740a23e2b714656420e6147e5" prot="public">
          <name>hx_ivlset_t_sub</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a589d3dbc2ef8c6195c55c2ab4f7db283" prot="public">
          <name>hx_ivlset_t_sub_</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7e479797c2dbee2d4a2c51d1e436597c" prot="public">
          <name>hx_ivlset_t_has_common</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a54a02094b280f02cdf040d002a937920" prot="public">
          <name>hx_ivlset_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab0351fa141378ea59e820ae7b774f793" prot="public">
          <name>hx_ivlset_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0cdf1e2cd80527b22700f98a6cb6583f" prot="public">
          <name>hx_ivlset_t_count</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7c66405c94426ff498fa19e328aabeac" prot="public">
          <name>hx_ivlset_t_has_common_</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a220a6d749fb92a79f049fee8f0bc8e36" prot="public">
          <name>hx_ivlset_t_contains</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4a1ed0e28c52c51dd88e7a276eea92cc" prot="public">
          <name>hx_ivlset_t_includes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ade045318bcd4edf92f90f0f036096bf5" prot="public">
          <name>hx_ivlset_t_intersect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a96f03e869a2133f514e7a8e5bf45765c" prot="public">
          <name>hx_ivlset_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4cd0e4330ad7dde6bb09e804ed966f51" prot="public">
          <name>hx_get_mreg_name</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae7b63be0c2954347f6866aa2314c7ab4" prot="public">
          <name>hx_rlist_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa598e554be34138e0cb9c747ab97234b" prot="public">
          <name>hx_rlist_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7e91b013e4762b778ff816314d31c3af" prot="public">
          <name>hx_mlist_t_addmem</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31afd6e08a44a8c8d28430da46cbed5cffe" prot="public">
          <name>hx_mlist_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac54b515b4ad8d720fb3ef509badab5ed" prot="public">
          <name>hx_mlist_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5d69e94ac017721e206af7a79b85f5da" prot="public">
          <name>hx_mlist_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac127d26960e005535e916189f9d7c168" prot="public">
          <name>hx_lvar_ref_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a08931aee95e69a479bea8a89d059af31" prot="public">
          <name>hx_lvar_ref_t_var</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab658fe5b1e99ef78cf0990b77edaca06" prot="public">
          <name>hx_stkvar_ref_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abf3f5ab630d8fc420faecd97df40d908" prot="public">
          <name>hx_stkvar_ref_t_get_stkvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a77d069366efc7fcdb29ed745bb0e583c" prot="public">
          <name>hx_fnumber_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31adf4440e6d762a52358c2050e0d5d2468" prot="public">
          <name>hx_fnumber_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6408fa8171ed42b142654b11a266df9d" prot="public">
          <name>hx_mop_t_copy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6a237127b6c52f52b15a1e4a5fab4cb6" prot="public">
          <name>hx_mop_t_assign</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a32674bd72521db86f86b9f1f05487d28" prot="public">
          <name>hx_mop_t_swap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a21f9beff5334c193fb75fe7fc7b407cd" prot="public">
          <name>hx_mop_t_erase</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae49048c10efd6bb477486b4f7f480712" prot="public">
          <name>hx_mop_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a842a6a8896769bc8373471fb524560ef" prot="public">
          <name>hx_mop_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac73ce78e4aee4bb22fac22645c4107c6" prot="public">
          <name>hx_mop_t_create_from_mlist</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1a586eeb9da1758fcfc446f9ced1d270" prot="public">
          <name>hx_mop_t_create_from_ivlset</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2ff469f65da7ef439bdec31c5880da9c" prot="public">
          <name>hx_mop_t_create_from_vdloc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae744e827bc62970763490346ee6553cb" prot="public">
          <name>hx_mop_t_create_from_scattered_vdloc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a04d92485bf5677698ccc555b7d1d3769" prot="public">
          <name>hx_mop_t_create_from_insn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a229e842414351fda5754aeee57e1a99b" prot="public">
          <name>hx_mop_t_make_number</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac9a1c9e08f4b1dd159a350080afa5367" prot="public">
          <name>hx_mop_t_make_fpnum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa5b09f06c27ba6c11160100ac5e0213d" prot="public">
          <name>hx_mop_t_make_reg_pair</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a853a473d1fa01ea02200a50fbf6c6a0f" prot="public">
          <name>hx_mop_t_make_helper</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31afb7d17f8bb21ecdbe2e985cddddd6a12" prot="public">
          <name>hx_mop_t_is_bit_reg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aad80e1426e6410f26bfe97f5607c169e" prot="public">
          <name>hx_mop_t_may_use_aliased_memory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a407ba3483c8ccc94b97609f21d251094" prot="public">
          <name>hx_mop_t_is01</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ada0fca6d99f994bde2238adc8bed420e" prot="public">
          <name>hx_mop_t_is_sign_extended_from</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a14fb442b780a5ce9e20194aa89c71bf4" prot="public">
          <name>hx_mop_t_is_zero_extended_from</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8d617b51b69e419a411096d3a319f266" prot="public">
          <name>hx_mop_t_equal_mops</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a18b2907e2ab39250630c923a800179e8" prot="public">
          <name>hx_mop_t_lexcompare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aba11a71b48623f86197ca9ebfea2b139" prot="public">
          <name>hx_mop_t_for_all_ops</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a21d9938a9d1ccd901acbd04ca9662afa" prot="public">
          <name>hx_mop_t_for_all_scattered_submops</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a845167e05693d73f1a8f8e1e4c84524f" prot="public">
          <name>hx_mop_t_is_constant</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5258ee423597a807e3ac46c1c1085a7a" prot="public">
          <name>hx_mop_t_get_stkoff</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae3c96b96b77abe8b2516364a1d6d8b9c" prot="public">
          <name>hx_mop_t_make_low_half</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7b84d0bbc5796263eab79830dcaceff5" prot="public">
          <name>hx_mop_t_make_high_half</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a24f037188ab55c57b64933329c9ce4d5" prot="public">
          <name>hx_mop_t_make_first_half</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0f18b464167f83617a382fadf9a59b3a" prot="public">
          <name>hx_mop_t_make_second_half</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aaf2880afc97474ea1fc3fdaa56f675a5" prot="public">
          <name>hx_mop_t_shift_mop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7dc70ea885b096bed8747d2efcc13070" prot="public">
          <name>hx_mop_t_change_size</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a45d536663530c910b381f31b935656f2" prot="public">
          <name>hx_mop_t_preserve_side_effects</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2b6c4790932011fee322829bfc240c15" prot="public">
          <name>hx_mop_t_apply_ld_mcode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8f1beb368cac49c99a6893cfc39d2482" prot="public">
          <name>hx_mcallarg_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af95c5c5308c7a883d4195615b2bed770" prot="public">
          <name>hx_mcallarg_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abc593d27f269aa72b4d82f01cef41035" prot="public">
          <name>hx_mcallarg_t_set_regarg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a490ed2ec6873f6dc9be1787a394fb8b9" prot="public">
          <name>hx_mcallinfo_t_lexcompare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5dbb3066179ab49533943f5e1917a0c0" prot="public">
          <name>hx_mcallinfo_t_set_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abfa3b6bea44921f64b8b5e5902e6decd" prot="public">
          <name>hx_mcallinfo_t_get_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac65bd8b9278bfe244bb524e2169ae629" prot="public">
          <name>hx_mcallinfo_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31acd24e03433b34c6145303ffe8b12eae9" prot="public">
          <name>hx_mcallinfo_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a19ceb7220e662d0b188012ee020ecf52" prot="public">
          <name>hx_mcases_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31affc1392d1ef34409385776e5345df062" prot="public">
          <name>hx_mcases_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a89d74333878db7190cfd3f19d32f52c3" prot="public">
          <name>hx_mcases_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af6aee6ae02ac6ed61dad2335391160d0" prot="public">
          <name>hx_vivl_t_extend_to_cover</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a86daef5e8c7b44b59b0ce9c2d4082e8b" prot="public">
          <name>hx_vivl_t_intersect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a804c96cc00bb60cb15bbdb5ac5f7200d" prot="public">
          <name>hx_vivl_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abe9656b354b6fe8474b8f103d09c92ba" prot="public">
          <name>hx_vivl_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31adb7025c75b4596e64814c1bcc5e3a045" prot="public">
          <name>hx_chain_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2dead69f7afbb8c3d89626e396570e11" prot="public">
          <name>hx_chain_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae5f51524fdc30601c0a21956ba187642" prot="public">
          <name>hx_chain_t_append_list</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad8bf4d3f2821b5e8f266f6f95919c5f1" prot="public">
          <name>hx_block_chains_t_get_chain</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae4ef1e75e9a18b1813cc4154f9c2f7e0" prot="public">
          <name>hx_block_chains_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac83ed7755c7f11c64401b0564cc1c0fa" prot="public">
          <name>hx_block_chains_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6e2896590bf6ce8aa364b41b20d770ad" prot="public">
          <name>hx_graph_chains_t_for_all_chains</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af0508e6769a9252384cea34da6ec971a" prot="public">
          <name>hx_graph_chains_t_release</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aff57afa9564b0a1ec506d0f63c802e2c" prot="public">
          <name>hx_minsn_t_init</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a412986c2f66f1fab86d6183fcabb55d7" prot="public">
          <name>hx_minsn_t_copy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1a1a81f9895c39c8f85629043c8c2357" prot="public">
          <name>hx_minsn_t_swap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a98b1fcf8387778ed18e247261444ec5d" prot="public">
          <name>hx_minsn_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31afc10b6bb4bdff0dfe59428de63e9d868" prot="public">
          <name>hx_minsn_t_dstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a828bcb703021125f2a2ea7b210c1b24a" prot="public">
          <name>hx_minsn_t_setaddr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae5cf24c53e00556bc4e7efa32aad0807" prot="public">
          <name>hx_minsn_t_optimize_subtree</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a97c68ada18efffc7bafca1e7426b3854" prot="public">
          <name>hx_minsn_t_for_all_ops</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31afae20fdd1aa3785792dabf55a29b5954" prot="public">
          <name>hx_minsn_t_for_all_insns</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7a9b7dbeed97f4c43cd8e738c13c6849" prot="public">
          <name>hx_minsn_t__make_nop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aba0b3398603965d4205077739bbaefc7" prot="public">
          <name>hx_minsn_t_equal_insns</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af8b4f1115fd49d3f647a965facc7fae1" prot="public">
          <name>hx_minsn_t_lexcompare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac6583a39c2da3aa347b505c8c8982060" prot="public">
          <name>hx_minsn_t_is_noret_call</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a33d9d15f0bc31593b55d7a987672f13c" prot="public">
          <name>hx_minsn_t_is_helper</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1e8e7ba43454e31e5a97e02e8a6171ff" prot="public">
          <name>hx_minsn_t_find_call</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31acf4b4d2979e4be6424ac421ec48b50d7" prot="public">
          <name>hx_minsn_t_has_side_effects</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aedb0c07744c3e69f558fc99fb279986b" prot="public">
          <name>hx_minsn_t_find_opcode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af3b6554a976d03e5d7030df17ad4018e" prot="public">
          <name>hx_minsn_t_find_ins_op</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad324999de00be9b97f3ef7b1962a25b2" prot="public">
          <name>hx_minsn_t_find_num_op</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a16fa5ba8cea708ccfc31b50288fa703a" prot="public">
          <name>hx_minsn_t_modifes_d</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31adf1267081a493c972258b804b3203ea5" prot="public">
          <name>hx_minsn_t_is_between</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2dd6d9aeaab1dd62683789438bd9ee47" prot="public">
          <name>hx_minsn_t_may_use_aliased_memory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0924a241e41ecd108c516c69cbfbe75a" prot="public">
          <name>hx_getf_reginsn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7f8ecea2e88deb80670df090fccde145" prot="public">
          <name>hx_getb_reginsn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac53b7089385f088255cca590efabf09d" prot="public">
          <name>hx_mblock_t_init</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abe0920bf4f7e6d1fc4a6b968ff66d6ae" prot="public">
          <name>hx_mblock_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5abc248d1a538201f19bdbacaeb29eb6" prot="public">
          <name>hx_mblock_t_dump</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a02266c835df49f3a9c0b7949d5aa130a" prot="public">
          <name>hx_mblock_t_vdump_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3c5afb43e151b11d6fdd9049b17b3c6d" prot="public">
          <name>hx_mblock_t_insert_into_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a813c8f9ecde55f664ca557e55ff05b1b" prot="public">
          <name>hx_mblock_t_remove_from_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a621ec0d2f59874d6aeff7255727bd714" prot="public">
          <name>hx_mblock_t_for_all_insns</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a827d29b14c036d7d3e60902bd307f022" prot="public">
          <name>hx_mblock_t_for_all_ops</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af3f9d1f9557b442920d0cbe362570702" prot="public">
          <name>hx_mblock_t_for_all_uses</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a10f75297bd378175c9bb0e17e36a185e" prot="public">
          <name>hx_mblock_t_optimize_insn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a30fda72c0060bef34fe665318a174eeb" prot="public">
          <name>hx_mblock_t_optimize_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a95e0935f85712b3cfb04453830b3dbd4" prot="public">
          <name>hx_mblock_t_build_lists</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ada782d0a0218851672cca5e59d845d05" prot="public">
          <name>hx_mblock_t_append_use_list</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a239859f183f4667542d0e6097fc9d419" prot="public">
          <name>hx_mblock_t_append_def_list</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3e955fd687206097be77ee35a0598d92" prot="public">
          <name>hx_mblock_t_build_use_list</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac6b247a27c02e87827f3a7db650669cc" prot="public">
          <name>hx_mblock_t_build_def_list</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5bf1270069379aee55a2bbfea5ec823c" prot="public">
          <name>hx_mblock_t_find_first_use</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a309da33d40974c4b6adee1e277557327" prot="public">
          <name>hx_mblock_t_find_redefinition</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a489ac9fc1affbe80c1e0548622f3d7ef" prot="public">
          <name>hx_mblock_t_is_rhs_redefined</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad4affa8da2de861b52f53a39c9828949" prot="public">
          <name>hx_mblock_t_find_access</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a427aecb1ba32ef7efbcfc504fd4a3b0b" prot="public">
          <name>hx_mblock_t_get_valranges</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1b8c260006e8a1e6b263f779ff4156d4" prot="public">
          <name>hx_mbl_array_t_idaloc2vd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3325ebea1a4ecd2f91bf0a46dfbcd1c0" prot="public">
          <name>hx_mbl_array_t_vd2idaloc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4c0be2b51903efdd618068acba2449f3" prot="public">
          <name>hx_mbl_array_t_term</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7de0545a8991f0c8acec46594bf8522a" prot="public">
          <name>hx_mbl_array_t_optimize_local</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ada0173897bdbac6767492dd6f299e0b8" prot="public">
          <name>hx_mbl_array_t_build_graph</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a607e0f4f01cc4b39686df1de7f91249d" prot="public">
          <name>hx_mbl_array_t_get_graph</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6967731b0ca26452b9518cea226ad4bd" prot="public">
          <name>hx_mbl_array_t_analyze_calls</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1fa1adef02ed95f9b0c835bcb5ee2278" prot="public">
          <name>hx_mbl_array_t_optimize_global</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8147494ae08cbc188ace710cd45f7ad8" prot="public">
          <name>hx_mbl_array_t_alloc_lvars</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a58c2631e4888cdfdefdca70856b5b6a3" prot="public">
          <name>hx_mbl_array_t_dump</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4c3edd3556c3e3027a5266a325003d5c" prot="public">
          <name>hx_mbl_array_t_vdump_mba</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a60e05419b7349c31cd4e0101485e896d" prot="public">
          <name>hx_mbl_array_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9b9bca520e94fe9983eeca80e1d38ad6" prot="public">
          <name>hx_mbl_array_t_verify</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a725104bdf9ae2a135a07884b3be2e630" prot="public">
          <name>hx_mbl_array_t_mark_chains_dirty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1d4c6ddaeb4e2b873c6c9963357a0fb6" prot="public">
          <name>hx_mbl_array_t_insert_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab652ed14bafa7d0973a500d244bb4d03" prot="public">
          <name>hx_mbl_array_t_remove_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a19a369525fdcded7f282a1b330eb6f48" prot="public">
          <name>hx_mbl_array_t_remove_empty_blocks</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a778692045806f61d7b4dfc6a47794829" prot="public">
          <name>hx_mbl_array_t_combine_blocks</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad0ccc817f7594566d52332058704be98" prot="public">
          <name>hx_mbl_array_t_for_all_ops</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a10ccf6f7c7a47903dcaa5c1b5327e442" prot="public">
          <name>hx_mbl_array_t_for_all_insns</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9a458660c14931e4ab693efd6d5a995a" prot="public">
          <name>hx_mbl_array_t_for_all_topinsns</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad61cf08eae881c6371158da938fd26ff" prot="public">
          <name>hx_mbl_array_t_find_mop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31afc43337a578f8b70698ee6ee6877ac3a" prot="public">
          <name>hx_mbl_array_t_arg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31adb662045a3de14a3a2d1cba2789f7d5a" prot="public">
          <name>hx_mbl_array_t_serialize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31abb1c9accbf26bc17620f83a98505e019" prot="public">
          <name>hx_mbl_array_t_deserialize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a91fbe8a199ef5df463fe2a389ca6d1a6" prot="public">
          <name>hx_mbl_graph_t_is_accessed_globally</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a31ab93bc4011ab9559a4ccddb8dd5963" prot="public">
          <name>hx_mbl_graph_t_get_ud</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a15db9477ceb638adaa77bd66d6d73db2" prot="public">
          <name>hx_mbl_graph_t_get_du</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a852405b10383ade0f00dd02736eb2f82" prot="public">
          <name>hx_codegen_t_emit</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac8326d989a89a8861425e265d40ac692" prot="public">
          <name>hx_codegen_t_emit_</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac7ca756788d80bd1d35e544a425fc689" prot="public">
          <name>hx_is_kreg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a53f1c7ee695041aa35b205dd7bbe2fdb" prot="public">
          <name>hx_get_temp_regs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a32d90f1f0f564fae3b6da1fbaf8c9ecd" prot="public">
          <name>hx_get_hexrays_version</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa4456a70fc1b99b361f4292adf1b882e" prot="public">
          <name>hx_open_pseudocode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a88f657f41892b2d696577f581adc9d41" prot="public">
          <name>hx_close_pseudocode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac1bfdc9cae2757fa4d9f859bb6b50124" prot="public">
          <name>hx_get_widget_vdui</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a29ff7cb2ee8a56d1441a27ae77bd16ba" prot="public">
          <name>hx_decompile_many</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a66ade853bd94babe5f3b6afa42c7d342" prot="public">
          <name>hx_hexrays_failure_t_desc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a130c42fcd9f3d6013f7341a2bf6f5b4b" prot="public">
          <name>hx_send_database</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2bafa8b5384a85071bef03dfea88ff88" prot="public">
          <name>hx_gco_info_t_append_to_list</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a37772b51c8c9aa05b8acab582aa2be5e" prot="public">
          <name>hx_get_current_operand</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9a5142f2e36df509df981ffbe98bce44" prot="public">
          <name>hx_remitem</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a72629b0aa7a952fb84089a93429ca0aa" prot="public">
          <name>hx_negated_relation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a51896aa53e3d836a4fb872c9b94c00b5" prot="public">
          <name>hx_swapped_relation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aace7e937cf9f65a882c7a79c2e2f48c9" prot="public">
          <name>hx_get_op_signness</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac30cbf78d47efae140815a00b0058db5" prot="public">
          <name>hx_asgop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2477764be7e465206ccca564ff51b424" prot="public">
          <name>hx_asgop_revert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa31c9f53fb2897d4cb2922ba63f47ed7" prot="public">
          <name>hx_cnumber_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4c8cae40a539f4545c372436d34fcc45" prot="public">
          <name>hx_cnumber_t_value</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0641800efc7479cfb6c91dc7a4d983eb" prot="public">
          <name>hx_cnumber_t_assign</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4d4250aab1f59ac761fc4efe4af71585" prot="public">
          <name>hx_cnumber_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac37842311b3e6b6754398eeec4871758" prot="public">
          <name>hx_var_ref_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aeb4d4ce2342fee626dd593208aa5daa8" prot="public">
          <name>hx_ctree_visitor_t_apply_to</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9c19d21f2ad345f94e3a4011c0bfd0b8" prot="public">
          <name>hx_ctree_visitor_t_apply_to_exprs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3dd3715ca734276b7a5ae33449a66c4e" prot="public">
          <name>hx_ctree_parentee_t_recalc_parent_types</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad3d14f54e010e6b09eab26101ab2ecd5" prot="public">
          <name>hx_cfunc_parentee_t_calc_rvalue_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad9b2a536f6e50a7f63210c03c0c99337" prot="public">
          <name>hx_citem_locator_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af578881f496900967519d5bce0481b13" prot="public">
          <name>hx_citem_t_contains_expr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae1a7805172791ac08e68986d0b88ecf0" prot="public">
          <name>hx_citem_t_contains_label</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae141de312d6ae9daf97a540eb914c5cb" prot="public">
          <name>hx_citem_t_find_parent_of</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a83694c648920d744fd26121a5fab3c12" prot="public">
          <name>hx_citem_t_find_closest_addr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a47858799dd638ffbe358876d20a5f2e9" prot="public">
          <name>hx_cexpr_t_assign</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6d02b77375764a42f4fd116402a75722" prot="public">
          <name>hx_cexpr_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a18311c095e90d2de32fd885f88503241" prot="public">
          <name>hx_cexpr_t_replace_by</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af33763eff71089c71ad30200a7ffdcab" prot="public">
          <name>hx_cexpr_t_cleanup</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6c4b1e6a8a7272ee9bd572e9071da730" prot="public">
          <name>hx_cexpr_t_put_number</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a58200f41a0a1c3ed4e387b8b7f0bbefc" prot="public">
          <name>hx_cexpr_t_print1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4af57ca77184cda678dfe1e7bff67d4c" prot="public">
          <name>hx_cexpr_t_calc_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aeee5056add01e2d277cb9cd82f77d339" prot="public">
          <name>hx_cexpr_t_equal_effect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af6fe28fd643f5e02b34456e7710f85b5" prot="public">
          <name>hx_cexpr_t_is_child_of</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1ad9f64d7dc680a497623711402c7505" prot="public">
          <name>hx_cexpr_t_contains_operator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1078e89534957a9473935eb1d18e5b31" prot="public">
          <name>hx_cexpr_t_get_high_nbit_bound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae3365d379096a959e6b3f87398b2d6dc" prot="public">
          <name>hx_cexpr_t_get_low_nbit_bound</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a010cd6efb24b2900ddd097e297031f81" prot="public">
          <name>hx_cexpr_t_requires_lvalue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a970ba4ed4905d0ecb79a86b9f74b60d2" prot="public">
          <name>hx_cexpr_t_has_side_effects</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa9d2aebe762a818fdda7920d5a1e3c4c" prot="public">
          <name>hx_cif_t_assign</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a41a1bff8795f7ae8d65cb44ca4a690ae" prot="public">
          <name>hx_cif_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31acab848fe35981f33efad4e1d79eea327" prot="public">
          <name>hx_cloop_t_assign</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a196efe0da37752884f4fc2fcc6eccb76" prot="public">
          <name>hx_cfor_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6c4853ed5e4b45fe59b7b43af0d8a0ad" prot="public">
          <name>hx_cwhile_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5b99060ad4e54f9785482ceb0f3dfc7f" prot="public">
          <name>hx_cdo_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ade65741038465703dc879b27b1a409d2" prot="public">
          <name>hx_creturn_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7cd12de380d05ad8904898a2485007bf" prot="public">
          <name>hx_cgoto_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa6b60e92239089d5f2eb399c6afc901a" prot="public">
          <name>hx_casm_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5378248ef0ff0e87249f524f2bba48e7" prot="public">
          <name>hx_cinsn_t_assign</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af5291898522c46dd795d0341f0895747" prot="public">
          <name>hx_cinsn_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7544613cd26c70a8dd50b2add472fcbc" prot="public">
          <name>hx_cinsn_t_replace_by</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae8c16a6a3cff25fc51a944954bf2a336" prot="public">
          <name>hx_cinsn_t_cleanup</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a116c22a0e234743d723c2a7a770fa792" prot="public">
          <name>hx_cinsn_t_new_insn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4771ff9d687b793ac68a5fd4b2a6e8e4" prot="public">
          <name>hx_cinsn_t_create_if</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2f22df4d4170f0657ef8d231db930050" prot="public">
          <name>hx_cinsn_t_print</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a96c434c2c5a6f62c831c31d575f10623" prot="public">
          <name>hx_cinsn_t_print1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab1f24499ac92d7d2083414001df64363" prot="public">
          <name>hx_cinsn_t_is_ordinary_flow</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a210d3867dc8db444c24cdbed1c9c7f74" prot="public">
          <name>hx_cinsn_t_contains_insn</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4d86aa6a2a43b18c9accb46198aaaa01" prot="public">
          <name>hx_cinsn_t_collect_free_breaks</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aee449e806a2772329c0a3aa3b97a8515" prot="public">
          <name>hx_cinsn_t_collect_free_continues</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9d29a11d6e341cc1f50ab69f06223cfc" prot="public">
          <name>hx_cblock_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac4d8c6aebfbda7ce640cf7d4ba94ffd4" prot="public">
          <name>hx_carglist_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7f2c1a5a9e40d464ccbc7b197fbcd80a" prot="public">
          <name>hx_ccase_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aba569b5196d82c2b536512b6ed5e69d4" prot="public">
          <name>hx_ccases_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae7d380299a8b9157ceb9399046b30f49" prot="public">
          <name>hx_cswitch_t_compare</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac6e3bd897eadf1c6c93fbcf21e012886" prot="public">
          <name>hx_ctree_item_t_get_memptr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a17b465ade2c97202905dcda86090535e" prot="public">
          <name>hx_ctree_item_t_get_lvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2b4ac06785c64f6d65041b6fed552ed0" prot="public">
          <name>hx_ctree_item_t_get_ea</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad32dbcf69747871359ec2eb7a2c44b9a" prot="public">
          <name>hx_ctree_item_t_get_label_num</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab7a77ef1801e3b5350633d3f4af25934" prot="public">
          <name>hx_lnot</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a271f920c77592b60afeabf1fa3180ade" prot="public">
          <name>hx_new_block</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a82302f931a223825b49bc647ceb3a44d" prot="public">
          <name>hx_vcreate_helper</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6ecf1d868106e765152c88e98837db6c" prot="public">
          <name>hx_vcall_helper</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5a4bf448a205498353fb40447f3155f6" prot="public">
          <name>hx_make_num</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad968de4a5b6bdc1e4dd2dc14acc9308b" prot="public">
          <name>hx_make_ref</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aac06691408be478303f2da48c78f4a0a" prot="public">
          <name>hx_dereference</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa392f4a7603210ec2764394d9af1bf1a" prot="public">
          <name>hx_save_user_labels</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a44d71f5b8b0cac01596d78299ebbde5d" prot="public">
          <name>hx_save_user_cmts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a006a93f53cecd5929a7be377d675d24d" prot="public">
          <name>hx_save_user_numforms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3518bd03630c665f100c3b9918af05e7" prot="public">
          <name>hx_save_user_iflags</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31acd1bdfb5e4b37362a3cc74afe3dc3409" prot="public">
          <name>hx_save_user_unions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0a66295c493413bad7d881fcaa7399d4" prot="public">
          <name>hx_restore_user_labels</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab911be4feb0dc7ac62d722a7ea0f93d9" prot="public">
          <name>hx_restore_user_cmts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2f8b02d2488222011c093182eb81d753" prot="public">
          <name>hx_restore_user_numforms</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aadaf452dfb08531d9033182a81178aae" prot="public">
          <name>hx_restore_user_iflags</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8cd30c589b980680391f01fa369a73dd" prot="public">
          <name>hx_restore_user_unions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a12c112eb697fb6a25be74d210f6d5522" prot="public">
          <name>hx_cfunc_t_build_c_tree</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5f4f8bd12dbcab8d44f922d2a005cd77" prot="public">
          <name>hx_cfunc_t_verify</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab724dba3975ac8d065805869ee6a93c6" prot="public">
          <name>hx_cfunc_t_print_dcl</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab8d614f4ca11ba88131e401c79b535ee" prot="public">
          <name>hx_cfunc_t_print_func</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aca566271914a512b9660c2dcf6b27104" prot="public">
          <name>hx_cfunc_t_get_func_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a73944e2bd39d5b8cc852e7fc15fd1356" prot="public">
          <name>hx_cfunc_t_get_lvars</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9f9099ac529fc5f4e643bed2faa6c360" prot="public">
          <name>hx_cfunc_t_get_stkoff_delta</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aff16bc280f0b4f4be6af8e8a0972a516" prot="public">
          <name>hx_cfunc_t_find_label</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a204b63fe364fa79d903b2aeb26fa3b44" prot="public">
          <name>hx_cfunc_t_remove_unused_labels</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae4ffa772d4f6b2a775133219aa87fa9d" prot="public">
          <name>hx_cfunc_t_get_user_cmt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa1eb73ebb3bffec8a464a2b1db7a0ec9" prot="public">
          <name>hx_cfunc_t_set_user_cmt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1b6a52261a1741338b84be586e029ebf" prot="public">
          <name>hx_cfunc_t_get_user_iflags</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab60b85bdb451c1c5a495e778fd4a63b8" prot="public">
          <name>hx_cfunc_t_set_user_iflags</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab0e923287c8b5b92f7d0628cb9cf7f8c" prot="public">
          <name>hx_cfunc_t_has_orphan_cmts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a118bcfd20944f43f95a4560230191e44" prot="public">
          <name>hx_cfunc_t_del_orphan_cmts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a51ecbafe8c92702cc777fc18c5d8cab5" prot="public">
          <name>hx_cfunc_t_get_user_union_selection</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a07f71adcd33b254384d24dcf0dd4d221" prot="public">
          <name>hx_cfunc_t_set_user_union_selection</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a81b57e25252fcfa7de08d539f912f451" prot="public">
          <name>hx_cfunc_t_get_line_item</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a347bda1f6e5bfdec89dd5c5c75a391f3" prot="public">
          <name>hx_cfunc_t_get_warnings</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a894013ba088a176e9731760c5e9cc2dd" prot="public">
          <name>hx_cfunc_t_get_eamap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a450571b8a4ba15643f12c6b3e1635eef" prot="public">
          <name>hx_cfunc_t_get_boundaries</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31acee9c8551b61e6c18b96872b67efe2c4" prot="public">
          <name>hx_cfunc_t_get_pseudocode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a67c617312c91ee8f68b56bc9ea951775" prot="public">
          <name>hx_cfunc_t_gather_derefs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a24ab1b76ab33a7419cc6e5b004d786de" prot="public">
          <name>hx_cfunc_t_find_item_coords</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a792ea9168b61e0e635cc107b347dc331" prot="public">
          <name>hx_cfunc_t_cleanup</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a21306f3df5eb3caaa138a5e417c409e3" prot="public">
          <name>hx_decompile</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31af5f9532fb0de6e19890896fb44331ff0" prot="public">
          <name>hx_gen_microcode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a0be92787b0876f643249afdf673247e1" prot="public">
          <name>hx_mark_cfunc_dirty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31acca08bd3e3a475788aa36ded43768158" prot="public">
          <name>hx_clear_cached_cfuncs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a09d8f37470125426054835f5a313b73a" prot="public">
          <name>hx_has_cached_cfunc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aabcfefff28df5ffd6d3d9ae463a63d35" prot="public">
          <name>hx_get_ctype_name</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a46c76a524845d8090d2a1f303f341631" prot="public">
          <name>hx_create_field_name</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa1d2bb7a742a178afd3881f4eafe50ca" prot="public">
          <name>hx_install_hexrays_callback</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a6989504e734c17590221f57f0c6e8505" prot="public">
          <name>hx_remove_hexrays_callback</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3c8aad49c360e4d7c2774dc9c7efdab2" prot="public">
          <name>hx_vdui_t_set_locked</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aae100fc0ed07569dc7f70f3e94610f59" prot="public">
          <name>hx_vdui_t_refresh_view</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab3f4689cb7298eda5463fe4628aad1b8" prot="public">
          <name>hx_vdui_t_refresh_ctext</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4a1eb325005784462072715ff8389917" prot="public">
          <name>hx_vdui_t_switch_to</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a9a49b5b192c402c6e1e0018fc8de71f3" prot="public">
          <name>hx_vdui_t_get_number</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae640f1980f02bdf70e357f9bccd0200d" prot="public">
          <name>hx_vdui_t_get_current_label</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a08db16c0d80dd46790a8448ecb4457bc" prot="public">
          <name>hx_vdui_t_clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5150006a2ddd4e638fd3ba1d469388dd" prot="public">
          <name>hx_vdui_t_refresh_cpos</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a51b9897099ceafe86140ba0b17c0e6c9" prot="public">
          <name>hx_vdui_t_get_current_item</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac0e42a058a81ce13c993efef633c27c3" prot="public">
          <name>hx_vdui_t_ui_rename_lvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a32ebac5d54e47a40c5aba436aec33b01" prot="public">
          <name>hx_vdui_t_rename_lvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a32a2afc3ba18a5c6b06760519a66f993" prot="public">
          <name>hx_vdui_t_ui_set_call_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a4069c75a0b3d5964f5c0292433a81a3c" prot="public">
          <name>hx_vdui_t_ui_set_lvar_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a089ba3105684961b63c197198b4d3759" prot="public">
          <name>hx_vdui_t_set_lvar_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a74e775269d8b95855502e99c5ce00c3c" prot="public">
          <name>hx_vdui_t_ui_edit_lvar_cmt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3983f67f2f1a72ea46065b9da95fb6f0" prot="public">
          <name>hx_vdui_t_set_lvar_cmt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ac9b57c231073bd9d73352214c0b470c7" prot="public">
          <name>hx_vdui_t_ui_map_lvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aceb53de7cf8607f446af2cc7734a7a4f" prot="public">
          <name>hx_vdui_t_ui_unmap_lvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a02b9f068eea788ea3300dce7cca5c61f" prot="public">
          <name>hx_vdui_t_map_lvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8a571547ad23ecf792d369c125e8a5d6" prot="public">
          <name>hx_vdui_t_set_strmem_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a8c9d48a41d9f4650c06101380122a31a" prot="public">
          <name>hx_vdui_t_rename_strmem</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a1d91b79e22f0f8f38be0ca8702d88322" prot="public">
          <name>hx_vdui_t_set_global_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a50139455b27ecc5b4c3ba4e908a61c07" prot="public">
          <name>hx_vdui_t_rename_global</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2782e879eb988911e0ad07afe9826c39" prot="public">
          <name>hx_vdui_t_rename_label</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2272c94897f542cdbcd16f592b8c4529" prot="public">
          <name>hx_vdui_t_jump_enter</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a431871f59b64c2a33e6757933fce5bec" prot="public">
          <name>hx_vdui_t_ctree_to_disasm</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad4e62d62eb979120a518f1339d3ef606" prot="public">
          <name>hx_vdui_t_calc_cmt_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ad635fd7c50d9eb472e756b30605546c2" prot="public">
          <name>hx_vdui_t_edit_cmt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ae69697b8cb1f37e133c5b345b1aee8cf" prot="public">
          <name>hx_vdui_t_edit_func_cmt</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab65141880b5aa607cdee3e3b354aaab2" prot="public">
          <name>hx_vdui_t_del_orphan_cmts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a5e75e0d94a50bcedaa72c35326aff183" prot="public">
          <name>hx_vdui_t_set_num_radix</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a2edd146b97e1c2a44a00379de62d4ec6" prot="public">
          <name>hx_vdui_t_set_num_enum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a7e61471970d2e2b586f164b5b0655d6b" prot="public">
          <name>hx_vdui_t_set_num_stroff</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ada140b898be71a573ad56a75b3520268" prot="public">
          <name>hx_vdui_t_invert_sign</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31aa8f32ef936eb65764149894bce90864f" prot="public">
          <name>hx_vdui_t_invert_bits</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a48301e9ed8ed9f8e3d52991237bff5a4" prot="public">
          <name>hx_vdui_t_collapse_item</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a39f79d9d5324a790e2faee5e3b276e29" prot="public">
          <name>hx_vdui_t_collapse_lvars</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a459c25008d7054b69ed0c655174d4e59" prot="public">
          <name>hx_vdui_t_split_item</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab2985fae5aebe6ad5baeaeaa094731ed" prot="public">
          <name>hx_hexrays_alloc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31a3d99b463294c3fa1c809639ec3bca8a9" prot="public">
          <name>hx_hexrays_free</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hexrays_8hpp_1a9f213661bd7e709f175d4dd9a4fd4e31ab369acd0dfe2466f401cbacee9af59cc" prot="public">
          <name>hx_vdui_t_set_noptr_lvar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>API call numbers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7299" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7298" bodyend="7855"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hexrays_8hpp_1a4f6a695f1cdb99016829d24ef16ade80" prot="public" static="no">
        <type>std::set&lt; <ref refid="structvoff__t" kindref="compound">voff_t</ref> &gt;</type>
        <definition>typedef std::set&lt;voff_t&gt; voff_set_t</definition>
        <argsstring></argsstring>
        <name>voff_set_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="251" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a2204acc3d38bf4310b3b4fb0a8b893b8" prot="public" static="no">
        <type>int</type>
        <definition>typedef int mreg_t</definition>
        <argsstring></argsstring>
        <name>mreg_t</name>
        <briefdescription>
<para>Micro register. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="253" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a2286480d8707215126cd0f3bda248def" prot="public" static="no">
        <type>std::set&lt; ea_t &gt;</type>
        <definition>typedef std::set&lt;ea_t&gt; easet_t</definition>
        <argsstring></argsstring>
        <name>easet_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="265" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a9424d5aa6bb533d2de9965293c313a52" prot="public" static="no">
        <type>std::set&lt; <ref refid="classminsn__t" kindref="compound">minsn_t</ref> * &gt;</type>
        <definition>typedef std::set&lt;minsn_t *&gt; minsn_ptr_set_t</definition>
        <argsstring></argsstring>
        <name>minsn_ptr_set_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="266" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1afcded733b73b47211fbad8ce7fe610b3" prot="public" static="no">
        <type>std::set&lt; <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> &gt;</type>
        <definition>typedef std::set&lt;qstring&gt; strings_t</definition>
        <argsstring></argsstring>
        <name>strings_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="267" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1ac433a3044ee8137423a1f9fdb3f182e9" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classminsn__t" kindref="compound">minsn_t</ref> * &gt;</type>
        <definition>typedef qvector&lt;minsn_t*&gt; minsnptrs_t</definition>
        <argsstring></argsstring>
        <name>minsnptrs_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="268" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1aab8a41881992ebcacb21db8fad0af29a" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classmop__t" kindref="compound">mop_t</ref> * &gt;</type>
        <definition>typedef qvector&lt;mop_t*&gt; mopptrs_t</definition>
        <argsstring></argsstring>
        <name>mopptrs_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="269" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a455de1cf60567fbfb8d99c2e78cdcce3" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classmop__t" kindref="compound">mop_t</ref> &gt;</type>
        <definition>typedef qvector&lt;mop_t&gt; mopvec_t</definition>
        <argsstring></argsstring>
        <name>mopvec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="270" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a7b9d829ed816afb120af13d60e351cb8" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> &gt;</type>
        <definition>typedef qvector&lt;uint64&gt; uint64vec_t</definition>
        <argsstring></argsstring>
        <name>uint64vec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="271" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a85489effd3291d573b391379aef2b5b4" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; mreg_t &gt;</type>
        <definition>typedef qvector&lt;mreg_t&gt; mregvec_t</definition>
        <argsstring></argsstring>
        <name>mregvec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="272" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a6da6beeae3b68907f7ab260c0cf19b4b" prot="public" static="no">
        <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
        <definition>typedef uint64 uvlr_t</definition>
        <argsstring></argsstring>
        <name>uvlr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="299" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1aeb32b9197bd4d23fca7ee74f1866dc88" prot="public" static="no">
        <type><ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref></type>
        <definition>typedef int64 svlr_t</definition>
        <argsstring></argsstring>
        <name>svlr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="300" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1ae38a1e91233ff83385a33e6c03b4cf4a" prot="public" static="no">
        <type>int</type>
        <definition>typedef int maymust_t</definition>
        <argsstring></argsstring>
        <name>maymust_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="444" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1af5a1e38c1483c6877e6d1c0e9e791b50" prot="public" static="no">
        <type>std::map&lt; <ref refid="structoperand__locator__t" kindref="compound">operand_locator_t</ref>, <ref refid="structnumber__format__t" kindref="compound">number_format_t</ref> &gt;</type>
        <definition>typedef std::map&lt;operand_locator_t, number_format_t&gt; user_numforms_t</definition>
        <argsstring></argsstring>
        <name>user_numforms_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="905" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1aaa7974d33ecb4cf84068fba8e2ee73bd" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structlvar__saved__info__t" kindref="compound">lvar_saved_info_t</ref> &gt;</type>
        <definition>typedef qvector&lt;lvar_saved_info_t&gt; lvar_saved_infos_t</definition>
        <argsstring></argsstring>
        <name>lvar_saved_infos_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1494" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a4b90d1bd269de24a4960da86cacd7bcd" prot="public" static="no">
        <type>std::map&lt; <ref refid="structlvar__locator__t" kindref="compound">lvar_locator_t</ref>, <ref refid="structlvar__locator__t" kindref="compound">lvar_locator_t</ref> &gt;</type>
        <definition>typedef std::map&lt;lvar_locator_t, lvar_locator_t&gt; lvar_mapping_t</definition>
        <argsstring></argsstring>
        <name>lvar_mapping_t</name>
        <briefdescription>
<para>Local variable mapping (is used to merge variables) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1497" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a40ff8c33e582ebacfe97c2e412f254d1" prot="public" static="no">
        <type>std::map&lt; ea_t, <ref refid="structudcall__t" kindref="compound">udcall_t</ref> &gt;</type>
        <definition>typedef std::map&lt;ea_t, udcall_t&gt; udcall_map_t</definition>
        <argsstring></argsstring>
        <name>udcall_map_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1590" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1590" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a2848b646ebb0b4fe48480f7d49d7be7a" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t mbitmap_t</definition>
        <argsstring></argsstring>
        <name>mbitmap_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1668" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1668" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a46b06ff467f460bef4831ccee7e3a036" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classbitset__t" kindref="compound">bitset_t</ref> &gt;</type>
        <definition>typedef qvector&lt;bitset_t&gt; array_of_bitsets</definition>
        <argsstring></argsstring>
        <name>array_of_bitsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1747" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1aa6bb47f9b836b7c7c707e656f3f5a46b" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structivlset__t" kindref="compound">ivlset_t</ref> &gt;</type>
        <definition>typedef qvector&lt;ivlset_t&gt; array_of_ivlsets</definition>
        <argsstring></argsstring>
        <name>array_of_ivlsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1935" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1934" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a1e7db33b1a5dc4b4dcf7b5d6467b1f6c" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structmlist__t" kindref="compound">mlist_t</ref> &gt;</type>
        <definition>typedef qvector&lt;mlist_t&gt; mlistvec_t</definition>
        <argsstring></argsstring>
        <name>mlistvec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1993" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1992" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a76abe5538549f4fd7e17f760fba1b3fc" prot="public" static="no">
        <type><ref refid="pro_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref></type>
        <definition>typedef uint8 mopt_t</definition>
        <argsstring></argsstring>
        <name>mopt_t</name>
        <briefdescription>
<para>Instruction operand types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2085" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2085" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a8bb79997aeed8a6ef9e2775a6d511dc0" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="classmcallarg__t" kindref="compound">mcallarg_t</ref> &gt;</type>
        <definition>typedef qvector&lt;mcallarg_t&gt; mcallargs_t</definition>
        <argsstring></argsstring>
        <name>mcallargs_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2859" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1abe8fdec5059c4d3b5523f107bf0b670e" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structhexwarn__t" kindref="compound">hexwarn_t</ref> &gt;</type>
        <definition>typedef qvector&lt;hexwarn_t&gt; hexwarns_t</definition>
        <argsstring></argsstring>
        <name>hexwarns_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4029" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="4028" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a39dca2825f72b9061b4db3d6cba19b15" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structcitem__t" kindref="compound">citem_t</ref> * &gt;</type>
        <definition>typedef qvector&lt;citem_t *&gt; ctree_items_t</definition>
        <argsstring></argsstring>
        <name>ctree_items_t</name>
        <briefdescription>
<para>Vector of parents. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5286" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a564dbcb713592ca2269d9cec678a4c65" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">ctree_items_t</ref></type>
        <definition>typedef ctree_items_t parents_t</definition>
        <argsstring></argsstring>
        <name>parents_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5287" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a4ab406bbf29f6910c268488492559fcf" prot="public" static="no">
        <type>std::map&lt; <ref refid="structtreeloc__t" kindref="compound">treeloc_t</ref>, <ref refid="structcitem__cmt__t" kindref="compound">citem_cmt_t</ref> &gt;</type>
        <definition>typedef std::map&lt;treeloc_t, citem_cmt_t&gt; user_cmts_t</definition>
        <argsstring></argsstring>
        <name>user_cmts_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5521" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5521" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1aef665c337bd0c82efa7f00cb82df2cf8" prot="public" static="no">
        <type>std::map&lt; <ref refid="structcitem__locator__t" kindref="compound">citem_locator_t</ref>, <ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref> &gt;</type>
        <definition>typedef std::map&lt;citem_locator_t, int32&gt; user_iflags_t</definition>
        <argsstring></argsstring>
        <name>user_iflags_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5540" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a7260bd6c4c4d70cd89f5176c3f101620" prot="public" static="no">
        <type>std::map&lt; ea_t, <ref refid="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" kindref="member">intvec_t</ref> &gt;</type>
        <definition>typedef std::map&lt;ea_t, intvec_t&gt; user_unions_t</definition>
        <argsstring></argsstring>
        <name>user_unions_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5546" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1acf2b06fbd9d6f4c7ff95d40c590eaad1" prot="public" static="no">
        <type><ref refid="classqvector" kindref="compound">qvector</ref>&lt; <ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> * &gt;</type>
        <definition>typedef qvector&lt;cinsn_t *&gt; cinsnptrvec_t</definition>
        <argsstring></argsstring>
        <name>cinsnptrvec_t</name>
        <briefdescription>
<para>Vector of pointers to statements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5966" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5966" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1aa277da89d07e660643c69414271ee7a7" prot="public" static="no">
        <type>std::map&lt; int, <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> &gt;</type>
        <definition>typedef std::map&lt;int, qstring&gt; user_labels_t</definition>
        <argsstring></argsstring>
        <name>user_labels_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6230" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1adef806497132519d7768a11c16898eb0" prot="public" static="no">
        <type>std::map&lt; ea_t, <ref refid="classqvector" kindref="compound">cinsnptrvec_t</ref> &gt;</type>
        <definition>typedef std::map&lt;ea_t, cinsnptrvec_t&gt; eamap_t</definition>
        <argsstring></argsstring>
        <name>eamap_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6401" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a34a2913a4fe3ebf5476051346ece1342" prot="public" static="no">
        <type>std::map&lt; <ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *, <ref refid="classrangeset__t" kindref="compound">rangeset_t</ref> &gt;</type>
        <definition>typedef std::map&lt;cinsn_t *, rangeset_t&gt; boundaries_t</definition>
        <argsstring></argsstring>
        <name>boundaries_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6403" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1ab7570fa069a4281980e600cd6e88da5a" prot="public" static="no">
        <type><ref refid="classqrefcnt__t" kindref="compound">qrefcnt_t</ref>&lt; <ref refid="structcfunc__t" kindref="compound">cfunc_t</ref> &gt;</type>
        <definition>typedef qrefcnt_t&lt;cfunc_t&gt; cfuncptr_t</definition>
        <argsstring></argsstring>
        <name>cfuncptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6580" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a178e6dc9f2528b044ed41c1f06aaabfc" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void * hexdsp_t(int code,...)</definition>
        <argsstring>(int code,...)</argsstring>
        <name>hexdsp_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hex-Rays decompiler dispatcher. All interaction with the decompiler is carried out by the intermediary of this dispatcher. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6721" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a351fc00c300b73bbfb99eac24dac2c2a" prot="public" static="no">
        <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref> idaapi</type>
        <definition>typedef ssize_t idaapi hexrays_cb_t(void *ud, hexrays_event_t event, va_list va)</definition>
        <argsstring>(void *ud, hexrays_event_t event, va_list va)</argsstring>
        <name>hexrays_cb_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handler of decompiler events. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>user data. the value specified at the handler installation time is passed here. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>decompiler event code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>additional arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>as a rule the callback must return 0 unless specified otherwise in the event description. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6900" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6900" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a6cb39ef9e1635eee34dc8979dad52e9f" prot="public" static="no">
        <type><ref refid="classqstack" kindref="compound">qstack</ref>&lt; <ref refid="structhistory__item__t" kindref="compound">history_item_t</ref> &gt;</type>
        <definition>typedef qstack&lt;history_item_t&gt; history_t</definition>
        <argsstring></argsstring>
        <name>history_t</name>
        <briefdescription>
<para>Navigation history. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6970" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6970" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a8bb57655fcfa9078786ff577a70a80d1" prot="public" static="no">
        <type>int</type>
        <definition>typedef int cmt_type_t</definition>
        <argsstring></argsstring>
        <name>cmt_type_t</name>
        <briefdescription>
<para>Comment types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6973" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6973" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hexrays_8hpp_1a072537caefbf28c3bd360683150e73e5" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t iterator_word</definition>
        <argsstring></argsstring>
        <name>iterator_word</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7857" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7857" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hexrays_8hpp_1a0a8f4b0d1ff1c89fa3ac6a53cdec3f80" prot="public" static="no" mutable="no">
        <type>const uvlr_t</type>
        <definition>const uvlr_t MAX_VALUE</definition>
        <argsstring></argsstring>
        <name>MAX_VALUE</name>
        <initializer>= uvlr_t(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="302" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1af70e1fd1e0661aab1d7c38e88548fda6" prot="public" static="no" mutable="no">
        <type>const svlr_t</type>
        <definition>const svlr_t MAX_SVALUE</definition>
        <argsstring></argsstring>
        <name>MAX_SVALUE</name>
        <initializer>= svlr_t(uvlr_t(-1) &gt;&gt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="303" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a553196762f20f2ac03bcb695030b75cf" prot="public" static="no" mutable="no">
        <type>const svlr_t</type>
        <definition>const svlr_t MIN_SVALUE</definition>
        <argsstring></argsstring>
        <name>MIN_SVALUE</name>
        <initializer>= ~MAX_SVALUE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="304" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1ac795c492155e3afe867140316a5a008c" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t MUST_ACCESS</definition>
        <argsstring></argsstring>
        <name>MUST_ACCESS</name>
        <initializer>= 0x00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="447" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a4932a5610ca22994d7a27f9e20895fc0" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t MAY_ACCESS</definition>
        <argsstring></argsstring>
        <name>MAY_ACCESS</name>
        <initializer>= 0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="448" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a01cf750a433941a670fa2471be16c245" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t MAYMUST_ACCESS_MASK</definition>
        <argsstring></argsstring>
        <name>MAYMUST_ACCESS_MASK</name>
        <initializer>= 0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="450" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1ac5d760042edb48256a88b2a2894e5f39" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t ONE_ACCESS_TYPE</definition>
        <argsstring></argsstring>
        <name>ONE_ACCESS_TYPE</name>
        <initializer>= 0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="452" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a70d7ab9711364faf5ab1a4357a0c7544" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t INCLUDE_SPOILED_REGS</definition>
        <argsstring></argsstring>
        <name>INCLUDE_SPOILED_REGS</name>
        <initializer>= 0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="455" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a0dd6539ba6675bebd8a68af9d0ef062b" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t EXCLUDE_PASS_REGS</definition>
        <argsstring></argsstring>
        <name>EXCLUDE_PASS_REGS</name>
        <initializer>= 0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="457" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a7bf468c35956236802feb355e0778eec" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t FULL_XDSU</definition>
        <argsstring></argsstring>
        <name>FULL_XDSU</name>
        <initializer>= 0x100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="459" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1acdcb7f50141e654afabd186bdd9fa2b1" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t WITH_ASSERTS</definition>
        <argsstring></argsstring>
        <name>WITH_ASSERTS</name>
        <initializer>= 0x200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="462" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1aad92a869d9cb472e0d42a219790689b6" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t EXCLUDE_VOLATILE</definition>
        <argsstring></argsstring>
        <name>EXCLUDE_VOLATILE</name>
        <initializer>= 0x400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="464" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a9da18936f02d6aec698ec7bc37e6ad17" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t INCLUDE_UNUSED_SRC</definition>
        <argsstring></argsstring>
        <name>INCLUDE_UNUSED_SRC</name>
        <initializer>= 0x800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="466" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a278e7dd2a63ec88bd4001590e2f27971" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t INCLUDE_DEAD_RETREGS</definition>
        <argsstring></argsstring>
        <name>INCLUDE_DEAD_RETREGS</name>
        <initializer>= 0x1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="468" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a6a47baa903173ee821e87bab47d94fde" prot="public" static="no" mutable="no">
        <type>const maymust_t</type>
        <definition>const maymust_t INCLUDE_RESTRICTED</definition>
        <argsstring></argsstring>
        <name>INCLUDE_RESTRICTED</name>
        <initializer>= 0x2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="470" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1ab6ae504e469c2931500ee97ebc8f1280" prot="public" static="no" mutable="no">
        <type>const mreg_t</type>
        <definition>const mreg_t mr_none</definition>
        <argsstring></argsstring>
        <name>mr_none</name>
        <initializer>= mreg_t(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="805" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="805" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a635d6dd23698f2c355d76aec1a2bc1ae" prot="public" static="no" mutable="no">
        <type>const mreg_t</type>
        <definition>const mreg_t mr_cf</definition>
        <argsstring></argsstring>
        <name>mr_cf</name>
        <initializer>= mreg_t(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="806" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="806" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a66d01dbbdf70cac6a64a6084a47d3bfe" prot="public" static="no" mutable="no">
        <type>const mreg_t</type>
        <definition>const mreg_t mr_zf</definition>
        <argsstring></argsstring>
        <name>mr_zf</name>
        <initializer>= mreg_t(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="807" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="807" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a1be9b73bbfd7568a5150eb119c9d4838" prot="public" static="no" mutable="no">
        <type>const mreg_t</type>
        <definition>const mreg_t mr_sf</definition>
        <argsstring></argsstring>
        <name>mr_sf</name>
        <initializer>= mreg_t(2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="808" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="808" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1ad3d387838ae9a832c2d1af278557a8cc" prot="public" static="no" mutable="no">
        <type>const mreg_t</type>
        <definition>const mreg_t mr_of</definition>
        <argsstring></argsstring>
        <name>mr_of</name>
        <initializer>= mreg_t(3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="809" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="809" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a5d56361ca73e2bd73a6cda1c7bd1fc30" prot="public" static="no" mutable="no">
        <type>const mreg_t</type>
        <definition>const mreg_t mr_pf</definition>
        <argsstring></argsstring>
        <name>mr_pf</name>
        <initializer>= mreg_t(4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="810" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="810" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1aeeac7944d773ef9a056c5b38f415e1ac" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int cc_count</definition>
        <argsstring></argsstring>
        <name>cc_count</name>
        <initializer>= mr_pf - mr_cf + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="811" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="811" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1abdc4e2e76760e2beeb9686cc10cdeb51" prot="public" static="no" mutable="no">
        <type>const mreg_t</type>
        <definition>const mreg_t mr_cc</definition>
        <argsstring></argsstring>
        <name>mr_cc</name>
        <initializer>= mreg_t(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="812" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a795690e848adae84ca91f3f3fbc2f3e6" prot="public" static="no" mutable="no">
        <type>const mreg_t</type>
        <definition>const mreg_t mr_first</definition>
        <argsstring></argsstring>
        <name>mr_first</name>
        <initializer>= mreg_t(8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="813" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="813" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a58f71050c684283d526432a1418d8508" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t bitset_width</definition>
        <argsstring></argsstring>
        <name>bitset_width</name>
        <initializer>= sizeof(mbitmap_t) * CHAR_BIT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1669" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1af193ec7605e79894c46d6f4b69216b35" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t bitset_align</definition>
        <argsstring></argsstring>
        <name>bitset_align</name>
        <initializer>= bitset_width - 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1670" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1670" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a1755d2b7ac27900ff8e45228b32bc5d1" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t bitset_shift</definition>
        <argsstring></argsstring>
        <name>bitset_shift</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1671" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a610299aa79794c4f7288113906ddfb6b" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_z</definition>
        <argsstring></argsstring>
        <name>mop_z</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>none </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2087" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2087" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a70a2a8e5155db5c863cec70d2f05f42c" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_r</definition>
        <argsstring></argsstring>
        <name>mop_r</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>register (they exist until MMAT_LVARS) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2088" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2088" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a9d7a0e7a2511868fadbaddd86164fa52" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_n</definition>
        <argsstring></argsstring>
        <name>mop_n</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>immediate number constant </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2089" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2089" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a758afb332031e9497b899bd9807d771e" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_str</definition>
        <argsstring></argsstring>
        <name>mop_str</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>immediate string constant </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2090" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2090" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a0f9d073e3215f3eb38e7ef1d1576a397" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_d</definition>
        <argsstring></argsstring>
        <name>mop_d</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>result of another instruction </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2091" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2091" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a506364f7b38beb9fe20a21bf0022c9be" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_S</definition>
        <argsstring></argsstring>
        <name>mop_S</name>
        <initializer>= 5</initializer>
        <briefdescription>
<para>local stack variable (they exist until MMAT_LVARS) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2092" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2092" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1ae1a29b2c5e91817df8461bea90364601" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_v</definition>
        <argsstring></argsstring>
        <name>mop_v</name>
        <initializer>= 6</initializer>
        <briefdescription>
<para>global variable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2093" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2093" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a4e1e861d1978d98a5ffb2dbbb9a86fb1" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_b</definition>
        <argsstring></argsstring>
        <name>mop_b</name>
        <initializer>= 7</initializer>
        <briefdescription>
<para>micro basic block (<ref refid="classmblock__t" kindref="compound">mblock_t</ref>) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2094" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2094" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1aadb1eb0adbb8fb5ad6abbf1e845c57a5" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_f</definition>
        <argsstring></argsstring>
        <name>mop_f</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>list of arguments </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2095" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2095" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a28c84576c54bb4929e909797d9278940" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_l</definition>
        <argsstring></argsstring>
        <name>mop_l</name>
        <initializer>= 9</initializer>
        <briefdescription>
<para>local variable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2096" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2096" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a751f1d0a747431f3dd94010275fc982b" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_a</definition>
        <argsstring></argsstring>
        <name>mop_a</name>
        <initializer>= 10</initializer>
        <briefdescription>
<para><ref refid="classmop__addr__t" kindref="compound">mop_addr_t</ref>: address of operand (mop_l, mop_v, mop_S, mop_r) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2097" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2097" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1af28f61ea7a64e4c3c9333c5286746490" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_h</definition>
        <argsstring></argsstring>
        <name>mop_h</name>
        <initializer>= 11</initializer>
        <briefdescription>
<para>helper function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2098" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2098" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1ad0e6ca4044a127fae8288deaa314de1a" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_c</definition>
        <argsstring></argsstring>
        <name>mop_c</name>
        <initializer>= 12</initializer>
        <briefdescription>
<para>mcases </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2099" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2099" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a6361f9f5e3a37a003e6647a98a22c632" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_fn</definition>
        <argsstring></argsstring>
        <name>mop_fn</name>
        <initializer>= 13</initializer>
        <briefdescription>
<para>floating point constant </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2100" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a8666d00ecb2ec18abf914a5f2b8dcf6f" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_p</definition>
        <argsstring></argsstring>
        <name>mop_p</name>
        <initializer>= 14</initializer>
        <briefdescription>
<para>operand pair </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2101" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a5318da2ae3aab412d99763ef474c9773" prot="public" static="no" mutable="no">
        <type>const mopt_t</type>
        <definition>const mopt_t mop_sc</definition>
        <argsstring></argsstring>
        <name>mop_sc</name>
        <initializer>= 15</initializer>
        <briefdescription>
<para>scattered </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2102" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a557de4e271fede12874e485962daf63b" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NOSIZE</definition>
        <argsstring></argsstring>
        <name>NOSIZE</name>
        <initializer>= -1</initializer>
        <briefdescription>
<para>wrong or unexisting operand size </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2104" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a2c098469851f69e1d9d96e131f1333b1" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int MAX_OPSIZE</definition>
        <argsstring></argsstring>
        <name>MAX_OPSIZE</name>
        <initializer>= 2 * sizeof(ea_t)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2267" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a4c29071c42140c14e9f0c68ca0470659" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DOUBLE_OPSIZE</definition>
        <argsstring></argsstring>
        <name>DOUBLE_OPSIZE</name>
        <initializer>= 2 * MAX_OPSIZE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="2268" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="2268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fixtype__t_1gac58078cd5324be51981ac40867ccb9c7" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar FX_NONE</definition>
        <argsstring></argsstring>
        <name>FX_NONE</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>not applicable </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5098" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5098" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fixtype__t_1ga31eac8010f08386f3b1d3997dbcd7e5c" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar FX_INFIX</definition>
        <argsstring></argsstring>
        <name>FX_INFIX</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>infix: a + b </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5099" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5099" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fixtype__t_1ga3b0f874f18730f09cdfa25ae71d08c04" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar FX_PREFIX</definition>
        <argsstring></argsstring>
        <name>FX_PREFIX</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>prefix: *a </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5100" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fixtype__t_1ga9af47fd8151e737e211214d3a14b07af" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar FX_POSTFIX</definition>
        <argsstring></argsstring>
        <name>FX_POSTFIX</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>postfix: a++ </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5101" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__fixtype__t_1gadb0161a0ad2b52ba2f595f04059d29ba" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar FX_TERNARY</definition>
        <argsstring></argsstring>
        <name>FX_TERNARY</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>ternary: a ? b : c </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5102" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__opattrs__t_1ga24b17ba0d328a35248c1e81c759aa1e8" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar COI_RL</definition>
        <argsstring></argsstring>
        <name>COI_RL</name>
        <initializer>= 0x00</initializer>
        <briefdescription>
<para>right to left </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5109" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__opattrs__t_1gae2b253733a3100bca611b89174d9d0f4" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar COI_LR</definition>
        <argsstring></argsstring>
        <name>COI_LR</name>
        <initializer>= 0x01</initializer>
        <briefdescription>
<para>left to right </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5110" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__opattrs__t_1ga30d52ac0d75489ad35165e440822eb85" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar COI_INT</definition>
        <argsstring></argsstring>
        <name>COI_INT</name>
        <initializer>= 0x02</initializer>
        <briefdescription>
<para>requires integer operands </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5111" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__opattrs__t_1ga6dcb9ffd36892d9c89d381186f93846d" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar COI_FP</definition>
        <argsstring></argsstring>
        <name>COI_FP</name>
        <initializer>= 0x04</initializer>
        <briefdescription>
<para>requires floating point operands </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5112" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__opattrs__t_1ga5847e1cd124cfcce6da16154812ba081" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar COI_SH</definition>
        <argsstring></argsstring>
        <name>COI_SH</name>
        <initializer>= 0x08</initializer>
        <briefdescription>
<para>is shift operation? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5113" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__opattrs__t_1gabacfeb3a66e615ed9f65207198e01843" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar COI_SGN</definition>
        <argsstring></argsstring>
        <name>COI_SGN</name>
        <initializer>= 0x10</initializer>
        <briefdescription>
<para>sign sensitive? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5114" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__opattrs__t_1ga50cd2dc7166c03aac94d3b68613f6bfb" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>const uchar COI_SBN</definition>
        <argsstring></argsstring>
        <name>COI_SBN</name>
        <initializer>= 0x20</initializer>
        <briefdescription>
<para>is simple binary? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5115" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a2abe7a55d95e79d8d768df66d805e1bc" prot="public" static="no" mutable="no">
        <type>const <ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref></type>
        <definition>const int64 HEXRAYS_API_MAGIC</definition>
        <argsstring></argsstring>
        <name>HEXRAYS_API_MAGIC</name>
        <initializer>= 0x00DEC0DE00000003LL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6722" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6722" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a69e8a71a2f8665c038677fa4ed1f32cf" prot="public" static="no" mutable="no">
        <type>const cmt_type_t</type>
        <definition>const cmt_type_t CMT_NONE</definition>
        <argsstring></argsstring>
        <name>CMT_NONE</name>
        <initializer>= 0x0000</initializer>
        <briefdescription>
<para>No comment is possible. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6975" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6975" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a30bb01ac8f01204d8fa0113202a5d5b8" prot="public" static="no" mutable="no">
        <type>const cmt_type_t</type>
        <definition>const cmt_type_t CMT_TAIL</definition>
        <argsstring></argsstring>
        <name>CMT_TAIL</name>
        <initializer>= 0x0001</initializer>
        <briefdescription>
<para>Indented comment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6976" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6976" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a757f73f06e6d357fb464e795b955c091" prot="public" static="no" mutable="no">
        <type>const cmt_type_t</type>
        <definition>const cmt_type_t CMT_BLOCK1</definition>
        <argsstring></argsstring>
        <name>CMT_BLOCK1</name>
        <initializer>= 0x0002</initializer>
        <briefdescription>
<para>Anterioir block comment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6977" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6977" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a0fb73af6eecb31ee62fe88cc4ac1f20b" prot="public" static="no" mutable="no">
        <type>const cmt_type_t</type>
        <definition>const cmt_type_t CMT_BLOCK2</definition>
        <argsstring></argsstring>
        <name>CMT_BLOCK2</name>
        <initializer>= 0x0004</initializer>
        <briefdescription>
<para>Posterior block comment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6978" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6978" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a408a2d70f86c6c94a2ee0e016a20beb0" prot="public" static="no" mutable="no">
        <type>const cmt_type_t</type>
        <definition>const cmt_type_t CMT_LVAR</definition>
        <argsstring></argsstring>
        <name>CMT_LVAR</name>
        <initializer>= 0x0008</initializer>
        <briefdescription>
<para>Local variable comment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6979" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6979" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a0bdba56b8db5da1d29c95a6bdc5b7be7" prot="public" static="no" mutable="no">
        <type>const cmt_type_t</type>
        <definition>const cmt_type_t CMT_FUNC</definition>
        <argsstring></argsstring>
        <name>CMT_FUNC</name>
        <initializer>= 0x0010</initializer>
        <briefdescription>
<para>Function comment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6980" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6980" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1af027185293abbed4305915ba838a2287" prot="public" static="no" mutable="no">
        <type>const cmt_type_t</type>
        <definition>const cmt_type_t CMT_ALL</definition>
        <argsstring></argsstring>
        <name>CMT_ALL</name>
        <initializer>= 0x001F</initializer>
        <briefdescription>
<para>All comments. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6981" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6981" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hexrays_8hpp_1a4ae42e65b6cca11cca45f6344ed22e1b" prot="public" static="no" mutable="no">
        <type>hexdsp_t *</type>
        <definition>hexdsp_t* hexdsp</definition>
        <argsstring></argsstring>
        <name>hexdsp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to Hex-Rays decompiler dispatcher. This variable must be instantiated by the plugin. It is initialized by init_hexrays_plugin(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7295" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hexrays_8hpp_1a63c1a16f3541dc4cf945443b9482bc82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *hexapi</type>
        <definition>void * hexrays_alloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>hexrays_alloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="296" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8971" bodyend="8974"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae1814a8b282f4334fea8c5d1feefd1c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void hexrays_free</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>hexrays_free</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="297" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8977" bodyend="8980"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa7aa34eba27115239b0343d83df77edf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_may_access</definition>
        <argsstring>(maymust_t maymust)</argsstring>
        <name>is_may_access</name>
        <param>
          <type>maymust_t</type>
          <declname>maymust</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="472" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="472" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3ed43592c7d80b613fe0f2407c412f89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t hexapi</type>
        <definition>ea_t get_merror_desc</definition>
        <argsstring>(qstring *out, merror_t code, mbl_array_t *mba)</argsstring>
        <name>get_merror_desc</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="group___m_e_r_r___1ga124713999eb84ddba531f5c2e9eedcab" kindref="member">merror_t</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *</type>
          <declname>mba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get textual description of an error code <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>the output buffer for the error description </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mba</parametername>
</parameternamelist>
<parameterdescription>
<para>the microcode array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the error address </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="526" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9073" bodyend="9078"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a8792b1a4f01bc917830eb06c7f642e4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mreg_t hexapi</type>
        <definition>mreg_t reg2mreg</definition>
        <argsstring>(int reg)</argsstring>
        <name>reg2mreg</name>
        <param>
          <type>int</type>
          <declname>reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Map a processor register to microregister. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>processor register number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>microregister register id or mr_none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="533" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9081" bodyend="9084"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a86044d17abdd2205a0fa63a593cfcdc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int mreg2reg</definition>
        <argsstring>(mreg_t reg, int width)</argsstring>
        <name>mreg2reg</name>
        <param>
          <type>mreg_t</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map a microregister to processor register. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reg</parametername>
</parameternamelist>
<parameterdescription>
<para>microregister number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>size of microregister in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>processor register id or -1 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="541" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9087" bodyend="9090"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ab3569638bd6b48f92b74eac83dc97a0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void install_optinsn_handler</definition>
        <argsstring>(optinsn_t *opt)</argsstring>
        <name>install_optinsn_handler</name>
        <param>
          <type><ref refid="structoptinsn__t" kindref="compound">optinsn_t</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Install an instruction level custom optimizer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para>an instance of <ref refid="structoptinsn__t" kindref="compound">optinsn_t</ref>. can not be destroyed before calling remove_optinsn_handler(). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="567" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9093" bodyend="9096"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aeb43e83e82b958301cdcb1d8139e8489" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool remove_optinsn_handler</definition>
        <argsstring>(optinsn_t *opt)</argsstring>
        <name>remove_optinsn_handler</name>
        <param>
          <type><ref refid="structoptinsn__t" kindref="compound">optinsn_t</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>Remove an instruction level custom optimizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="570" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9099" bodyend="9102"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa467799b4c476473d73dc3366526f38b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void install_optblock_handler</definition>
        <argsstring>(optblock_t *opt)</argsstring>
        <name>install_optblock_handler</name>
        <param>
          <type><ref refid="structoptblock__t" kindref="compound">optblock_t</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Install a block level custom optimizer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para>an instance of <ref refid="structoptblock__t" kindref="compound">optblock_t</ref>. can not be destroyed before calling remove_optblock_handler(). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="593" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9105" bodyend="9108"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a9533747e9940b739c4eb0ff735ac1412" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool remove_optblock_handler</definition>
        <argsstring>(optblock_t *opt)</argsstring>
        <name>remove_optblock_handler</name>
        <param>
          <type><ref refid="structoptblock__t" kindref="compound">optblock_t</ref> *</type>
          <declname>opt</declname>
        </param>
        <briefdescription>
<para>Remove a block level custom optimizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="596" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9111" bodyend="9114"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a434bcdea15ccc259869e338efabfb58f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool must_mcode_close_block</definition>
        <argsstring>(mcode_t mcode, bool including_calls)</argsstring>
        <name>must_mcode_close_block</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>including_calls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Must an instruction with the given opcode be the last one in a block? Such opcodes are called closing opcodes. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mcode</parametername>
</parameternamelist>
<parameterdescription>
<para>instruction opcode </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>including_calls</parametername>
</parameternamelist>
<parameterdescription>
<para>should m_call/m_icall be considered as the closing opcodes? If this function returns true, the opcode can not appear in the middle of a block. Calls are a special case because before MMAT_CALLS they are closing opcodes. Afteer MMAT_CALLS that are not considered as closing opcodes. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="693" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9117" bodyend="9120"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4cbfacdcccf5e593996b3e9df132e7d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool is_mcode_propagatable</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_propagatable</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>May opcode be propagates? Such opcodes can be used in sub-instructions (nested instructions) There is a handful of non-propagatable opcodes, like jumps, ret, nop, etc All other regular opcodes are propagatable and may appear in a nested instruction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="702" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9123" bodyend="9126"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a88f017722afeda39df8a1a0778e3ce04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_addsub</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_addsub</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="706" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="706" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a82f7f3b305b015b265b521744ea9be5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_xdsu</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_xdsu</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="708" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="708" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae3dce358179e899c62911cfcdc0f0489" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_set</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_set</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="710" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="710" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1af2a5ea7d8424c7a0492f68bd62b397d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_set1</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_set1</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="712" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="712" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa6756099e4a464c8047c8abfbbca6d3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_j1</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_j1</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="714" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="714" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a6ca163c52804e32e5720f0e159c155c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_jcond</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_jcond</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="716" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="716" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3a3d2da8a9ceb15dc8371c6ed717c195" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_convertible_to_jmp</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_convertible_to_jmp</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="718" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="718" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa6649e14cb80f40e822c3a4712742d64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_convertible_to_set</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_convertible_to_set</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="720" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="720" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1afd0c67d7981919f25f4d36bce9c1a4bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_call</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_call</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="722" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="722" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a840b53a0c595bf866aabe775f7466624" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_fpu</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_fpu</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="724" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="724" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a5cda2ea3570515c7fffd73542f0dd56c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_commutative</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_commutative</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="726" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="726" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a68cd4fe537f3991982400cd8f15ed28c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_mcode_shift</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>is_mcode_shift</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="739" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="739" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a85b486e6732436e61b7dc985e85c1100" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> mcode_t</type>
        <definition>THREAD_SAFE mcode_t set2jcnd</definition>
        <argsstring>(mcode_t code)</argsstring>
        <name>set2jcnd</name>
        <param>
          <type>mcode_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="748" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="748" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a079e9d7bd64c7126df00bdf995c57861" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> mcode_t</type>
        <definition>THREAD_SAFE mcode_t jcnd2set</definition>
        <argsstring>(mcode_t code)</argsstring>
        <name>jcnd2set</name>
        <param>
          <type>mcode_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="755" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="755" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2c57d9d2b44856dd0df69b5af4eeac3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mcode_t hexapi</type>
        <definition>mcode_t negate_mcode_relation</definition>
        <argsstring>(mcode_t code)</argsstring>
        <name>negate_mcode_relation</name>
        <param>
          <type>mcode_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="764" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9129" bodyend="9132"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a21f1b9570ee7e2d3f7b4b95c89e2aa8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mcode_t hexapi</type>
        <definition>mcode_t swap_mcode_relation</definition>
        <argsstring>(mcode_t code)</argsstring>
        <name>swap_mcode_relation</name>
        <param>
          <type>mcode_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="773" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9135" bodyend="9138"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ac657c10be722e37c2a7e25b902480ccf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mcode_t hexapi</type>
        <definition>mcode_t get_signed_mcode</definition>
        <argsstring>(mcode_t code)</argsstring>
        <name>get_signed_mcode</name>
        <param>
          <type>mcode_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="779" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9141" bodyend="9144"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1acc9e9898db39ea4ef8e27976e1237c31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>mcode_t hexapi</type>
        <definition>mcode_t get_unsigned_mcode</definition>
        <argsstring>(mcode_t code)</argsstring>
        <name>get_unsigned_mcode</name>
        <param>
          <type>mcode_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="786" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9147" bodyend="9150"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a02ab48cbb7777bb39a62fce2614c7810" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_signed_mcode</definition>
        <argsstring>(mcode_t code)</argsstring>
        <name>is_signed_mcode</name>
        <param>
          <type>mcode_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="789" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="789" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4e6c34828cbce94beac2ef6f5871de00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_unsigned_mcode</definition>
        <argsstring>(mcode_t code)</argsstring>
        <name>is_unsigned_mcode</name>
        <param>
          <type>mcode_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="791" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="791" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a7c00cc51ce9725c57e5d8a2f471b0603" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool mcode_modifies_d</definition>
        <argsstring>(mcode_t mcode)</argsstring>
        <name>mcode_modifies_d</name>
        <param>
          <type>mcode_t</type>
          <declname>mcode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="800" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9153" bodyend="9156"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1gac5564e0114223c09869ee116dd0894f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *hexapi</type>
        <definition>const char * dstr</definition>
        <argsstring>(const tinfo_t *tif)</argsstring>
        <name>dstr</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *</type>
          <declname>tif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print the specified type info. This function can be used from a debugger by typing &quot;tif-&gt;dstr()&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="980" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9195" bodyend="9198"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga2d89bff80e6c399042563ac8b5fcfcc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool is_type_correct</definition>
        <argsstring>(const type_t *ptr)</argsstring>
        <name>is_type_correct</name>
        <param>
          <type>const <ref refid="typeinf_8hpp_1a7a9c029b924959e0fe4f14b3531fb733" kindref="member">type_t</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify a type string. <simplesect kind="return"><para>true if type string is correct </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="986" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9201" bodyend="9204"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1gaf76d97fad27903398713b78408e71fd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool is_small_struni</definition>
        <argsstring>(const tinfo_t &amp;tif)</argsstring>
        <name>is_small_struni</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>tif</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is a small structure or union? <simplesect kind="return"><para>true if the type is a small UDT (user defined type). Small UDTs fit into a register (or pair or registers) as a rule. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="993" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9207" bodyend="9210"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga66b98cdf42e2750acfa2db87d1968111" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool is_nonbool_type</definition>
        <argsstring>(const tinfo_t &amp;type)</argsstring>
        <name>is_nonbool_type</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is definitely a non-boolean type? <simplesect kind="return"><para>true if the type is a non-boolean type (non bool and well defined) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="999" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9213" bodyend="9216"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga637b918ebe8fd0c38ca54670ed35fd5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool is_bool_type</definition>
        <argsstring>(const tinfo_t &amp;type)</argsstring>
        <name>is_bool_type</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is a boolean type? <simplesect kind="return"><para>true if the type is a boolean type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1005" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9219" bodyend="9222"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga8c597478f8c62566737a1647cb9d181f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_ptr_or_array</definition>
        <argsstring>(type_t t)</argsstring>
        <name>is_ptr_or_array</name>
        <param>
          <type><ref refid="typeinf_8hpp_1a7a9c029b924959e0fe4f14b3531fb733" kindref="member">type_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Is a pointer or array type? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1009" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1009" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1gad7ae1fbb6de5db1033765ae9e3296353" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_paf</definition>
        <argsstring>(type_t t)</argsstring>
        <name>is_paf</name>
        <param>
          <type><ref refid="typeinf_8hpp_1a7a9c029b924959e0fe4f14b3531fb733" kindref="member">type_t</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Is a pointer, array, or function type? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1015" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1015" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga3d88971108492810bfe9e5b267386cd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> bool</type>
        <definition>THREAD_SAFE bool is_inplace_def</definition>
        <argsstring>(const tinfo_t &amp;type)</argsstring>
        <name>is_inplace_def</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Is struct/union/enum definition (not declaration)? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1021" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1021" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga2fa03a8bfb699b538da16694e57cd21b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int partial_type_num</definition>
        <argsstring>(const tinfo_t &amp;type)</argsstring>
        <name>partial_type_num</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate number of partial subtypes. <simplesect kind="return"><para>number of partial subtypes. The bigger is this number, the uglier is the type. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1029" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9225" bodyend="9228"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1gaf71b23a3bfdc03a093d3835c00827225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> hexapi</type>
        <definition>tinfo_t get_float_type</definition>
        <argsstring>(int width)</argsstring>
        <name>get_float_type</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a type of a floating point value with the specified width <simplesect kind="return"><para>type info object </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the desired type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1036" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9231" bodyend="9236"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga72e9406bd759dd7becab54d14a83f785" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> hexapi</type>
        <definition>tinfo_t get_int_type_by_width_and_sign</definition>
        <argsstring>(int srcwidth, type_sign_t sign)</argsstring>
        <name>get_int_type_by_width_and_sign</name>
        <param>
          <type>int</type>
          <declname>srcwidth</declname>
        </param>
        <param>
          <type><ref refid="group__tattr__ext_1ga91970b0d779fe968b3b22572526048a0" kindref="member">type_sign_t</ref></type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a type info by width and sign. Returns a simple type (examples: int, short) with the given width and sign. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>srcwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the type in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sign</parametername>
</parameternamelist>
<parameterdescription>
<para>sign of the type </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1044" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9239" bodyend="9244"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1gaccea6e74507723fdd70e73ec19ef7b6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> hexapi</type>
        <definition>tinfo_t get_unk_type</definition>
        <argsstring>(int size)</argsstring>
        <name>get_unk_type</name>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a partial type info by width. Returns a partially defined type (examples: _DWORD, _BYTE) with the given width. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the type in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1051" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9247" bodyend="9252"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga0091ee2c26fff27da4858aeb5a66b86a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> hexapi</type>
        <definition>tinfo_t dummy_ptrtype</definition>
        <argsstring>(int ptrsize, bool isfp)</argsstring>
        <name>dummy_ptrtype</name>
        <param>
          <type>int</type>
          <declname>ptrsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isfp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a dummy pointer type <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptrsize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of pointed object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isfp</parametername>
</parameternamelist>
<parameterdescription>
<para>is floating point object? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1058" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9255" bodyend="9260"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga115db1524f5ab1c0b31eccaab1c25240" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool get_member_type</definition>
        <argsstring>(const member_t *mptr, tinfo_t *type)</argsstring>
        <name>get_member_type</name>
        <param>
          <type>const <ref refid="classmember__t" kindref="compound">member_t</ref> *</type>
          <declname>mptr</declname>
        </param>
        <param>
          <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get type of a structure field. This function performs validity checks of the field type. Wrong types are rejected. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mptr</parametername>
</parameternamelist>
<parameterdescription>
<para>structure field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the variable where the type is returned. This parameter can be NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1067" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9263" bodyend="9266"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1gad7b6f012ddfc5b8dfe04e56fd4688432" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> hexapi</type>
        <definition>tinfo_t make_pointer</definition>
        <argsstring>(const tinfo_t &amp;type)</argsstring>
        <name>make_pointer</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a pointer type. This function performs the following conversion: &quot;type&quot; -&gt; &quot;type*&quot; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>object type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&quot;type*&quot;. for example, if &apos;char&apos; is passed as the argument, </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1076" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9269" bodyend="9274"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1gaaccbf44a40e2b40f1c62690ecb9150e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> hexapi</type>
        <definition>tinfo_t create_typedef</definition>
        <argsstring>(const char *name)</argsstring>
        <name>create_typedef</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a reference to a named type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>type name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type which refers to the specified name. For example, if name is &quot;DWORD&quot;, the type info which refers to &quot;DWORD&quot; is created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1084" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9277" bodyend="9282"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1gade174c29ba0ec30cae0eab83bab73325" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref></type>
        <definition>tinfo_t create_typedef</definition>
        <argsstring>(int n)</argsstring>
        <name>create_typedef</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a reference to an ordinal type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>ordinal number of the type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type which refers to the specified ordianl. For example, if n is 1, the type info which refers to ordinal type 1 is created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1092" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="1092" bodyend="1097"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga0ede73f66d6547e809229a4d6d113486" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool get_type</definition>
        <argsstring>(uval_t id, tinfo_t *tif, type_source_t guess)</argsstring>
        <name>get_type</name>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> *</type>
          <declname>tif</declname>
        </param>
        <param>
          <type><ref refid="group__type_1ga5854abf74a525c70636b60ceea22eb58" kindref="member">type_source_t</ref></type>
          <declname>guess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a global type. Global types are types of addressable objects and struct/union/enum types <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>address or id of the object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tif</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer for the answer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>guess</parametername>
</parameternamelist>
<parameterdescription>
<para>what kind of types to consider </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1120" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9285" bodyend="9288"/>
      </memberdef>
      <memberdef kind="function" id="group__type_1ga1fbc7108c493bf711a000fadcba71203" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool set_type</definition>
        <argsstring>(uval_t id, const tinfo_t &amp;tif, type_source_t source, bool force=false)</argsstring>
        <name>set_type</name>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>tif</declname>
        </param>
        <param>
          <type><ref refid="group__type_1ga5854abf74a525c70636b60ceea22eb58" kindref="member">type_source_t</ref></type>
          <declname>source</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>force</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a global type. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>address or id of the object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tif</parametername>
</parameternamelist>
<parameterdescription>
<para>new type info </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>where the type comes from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>true means to set the type as is, false means to merge the new type with the possibly existing old type info. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1131" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9291" bodyend="9294"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a37a925e458059d0b84bd7011df7d0604" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void print_vdloc</definition>
        <argsstring>(qstring *vout, const vdloc_t &amp;loc, int nbytes)</argsstring>
        <name>print_vdloc</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>vout</declname>
        </param>
        <param>
          <type>const <ref refid="classvdloc__t" kindref="compound">vdloc_t</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print vdloc. Since vdloc does not always carry the size info, we pass it as NBYTES.. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1173" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9315" bodyend="9318"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a1190369cb12ad197371203e95af65d5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool arglocs_overlap</definition>
        <argsstring>(const vdloc_t &amp;loc1, size_t w1, const vdloc_t &amp;loc2, size_t w2)</argsstring>
        <name>arglocs_overlap</name>
        <param>
          <type>const <ref refid="classvdloc__t" kindref="compound">vdloc_t</ref> &amp;</type>
          <declname>loc1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>w1</declname>
        </param>
        <param>
          <type>const <ref refid="classvdloc__t" kindref="compound">vdloc_t</ref> &amp;</type>
          <declname>loc2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>w2</declname>
        </param>
        <briefdescription>
<para>Do two arglocs overlap? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1177" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9321" bodyend="9324"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a9195abf304ecb80aba93608a054a5b18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool restore_user_lvar_settings</definition>
        <argsstring>(lvar_uservec_t *lvinf, ea_t func_ea)</argsstring>
        <name>restore_user_lvar_settings</name>
        <param>
          <type><ref refid="structlvar__uservec__t" kindref="compound">lvar_uservec_t</ref> *</type>
          <declname>lvinf</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore user defined local variable settings in the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>entry address of the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lvinf</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1555" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9393" bodyend="9396"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae9830a1216b48aafb2305b690fe2b88b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void save_user_lvar_settings</definition>
        <argsstring>(ea_t func_ea, const lvar_uservec_t &amp;lvinf)</argsstring>
        <name>save_user_lvar_settings</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <param>
          <type>const <ref refid="structlvar__uservec__t" kindref="compound">lvar_uservec_t</ref> &amp;</type>
          <declname>lvinf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save user defined local variable settings into the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>entry address of the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lvinf</parametername>
</parameternamelist>
<parameterdescription>
<para>user-specified info about local variables </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1562" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9399" bodyend="9402"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a74a418471ebbc9fe2f1912a3b39fef2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool modify_user_lvars</definition>
        <argsstring>(ea_t entry_ea, user_lvar_modifier_t &amp;mlv)</argsstring>
        <name>modify_user_lvars</name>
        <param>
          <type>ea_t</type>
          <declname>entry_ea</declname>
        </param>
        <param>
          <type><ref refid="structuser__lvar__modifier__t" kindref="compound">user_lvar_modifier_t</ref> &amp;</type>
          <declname>mlv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify saved local variable settings. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>function start address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mlv</parametername>
</parameternamelist>
<parameterdescription>
<para>local variable modifier </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if modified variables </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1578" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9405" bodyend="9408"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aeb1e03ef0b4b1d35a3abc85367fb691e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool restore_user_defined_calls</definition>
        <argsstring>(udcall_map_t *udcalls, ea_t func_ea)</argsstring>
        <name>restore_user_defined_calls</name>
        <param>
          <type>udcall_map_t *</type>
          <declname>udcalls</declname>
        </param>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore user defined function calls from the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>udcalls</parametername>
</parameternamelist>
<parameterdescription>
<para>ptr to output buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>entry address of the function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1597" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9411" bodyend="9414"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1afb154bfb52a59cf7f45e36ae52c3c9b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void save_user_defined_calls</definition>
        <argsstring>(ea_t func_ea, const udcall_map_t &amp;udcalls)</argsstring>
        <name>save_user_defined_calls</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <param>
          <type>const udcall_map_t &amp;</type>
          <declname>udcalls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save user defined local function calls into the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>entry address of the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>udcalls</parametername>
</parameternamelist>
<parameterdescription>
<para>user-specified info about user defined function calls </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1604" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9417" bodyend="9420"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a67290eb8b4a39cfbf8be542b89bca3a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool parse_user_call</definition>
        <argsstring>(udcall_t *udc, const char *decl, bool silent)</argsstring>
        <name>parse_user_call</name>
        <param>
          <type><ref refid="structudcall__t" kindref="compound">udcall_t</ref> *</type>
          <declname>udc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>decl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>silent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert function type declaration into internal structure <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>udc</parametername>
</parameternamelist>
<parameterdescription>
<para>- pointer to output structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decl</parametername>
</parameternamelist>
<parameterdescription>
<para>- function type declaration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>silent</parametername>
</parameternamelist>
<parameterdescription>
<para>- if TRUE: do not show warning in case of incorrect type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1613" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9423" bodyend="9426"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a211f40fa0a91deead2219731d140e9c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group___m_e_r_r___1ga124713999eb84ddba531f5c2e9eedcab" kindref="member">merror_t</ref> hexapi</type>
        <definition>merror_t convert_to_user_call</definition>
        <argsstring>(const udcall_t &amp;udc, codegen_t &amp;cdg)</argsstring>
        <name>convert_to_user_call</name>
        <param>
          <type>const <ref refid="structudcall__t" kindref="compound">udcall_t</ref> &amp;</type>
          <declname>udc</declname>
        </param>
        <param>
          <type><ref refid="classcodegen__t" kindref="compound">codegen_t</ref> &amp;</type>
          <declname>cdg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>try to generate user-defined call for an instruction <simplesect kind="return"><para><ref refid="group___m_e_r_r__" kindref="compound">Microcode error codes</ref> code: MERR_OK - user-defined call generated else - error (MERR_INSN == inacceptable udc.tif) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1621" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9429" bodyend="9432"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ab95366355b74e1cb11f0ee1168c04a54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void install_microcode_filter</definition>
        <argsstring>(microcode_filter_t *filter, bool install=true)</argsstring>
        <name>install_microcode_filter</name>
        <param>
          <type><ref refid="structmicrocode__filter__t" kindref="compound">microcode_filter_t</ref> *</type>
          <declname>filter</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>install</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>register/unregister non-standard microcode generator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>- microcode generator object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>install</parametername>
</parameternamelist>
<parameterdescription>
<para>- TRUE - register the object, FALSE - unregister </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1650" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9435" bodyend="9438"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a8cd59e070c58553a40d48d435c9281c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int get_mreg_name</definition>
        <argsstring>(qstring *out, int bit, int width, void *ud=NULL)</argsstring>
        <name>get_mreg_name</name>
        <param>
          <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="1936" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="9695" bodyend="9698"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3fc1695fec2052d913dc8cb7545d7871" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classminsn__t" kindref="compound">minsn_t</ref> *hexapi</type>
        <definition>const minsn_t * getf_reginsn</definition>
        <argsstring>(const minsn_t *ins)</argsstring>
        <name>getf_reginsn</name>
        <param>
          <type>const <ref refid="classminsn__t" kindref="compound">minsn_t</ref> *</type>
          <declname>ins</declname>
        </param>
        <briefdescription>
<para>Skip assertions forward. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3537" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10251" bodyend="10254"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a1035f872059e51d617b0493d3a2981a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classminsn__t" kindref="compound">minsn_t</ref> *hexapi</type>
        <definition>const minsn_t * getb_reginsn</definition>
        <argsstring>(const minsn_t *ins)</argsstring>
        <name>getb_reginsn</name>
        <param>
          <type>const <ref refid="classminsn__t" kindref="compound">minsn_t</ref> *</type>
          <declname>ins</declname>
        </param>
        <briefdescription>
<para>Skip assertions backward. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3539" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10257" bodyend="10260"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a9d7e59ffd72724b3c51eb069006b2619" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classminsn__t" kindref="compound">minsn_t</ref> *</type>
        <definition>minsn_t* getf_reginsn</definition>
        <argsstring>(minsn_t *ins)</argsstring>
        <name>getf_reginsn</name>
        <param>
          <type><ref refid="classminsn__t" kindref="compound">minsn_t</ref> *</type>
          <declname>ins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3540" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3540" bodyend="3540"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aaaccac9e361a608ef8fc3d913ab00397" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classminsn__t" kindref="compound">minsn_t</ref> *</type>
        <definition>minsn_t* getb_reginsn</definition>
        <argsstring>(minsn_t *ins)</argsstring>
        <name>getb_reginsn</name>
        <param>
          <type><ref refid="classminsn__t" kindref="compound">minsn_t</ref> *</type>
          <declname>ins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="3541" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="3541" bodyend="3541"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1af94ad7feaba457a35a7fc7268eb2a9c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool is_kreg</definition>
        <argsstring>(mreg_t r)</argsstring>
        <name>is_kreg</name>
        <param>
          <type>mreg_t</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Is a kernel register? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4770" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10577" bodyend="10580"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4b1626565de4daa285b2ad6bab164cf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structmlist__t" kindref="compound">mlist_t</ref> &amp;hexapi</type>
        <definition>const mlist_t &amp; get_temp_regs</definition>
        <argsstring>()</argsstring>
        <name>get_temp_regs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get list of temporary registers. Tempregs are temporary registers that are used during code generation. They do not map to regular processor registers. They are used only to store temporary values during execution of one instruction. Tempregs may not be used to pass a value from one block to another. In other words, at the end of a block all tempregs must be dead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4778" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10583" bodyend="10586"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a1e3fdb1249eea9ac159eb5b63504697c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *hexapi</type>
        <definition>const char * get_hexrays_version</definition>
        <argsstring>(void)</argsstring>
        <name>get_hexrays_version</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get decompiler version. The returned string is of the form &lt;major&gt;.&lt;minor&gt;.&lt;revision&gt;.&lt;build-date&gt; <simplesect kind="return"><para>pointer to version string. For example: &quot;2.0.0.140605&quot; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4871" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10589" bodyend="10592"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aaa850e235eb79b7654a2960ea21afd71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvdui__t" kindref="compound">vdui_t</ref> *hexapi</type>
        <definition>vdui_t * open_pseudocode</definition>
        <argsstring>(ea_t ea, int new_window)</argsstring>
        <name>open_pseudocode</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>int</type>
          <declname>new_window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Open pseudocode window. The specified function is decompiled and the pseudocode window is opened. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>function to decompile </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_window</parametername>
</parameternamelist>
<parameterdescription>
<para>0:reuse existing window; 1:open new window; -1: reuse existing window if the current view is pseudocode </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4881" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10595" bodyend="10598"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a98845d8c17ec5d82992623f7fc2267af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool close_pseudocode</definition>
        <argsstring>(TWidget *f)</argsstring>
        <name>close_pseudocode</name>
        <param>
          <type>TWidget *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close pseudocode window. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to window </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4888" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10601" bodyend="10604"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae182c3693cd74fac3b7243c54cb8bafd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structvdui__t" kindref="compound">vdui_t</ref> *hexapi</type>
        <definition>vdui_t * get_widget_vdui</definition>
        <argsstring>(TWidget *f)</argsstring>
        <name>get_widget_vdui</name>
        <param>
          <type>TWidget *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="structvdui__t" kindref="compound">vdui_t</ref> instance associated to the TWidget <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to window </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="structvdui__t" kindref="compound">vdui_t</ref> *, or NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4895" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10607" bodyend="10610"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1afdbbc0eb0f49a2bcb72628f0a6016dbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool decompile_many</definition>
        <argsstring>(const char *outfile, eavec_t *funcaddrs, int flags)</argsstring>
        <name>decompile_many</name>
        <param>
          <type>const char *</type>
          <declname>outfile</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1a9f46d9d52bbfcc78bc1836f4f2683da4" kindref="member">eavec_t</ref> *</type>
          <declname>funcaddrs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Batch decompilation. Decompile all or the specified functions <simplesect kind="return"><para>true if no internal error occurred and the user has not cancelled decompilation </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outfile</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the output file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>funcaddrs</parametername>
</parameternamelist>
<parameterdescription>
<para>list of functions to decompile. If NULL or empty, then decompile all nonlib functions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group___v_d_r_u_n__" kindref="compound">Batch decompilation bits</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4919" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10613" bodyend="10616"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1af9cd9c3633a6517a33858f14fa9e9a9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void send_database</definition>
        <argsstring>(const hexrays_failure_t &amp;err, bool silent)</argsstring>
        <name>send_database</name>
        <param>
          <type>const <ref refid="structhexrays__failure__t" kindref="compound">hexrays_failure_t</ref> &amp;</type>
          <declname>err</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>silent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send the database to Hex-Rays. This function sends the current database to the Hex-Rays server. The database is sent in the compressed form over an encrypted (SSL) connection. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>failure description object. Empty <ref refid="structhexrays__failure__t" kindref="compound">hexrays_failure_t</ref> object can be used if error information is not available. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>silent</parametername>
</parameternamelist>
<parameterdescription>
<para>if false, a dialog box will be displayed before sending the database. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4964" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10627" bodyend="10630"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a561ec218e9cd3fb2d0d2fecd673e4994" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool get_current_operand</definition>
        <argsstring>(gco_info_t *out)</argsstring>
        <name>get_current_operand</name>
        <param>
          <type><ref refid="structgco__info__t" kindref="compound">gco_info_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the instruction operand under the cursor. This function determines the operand that is under the cursor in the active disassembly listing. If the operand refers to a register or stack variable, it return true. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out[out]</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="4999" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10639" bodyend="10642"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2955fe4c2037755fea70db42b56e7499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void remitem</definition>
        <argsstring>(const citem_t *e)</argsstring>
        <name>remitem</name>
        <param>
          <type>const <ref refid="structcitem__t" kindref="compound">citem_t</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5001" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10645" bodyend="10648"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a814859765492f1f771d91a95ceafbb70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ctype_t hexapi</type>
        <definition>ctype_t negated_relation</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>negated_relation</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Negate a comparison operator. For example, cot_sge becomes cot_slt. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5132" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10651" bodyend="10654"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a8b762edb0a8af0726a5f3289b7cc528b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ctype_t hexapi</type>
        <definition>ctype_t swapped_relation</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>swapped_relation</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Swap a comparison operator. For example, cot_sge becomes cot_sle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5134" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10657" bodyend="10660"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a7b0784eecef04fcb1b45fb5b4dc850ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__tattr__ext_1ga91970b0d779fe968b3b22572526048a0" kindref="member">type_sign_t</ref> hexapi</type>
        <definition>type_sign_t get_op_signness</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>get_op_signness</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Get operator sign. Meaningful for sign-dependent operators, like cot_sdiv. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5136" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10663" bodyend="10666"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae9c2c0ef9e84f0f99012e418e94b2a41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ctype_t hexapi</type>
        <definition>ctype_t asgop</definition>
        <argsstring>(ctype_t cop)</argsstring>
        <name>asgop</name>
        <param>
          <type>ctype_t</type>
          <declname>cop</declname>
        </param>
        <briefdescription>
<para>Convert plain operator into assignment operator. For example, cot_add returns cot_asgadd. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5138" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10669" bodyend="10672"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ad67970aa148c0960ca192214bc5ce61c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ctype_t hexapi</type>
        <definition>ctype_t asgop_revert</definition>
        <argsstring>(ctype_t cop)</argsstring>
        <name>asgop_revert</name>
        <param>
          <type>ctype_t</type>
          <declname>cop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert assignment operator into plain operator. For example, cot_asgadd returns cot_add <simplesect kind="return"><para>cot_empty is the input operator is not an assignment operator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5141" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10675" bodyend="10678"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ac49de1864145443054e599f18ff0b87f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool op_uses_x</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>op_uses_x</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Does operator use the &apos;x&apos; field of <ref refid="structcexpr__t" kindref="compound">cexpr_t</ref>? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5143" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5143" bodyend="5143"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a584d2a9a0602edcd630b5a7b3519923a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool op_uses_y</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>op_uses_y</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Does operator use the &apos;y&apos; field of <ref refid="structcexpr__t" kindref="compound">cexpr_t</ref>? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5145" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5145" bodyend="5145"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a38c6f9795eb6c3f7dc73263bb39ab394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool op_uses_z</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>op_uses_z</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Does operator use the &apos;z&apos; field of <ref refid="structcexpr__t" kindref="compound">cexpr_t</ref>? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5147" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5147" bodyend="5147"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1af41c92481036d8b533973a9bcaf1e28c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_binary</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_binary</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is binary operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5149" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5149" bodyend="5149"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a0e4886877bb29e9d56358674acff1a1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_unary</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_unary</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is unary operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5151" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5151" bodyend="5151"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a1a87e8074432a9e81fcb5d6f693e6a3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_relational</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_relational</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is comparison operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5153" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5153" bodyend="5153"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa134aeb43205f77247aa285ce14b3b64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_assignment</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_assignment</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is assignment operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5155" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5155" bodyend="5155"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a76269071c754e99c88f9cbac4ba24af4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool accepts_udts</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>accepts_udts</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5157" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5157" bodyend="5157"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a769d43eae215d860e6e311fe7ca8588c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_prepost</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_prepost</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is pre/post increment/decrement operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5159" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5159" bodyend="5159"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a48b5042612ed264dbb775950265c90c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_commutative</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_commutative</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is commutative operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5161" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5161" bodyend="5172"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a31206910bcf7a0de7ea91e4b9169b3f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_additive</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_additive</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is additive operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5174" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5174" bodyend="5180"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae502684f7513ce2cccb9396d5df23349" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_multiplicative</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_multiplicative</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is multiplicative operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5182" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5182" bodyend="5189"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a231d352936f051eea4652f94b0892f80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_bitop</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_bitop</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is bit related operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5192" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5192" bodyend="5198"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa9fb0612dba0314c46d84832154cf125" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_logical</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_logical</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is logical operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5201" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5201" bodyend="5206"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a79fd5d81a076af8d20f7da11c8aa5774" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_loop</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_loop</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is loop statement code? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5209" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5209" bodyend="5214"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a00beeb300e4603cce3712412786d684d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_break_consumer</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_break_consumer</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Does a break statement influence the specified statement code? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5216" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5216" bodyend="5219"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a64b98f73c27d3c3022e37866444152d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_lvalue</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_lvalue</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is Lvalue operator? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5222" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5222" bodyend="5230"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ad27bfe812d64238b633fc22312a1d4b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_allowed_on_small_struni</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>is_allowed_on_small_struni</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Is the operator allowed on small struni (structure/union)? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5233" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5233" bodyend="5242"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2db264723383473135858c44d30b7bc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *hexapi</type>
        <definition>cexpr_t * lnot</definition>
        <argsstring>(cexpr_t *e)</argsstring>
        <name>lnot</name>
        <param>
          <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Logically negate the specified expression. The specified expression will be logically negated. For example, &quot;x == y&quot; is converted into &quot;x != y&quot; by this function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>expression to negate. After the call, e must not be used anymore because it can be changed by the function. The function return value must be used to refer to the expression. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>logically negated expression. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6240" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11035" bodyend="11038"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a24db21587d650ee3e95c7a5a423a7923" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *hexapi</type>
        <definition>cinsn_t * new_block</definition>
        <argsstring>(void)</argsstring>
        <name>new_block</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new block-statement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6245" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11041" bodyend="11044"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a6c63f0e0e1f67312530f45a23e8bfdc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *hexapi</type>
        <definition>cexpr_t * vcreate_helper</definition>
        <argsstring>(bool standalone, const tinfo_t &amp;type, const char *format, va_list va)</argsstring>
        <name>vcreate_helper</name>
        <param>
          <type>bool</type>
          <declname>standalone</declname>
        </param>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a helper object. This function creates a helper object. The named function is not required to exist, the decompiler will only print its name in the output. Helper functions are usually used to represent arbitrary function or macro calls in the output. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>standalone</parametername>
</parameternamelist>
<parameterdescription>
<para>false:helper must be called; true:helper can be used in any expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the create function object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf-style format string that will be used to create the function name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>additional arguments for printf </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the created expression. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6259" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11047" bodyend="11050"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a92f833fc1f6a3b54d1b35bc823ec3abf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
        <definition>cexpr_t* create_helper</definition>
        <argsstring>(bool standalone, const tinfo_t &amp;type, const char *format,...)</argsstring>
        <name>create_helper</name>
        <param>
          <type>bool</type>
          <declname>standalone</declname>
        </param>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Create a helper object.. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6262" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6262" bodyend="6269"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1afbe376a67af8f1f784a297352f75b69b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *hexapi</type>
        <definition>cexpr_t * vcall_helper</definition>
        <argsstring>(const tinfo_t &amp;rettype, carglist_t *args, const char *format, va_list va)</argsstring>
        <name>vcall_helper</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>rettype</declname>
        </param>
        <param>
          <type><ref refid="structcarglist__t" kindref="compound">carglist_t</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a helper call expression. This function creates a new expression: a call of a helper function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rettype</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the whole expression. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>helper arguments. this object will be consumed by the function. if there are no args, this parameter may be specified as NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>printf-style format string that will be used to create the function name. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>va</parametername>
</parameternamelist>
<parameterdescription>
<para>additional arguments for printf </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the created expression. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6281" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11053" bodyend="11056"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a7b08953983e7edcdb37b00cfdccd56f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
        <definition>cexpr_t* call_helper</definition>
        <argsstring>(const tinfo_t &amp;rettype, carglist_t *args, const char *format,...)</argsstring>
        <name>call_helper</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>rettype</declname>
        </param>
        <param>
          <type><ref refid="structcarglist__t" kindref="compound">carglist_t</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Create a helper call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6284" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6284" bodyend="6294"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa34d9323dc2d8730a95f6947bf529d21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *hexapi</type>
        <definition>cexpr_t * make_num</definition>
        <argsstring>(uint64 n, cfunc_t *func=NULL, ea_t ea=BADADDR, int opnum=0, type_sign_t sign=no_sign, int size=0)</argsstring>
        <name>make_num</name>
        <param>
          <type><ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structcfunc__t" kindref="compound">cfunc_t</ref> *</type>
          <declname>func</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>opnum</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="group__tattr__ext_1ga91970b0d779fe968b3b22572526048a0" kindref="member">type_sign_t</ref></type>
          <declname>sign</declname>
          <defval><ref refid="group__tattr__ext_1gab2774527d973c5dd40e9f7e579c7af36" kindref="member">no_sign</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a number expression <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>current function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>definition address of the number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opnum</parametername>
</parameternamelist>
<parameterdescription>
<para>operand number of the number (in the disassembly listing) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sign</parametername>
</parameternamelist>
<parameterdescription>
<para>number sign </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of number in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6305" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11059" bodyend="11062"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa4d5c0c15a4cd737aead87555823ad81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *hexapi</type>
        <definition>cexpr_t * make_ref</definition>
        <argsstring>(cexpr_t *e)</argsstring>
        <name>make_ref</name>
        <param>
          <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a reference. This function performs the following conversion: &quot;obj&quot; =&gt; &quot;&amp;obj&quot;. It can handle casts, annihilate &quot;&amp;*&quot;, and process other special cases. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6312" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11065" bodyend="11068"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a5f6618e7e15ed4813987ec4f08dc2e7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *hexapi</type>
        <definition>cexpr_t * dereference</definition>
        <argsstring>(cexpr_t *e, int ptrsize, bool is_flt=false)</argsstring>
        <name>dereference</name>
        <param>
          <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ptrsize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_flt</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dereference a pointer. This function dereferences a pointer expression. It performs the following conversion: &quot;ptr&quot; =&gt; &quot;*ptr&quot; It can handle discrepancies in the pointer type and the access size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>expression to deference </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptrsize</parametername>
</parameternamelist>
<parameterdescription>
<para>access size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_flt</parametername>
</parameternamelist>
<parameterdescription>
<para>dereferencing for floating point access? </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>dereferenced expression </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6324" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11071" bodyend="11074"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a96f6e4f73ae295f368fb97bbdca3be5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void save_user_labels</definition>
        <argsstring>(ea_t func_ea, const user_labels_t *user_labels)</argsstring>
        <name>save_user_labels</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <param>
          <type>const user_labels_t *</type>
          <declname>user_labels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save user defined labels into the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_labels</parametername>
</parameternamelist>
<parameterdescription>
<para>collection of user defined labels </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6331" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11077" bodyend="11080"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4b87067b37bbb8d7439595b588c0c5ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void save_user_cmts</definition>
        <argsstring>(ea_t func_ea, const user_cmts_t *user_cmts)</argsstring>
        <name>save_user_cmts</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <param>
          <type>const user_cmts_t *</type>
          <declname>user_cmts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save user defined comments into the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_cmts</parametername>
</parameternamelist>
<parameterdescription>
<para>collection of user defined comments </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6338" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11083" bodyend="11086"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa134b1a3bf5401e1e26bc8bc54ff4e8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void save_user_numforms</definition>
        <argsstring>(ea_t func_ea, const user_numforms_t *numforms)</argsstring>
        <name>save_user_numforms</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <param>
          <type>const user_numforms_t *</type>
          <declname>numforms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save user defined number formats into the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numforms</parametername>
</parameternamelist>
<parameterdescription>
<para>collection of user defined comments </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6344" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11089" bodyend="11092"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3f1f4fe0057835788def9364d884f73f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void save_user_iflags</definition>
        <argsstring>(ea_t func_ea, const user_iflags_t *iflags)</argsstring>
        <name>save_user_iflags</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <param>
          <type>const user_iflags_t *</type>
          <declname>iflags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save user defined citem iflags into the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iflags</parametername>
</parameternamelist>
<parameterdescription>
<para>collection of user defined citem iflags </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6351" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11095" bodyend="11098"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ac2c61fc6b49ec717f623bdfbe6ad8a26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void save_user_unions</definition>
        <argsstring>(ea_t func_ea, const user_unions_t *unions)</argsstring>
        <name>save_user_unions</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <param>
          <type>const user_unions_t *</type>
          <declname>unions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save user defined union field selections into the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unions</parametername>
</parameternamelist>
<parameterdescription>
<para>collection of union field selections </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6358" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11101" bodyend="11104"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aeeef2fc6054614b96493980cb0b68876" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_labels_t *hexapi</type>
        <definition>user_labels_t * restore_user_labels</definition>
        <argsstring>(ea_t func_ea)</argsstring>
        <name>restore_user_labels</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore user defined labels from the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>collection of user defined labels. The returned object must be deleted by the caller using delete_user_labels() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6366" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11107" bodyend="11110"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1af01851491e1040e95c0bf45199b95a28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_cmts_t *hexapi</type>
        <definition>user_cmts_t * restore_user_cmts</definition>
        <argsstring>(ea_t func_ea)</argsstring>
        <name>restore_user_cmts</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore user defined comments from the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>collection of user defined comments. The returned object must be deleted by the caller using delete_user_cmts() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6374" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11113" bodyend="11116"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1abed980415d0a5341c687d144d74cfd41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_numforms_t *hexapi</type>
        <definition>user_numforms_t * restore_user_numforms</definition>
        <argsstring>(ea_t func_ea)</argsstring>
        <name>restore_user_numforms</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore user defined number formats from the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>collection of user defined number formats. The returned object must be deleted by the caller using delete_user_numforms() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6382" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11119" bodyend="11122"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a78f8f66de966f55bf89698753ea96264" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_iflags_t *hexapi</type>
        <definition>user_iflags_t * restore_user_iflags</definition>
        <argsstring>(ea_t func_ea)</argsstring>
        <name>restore_user_iflags</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore user defined citem iflags from the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>collection of user defined iflags. The returned object must be deleted by the caller using delete_user_iflags() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6390" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11125" bodyend="11128"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a7bab7af3d21788977a879f9b44199e08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_unions_t *hexapi</type>
        <definition>user_unions_t * restore_user_unions</definition>
        <argsstring>(ea_t func_ea)</argsstring>
        <name>restore_user_unions</name>
        <param>
          <type>ea_t</type>
          <declname>func_ea</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restore user defined union field selections from the database. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>func_ea</parametername>
</parameternamelist>
<parameterdescription>
<para>the entry address of the function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>collection of union field selections The returned object must be deleted by the caller using delete_user_unions() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6398" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11131" bodyend="11134"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ab8e9dc40caed640e033b05c57a37a0fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqrefcnt__t" kindref="compound">cfuncptr_t</ref> hexapi</type>
        <definition>cfuncptr_t decompile</definition>
        <argsstring>(const mba_ranges_t &amp;mbr, hexrays_failure_t *hf, int flags=0)</argsstring>
        <name>decompile</name>
        <param>
          <type>const <ref refid="structmba__ranges__t" kindref="compound">mba_ranges_t</ref> &amp;</type>
          <declname>mbr</declname>
        </param>
        <param>
          <type><ref refid="structhexrays__failure__t" kindref="compound">hexrays_failure_t</ref> *</type>
          <declname>hf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decompile a snippet or a function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mbr</parametername>
</parameternamelist>
<parameterdescription>
<para>what to decompile </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hf</parametername>
</parameternamelist>
<parameterdescription>
<para>extended error information (if failed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>bitwise combination of <ref refid="group___d_e_c_o_m_p__" kindref="compound">decompile() flags</ref>... bits </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the decompilation result (a reference counted pointer). NULL if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6598" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11289" bodyend="11292"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae9510620ba036c32b69c96b1232ef92c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqrefcnt__t" kindref="compound">cfuncptr_t</ref></type>
        <definition>cfuncptr_t decompile_func</definition>
        <argsstring>(func_t *pfn, hexrays_failure_t *hf, int flags=0)</argsstring>
        <name>decompile_func</name>
        <param>
          <type><ref refid="classfunc__t" kindref="compound">func_t</ref> *</type>
          <declname>pfn</declname>
        </param>
        <param>
          <type><ref refid="structhexrays__failure__t" kindref="compound">hexrays_failure_t</ref> *</type>
          <declname>hf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decompile a function. Multiple decompilations of the same function return the same object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pfn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to function to decompile </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hf</parametername>
</parameternamelist>
<parameterdescription>
<para>extended error information (if failed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>bitwise combination of <ref refid="group___d_e_c_o_m_p__" kindref="compound">decompile() flags</ref>... bits </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the decompilation result (a reference counted pointer). NULL if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6612" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6612" bodyend="6616"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a05855d9f221161235fa412f4f31d1ecf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqrefcnt__t" kindref="compound">cfuncptr_t</ref></type>
        <definition>cfuncptr_t decompile_snippet</definition>
        <argsstring>(const rangevec_t &amp;ranges, hexrays_failure_t *hf, int flags=0)</argsstring>
        <name>decompile_snippet</name>
        <param>
          <type>const <ref refid="structrangevec__t" kindref="compound">rangevec_t</ref> &amp;</type>
          <declname>ranges</declname>
        </param>
        <param>
          <type><ref refid="structhexrays__failure__t" kindref="compound">hexrays_failure_t</ref> *</type>
          <declname>hf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decompile a snippet. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ranges</parametername>
</parameternamelist>
<parameterdescription>
<para>snippet ranges. ranges[0].start_ea is the entry point </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hf</parametername>
</parameternamelist>
<parameterdescription>
<para>extended error information (if failed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>bitwise combination of <ref refid="group___d_e_c_o_m_p__" kindref="compound">decompile() flags</ref>... bits </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the decompilation result (a reference counted pointer). NULL if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6626" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="6626" bodyend="6633"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aac71ab302ffa26a977852a980ba23367" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmbl__array__t" kindref="compound">mbl_array_t</ref> *hexapi</type>
        <definition>mbl_array_t * gen_microcode</definition>
        <argsstring>(const mba_ranges_t &amp;mbr, hexrays_failure_t *hf, const mlist_t *retlist=NULL, int flags=0, mba_maturity_t reqmat=MMAT_GLBOPT3)</argsstring>
        <name>gen_microcode</name>
        <param>
          <type>const <ref refid="structmba__ranges__t" kindref="compound">mba_ranges_t</ref> &amp;</type>
          <declname>mbr</declname>
        </param>
        <param>
          <type><ref refid="structhexrays__failure__t" kindref="compound">hexrays_failure_t</ref> *</type>
          <declname>hf</declname>
        </param>
        <param>
          <type>const <ref refid="structmlist__t" kindref="compound">mlist_t</ref> *</type>
          <declname>retlist</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>mba_maturity_t</type>
          <declname>reqmat</declname>
          <defval>MMAT_GLBOPT3</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate microcode of an arbitrary code snippet <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mbr</parametername>
</parameternamelist>
<parameterdescription>
<para>snippet ranges </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>retlist</parametername>
</parameternamelist>
<parameterdescription>
<para>list of registers the snippet returns </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hf</parametername>
</parameternamelist>
<parameterdescription>
<para>extended error information (if failed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>bitwise combination of <ref refid="group___d_e_c_o_m_p__" kindref="compound">decompile() flags</ref>... bits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reqmat</parametername>
</parameternamelist>
<parameterdescription>
<para>required microcode maturity </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pointer to the microcode, NULL if failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6644" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11295" bodyend="11298"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2fc39a0c542241809f11c312cc7fd842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool mark_cfunc_dirty</definition>
        <argsstring>(ea_t ea, bool close_views=false)</argsstring>
        <name>mark_cfunc_dirty</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>close_views</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flush the cached decompilation results. Erases a cache entry for the specified function. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>function to erase from the cache </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>close_views</parametername>
</parameternamelist>
<parameterdescription>
<para>close pseudocode windows that show the function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if a cache entry existed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6658" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11301" bodyend="11304"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a63539bdb91cdd6f5671b04b7dd0abcf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void hexapi</type>
        <definition>void clear_cached_cfuncs</definition>
        <argsstring>(void)</argsstring>
        <name>clear_cached_cfuncs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Flush all cached decompilation results. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6663" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11307" bodyend="11310"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2b4e41e3140ee9f1384c99a9a06d78f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool has_cached_cfunc</definition>
        <argsstring>(ea_t ea)</argsstring>
        <name>has_cached_cfunc</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <briefdescription>
<para>Do we have a cached decompilation result for &apos;ea&apos;? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6668" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11313" bodyend="11316"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a6a86f51e7fa4f86fdf4dda5312884168" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *hexapi</type>
        <definition>const char * get_ctype_name</definition>
        <argsstring>(ctype_t op)</argsstring>
        <name>get_ctype_name</name>
        <param>
          <type>ctype_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6719" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11319" bodyend="11322"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a5ea0d6513656b6d417c16802f6be4b6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> hexapi</type>
        <definition>qstring create_field_name</definition>
        <argsstring>(const tinfo_t &amp;type, uval_t offset=BADADDR)</argsstring>
        <name>create_field_name</name>
        <param>
          <type>const <ref refid="classtinfo__t" kindref="compound">tinfo_t</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1aef265b11f25357d520dcfd40aa8c18f3" kindref="member">uval_t</ref></type>
          <declname>offset</declname>
          <defval><ref refid="pro_8h_1a63a7c1cde5fb0cf0d0023d55c742dd4f" kindref="member">BADADDR</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6720" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11325" bodyend="11330"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a9c1a8de478aa5e7558cf621b1d1cc4e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool hexapi</type>
        <definition>bool install_hexrays_callback</definition>
        <argsstring>(hexrays_cb_t *callback, void *ud)</argsstring>
        <name>install_hexrays_callback</name>
        <param>
          <type>hexrays_cb_t *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Install handler for decompiler events. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>handler to install </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>user data. this pointer will be passed to your handler by the decompiler. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if failed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6908" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11333" bodyend="11336"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa0c3a949258370baeb4d21cf7500ddea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int remove_hexrays_callback</definition>
        <argsstring>(hexrays_cb_t *callback, void *ud)</argsstring>
        <name>remove_hexrays_callback</name>
        <param>
          <type>hexrays_cb_t *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uninstall handler for decompiler events. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>handler to uninstall </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>user data. if NULL, all handler corresponding to <computeroutput>callback</computeroutput> is uninstalled. if not NULL, only the callback instance with the specified <computeroutput>ud</computeroutput> value is uninstalled. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of uninstalled handlers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="6916" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="11339" bodyend="11342"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a1d89ee3fd8c60f34a85ae78f5c8ff400" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool init_hexrays_plugin</definition>
        <argsstring>(int flags=0)</argsstring>
        <name>init_hexrays_plugin</name>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize your plugin for hex-rays decompiler. This function must be called before calling any other decompiler function. It initializes the pointer to the dispatcher. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>reserved, must be 0 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the decompiler exists and the dispatcher pointer is ready to use. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7865" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7865" bodyend="7868"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a929d04886325dc08843faef9e1b72c28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void term_hexrays_plugin</definition>
        <argsstring>(void)</argsstring>
        <name>term_hexrays_plugin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stop working with hex-rays decompiler. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7872" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7872" bodyend="7875"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a37761b2dd0be4a1b8d6391d5cfd2abee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
        <definition>user_numforms_iterator_t user_numforms_begin</definition>
        <argsstring>(const user_numforms_t *map)</argsstring>
        <name>user_numforms_begin</name>
        <param>
          <type>const user_numforms_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of user_numforms_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7887" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7887" bodyend="7892"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a8567ef62e8470da529300023434b8963" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
        <definition>user_numforms_iterator_t user_numforms_end</definition>
        <argsstring>(const user_numforms_t *map)</argsstring>
        <name>user_numforms_end</name>
        <param>
          <type>const user_numforms_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of user_numforms_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7896" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7896" bodyend="7901"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4c8022de6d258a3ceb28c5af90c9b85a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
        <definition>user_numforms_iterator_t user_numforms_next</definition>
        <argsstring>(user_numforms_iterator_t p)</argsstring>
        <name>user_numforms_next</name>
        <param>
          <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7905" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7905" bodyend="7909"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a40ae5c4e23bf06b8cef50c6075496122" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
        <definition>user_numforms_iterator_t user_numforms_prev</definition>
        <argsstring>(user_numforms_iterator_t p)</argsstring>
        <name>user_numforms_prev</name>
        <param>
          <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7913" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7913" bodyend="7917"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a9b290961241aacde03e7e08e955e0d2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structoperand__locator__t" kindref="compound">operand_locator_t</ref> const  &amp;</type>
        <definition>operand_locator_t const&amp; user_numforms_first</definition>
        <argsstring>(user_numforms_iterator_t p)</argsstring>
        <name>user_numforms_first</name>
        <param>
          <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7922" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7922" bodyend="7925"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ad536e6b146845a7b1a56d2c3923bd6b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structnumber__format__t" kindref="compound">number_format_t</ref> &amp;</type>
        <definition>number_format_t&amp; user_numforms_second</definition>
        <argsstring>(user_numforms_iterator_t p)</argsstring>
        <name>user_numforms_second</name>
        <param>
          <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7929" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7929" bodyend="7932"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a25d6259261499f1d956c261f87973ad8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
        <definition>user_numforms_iterator_t user_numforms_find</definition>
        <argsstring>(const user_numforms_t *map, const operand_locator_t &amp;key)</argsstring>
        <name>user_numforms_find</name>
        <param>
          <type>const user_numforms_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structoperand__locator__t" kindref="compound">operand_locator_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find the specified key in user_numforms_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7936" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7936" bodyend="7941"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a6ca14fe3eea0c6cb3b15ef7a049075d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
        <definition>user_numforms_iterator_t user_numforms_insert</definition>
        <argsstring>(user_numforms_t *map, const operand_locator_t &amp;key, const number_format_t &amp;val)</argsstring>
        <name>user_numforms_insert</name>
        <param>
          <type>user_numforms_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structoperand__locator__t" kindref="compound">operand_locator_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="structnumber__format__t" kindref="compound">number_format_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (<ref refid="structoperand__locator__t" kindref="compound">operand_locator_t</ref>, <ref refid="structnumber__format__t" kindref="compound">number_format_t</ref>) pair into user_numforms_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7945" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7945" bodyend="7950"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4aa6e385532c426f8bc357d36315f278" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_numforms_erase</definition>
        <argsstring>(user_numforms_t *map, user_numforms_iterator_t p)</argsstring>
        <name>user_numforms_erase</name>
        <param>
          <type>user_numforms_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structuser__numforms__iterator__t" kindref="compound">user_numforms_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from user_numforms_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7954" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7954" bodyend="7957"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a8ebe87cab528c6cc4d20c2eea32cb18d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_numforms_clear</definition>
        <argsstring>(user_numforms_t *map)</argsstring>
        <name>user_numforms_clear</name>
        <param>
          <type>user_numforms_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Clear user_numforms_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7961" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7961" bodyend="7964"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a0a527d5efa7bcd30a721df89b7d60da3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t user_numforms_size</definition>
        <argsstring>(user_numforms_t *map)</argsstring>
        <name>user_numforms_size</name>
        <param>
          <type>user_numforms_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get size of user_numforms_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7968" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7968" bodyend="7971"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa2728d16ac1307d263951118fcf58bde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_numforms_free</definition>
        <argsstring>(user_numforms_t *map)</argsstring>
        <name>user_numforms_free</name>
        <param>
          <type>user_numforms_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Delete user_numforms_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7975" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7975" bodyend="7978"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ac1f7ed1f0b59e43f3cbdd19ab48eba88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_numforms_t *</type>
        <definition>user_numforms_t* user_numforms_new</definition>
        <argsstring>(void)</argsstring>
        <name>user_numforms_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new user_numforms_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7982" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7982" bodyend="7985"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1abe8a0b5f490839bfedee8081d96d65fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
        <definition>lvar_mapping_iterator_t lvar_mapping_begin</definition>
        <argsstring>(const lvar_mapping_t *map)</argsstring>
        <name>lvar_mapping_begin</name>
        <param>
          <type>const lvar_mapping_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of lvar_mapping_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="7997" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="7997" bodyend="8002"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3da5a7884ad07ce1e081fff67b73439f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
        <definition>lvar_mapping_iterator_t lvar_mapping_end</definition>
        <argsstring>(const lvar_mapping_t *map)</argsstring>
        <name>lvar_mapping_end</name>
        <param>
          <type>const lvar_mapping_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of lvar_mapping_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8006" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8006" bodyend="8011"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a910823a14567252bc160e01ca38a54bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
        <definition>lvar_mapping_iterator_t lvar_mapping_next</definition>
        <argsstring>(lvar_mapping_iterator_t p)</argsstring>
        <name>lvar_mapping_next</name>
        <param>
          <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8015" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8015" bodyend="8019"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a635035bb8309884d57206865b94bf210" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
        <definition>lvar_mapping_iterator_t lvar_mapping_prev</definition>
        <argsstring>(lvar_mapping_iterator_t p)</argsstring>
        <name>lvar_mapping_prev</name>
        <param>
          <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8023" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8023" bodyend="8027"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a321924d20bc6116a911e222be5409854" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlvar__locator__t" kindref="compound">lvar_locator_t</ref> const  &amp;</type>
        <definition>lvar_locator_t const&amp; lvar_mapping_first</definition>
        <argsstring>(lvar_mapping_iterator_t p)</argsstring>
        <name>lvar_mapping_first</name>
        <param>
          <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8032" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8032" bodyend="8035"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a487fd4a5df21e57ba53618529152a4a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlvar__locator__t" kindref="compound">lvar_locator_t</ref> &amp;</type>
        <definition>lvar_locator_t&amp; lvar_mapping_second</definition>
        <argsstring>(lvar_mapping_iterator_t p)</argsstring>
        <name>lvar_mapping_second</name>
        <param>
          <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8039" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8039" bodyend="8042"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1abdf37b9a665c7d026513da9fee958546" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
        <definition>lvar_mapping_iterator_t lvar_mapping_find</definition>
        <argsstring>(const lvar_mapping_t *map, const lvar_locator_t &amp;key)</argsstring>
        <name>lvar_mapping_find</name>
        <param>
          <type>const lvar_mapping_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structlvar__locator__t" kindref="compound">lvar_locator_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find the specified key in lvar_mapping_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8046" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8046" bodyend="8051"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ac1c0eb31c24d6dad4fa201fecf282b96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
        <definition>lvar_mapping_iterator_t lvar_mapping_insert</definition>
        <argsstring>(lvar_mapping_t *map, const lvar_locator_t &amp;key, const lvar_locator_t &amp;val)</argsstring>
        <name>lvar_mapping_insert</name>
        <param>
          <type>lvar_mapping_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structlvar__locator__t" kindref="compound">lvar_locator_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="structlvar__locator__t" kindref="compound">lvar_locator_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (<ref refid="structlvar__locator__t" kindref="compound">lvar_locator_t</ref>, <ref refid="structlvar__locator__t" kindref="compound">lvar_locator_t</ref>) pair into lvar_mapping_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8055" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8055" bodyend="8060"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1af321a6d6afd1efb02e00646ee4c0ecdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lvar_mapping_erase</definition>
        <argsstring>(lvar_mapping_t *map, lvar_mapping_iterator_t p)</argsstring>
        <name>lvar_mapping_erase</name>
        <param>
          <type>lvar_mapping_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structlvar__mapping__iterator__t" kindref="compound">lvar_mapping_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from lvar_mapping_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8064" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8064" bodyend="8067"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a210e409634046b1e5d492ddc19446240" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lvar_mapping_clear</definition>
        <argsstring>(lvar_mapping_t *map)</argsstring>
        <name>lvar_mapping_clear</name>
        <param>
          <type>lvar_mapping_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Clear lvar_mapping_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8071" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8071" bodyend="8074"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ab19f32102e4da54f71ec453c3c6f8a80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t lvar_mapping_size</definition>
        <argsstring>(lvar_mapping_t *map)</argsstring>
        <name>lvar_mapping_size</name>
        <param>
          <type>lvar_mapping_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get size of lvar_mapping_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8078" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8078" bodyend="8081"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aae71ea8c00a8ab2629754ca6c91cdc9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void lvar_mapping_free</definition>
        <argsstring>(lvar_mapping_t *map)</argsstring>
        <name>lvar_mapping_free</name>
        <param>
          <type>lvar_mapping_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Delete lvar_mapping_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8085" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8085" bodyend="8088"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a9e91db0c2d5a7915c7520ea61d40181f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>lvar_mapping_t *</type>
        <definition>lvar_mapping_t* lvar_mapping_new</definition>
        <argsstring>(void)</argsstring>
        <name>lvar_mapping_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new lvar_mapping_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8092" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8092" bodyend="8095"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a403ea8fdc7430bcd00af3c28077d1911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
        <definition>udcall_map_iterator_t udcall_map_begin</definition>
        <argsstring>(const udcall_map_t *map)</argsstring>
        <name>udcall_map_begin</name>
        <param>
          <type>const udcall_map_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of udcall_map_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8107" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8107" bodyend="8112"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2cfe0571a3d355efb39ae6134c83d90e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
        <definition>udcall_map_iterator_t udcall_map_end</definition>
        <argsstring>(const udcall_map_t *map)</argsstring>
        <name>udcall_map_end</name>
        <param>
          <type>const udcall_map_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of udcall_map_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8116" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8116" bodyend="8121"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4865d22cac7015060b42f9bf5f654e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
        <definition>udcall_map_iterator_t udcall_map_next</definition>
        <argsstring>(udcall_map_iterator_t p)</argsstring>
        <name>udcall_map_next</name>
        <param>
          <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8125" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8125" bodyend="8129"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a49d4ff9dd4be615f56c31cb8763a3683" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
        <definition>udcall_map_iterator_t udcall_map_prev</definition>
        <argsstring>(udcall_map_iterator_t p)</argsstring>
        <name>udcall_map_prev</name>
        <param>
          <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8133" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8133" bodyend="8137"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a824f3b58535389cfb7bd49be4fc315c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t const  &amp;</type>
        <definition>ea_t const&amp; udcall_map_first</definition>
        <argsstring>(udcall_map_iterator_t p)</argsstring>
        <name>udcall_map_first</name>
        <param>
          <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8142" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8142" bodyend="8145"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3a8302835dc3394cb0f4cf3dd4e54dd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structudcall__t" kindref="compound">udcall_t</ref> &amp;</type>
        <definition>udcall_t&amp; udcall_map_second</definition>
        <argsstring>(udcall_map_iterator_t p)</argsstring>
        <name>udcall_map_second</name>
        <param>
          <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8149" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8149" bodyend="8152"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a8d6de91328262768fc26e3005b41a6ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
        <definition>udcall_map_iterator_t udcall_map_find</definition>
        <argsstring>(const udcall_map_t *map, const ea_t &amp;key)</argsstring>
        <name>udcall_map_find</name>
        <param>
          <type>const udcall_map_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const ea_t &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find the specified key in udcall_map_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8156" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8156" bodyend="8161"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a26fcd2a20f6f6d34d5775ceb503b0b3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
        <definition>udcall_map_iterator_t udcall_map_insert</definition>
        <argsstring>(udcall_map_t *map, const ea_t &amp;key, const udcall_t &amp;val)</argsstring>
        <name>udcall_map_insert</name>
        <param>
          <type>udcall_map_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const ea_t &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="structudcall__t" kindref="compound">udcall_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (ea_t, <ref refid="structudcall__t" kindref="compound">udcall_t</ref>) pair into udcall_map_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8165" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8165" bodyend="8170"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae56d5b6347a567e986f46c0dcb670b6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void udcall_map_erase</definition>
        <argsstring>(udcall_map_t *map, udcall_map_iterator_t p)</argsstring>
        <name>udcall_map_erase</name>
        <param>
          <type>udcall_map_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structudcall__map__iterator__t" kindref="compound">udcall_map_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from udcall_map_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8174" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8174" bodyend="8177"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a73aa6d5ea1b0cb0d73b32f54a5a9b3df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void udcall_map_clear</definition>
        <argsstring>(udcall_map_t *map)</argsstring>
        <name>udcall_map_clear</name>
        <param>
          <type>udcall_map_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Clear udcall_map_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8181" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8181" bodyend="8184"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3ec901ffd89fcda2a68b17f4cf0ee5ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t udcall_map_size</definition>
        <argsstring>(udcall_map_t *map)</argsstring>
        <name>udcall_map_size</name>
        <param>
          <type>udcall_map_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get size of udcall_map_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8188" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8188" bodyend="8191"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a038957309a6079d14f892f6036c7e180" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void udcall_map_free</definition>
        <argsstring>(udcall_map_t *map)</argsstring>
        <name>udcall_map_free</name>
        <param>
          <type>udcall_map_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Delete udcall_map_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8195" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8195" bodyend="8198"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4359c7c4be075a3ea4f7f33cd181fa2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>udcall_map_t *</type>
        <definition>udcall_map_t* udcall_map_new</definition>
        <argsstring>(void)</argsstring>
        <name>udcall_map_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new udcall_map_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8202" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8202" bodyend="8205"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a69e849d133f8d9faece3525163e72d9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
        <definition>user_cmts_iterator_t user_cmts_begin</definition>
        <argsstring>(const user_cmts_t *map)</argsstring>
        <name>user_cmts_begin</name>
        <param>
          <type>const user_cmts_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of user_cmts_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8217" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8217" bodyend="8222"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a16030b479648341117ae25e1eb82b4b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
        <definition>user_cmts_iterator_t user_cmts_end</definition>
        <argsstring>(const user_cmts_t *map)</argsstring>
        <name>user_cmts_end</name>
        <param>
          <type>const user_cmts_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of user_cmts_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8226" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8226" bodyend="8231"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a745631881e08267dbd8bdfa2c61f6890" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
        <definition>user_cmts_iterator_t user_cmts_next</definition>
        <argsstring>(user_cmts_iterator_t p)</argsstring>
        <name>user_cmts_next</name>
        <param>
          <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8235" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8235" bodyend="8239"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a097445cc0678f5b539e4087ee6ee962d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
        <definition>user_cmts_iterator_t user_cmts_prev</definition>
        <argsstring>(user_cmts_iterator_t p)</argsstring>
        <name>user_cmts_prev</name>
        <param>
          <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8243" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8243" bodyend="8247"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a6d7aaad99dd2c519786f06c6b3c73bb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structtreeloc__t" kindref="compound">treeloc_t</ref> const  &amp;</type>
        <definition>treeloc_t const&amp; user_cmts_first</definition>
        <argsstring>(user_cmts_iterator_t p)</argsstring>
        <name>user_cmts_first</name>
        <param>
          <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8252" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8252" bodyend="8255"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4241637ace85d4c720fc758ce246d6db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcitem__cmt__t" kindref="compound">citem_cmt_t</ref> &amp;</type>
        <definition>citem_cmt_t&amp; user_cmts_second</definition>
        <argsstring>(user_cmts_iterator_t p)</argsstring>
        <name>user_cmts_second</name>
        <param>
          <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8259" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8259" bodyend="8262"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ade53f0d53dd76afe553dff17fc5c5a9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
        <definition>user_cmts_iterator_t user_cmts_find</definition>
        <argsstring>(const user_cmts_t *map, const treeloc_t &amp;key)</argsstring>
        <name>user_cmts_find</name>
        <param>
          <type>const user_cmts_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structtreeloc__t" kindref="compound">treeloc_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find the specified key in user_cmts_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8266" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8266" bodyend="8271"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a6bcd8f8e8f679aefd7da79589f5a7385" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
        <definition>user_cmts_iterator_t user_cmts_insert</definition>
        <argsstring>(user_cmts_t *map, const treeloc_t &amp;key, const citem_cmt_t &amp;val)</argsstring>
        <name>user_cmts_insert</name>
        <param>
          <type>user_cmts_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structtreeloc__t" kindref="compound">treeloc_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="structcitem__cmt__t" kindref="compound">citem_cmt_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (<ref refid="structtreeloc__t" kindref="compound">treeloc_t</ref>, <ref refid="structcitem__cmt__t" kindref="compound">citem_cmt_t</ref>) pair into user_cmts_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8275" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8275" bodyend="8280"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a37ba446a55038ac59ee83fd8939326df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_cmts_erase</definition>
        <argsstring>(user_cmts_t *map, user_cmts_iterator_t p)</argsstring>
        <name>user_cmts_erase</name>
        <param>
          <type>user_cmts_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structuser__cmts__iterator__t" kindref="compound">user_cmts_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from user_cmts_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8284" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8284" bodyend="8287"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a0b42500d5432c9fca9522981cfa8ae89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_cmts_clear</definition>
        <argsstring>(user_cmts_t *map)</argsstring>
        <name>user_cmts_clear</name>
        <param>
          <type>user_cmts_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Clear user_cmts_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8291" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8291" bodyend="8294"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a371d3faafe18137fdf75226fa119079c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t user_cmts_size</definition>
        <argsstring>(user_cmts_t *map)</argsstring>
        <name>user_cmts_size</name>
        <param>
          <type>user_cmts_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get size of user_cmts_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8298" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8298" bodyend="8301"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2648e6c93a3f36d6d8c4484afb187471" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_cmts_free</definition>
        <argsstring>(user_cmts_t *map)</argsstring>
        <name>user_cmts_free</name>
        <param>
          <type>user_cmts_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Delete user_cmts_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8305" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8305" bodyend="8308"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3d7bb2846206690ff30e186e87ca0c65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_cmts_t *</type>
        <definition>user_cmts_t* user_cmts_new</definition>
        <argsstring>(void)</argsstring>
        <name>user_cmts_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new user_cmts_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8312" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8312" bodyend="8315"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1abbadd70edf5d82391957ad61313b72da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
        <definition>user_iflags_iterator_t user_iflags_begin</definition>
        <argsstring>(const user_iflags_t *map)</argsstring>
        <name>user_iflags_begin</name>
        <param>
          <type>const user_iflags_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of user_iflags_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8327" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8327" bodyend="8332"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae1aa9cbb34c4cd4db5c27ba747f776bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
        <definition>user_iflags_iterator_t user_iflags_end</definition>
        <argsstring>(const user_iflags_t *map)</argsstring>
        <name>user_iflags_end</name>
        <param>
          <type>const user_iflags_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of user_iflags_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8336" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8336" bodyend="8341"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2953e87f2c2f7493b4dd472799ad5b8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
        <definition>user_iflags_iterator_t user_iflags_next</definition>
        <argsstring>(user_iflags_iterator_t p)</argsstring>
        <name>user_iflags_next</name>
        <param>
          <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8345" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8345" bodyend="8349"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae4fb06952e0179aeca0ce2e3c9827b97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
        <definition>user_iflags_iterator_t user_iflags_prev</definition>
        <argsstring>(user_iflags_iterator_t p)</argsstring>
        <name>user_iflags_prev</name>
        <param>
          <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8353" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8353" bodyend="8357"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a438ca5ac87d56b995a1b6a8434c62400" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcitem__locator__t" kindref="compound">citem_locator_t</ref> const  &amp;</type>
        <definition>citem_locator_t const&amp; user_iflags_first</definition>
        <argsstring>(user_iflags_iterator_t p)</argsstring>
        <name>user_iflags_first</name>
        <param>
          <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8362" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8362" bodyend="8365"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1af9f6076d404fbf8a5782e5e15a00c751" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref> &amp;</type>
        <definition>int32&amp; user_iflags_second</definition>
        <argsstring>(user_iflags_iterator_t p)</argsstring>
        <name>user_iflags_second</name>
        <param>
          <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8369" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8369" bodyend="8372"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aabe79fd179e267c8096ddbedcfed4217" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
        <definition>user_iflags_iterator_t user_iflags_find</definition>
        <argsstring>(const user_iflags_t *map, const citem_locator_t &amp;key)</argsstring>
        <name>user_iflags_find</name>
        <param>
          <type>const user_iflags_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structcitem__locator__t" kindref="compound">citem_locator_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find the specified key in user_iflags_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8376" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8376" bodyend="8381"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a0e8a27d6ca24355bb1f651f907c6d404" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
        <definition>user_iflags_iterator_t user_iflags_insert</definition>
        <argsstring>(user_iflags_t *map, const citem_locator_t &amp;key, const int32 &amp;val)</argsstring>
        <name>user_iflags_insert</name>
        <param>
          <type>user_iflags_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structcitem__locator__t" kindref="compound">citem_locator_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (<ref refid="structcitem__locator__t" kindref="compound">citem_locator_t</ref>, int32) pair into user_iflags_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8385" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8385" bodyend="8390"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a6e4af8dcbf72ce173f319d902131c2bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_iflags_erase</definition>
        <argsstring>(user_iflags_t *map, user_iflags_iterator_t p)</argsstring>
        <name>user_iflags_erase</name>
        <param>
          <type>user_iflags_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structuser__iflags__iterator__t" kindref="compound">user_iflags_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from user_iflags_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8394" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8394" bodyend="8397"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2977b6dd6fe44ce8be6326457bcb1b10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_iflags_clear</definition>
        <argsstring>(user_iflags_t *map)</argsstring>
        <name>user_iflags_clear</name>
        <param>
          <type>user_iflags_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Clear user_iflags_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8401" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8401" bodyend="8404"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a879172a5d28afac6d9ad7e3fedb1f9eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t user_iflags_size</definition>
        <argsstring>(user_iflags_t *map)</argsstring>
        <name>user_iflags_size</name>
        <param>
          <type>user_iflags_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get size of user_iflags_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8408" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8408" bodyend="8411"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ab6c6f0d06176459c905bc12049ff075c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_iflags_free</definition>
        <argsstring>(user_iflags_t *map)</argsstring>
        <name>user_iflags_free</name>
        <param>
          <type>user_iflags_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Delete user_iflags_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8415" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8415" bodyend="8418"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a94f0f87f9c5c884e958814a0793764df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_iflags_t *</type>
        <definition>user_iflags_t* user_iflags_new</definition>
        <argsstring>(void)</argsstring>
        <name>user_iflags_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new user_iflags_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8422" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8422" bodyend="8425"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa310402fb904bf7fc39a7c8630860eaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
        <definition>user_unions_iterator_t user_unions_begin</definition>
        <argsstring>(const user_unions_t *map)</argsstring>
        <name>user_unions_begin</name>
        <param>
          <type>const user_unions_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of user_unions_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8437" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8437" bodyend="8442"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a6955df83250f4311e1aaea0077ecd416" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
        <definition>user_unions_iterator_t user_unions_end</definition>
        <argsstring>(const user_unions_t *map)</argsstring>
        <name>user_unions_end</name>
        <param>
          <type>const user_unions_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of user_unions_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8446" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8446" bodyend="8451"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a248651cc97eaecf7b6c391fdbd98fa0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
        <definition>user_unions_iterator_t user_unions_next</definition>
        <argsstring>(user_unions_iterator_t p)</argsstring>
        <name>user_unions_next</name>
        <param>
          <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8455" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8455" bodyend="8459"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a21f5d7ac7e041678785c7452d2020340" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
        <definition>user_unions_iterator_t user_unions_prev</definition>
        <argsstring>(user_unions_iterator_t p)</argsstring>
        <name>user_unions_prev</name>
        <param>
          <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8463" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8463" bodyend="8467"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a356463be4daf880de4973cc149b30ad0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t const  &amp;</type>
        <definition>ea_t const&amp; user_unions_first</definition>
        <argsstring>(user_unions_iterator_t p)</argsstring>
        <name>user_unions_first</name>
        <param>
          <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8472" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8472" bodyend="8475"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aff4f776bdee29fdba10f2a1e468d6524" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" kindref="member">intvec_t</ref> &amp;</type>
        <definition>intvec_t&amp; user_unions_second</definition>
        <argsstring>(user_unions_iterator_t p)</argsstring>
        <name>user_unions_second</name>
        <param>
          <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8479" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8479" bodyend="8482"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a9ece1dc94081b6aab271dcd6dbcc772a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
        <definition>user_unions_iterator_t user_unions_find</definition>
        <argsstring>(const user_unions_t *map, const ea_t &amp;key)</argsstring>
        <name>user_unions_find</name>
        <param>
          <type>const user_unions_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const ea_t &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find the specified key in user_unions_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8486" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8486" bodyend="8491"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1acc3bda75c53f308e2cd303e7ff24a93d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
        <definition>user_unions_iterator_t user_unions_insert</definition>
        <argsstring>(user_unions_t *map, const ea_t &amp;key, const intvec_t &amp;val)</argsstring>
        <name>user_unions_insert</name>
        <param>
          <type>user_unions_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const ea_t &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a16a891be237a47eac68383da2ebc2fa6" kindref="member">intvec_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (ea_t, intvec_t) pair into user_unions_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8495" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8495" bodyend="8500"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa829eadfa098b06cdafd8be47dcaaa85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_unions_erase</definition>
        <argsstring>(user_unions_t *map, user_unions_iterator_t p)</argsstring>
        <name>user_unions_erase</name>
        <param>
          <type>user_unions_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structuser__unions__iterator__t" kindref="compound">user_unions_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from user_unions_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8504" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8504" bodyend="8507"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1af16a8ae6fa46a2e22fb184c9f400c982" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_unions_clear</definition>
        <argsstring>(user_unions_t *map)</argsstring>
        <name>user_unions_clear</name>
        <param>
          <type>user_unions_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Clear user_unions_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8511" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8511" bodyend="8514"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a184147fd7168d1b1479e88c4c8f40ac8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t user_unions_size</definition>
        <argsstring>(user_unions_t *map)</argsstring>
        <name>user_unions_size</name>
        <param>
          <type>user_unions_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get size of user_unions_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8518" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8518" bodyend="8521"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa9aa8b93bba589e8623514251316465b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_unions_free</definition>
        <argsstring>(user_unions_t *map)</argsstring>
        <name>user_unions_free</name>
        <param>
          <type>user_unions_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Delete user_unions_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8525" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8525" bodyend="8528"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa38ab016231abe18a7da358feec4b0fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_unions_t *</type>
        <definition>user_unions_t* user_unions_new</definition>
        <argsstring>(void)</argsstring>
        <name>user_unions_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new user_unions_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8532" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8532" bodyend="8535"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a5a45550300a1e62ca8e9b129ae6bbae5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
        <definition>user_labels_iterator_t user_labels_begin</definition>
        <argsstring>(const user_labels_t *map)</argsstring>
        <name>user_labels_begin</name>
        <param>
          <type>const user_labels_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of user_labels_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8547" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8547" bodyend="8552"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a9812a17b8da3dcc68b538a0bce18dd10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
        <definition>user_labels_iterator_t user_labels_end</definition>
        <argsstring>(const user_labels_t *map)</argsstring>
        <name>user_labels_end</name>
        <param>
          <type>const user_labels_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of user_labels_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8556" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8556" bodyend="8561"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1afbe4ad1c60bad2644c0ae01dabbb7983" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
        <definition>user_labels_iterator_t user_labels_next</definition>
        <argsstring>(user_labels_iterator_t p)</argsstring>
        <name>user_labels_next</name>
        <param>
          <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8565" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8565" bodyend="8569"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ae3991b575947ef8e84b4bd29f427b5cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
        <definition>user_labels_iterator_t user_labels_prev</definition>
        <argsstring>(user_labels_iterator_t p)</argsstring>
        <name>user_labels_prev</name>
        <param>
          <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8573" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8573" bodyend="8577"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a1c1670051e495bbcf7b008726811ffde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int const  &amp;</type>
        <definition>int const&amp; user_labels_first</definition>
        <argsstring>(user_labels_iterator_t p)</argsstring>
        <name>user_labels_first</name>
        <param>
          <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8582" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8582" bodyend="8585"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a45b49ede127269886215c271d7bd0cf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> &amp;</type>
        <definition>qstring&amp; user_labels_second</definition>
        <argsstring>(user_labels_iterator_t p)</argsstring>
        <name>user_labels_second</name>
        <param>
          <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8589" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8589" bodyend="8592"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a63f82b428affe83b44748a9ab1801c48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
        <definition>user_labels_iterator_t user_labels_find</definition>
        <argsstring>(const user_labels_t *map, const int &amp;key)</argsstring>
        <name>user_labels_find</name>
        <param>
          <type>const user_labels_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find the specified key in user_labels_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8596" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8596" bodyend="8601"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a68aebf2f80c7f8e8b5ea01fef1350a60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
        <definition>user_labels_iterator_t user_labels_insert</definition>
        <argsstring>(user_labels_t *map, const int &amp;key, const qstring &amp;val)</argsstring>
        <name>user_labels_insert</name>
        <param>
          <type>user_labels_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="pro_8h_1a386c10c6aa4340f1d63df85f40454fce" kindref="member">qstring</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (int, qstring) pair into user_labels_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8605" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8605" bodyend="8610"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1abcbd3ceff3cc37333bcc95bba91560fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_labels_erase</definition>
        <argsstring>(user_labels_t *map, user_labels_iterator_t p)</argsstring>
        <name>user_labels_erase</name>
        <param>
          <type>user_labels_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structuser__labels__iterator__t" kindref="compound">user_labels_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from user_labels_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8614" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8614" bodyend="8617"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a103b257d65a1cccc46e3e09fc30efa5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_labels_clear</definition>
        <argsstring>(user_labels_t *map)</argsstring>
        <name>user_labels_clear</name>
        <param>
          <type>user_labels_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Clear user_labels_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8621" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8621" bodyend="8624"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1ad6c85a3fe32add7d156376f8ab46386b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t user_labels_size</definition>
        <argsstring>(user_labels_t *map)</argsstring>
        <name>user_labels_size</name>
        <param>
          <type>user_labels_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get size of user_labels_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8628" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8628" bodyend="8631"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aafac4ed74af1feb0f1d8dea3978ddb37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void user_labels_free</definition>
        <argsstring>(user_labels_t *map)</argsstring>
        <name>user_labels_free</name>
        <param>
          <type>user_labels_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Delete user_labels_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8635" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8635" bodyend="8638"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a0db7a77718fd62f7806da10164a9ad10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>user_labels_t *</type>
        <definition>user_labels_t* user_labels_new</definition>
        <argsstring>(void)</argsstring>
        <name>user_labels_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new user_labels_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8642" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8642" bodyend="8645"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4d19c88e751b4a31faeeb0d2bee4f88d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
        <definition>eamap_iterator_t eamap_begin</definition>
        <argsstring>(const eamap_t *map)</argsstring>
        <name>eamap_begin</name>
        <param>
          <type>const eamap_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of eamap_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8657" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8657" bodyend="8662"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a730873c1280472f5df728a479ed250f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
        <definition>eamap_iterator_t eamap_end</definition>
        <argsstring>(const eamap_t *map)</argsstring>
        <name>eamap_end</name>
        <param>
          <type>const eamap_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of eamap_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8666" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8666" bodyend="8671"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a47663fc8f70ef8c8da932aa6ade9c454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
        <definition>eamap_iterator_t eamap_next</definition>
        <argsstring>(eamap_iterator_t p)</argsstring>
        <name>eamap_next</name>
        <param>
          <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8675" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8675" bodyend="8679"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a2fe59725139b2084458d312d06dc7443" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
        <definition>eamap_iterator_t eamap_prev</definition>
        <argsstring>(eamap_iterator_t p)</argsstring>
        <name>eamap_prev</name>
        <param>
          <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8683" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8683" bodyend="8687"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1af6facdb14d9d3bae2e68e40581e7f496" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ea_t const  &amp;</type>
        <definition>ea_t const&amp; eamap_first</definition>
        <argsstring>(eamap_iterator_t p)</argsstring>
        <name>eamap_first</name>
        <param>
          <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8692" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8692" bodyend="8695"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa1a1553d079ec45056eef70e945f97ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqvector" kindref="compound">cinsnptrvec_t</ref> &amp;</type>
        <definition>cinsnptrvec_t&amp; eamap_second</definition>
        <argsstring>(eamap_iterator_t p)</argsstring>
        <name>eamap_second</name>
        <param>
          <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8699" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8699" bodyend="8702"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3898668524ac0b8ad126aae38cff0131" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
        <definition>eamap_iterator_t eamap_find</definition>
        <argsstring>(const eamap_t *map, const ea_t &amp;key)</argsstring>
        <name>eamap_find</name>
        <param>
          <type>const eamap_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const ea_t &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find the specified key in eamap_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8706" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8706" bodyend="8711"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aae0e84ed7516c413ad648687af03de19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
        <definition>eamap_iterator_t eamap_insert</definition>
        <argsstring>(eamap_t *map, const ea_t &amp;key, const cinsnptrvec_t &amp;val)</argsstring>
        <name>eamap_insert</name>
        <param>
          <type>eamap_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const ea_t &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classqvector" kindref="compound">cinsnptrvec_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (ea_t, cinsnptrvec_t) pair into eamap_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8715" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8715" bodyend="8720"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a51eaa78389f29e28912696fd8df4f4cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eamap_erase</definition>
        <argsstring>(eamap_t *map, eamap_iterator_t p)</argsstring>
        <name>eamap_erase</name>
        <param>
          <type>eamap_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structeamap__iterator__t" kindref="compound">eamap_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from eamap_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8724" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8724" bodyend="8727"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a771761e1b00eff4678ca0ed8908bc0e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eamap_clear</definition>
        <argsstring>(eamap_t *map)</argsstring>
        <name>eamap_clear</name>
        <param>
          <type>eamap_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Clear eamap_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8731" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8731" bodyend="8734"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a567a9e985b86b2eb871d5e8619148a97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t eamap_size</definition>
        <argsstring>(eamap_t *map)</argsstring>
        <name>eamap_size</name>
        <param>
          <type>eamap_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get size of eamap_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8738" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8738" bodyend="8741"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aeb797337fe2053cdf76aca63f207d93a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void eamap_free</definition>
        <argsstring>(eamap_t *map)</argsstring>
        <name>eamap_free</name>
        <param>
          <type>eamap_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Delete eamap_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8745" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8745" bodyend="8748"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a8a68b2015168c8289c5706188b5499d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>eamap_t *</type>
        <definition>eamap_t* eamap_new</definition>
        <argsstring>(void)</argsstring>
        <name>eamap_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new eamap_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8752" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8752" bodyend="8755"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a30bc14df2e30f7f0d966d8a4b691497e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
        <definition>boundaries_iterator_t boundaries_begin</definition>
        <argsstring>(const boundaries_t *map)</argsstring>
        <name>boundaries_begin</name>
        <param>
          <type>const boundaries_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of boundaries_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8767" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8767" bodyend="8772"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a07159938867ee1820eeab8ee195eddbd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
        <definition>boundaries_iterator_t boundaries_end</definition>
        <argsstring>(const boundaries_t *map)</argsstring>
        <name>boundaries_end</name>
        <param>
          <type>const boundaries_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of boundaries_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8776" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8776" bodyend="8781"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aa76495b61922ca5759e2a5355188bc4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
        <definition>boundaries_iterator_t boundaries_next</definition>
        <argsstring>(boundaries_iterator_t p)</argsstring>
        <name>boundaries_next</name>
        <param>
          <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8785" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8785" bodyend="8789"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a634360f3110d3d46ed2c9ce37e4c1fdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
        <definition>boundaries_iterator_t boundaries_prev</definition>
        <argsstring>(boundaries_iterator_t p)</argsstring>
        <name>boundaries_prev</name>
        <param>
          <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8793" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8793" bodyend="8797"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a7a2836f8ef685960103c1f0df6e93453" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *const  &amp;</type>
        <definition>cinsn_t* const&amp; boundaries_first</definition>
        <argsstring>(boundaries_iterator_t p)</argsstring>
        <name>boundaries_first</name>
        <param>
          <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8802" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8802" bodyend="8805"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a12b00d58c77ed0fa7f2c2a0eeab0095d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrangeset__t" kindref="compound">rangeset_t</ref> &amp;</type>
        <definition>rangeset_t&amp; boundaries_second</definition>
        <argsstring>(boundaries_iterator_t p)</argsstring>
        <name>boundaries_second</name>
        <param>
          <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current map value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8809" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8809" bodyend="8812"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a0b226fa63c0c987641d58abc84c3284f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
        <definition>boundaries_iterator_t boundaries_find</definition>
        <argsstring>(const boundaries_t *map, const cinsn_t *&amp;key)</argsstring>
        <name>boundaries_find</name>
        <param>
          <type>const boundaries_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *&amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Find the specified key in boundaries_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8816" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8816" bodyend="8821"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1adcf784ec634d2658218d4d7e68b43303" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
        <definition>boundaries_iterator_t boundaries_insert</definition>
        <argsstring>(boundaries_t *map, const cinsn_t *&amp;key, const rangeset_t &amp;val)</argsstring>
        <name>boundaries_insert</name>
        <param>
          <type>boundaries_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const <ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *&amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="classrangeset__t" kindref="compound">rangeset_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (<ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *, <ref refid="classrangeset__t" kindref="compound">rangeset_t</ref>) pair into boundaries_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8825" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8825" bodyend="8830"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1adc99d38f581632a764e684ef3df7f27f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boundaries_erase</definition>
        <argsstring>(boundaries_t *map, boundaries_iterator_t p)</argsstring>
        <name>boundaries_erase</name>
        <param>
          <type>boundaries_t *</type>
          <declname>map</declname>
        </param>
        <param>
          <type><ref refid="structboundaries__iterator__t" kindref="compound">boundaries_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from boundaries_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8834" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8834" bodyend="8837"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a9cced97317da19bbd907942a7f328142" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boundaries_clear</definition>
        <argsstring>(boundaries_t *map)</argsstring>
        <name>boundaries_clear</name>
        <param>
          <type>boundaries_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Clear boundaries_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8841" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8841" bodyend="8844"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a51967f6372e9992245a607fdfdd1e5b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t boundaries_size</definition>
        <argsstring>(boundaries_t *map)</argsstring>
        <name>boundaries_size</name>
        <param>
          <type>boundaries_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Get size of boundaries_t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8848" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8848" bodyend="8851"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a717b672d0a95569490002461e5dd4541" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boundaries_free</definition>
        <argsstring>(boundaries_t *map)</argsstring>
        <name>boundaries_free</name>
        <param>
          <type>boundaries_t *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Delete boundaries_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8855" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8855" bodyend="8858"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a27cefd49f452407e6de32a4c81cbf8c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>boundaries_t *</type>
        <definition>boundaries_t* boundaries_new</definition>
        <argsstring>(void)</argsstring>
        <name>boundaries_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new boundaries_t instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8862" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8862" bodyend="8865"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1adac11074ec258fb4ab9f5542ed2ab736" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
        <definition>block_chains_iterator_t block_chains_begin</definition>
        <argsstring>(const block_chains_t *set)</argsstring>
        <name>block_chains_begin</name>
        <param>
          <type>const <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the beginning of <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8877" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8877" bodyend="8882"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1abfc69efbab7f88362be110e734b20d68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
        <definition>block_chains_iterator_t block_chains_end</definition>
        <argsstring>(const block_chains_t *set)</argsstring>
        <name>block_chains_end</name>
        <param>
          <type>const <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Get iterator pointing to the end of <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8886" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8886" bodyend="8891"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4fe4f3289e0c631fdbebaff6f5523721" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
        <definition>block_chains_iterator_t block_chains_next</definition>
        <argsstring>(block_chains_iterator_t p)</argsstring>
        <name>block_chains_next</name>
        <param>
          <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the next element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8895" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8895" bodyend="8899"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aef2b2d750b4c5c60289ef81ecaff6783" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
        <definition>block_chains_iterator_t block_chains_prev</definition>
        <argsstring>(block_chains_iterator_t p)</argsstring>
        <name>block_chains_prev</name>
        <param>
          <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Move to the previous element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8903" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8903" bodyend="8907"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a3e3240603eda9d75955169bba65dff34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classchain__t" kindref="compound">chain_t</ref> &amp;</type>
        <definition>chain_t&amp; block_chains_get</definition>
        <argsstring>(block_chains_iterator_t p)</argsstring>
        <name>block_chains_get</name>
        <param>
          <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Get reference to the current set value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8912" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8912" bodyend="8915"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a6ad0ca1a7a39428d4e52a3bc60672be3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
        <definition>block_chains_iterator_t block_chains_find</definition>
        <argsstring>(const block_chains_t *set, const chain_t &amp;val)</argsstring>
        <name>block_chains_find</name>
        <param>
          <type>const <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>const <ref refid="classchain__t" kindref="compound">chain_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Find the specified key in set <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8919" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8919" bodyend="8924"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a7cb8feab2271d0d8c0168bf0fa7d45a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
        <definition>block_chains_iterator_t block_chains_insert</definition>
        <argsstring>(block_chains_t *set, const chain_t &amp;val)</argsstring>
        <name>block_chains_insert</name>
        <param>
          <type><ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>const <ref refid="classchain__t" kindref="compound">chain_t</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Insert new (<ref refid="classchain__t" kindref="compound">chain_t</ref>) into set <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8928" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8928" bodyend="8933"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aedac4653e5892988b8e5421a5c70fa4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void block_chains_erase</definition>
        <argsstring>(block_chains_t *set, block_chains_iterator_t p)</argsstring>
        <name>block_chains_erase</name>
        <param>
          <type><ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> *</type>
          <declname>set</declname>
        </param>
        <param>
          <type><ref refid="structblock__chains__iterator__t" kindref="compound">block_chains_iterator_t</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Erase current element from <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8937" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8937" bodyend="8940"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a571602d06dfc821b5162be16d490280b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void block_chains_clear</definition>
        <argsstring>(block_chains_t *set)</argsstring>
        <name>block_chains_clear</name>
        <param>
          <type><ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Clear <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8944" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8944" bodyend="8947"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1aaeb37fe6d6353fdb607a5ac00f0ad62e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t block_chains_size</definition>
        <argsstring>(block_chains_t *set)</argsstring>
        <name>block_chains_size</name>
        <param>
          <type><ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Get size of <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8951" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8951" bodyend="8954"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a4328729ffb3152418030c4f755398745" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void block_chains_free</definition>
        <argsstring>(block_chains_t *set)</argsstring>
        <name>block_chains_free</name>
        <param>
          <type><ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> *</type>
          <declname>set</declname>
        </param>
        <briefdescription>
<para>Delete <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8958" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8958" bodyend="8961"/>
      </memberdef>
      <memberdef kind="function" id="hexrays_8hpp_1a73f66c2504cd7a7a8716dda47c61ba31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> *</type>
        <definition>block_chains_t* block_chains_new</definition>
        <argsstring>(void)</argsstring>
        <name>block_chains_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a new <ref refid="classblock__chains__t" kindref="compound">block_chains_t</ref> instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="8965" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="8965" bodyend="8968"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp"/>
  </compounddef>
</doxygen>
