<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structaction__handler__t" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>action_handler_t</compoundname>
    <includes refid="kernwin_8hpp" local="no">kernwin.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structaction__handler__t_1aa50f23a78efd5e14e522d1e94b5569bc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int action_handler_t::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
<para>internal - for version management </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3547" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3547" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structaction__handler__t_1ae454e02aed6a887a5965ae511cfccdfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>action_handler_t::action_handler_t</definition>
        <argsstring>(int _f=0)</argsstring>
        <name>action_handler_t</name>
        <param>
          <type>int</type>
          <declname>_f</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3550" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3550" bodyend="3550"/>
      </memberdef>
      <memberdef kind="function" id="structaction__handler__t_1a7fcfce99cf8b530c04bcc25f8578a184" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int idaapi</type>
        <definition>virtual int idaapi action_handler_t::activate</definition>
        <argsstring>(action_activation_ctx_t *ctx)=0</argsstring>
        <name>activate</name>
        <param>
          <type><ref refid="kernwin_8hpp_1a7a4a411738413ddfec4eaacb05cf21c8" kindref="member">action_activation_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Activate an action. This function implements the core behavior of an action. It is called when the action is triggered, from a menu, from a popup menu, from the toolbar, or programmatically. <simplesect kind="return"><para>non-zero: all IDA windows will be refreshed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structaction__handler__t_1a0d43898a22107d9a6ddec618a7d4177c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="kernwin_8hpp_1ac55f790129202f8c4cea693fe570ead6" kindref="member">action_state_t</ref> idaapi</type>
        <definition>virtual action_state_t idaapi action_handler_t::update</definition>
        <argsstring>(action_update_ctx_t *ctx)=0</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="kernwin_8hpp_1ac6e0aff49f47ef359592ff6ba386c858" kindref="member">action_update_ctx_t</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update an action. This is called when the context of the UI changed, and we need to let the action update some of its properties if needed (label, icon, ...)</para><para>In addition, this lets IDA know whether the action is enabled, and when it should be queried for availability again.</para><para>Note: This callback is not meant to change anything in the application&apos;s state, except by calling one (or many) of the &quot;update_action_*()&quot; functions on this very action. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structaction__handler__t_1a8f11b305c3b3420874336e82bf9f5a64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual action_handler_t::~action_handler_t</definition>
        <argsstring>()</argsstring>
        <name>~action_handler_t</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3572" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3572" bodyend="3572"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages the behavior of a registered action. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" line="3546" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/kernwin.hpp" bodystart="3545" bodyend="3573"/>
    <listofallmembers>
      <member refid="structaction__handler__t_1ae454e02aed6a887a5965ae511cfccdfb" prot="public" virt="non-virtual"><scope>action_handler_t</scope><name>action_handler_t</name></member>
      <member refid="structaction__handler__t_1a7fcfce99cf8b530c04bcc25f8578a184" prot="public" virt="pure-virtual"><scope>action_handler_t</scope><name>activate</name></member>
      <member refid="structaction__handler__t_1aa50f23a78efd5e14e522d1e94b5569bc" prot="public" virt="non-virtual"><scope>action_handler_t</scope><name>flags</name></member>
      <member refid="structaction__handler__t_1a0d43898a22107d9a6ddec618a7d4177c" prot="public" virt="pure-virtual"><scope>action_handler_t</scope><name>update</name></member>
      <member refid="structaction__handler__t_1a8f11b305c3b3420874336e82bf9f5a64" prot="public" virt="virtual"><scope>action_handler_t</scope><name>~action_handler_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
