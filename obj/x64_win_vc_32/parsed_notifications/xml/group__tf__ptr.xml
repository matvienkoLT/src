<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group__tf__ptr" kind="group">
    <compoundname>tf_ptr</compoundname>
    <title>Derived type: pointer</title>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__tf__ptr_1ga1ea9ae22535f9fb09b2c74f6e7526d4e" prot="public" static="no" mutable="no">
        <type>const <ref refid="typeinf_8hpp_1a7a9c029b924959e0fe4f14b3531fb733" kindref="member">type_t</ref></type>
        <definition>const type_t BT_PTR</definition>
        <argsstring></argsstring>
        <name>BT_PTR</name>
        <initializer>= 0x0A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pointer. has the following format: [db sizeof(ptr)]; [tah-typeattrs]; type_t... </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="131" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__tf__ptr_1ga3c44b2a54003ba7ba132a52e84b64d8e" prot="public" static="no" mutable="no">
        <type>const <ref refid="typeinf_8hpp_1a7a9c029b924959e0fe4f14b3531fb733" kindref="member">type_t</ref></type>
        <definition>const type_t BTMT_DEFPTR</definition>
        <argsstring></argsstring>
        <name>BTMT_DEFPTR</name>
        <initializer>= 0x00</initializer>
        <briefdescription>
<para>default for model </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="134" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__tf__ptr_1ga24fd022fe6b8de3ed2f0ab1eb3b52d88" prot="public" static="no" mutable="no">
        <type>const <ref refid="typeinf_8hpp_1a7a9c029b924959e0fe4f14b3531fb733" kindref="member">type_t</ref></type>
        <definition>const type_t BTMT_NEAR</definition>
        <argsstring></argsstring>
        <name>BTMT_NEAR</name>
        <initializer>= 0x10</initializer>
        <briefdescription>
<para>near </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="135" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__tf__ptr_1ga3d0f144fc969457fd435987e0ca8295b" prot="public" static="no" mutable="no">
        <type>const <ref refid="typeinf_8hpp_1a7a9c029b924959e0fe4f14b3531fb733" kindref="member">type_t</ref></type>
        <definition>const type_t BTMT_FAR</definition>
        <argsstring></argsstring>
        <name>BTMT_FAR</name>
        <initializer>= 0x20</initializer>
        <briefdescription>
<para>far </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="136" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__tf__ptr_1ga17a80f306cfd595df0d7bd2f5a9ddc64" prot="public" static="no" mutable="no">
        <type>const <ref refid="typeinf_8hpp_1a7a9c029b924959e0fe4f14b3531fb733" kindref="member">type_t</ref></type>
        <definition>const type_t BTMT_CLOSURE</definition>
        <argsstring></argsstring>
        <name>BTMT_CLOSURE</name>
        <initializer>= 0x30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>closure.<itemizedlist>
<listitem><para>if ptr to <ref refid="group__tf__func_1ga7b7fee21f21237beb6d91e854410e0fa" kindref="member">BT_FUNC</ref> - __closure. in this case next byte MUST be <ref refid="typeinf_8hpp_1a8ac9fa3da7151dc5ffd9fbf0563a9417" kindref="member">RESERVED_BYTE</ref>, and after it <ref refid="group__tf__func_1ga7b7fee21f21237beb6d91e854410e0fa" kindref="member">BT_FUNC</ref></para></listitem><listitem><para>else the next byte contains sizeof(ptr) allowed values are 1 - {ph,<ref refid="structprocessor__t" kindref="compound">processor_t</ref>,max_ptr_size}</para></listitem><listitem><para>if value is bigger than {ph,<ref refid="structprocessor__t" kindref="compound">processor_t</ref>,max_ptr_size}, based_ptr_name_and_size() is called to find out the typeinfo </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" line="137" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/typeinf.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Pointers to undeclared yet <ref refid="group__tf__complex_1ga86c5e589737e005ba4741423fd2ca5c6" kindref="member">BT_COMPLEX</ref> types are prohibited </para>    </detaileddescription>
  </compounddef>
</doxygen>
