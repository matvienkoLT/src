<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group__seg__addr" kind="group">
    <compoundname>seg_addr</compoundname>
    <title>Segment addressing</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__seg__addr_1ga5aa3f21e8091747f90c4aba53018db25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman ea_t ida_export</type>
        <definition>idaman ea_t ida_export get_segm_para</definition>
        <argsstring>(const segment_t *s)</argsstring>
        <name>get_segm_para</name>
        <param>
          <type>const <ref refid="classsegment__t" kindref="compound">segment_t</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get segment base paragraph. Segment base paragraph may be converted to segment base linear address using <ref refid="ida_8hpp_1a442b368394897f30bcd60bbc0b633019" kindref="member">to_ea()</ref> function. In fact, to_ea(get_segm_para(s), 0) == get_segm_base(s). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to segment </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if s == NULL, the segment base paragraph </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="1125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__seg__addr_1ga2dc3df3c526b319baa6e89f261796400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman ea_t ida_export</type>
        <definition>idaman ea_t ida_export get_segm_base</definition>
        <argsstring>(const segment_t *s)</argsstring>
        <name>get_segm_base</name>
        <param>
          <type>const <ref refid="classsegment__t" kindref="compound">segment_t</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get segment base linear address. Segment base linear address is used to calculate virtual addresses. The virtual address of the first byte of the segment will be (start address of segment - segment base linear address) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to segment </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if s == NULL, otherwise segment base linear address </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="1136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__seg__addr_1ga25f536b5ce889abea32a4aa7d50415fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman bool ida_export</type>
        <definition>idaman bool ida_export set_segm_addressing</definition>
        <argsstring>(segment_t *s, size_t bitness)</argsstring>
        <name>set_segm_addressing</name>
        <param>
          <type><ref refid="classsegment__t" kindref="compound">segment_t</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bitness</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change segment addressing mode (16, 32, 64 bits). You must use this function to change segment addressing, never change the &apos;bitness&apos; field directly. This function will delete all instructions, comments and names in the segment <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to segment </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bitness</parametername>
</parameternamelist>
<parameterdescription>
<para>new addressing mode of segment<itemizedlist>
<listitem><para>2: 64bit segment</para></listitem><listitem><para>1: 32bit segment</para></listitem><listitem><para>0: 16bit segment </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/segment.hpp" line="1150" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
