<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="testbox_8hpp" kind="file" language="C++">
    <compoundname>testbox.hpp</compoundname>
    <includes refid="pro_8h" local="no">pro.h</includes>
    <includes refid="err_8h" local="no">err.h</includes>
    <incdepgraph>
      <node id="1403">
        <label>sys/stat.h</label>
      </node>
      <node id="1387">
        <label>stdarg.h</label>
      </node>
      <node id="1390">
        <label>assert.h</label>
      </node>
      <node id="1386">
        <label>stdlib.h</label>
      </node>
      <node id="1406">
        <label>errno.h</label>
      </node>
      <node id="1398">
        <label>io.h</label>
      </node>
      <node id="1401">
        <label>fcntl.h</label>
      </node>
      <node id="1404">
        <label>llong.hpp</label>
        <link refid="llong_8hpp_source"/>
      </node>
      <node id="1396">
        <label>malloc.h</label>
      </node>
      <node id="1395">
        <label>string</label>
      </node>
      <node id="1400">
        <label>map</label>
      </node>
      <node id="1399">
        <label>direct.h</label>
      </node>
      <node id="1388">
        <label>stddef.h</label>
      </node>
      <node id="1384">
        <label>obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp</label>
        <link refid="testbox_8hpp"/>
        <childnode refid="1385" relation="include">
        </childnode>
        <childnode refid="1405" relation="include">
        </childnode>
      </node>
      <node id="1391">
        <label>limits.h</label>
      </node>
      <node id="1402">
        <label>sys/types.h</label>
      </node>
      <node id="1397">
        <label>string.h</label>
      </node>
      <node id="1394">
        <label>new</label>
      </node>
      <node id="1385">
        <label>pro.h</label>
        <link refid="pro_8h"/>
        <childnode refid="1386" relation="include">
        </childnode>
        <childnode refid="1387" relation="include">
        </childnode>
        <childnode refid="1388" relation="include">
        </childnode>
        <childnode refid="1389" relation="include">
        </childnode>
        <childnode refid="1390" relation="include">
        </childnode>
        <childnode refid="1391" relation="include">
        </childnode>
        <childnode refid="1392" relation="include">
        </childnode>
        <childnode refid="1393" relation="include">
        </childnode>
        <childnode refid="1394" relation="include">
        </childnode>
        <childnode refid="1395" relation="include">
        </childnode>
        <childnode refid="1396" relation="include">
        </childnode>
        <childnode refid="1397" relation="include">
        </childnode>
        <childnode refid="1398" relation="include">
        </childnode>
        <childnode refid="1399" relation="include">
        </childnode>
        <childnode refid="1400" relation="include">
        </childnode>
        <childnode refid="1401" relation="include">
        </childnode>
        <childnode refid="1402" relation="include">
        </childnode>
        <childnode refid="1403" relation="include">
        </childnode>
        <childnode refid="1404" relation="include">
        </childnode>
      </node>
      <node id="1393">
        <label>time.h</label>
      </node>
      <node id="1392">
        <label>ctype.h</label>
      </node>
      <node id="1405">
        <label>err.h</label>
        <link refid="err_8h"/>
        <childnode refid="1406" relation="include">
        </childnode>
      </node>
      <node id="1389">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classtest__box__t" prot="public">test_box_t</innerclass>
    <innerclass refid="structtest__box__t_1_1test__item__desc" prot="private">test_box_t::test_item_desc</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="testbox_8hpp_1a53aa296f947f46f1cadca5e88823bfae" prot="public" static="no">
        <name>TB_TEST_VAL</name>
        <param><defname>val</defname></param>
        <param><defname>expected</defname></param>
        <param><defname>desc</defname></param>
        <initializer>do                                                     \
  {                                                      \
    __tbox.testmsg_pre(__tbox.make_desc desc, __LINE__); \
    __tbox.test_val(<ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref>(val), <ref refid="pro_8h_1af755b91e0abdf71f5715f00e68b35e0a" kindref="member">int64</ref>(expected));        \
  }                                                      \
  while ( false )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="238" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1af3388064a8a994967edf82b694694246" prot="public" static="no">
        <name>TB_TEST_VALR</name>
        <param><defname>val</defname></param>
        <param><defname>expcted</defname></param>
        <param><defname>desc</defname></param>
        <initializer>do                                                   \
  {                                                    \
    TB_TEST_VAL(val, expcted, desc);                   \
    if ( TB_ERR != 0 )                                 \
      return TB_ERR;                                   \
  }                                                    \
  while ( false )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="247" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1a5888893545802e4bc718654605628b16" prot="public" static="no">
        <name>TB_TEST_COND</name>
        <param><defname>cond</defname></param>
        <param><defname>desc</defname></param>
        <initializer>do                                                     \
  {                                                      \
    __tbox.testmsg_pre(__tbox.make_desc desc, __LINE__); \
    if ( __tbox.test_cond(cond) != 0 )                   \
      return TB_ERR;                                     \
  }                                                      \
  while ( false )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="257" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1af36a438ee032b04cfd4562b3fc20bd45" prot="public" static="no">
        <name>TB_TEST_OKR</name>
        <param><defname>rc</defname></param>
        <param><defname>desc</defname></param>
        <initializer>TB_TEST_COND((rc)==0, desc)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="267" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1a8089f0abd3f8df74406a167c9d619d91" prot="public" static="no">
        <name>TB_TEST_SUCCESS</name>
        <param><defname>rc</defname></param>
        <param><defname>desc</defname></param>
        <initializer>do                                                     \
  {                                                      \
    __tbox.testmsg_pre(__tbox.make_desc desc, __LINE__); \
    __tbox.test_cond(rc);                                \
  }                                                      \
  while ( false )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="270" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1a9b0dc2ca288859d446e7f5e1eff64fe8" prot="public" static="no">
        <name>TB_TEST_FAIL</name>
        <param><defname>rc</defname></param>
        <param><defname>desc</defname></param>
        <initializer>do                                                     \
  {                                                      \
    __tbox.testmsg_pre(__tbox.make_desc desc, __LINE__); \
    __tbox.test_cond(!(rc));                             \
  }                                                      \
  while ( false )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="279" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1ab334ea2d537adf0e446306e77b237f07" prot="public" static="no">
        <name>TB_TEST_OK</name>
        <param><defname>rc</defname></param>
        <param><defname>desc</defname></param>
        <initializer>do                                                     \
  {                                                      \
    __tbox.testmsg_pre(__tbox.make_desc desc, __LINE__); \
    __tbox.test_cond((rc) == 0);                         \
  }                                                      \
  while ( false )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="288" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1a8ba96130043c0f59a83ad2ce4c04ea3c" prot="public" static="no">
        <name>TB_TEST_NOTOKR</name>
        <param><defname>rc</defname></param>
        <param><defname>desc</defname></param>
        <initializer>TB_TEST_COND((rc), desc)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="297" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1af9d073e1a5f15c81932313e2a15326be" prot="public" static="no">
        <name>TB_TEST_NOTOK</name>
        <param><defname>rc</defname></param>
        <param><defname>desc</defname></param>
        <initializer>do                                                     \
  {                                                      \
    __tbox.testmsg_pre(__tbox.make_desc desc, __LINE__); \
    __tbox.test_cond(!(rc));                             \
  }                                                      \
  while ( false )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="300" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1a4167425d6ab89f07d387dd043d640461" prot="public" static="no">
        <name>TB_ERR</name>
        <initializer>__tbox.get_err()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="309" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1a5062ff42cb03ec6de6d1fd9d3cb32876" prot="public" static="no">
        <name>TB_VERBOSE</name>
        <initializer>__tbox.verbocity()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="310" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="testbox_8hpp_1a495e4959142c15de14ebfe98181d56bb" prot="public" static="no">
        <name>TB_GETOPT</name>
        <initializer>__tbox.process_cmdopts</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="311" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="testbox_8hpp_1a6177ecf194b477bade2b00e4929ebf3f" prot="public" static="yes" mutable="no">
        <type><ref refid="classtest__box__t" kindref="compound">test_box_t</ref></type>
        <definition>test_box_t __tbox</definition>
        <argsstring></argsstring>
        <name>__tbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" line="235" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/testbox.hpp"/>
  </compounddef>
</doxygen>
