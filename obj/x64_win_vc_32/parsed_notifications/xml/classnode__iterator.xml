<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classnode__iterator" kind="class" language="C++" prot="public">
    <compoundname>node_iterator</compoundname>
    <includes refid="gdl_8hpp" local="no">gdl.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnode__iterator_1a64377a1bbb0a91e1aa8fc0aa26812cb6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class gdl_graph_t</definition>
        <argsstring></argsstring>
        <name>gdl_graph_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="110" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnode__iterator_1a7a71c9dbcbc1b9f10f9c8bcdfce2c315" prot="private" static="no" mutable="no">
        <type>const <ref refid="classgdl__graph__t" kindref="compound">gdl_graph_t</ref> *</type>
        <definition>const gdl_graph_t* node_iterator::g</definition>
        <argsstring></argsstring>
        <name>g</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="111" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnode__iterator_1a7e09c9c4a5c51bd2d82ca2c1b99e9535" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int node_iterator::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="112" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnode__iterator_1a392c6af2b21f63e7239bfcf4bd855d90" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnode__iterator" kindref="compound">node_iterator</ref> &amp;</type>
        <definition>node_iterator&amp; node_iterator::_goup</definition>
        <argsstring>(void)</argsstring>
        <name>_goup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnode__iterator_1afe408c672d02afd4d176622dae2ef8c4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnode__iterator" kindref="compound">node_iterator</ref> &amp;</type>
        <definition>node_iterator&amp; node_iterator::goup</definition>
        <argsstring>(void)</argsstring>
        <name>goup</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="114" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="114" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnode__iterator_1a1437a96688a3d1fbdc444aa0e7c392f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>node_iterator::node_iterator</definition>
        <argsstring>(const gdl_graph_t *_g, int n)</argsstring>
        <name>node_iterator</name>
        <param>
          <type>const <ref refid="classgdl__graph__t" kindref="compound">gdl_graph_t</ref> *</type>
          <declname>_g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="116" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classnode__iterator_1ab1b5d9d5e1d51d11a9e77c5e7f003480" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnode__iterator" kindref="compound">node_iterator</ref> &amp;</type>
        <definition>node_iterator&amp; node_iterator::operator++</definition>
        <argsstring>(void)</argsstring>
        <name>operator++</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="117" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classnode__iterator_1a37341a82c45c1d40467d3972f2c7ac09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool node_iterator::operator==</definition>
        <argsstring>(const node_iterator &amp;n) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classnode__iterator" kindref="compound">node_iterator</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="118" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classnode__iterator_1afd51d07461d02f840bdc0f47cc0d30c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool node_iterator::operator!=</definition>
        <argsstring>(const node_iterator &amp;n) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classnode__iterator" kindref="compound">node_iterator</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="119" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classnode__iterator_1a9ea98e45e9f5f16e7719fb1347ed0313" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int node_iterator::operator*</definition>
        <argsstring>(void) const</argsstring>
        <name>operator*</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="120" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="120" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Node iterator (used to draw graphs) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" line="108" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/gdl.hpp" bodystart="107" bodyend="121"/>
    <listofallmembers>
      <member refid="classnode__iterator_1a392c6af2b21f63e7239bfcf4bd855d90" prot="private" virt="non-virtual"><scope>node_iterator</scope><name>_goup</name></member>
      <member refid="classnode__iterator_1a7a71c9dbcbc1b9f10f9c8bcdfce2c315" prot="private" virt="non-virtual"><scope>node_iterator</scope><name>g</name></member>
      <member refid="classnode__iterator_1a64377a1bbb0a91e1aa8fc0aa26812cb6" prot="private" virt="non-virtual"><scope>node_iterator</scope><name>gdl_graph_t</name></member>
      <member refid="classnode__iterator_1afe408c672d02afd4d176622dae2ef8c4" prot="private" virt="non-virtual"><scope>node_iterator</scope><name>goup</name></member>
      <member refid="classnode__iterator_1a7e09c9c4a5c51bd2d82ca2c1b99e9535" prot="private" virt="non-virtual"><scope>node_iterator</scope><name>i</name></member>
      <member refid="classnode__iterator_1a1437a96688a3d1fbdc444aa0e7c392f3" prot="public" virt="non-virtual"><scope>node_iterator</scope><name>node_iterator</name></member>
      <member refid="classnode__iterator_1afd51d07461d02f840bdc0f47cc0d30c9" prot="public" virt="non-virtual"><scope>node_iterator</scope><name>operator!=</name></member>
      <member refid="classnode__iterator_1a9ea98e45e9f5f16e7719fb1347ed0313" prot="public" virt="non-virtual"><scope>node_iterator</scope><name>operator*</name></member>
      <member refid="classnode__iterator_1ab1b5d9d5e1d51d11a9e77c5e7f003480" prot="public" virt="non-virtual"><scope>node_iterator</scope><name>operator++</name></member>
      <member refid="classnode__iterator_1a37341a82c45c1d40467d3972f2c7ac09" prot="public" virt="non-virtual"><scope>node_iterator</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
