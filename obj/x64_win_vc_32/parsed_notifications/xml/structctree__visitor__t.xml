<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structctree__visitor__t" kind="struct" language="C++" prot="public">
    <compoundname>ctree_visitor_t</compoundname>
    <derivedcompoundref refid="structctree__parentee__t" prot="public" virt="non-virtual">ctree_parentee_t</derivedcompoundref>
    <includes refid="hexrays_8hpp" local="no">hexrays.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structctree__visitor__t_1ab9f328f14cba3408273e5312b36f6b6c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ctree_visitor_t::cv_flags</definition>
        <argsstring></argsstring>
        <name>cv_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group___c_v__" kindref="compound">Ctree visitor property bits</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5293" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structctree__visitor__t_1a379fa1c12dbbb0385a971fdd3a7cb75f" prot="public" static="no" mutable="no">
        <type><ref refid="classqvector" kindref="compound">parents_t</ref></type>
        <definition>parents_t ctree_visitor_t::parents</definition>
        <argsstring></argsstring>
        <name>parents</name>
        <briefdescription>
<para>Vector of parents of the current item. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5328" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5328" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structctree__visitor__t_1a9cb5b62625be997d9d0ae05e2ba19ace" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ctree_visitor_t::maintain_parents</definition>
        <argsstring>(void) const</argsstring>
        <name>maintain_parents</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Should the parent information by maintained? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5309" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5309" bodyend="5309"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a99e573446f6b036b34e69b519b72a907" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ctree_visitor_t::must_prune</definition>
        <argsstring>(void) const</argsstring>
        <name>must_prune</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Should the traversal skip the children of the current item? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5311" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5311" bodyend="5311"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a6badab23e955cae5c687b2aeb6f0f84e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ctree_visitor_t::must_restart</definition>
        <argsstring>(void) const</argsstring>
        <name>must_restart</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Should the traversal restart? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5313" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5313" bodyend="5313"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a5f204e44a57e3395043ee7d5304a27b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ctree_visitor_t::is_postorder</definition>
        <argsstring>(void) const</argsstring>
        <name>is_postorder</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Should the leave...() functions be called? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5315" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5315" bodyend="5315"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a655d2e340fe8430a2c8f5769bdc0e375" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ctree_visitor_t::only_insns</definition>
        <argsstring>(void) const</argsstring>
        <name>only_insns</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Should all expressions be automatically pruned? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5317" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5317" bodyend="5317"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a5dc5f0c355714910e368c90ad2e6b89e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ctree_visitor_t::prune_now</definition>
        <argsstring>(void)</argsstring>
        <name>prune_now</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prune children. This function may be called by a visitor() to skip all children of the current item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5320" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5320" bodyend="5320"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a4ffce52d05a95c331504000f4d4853f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ctree_visitor_t::clr_prune</definition>
        <argsstring>(void)</argsstring>
        <name>clr_prune</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Do not prune children. This is an internal function, no need to call it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5322" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5322" bodyend="5322"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a6e4110d5385bc3d7e753a5fe6eb8f629" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ctree_visitor_t::set_restart</definition>
        <argsstring>(void)</argsstring>
        <name>set_restart</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Restart the travesal. Meaningful only in <ref refid="structctree__visitor__t_1afbc6f6be87a1eda300bfdae95fbd10fc" kindref="member">apply_to_exprs()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5324" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5324" bodyend="5324"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1aedb8513d05e694551c4f9b1117176129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ctree_visitor_t::clr_restart</definition>
        <argsstring>(void)</argsstring>
        <name>clr_restart</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Do not restart. This is an internal function, no need to call it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5326" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5326" bodyend="5326"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a3ae6712cf4d6cbe728271b50720d1d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ctree_visitor_t::ctree_visitor_t</definition>
        <argsstring>(int _flags)</argsstring>
        <name>ctree_visitor_t</name>
        <param>
          <type>int</type>
          <declname>_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. This constructor can be used with CV_FAST, CV_PARENTS combined with CV_POST, CV_ONLYINS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5333" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5333" bodyend="5333"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a2080c808900cced04d86c1ce19c2c9d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ctree_visitor_t::DEFINE_VIRTUAL_DTOR</definition>
        <argsstring>(ctree_visitor_t)</argsstring>
        <name>DEFINE_VIRTUAL_DTOR</name>
        <param>
          <type><ref refid="structctree__visitor__t" kindref="compound">ctree_visitor_t</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a517e8ea89250c27082fcaccf05562536" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int ctree_visitor_t::apply_to</definition>
        <argsstring>(citem_t *item, citem_t *parent)</argsstring>
        <name>apply_to</name>
        <param>
          <type><ref refid="structcitem__t" kindref="compound">citem_t</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="structcitem__t" kindref="compound">citem_t</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Traverse ctree. The traversal will start at the specified item and continue until of one the visit_...() functions return a non-zero value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>root of the ctree to traverse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>parent of the specified item. can be specified as NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a non-zero value returned by a visit_...() function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5342" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10713" bodyend="10716"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1afbc6f6be87a1eda300bfdae95fbd10fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int hexapi</type>
        <definition>int ctree_visitor_t::apply_to_exprs</definition>
        <argsstring>(citem_t *item, citem_t *parent)</argsstring>
        <name>apply_to_exprs</name>
        <param>
          <type><ref refid="structcitem__t" kindref="compound">citem_t</ref> *</type>
          <declname>item</declname>
        </param>
        <param>
          <type><ref refid="structcitem__t" kindref="compound">citem_t</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Traverse only expressions. The traversal will start at the specified item and continue until of one the visit_...() functions return a non-zero value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>root of the ctree to traverse </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>parent of the specified item. can be specified as NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 or a non-zero value returned by a visit_...() function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5350" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="10719" bodyend="10722"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1a859e53605be246707122950ddf772ab9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
        <definition>cexpr_t* ctree_visitor_t::parent_expr</definition>
        <argsstring>(void)</argsstring>
        <name>parent_expr</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get parent of the current item as an expression. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5353" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5353" bodyend="5353"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1ac01ca10a2a426cbb58c51c26ad469b78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *</type>
        <definition>cinsn_t* ctree_visitor_t::parent_insn</definition>
        <argsstring>(void)</argsstring>
        <name>parent_insn</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get parent of the current item as a statement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5355" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5355" bodyend="5355"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1ab8d26a871ef07d16049741c0d6caf755" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int idaapi</type>
        <definition>virtual int idaapi ctree_visitor_t::visit_insn</definition>
        <argsstring>(cinsn_t *)</argsstring>
        <name>visit_insn</name>
        <param>
          <type><ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Visit a statement. This is a visitor function which should be overridden by a derived class to do some useful work. This visitor performs pre-order traserval, i.e. an item is visited before its children. <simplesect kind="return"><para>0 to continue the traversal, nonzero to stop. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5366" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5366" bodyend="5366"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1abe7d79b70265170a0068262ecf0426de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int idaapi</type>
        <definition>virtual int idaapi ctree_visitor_t::visit_expr</definition>
        <argsstring>(cexpr_t *)</argsstring>
        <name>visit_expr</name>
        <param>
          <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Visit an expression. This is a visitor function which should be overridden by a derived class to do some useful work. This visitor performs pre-order traserval, i.e. an item is visited before its children. <simplesect kind="return"><para>0 to continue the traversal, nonzero to stop. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5374" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5374" bodyend="5374"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1ae7ecb9e327546dbf3537f085fdc52a26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int idaapi</type>
        <definition>virtual int idaapi ctree_visitor_t::leave_insn</definition>
        <argsstring>(cinsn_t *)</argsstring>
        <name>leave_insn</name>
        <param>
          <type><ref refid="structcinsn__t" kindref="compound">cinsn_t</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Visit a statement after having visited its children This is a visitor function which should be overridden by a derived class to do some useful work. This visitor performs post-order traserval, i.e. an item is visited after its children. <simplesect kind="return"><para>0 to continue the traversal, nonzero to stop. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5382" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5382" bodyend="5382"/>
      </memberdef>
      <memberdef kind="function" id="structctree__visitor__t_1ac2eeb74a3af63b308f1854ad841433cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int idaapi</type>
        <definition>virtual int idaapi ctree_visitor_t::leave_expr</definition>
        <argsstring>(cexpr_t *)</argsstring>
        <name>leave_expr</name>
        <param>
          <type><ref refid="structcexpr__t" kindref="compound">cexpr_t</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Visit an expression after having visited its children This is a visitor function which should be overridden by a derived class to do some useful work. This visitor performs post-order traserval, i.e. an item is visited after its children. <simplesect kind="return"><para>0 to continue the traversal, nonzero to stop. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5390" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5390" bodyend="5390"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A generic helper class that is used for ctree traversal. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1368">
        <label>ctree_parentee_t</label>
        <link refid="structctree__parentee__t"/>
        <childnode refid="1367" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1367">
        <label>ctree_visitor_t</label>
        <link refid="structctree__visitor__t"/>
      </node>
      <node id="1369">
        <label>cfunc_parentee_t</label>
        <link refid="structcfunc__parentee__t"/>
        <childnode refid="1368" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1370">
        <label>ctree_visitor_t</label>
        <link refid="structctree__visitor__t"/>
        <childnode refid="1371" relation="usage">
          <edgelabel>parents</edgelabel>
        </childnode>
      </node>
      <node id="1371">
        <label>qvector&lt; T &gt;</label>
        <link refid="classqvector"/>
      </node>
    </collaborationgraph>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" line="5291" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/hexrays.hpp" bodystart="5290" bodyend="5391"/>
    <listofallmembers>
      <member refid="structctree__visitor__t_1a517e8ea89250c27082fcaccf05562536" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>apply_to</name></member>
      <member refid="structctree__visitor__t_1afbc6f6be87a1eda300bfdae95fbd10fc" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>apply_to_exprs</name></member>
      <member refid="structctree__visitor__t_1a4ffce52d05a95c331504000f4d4853f9" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>clr_prune</name></member>
      <member refid="structctree__visitor__t_1aedb8513d05e694551c4f9b1117176129" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>clr_restart</name></member>
      <member refid="structctree__visitor__t_1a3ae6712cf4d6cbe728271b50720d1d1a" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>ctree_visitor_t</name></member>
      <member refid="structctree__visitor__t_1ab9f328f14cba3408273e5312b36f6b6c" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>cv_flags</name></member>
      <member refid="structctree__visitor__t_1a2080c808900cced04d86c1ce19c2c9d6" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>DEFINE_VIRTUAL_DTOR</name></member>
      <member refid="structctree__visitor__t_1a5f204e44a57e3395043ee7d5304a27b8" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>is_postorder</name></member>
      <member refid="structctree__visitor__t_1ac2eeb74a3af63b308f1854ad841433cc" prot="public" virt="virtual"><scope>ctree_visitor_t</scope><name>leave_expr</name></member>
      <member refid="structctree__visitor__t_1ae7ecb9e327546dbf3537f085fdc52a26" prot="public" virt="virtual"><scope>ctree_visitor_t</scope><name>leave_insn</name></member>
      <member refid="structctree__visitor__t_1a9cb5b62625be997d9d0ae05e2ba19ace" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>maintain_parents</name></member>
      <member refid="structctree__visitor__t_1a99e573446f6b036b34e69b519b72a907" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>must_prune</name></member>
      <member refid="structctree__visitor__t_1a6badab23e955cae5c687b2aeb6f0f84e" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>must_restart</name></member>
      <member refid="structctree__visitor__t_1a655d2e340fe8430a2c8f5769bdc0e375" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>only_insns</name></member>
      <member refid="structctree__visitor__t_1a859e53605be246707122950ddf772ab9" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>parent_expr</name></member>
      <member refid="structctree__visitor__t_1ac01ca10a2a426cbb58c51c26ad469b78" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>parent_insn</name></member>
      <member refid="structctree__visitor__t_1a379fa1c12dbbb0385a971fdd3a7cb75f" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>parents</name></member>
      <member refid="structctree__visitor__t_1a5dc5f0c355714910e368c90ad2e6b89e" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>prune_now</name></member>
      <member refid="structctree__visitor__t_1a6e4110d5385bc3d7e753a5fe6eb8f629" prot="public" virt="non-virtual"><scope>ctree_visitor_t</scope><name>set_restart</name></member>
      <member refid="structctree__visitor__t_1abe7d79b70265170a0068262ecf0426de" prot="public" virt="virtual"><scope>ctree_visitor_t</scope><name>visit_expr</name></member>
      <member refid="structctree__visitor__t_1ab8d26a871ef07d16049741c0d6caf755" prot="public" virt="virtual"><scope>ctree_visitor_t</scope><name>visit_insn</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
