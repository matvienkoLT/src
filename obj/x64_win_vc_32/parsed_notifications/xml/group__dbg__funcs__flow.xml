<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group__dbg__funcs__flow" kind="group">
    <compoundname>dbg_funcs_flow</compoundname>
    <title>Execution flow control</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__dbg__funcs__flow_1ga0e780614135a5f04ea7daeac368f065c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi step_into</definition>
        <argsstring>(void)</argsstring>
        <name>step_into</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute one instruction in the current thread. Other threads are kept suspended. {Type, Asynchronous function - available as Request, Notification, <ref refid="dbg_8hpp_1ac67a564945a2c1721691aa2f657a908ca5a821bb0745f812a64d067ac117d6ef6" kindref="member">dbg_step_into</ref>} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="618" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="618" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__flow_1ga3679982ff86fc987ae0ff972c66be375" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi request_step_into</definition>
        <argsstring>(void)</argsstring>
        <name>request_step_into</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Post a <ref refid="group__dbg__funcs__flow_1ga0e780614135a5f04ea7daeac368f065c" kindref="member">step_into()</ref> request. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="622" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="622" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__flow_1gadaecfc3eb3e84554df67fd8b92cb522f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi step_over</definition>
        <argsstring>(void)</argsstring>
        <name>step_over</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute one instruction in the current thread, but without entering into functions. Others threads keep suspended. {Type, Asynchronous function - available as Request, Notification, <ref refid="dbg_8hpp_1ac67a564945a2c1721691aa2f657a908cae8ecb9951b87b5d6ff52d0dda67b84b3" kindref="member">dbg_step_over</ref>} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="631" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="631" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__flow_1ga0c3b35c4cc499324ae31bbef0cca24e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi request_step_over</definition>
        <argsstring>(void)</argsstring>
        <name>request_step_over</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Post a <ref refid="group__dbg__funcs__flow_1gadaecfc3eb3e84554df67fd8b92cb522f" kindref="member">step_over()</ref> request. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="635" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="635" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__flow_1ga02e3e2c96cd0e07e7b213a88415733c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi run_to</definition>
        <argsstring>(ea_t ea, pid_t pid=NO_PROCESS, thid_t tid=NO_THREAD)</argsstring>
        <name>run_to</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="idd_8hpp_1a288e13e815d43b06e75819f8939524df" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
          <defval><ref refid="idd_8hpp_1a4bb96cbe4ed99a94352b5cb0fc5b660a" kindref="member">NO_PROCESS</ref></defval>
        </param>
        <param>
          <type><ref refid="idd_8hpp_1a479b4266d280e0d77b7ca914dec19122" kindref="member">thid_t</ref></type>
          <declname>tid</declname>
          <defval><ref refid="idd_8hpp_1a3fec2238e4b2b608273f3a6c5f7a31de" kindref="member">NO_THREAD</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute the process until the given address is reached. If no process is active, a new process is started. Technically, the debugger sets up a temporary breakpoint at the given address, and continues (or starts) the execution of the whole process. So, all threads continue their execution! {Type, Asynchronous function - available as Request, Notification, <ref refid="dbg_8hpp_1ac67a564945a2c1721691aa2f657a908ca52f43e6006d1ebb6be91050d2f59f8fc" kindref="member">dbg_run_to</ref>} <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ea</parametername>
</parameternamelist>
<parameterdescription>
<para>target address </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pid</parametername>
</parameternamelist>
<parameterdescription>
<para>not used yet. please do not specify this parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tid</parametername>
</parameternamelist>
<parameterdescription>
<para>not used yet. please do not specify this parameter. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="650" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="650" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__flow_1ga2e73bfd05ad7e5733e56c04b8eaf2fb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi request_run_to</definition>
        <argsstring>(ea_t ea, pid_t pid=NO_PROCESS, thid_t tid=NO_THREAD)</argsstring>
        <name>request_run_to</name>
        <param>
          <type>ea_t</type>
          <declname>ea</declname>
        </param>
        <param>
          <type><ref refid="idd_8hpp_1a288e13e815d43b06e75819f8939524df" kindref="member">pid_t</ref></type>
          <declname>pid</declname>
          <defval><ref refid="idd_8hpp_1a4bb96cbe4ed99a94352b5cb0fc5b660a" kindref="member">NO_PROCESS</ref></defval>
        </param>
        <param>
          <type><ref refid="idd_8hpp_1a479b4266d280e0d77b7ca914dec19122" kindref="member">thid_t</ref></type>
          <declname>tid</declname>
          <defval><ref refid="idd_8hpp_1a3fec2238e4b2b608273f3a6c5f7a31de" kindref="member">NO_THREAD</ref></defval>
        </param>
        <briefdescription>
<para>Post a <ref refid="group__dbg__funcs__flow_1ga02e3e2c96cd0e07e7b213a88415733c7" kindref="member">run_to()</ref> request. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="654" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="654" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__flow_1ga3a3d014490f604abdef9022031daa128" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi step_until_ret</definition>
        <argsstring>(void)</argsstring>
        <name>step_until_ret</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Execute instructions in the current thread until a function return instruction is executed (aka &quot;step out&quot;). Other threads are kept suspended. {Type, Asynchronous function - available as Request, Notification, <ref refid="dbg_8hpp_1ac67a564945a2c1721691aa2f657a908ca611c4a9713c7d7e3e8c8a52375df423e" kindref="member">dbg_step_until_ret</ref>} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="662" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="662" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__flow_1ga75c1e404c959bc00150fa89af2695a5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi request_step_until_ret</definition>
        <argsstring>(void)</argsstring>
        <name>request_step_until_ret</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Post a <ref refid="group__dbg__funcs__flow_1ga3a3d014490f604abdef9022031daa128" kindref="member">step_until_ret()</ref> request. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="666" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="666" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__flow_1ga3bb8c83f68f33b8cc0847a0f394d8d08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi set_resume_mode</definition>
        <argsstring>(thid_t tid, resume_mode_t mode)</argsstring>
        <name>set_resume_mode</name>
        <param>
          <type><ref refid="idd_8hpp_1a479b4266d280e0d77b7ca914dec19122" kindref="member">thid_t</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type><ref refid="idd_8hpp_1a22acbc39891c15a300bd1ddf85edafae" kindref="member">resume_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>How to resume the application. Set resume mode but do not resume process. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="672" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="672" bodyend="672"/>
      </memberdef>
      <memberdef kind="function" id="group__dbg__funcs__flow_1ga3e997ce9e614d200826806ceb4b2428a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool idaapi</type>
        <definition>bool idaapi request_set_resume_mode</definition>
        <argsstring>(thid_t tid, resume_mode_t mode)</argsstring>
        <name>request_set_resume_mode</name>
        <param>
          <type><ref refid="idd_8hpp_1a479b4266d280e0d77b7ca914dec19122" kindref="member">thid_t</ref></type>
          <declname>tid</declname>
        </param>
        <param>
          <type><ref refid="idd_8hpp_1a22acbc39891c15a300bd1ddf85edafae" kindref="member">resume_mode_t</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Post a <ref refid="group__dbg__funcs__flow_1ga3bb8c83f68f33b8cc0847a0f394d8d08" kindref="member">set_resume_mode()</ref> request. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" line="676" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/dbg.hpp" bodystart="676" bodyend="676"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Use these functions to run instructions in the debugged process. </para>    </detaileddescription>
  </compounddef>
</doxygen>
