<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="compress_8hpp" kind="file" language="C++">
    <compoundname>compress.hpp</compoundname>
    <includes refid="diskio_8hpp" local="no">diskio.hpp</includes>
    <incdepgraph>
      <node id="146">
        <label>obj/x64_linux_gcc_32_opt/idasdk/compress.hpp</label>
        <link refid="compress_8hpp"/>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>stdio.h</label>
      </node>
      <node id="147">
        <label>diskio.hpp</label>
        <link refid="diskio_8hpp"/>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___p_k_z___1ga6ee624d31271569fddf8cd926d9c1cc5" prot="public" static="no">
        <name>PKZ_OK</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="123" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_k_z___1gace476ff33f614f738290fd476c81aaa6" prot="public" static="no">
        <name>PKZ_ERRNO</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="124" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_k_z___1ga4f50ac8779b4dc84297c0ec44f192280" prot="public" static="no">
        <name>PKZ_STREAM_ERROR</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="125" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_k_z___1gae5aea341d91a44b8b8181f363123e6ec" prot="public" static="no">
        <name>PKZ_DATA_ERROR</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="126" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_k_z___1ga42d274a8e3c97bb2682b317488bd82ef" prot="public" static="no">
        <name>PKZ_MEM_ERROR</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="127" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_k_z___1ga941a74b6ead343eebe46b680d2654d84" prot="public" static="no">
        <name>PKZ_BUF_ERROR</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="128" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_k_z___1gabd044381a6db5f11ed100171da3506d4" prot="public" static="no">
        <name>PKZ_VERSION_ERROR</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="129" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_k_z___1gac00d6bb1a0d85780d6372a7f12192a85" prot="public" static="no">
        <name>PKZ_RERR</name>
        <initializer>777</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="130" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___p_k_z___1ga5fc873ae97f5621bc1b2e36aa711f986" prot="public" static="no">
        <name>PKZ_WERR</name>
        <initializer>778</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="131" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1ga1f104a4798c99e65adde445b937bfe81" prot="public" static="no">
        <name>STORED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="137" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1ga245c0f9c89fab8f7b88c37e7ae68f6b6" prot="public" static="no">
        <name>SHRUNK</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="138" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1gabd31b293d7cc1096ca45b0b354b94c7c" prot="public" static="no">
        <name>REDUCED1</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="139" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1ga07fc856eda17528bbef208365ed40931" prot="public" static="no">
        <name>REDUCED2</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="140" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1gaf3ca0a63306a5a39ce0ec6d997b3a064" prot="public" static="no">
        <name>REDUCED3</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="141" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1gae921e5050a73997f51e827ed87f63024" prot="public" static="no">
        <name>REDUCED4</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="142" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1gaebf0f3089bc1297e5b067ea0ef850ea5" prot="public" static="no">
        <name>IMPLODED</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="143" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1gafc78300f904d61de427016c0b008b7d3" prot="public" static="no">
        <name>TOKENIZED</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="144" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1gaf6abc3a7ae08bd95a7a511ce797f01e6" prot="public" static="no">
        <name>DEFLATED</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="145" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__compression__methods_1ga3c2532a1c8064d74adbe7965908e7f03" prot="public" static="no">
        <name>NUM_METHODS</name>
        <initializer>9    /* index of last method + 1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="146" column="9" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="compress_8hpp_1aa4b9b015580aa8ac2beaf0afaf277b7b" prot="public" static="no">
        <name>linput_close_code_t</name>
        <enumvalue id="compress_8hpp_1aa4b9b015580aa8ac2beaf0afaf277b7baad6af6ef31dd1cc8e937121d62fe8ddc" prot="public">
          <name>LOC_CLOSE</name>
          <briefdescription>
<para>close the inner linput </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="compress_8hpp_1aa4b9b015580aa8ac2beaf0afaf277b7ba8e6cbcffb6b020d0f59ee00f343a533c" prot="public">
          <name>LOC_UNMAKE</name>
          <briefdescription>
<para>unmake the inner linput </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="compress_8hpp_1aa4b9b015580aa8ac2beaf0afaf277b7ba0d12bcbc32182c99970dee1058d8b945" prot="public">
          <name>LOC_KEEP</name>
          <briefdescription>
<para>do nothing </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Upon closing outer linput, perform one of these actions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="153" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" bodystart="152" bodyend="157"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="compress_8hpp_1a1144aff73a67d41208345118c53fa363" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool legacy_idb</definition>
        <argsstring></argsstring>
        <name>legacy_idb</name>
        <briefdescription>
<para>for old idb files </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="149" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="compress_8hpp_1affb10bf5d5cc595d755e6dd4ddddb2d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export zip_deflate</definition>
        <argsstring>(void *ud, ssize_t(idaapi *file_reader)(void *ud, void *buf, size_t size), ssize_t(idaapi *file_writer)(void *ud, const void *buf, size_t size))</argsstring>
        <name>zip_deflate</name>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref>(idaapi *)(void *ud, void *buf, size_t size)</type>
          <declname>file_reader</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref>(idaapi *)(void *ud, const void *buf, size_t size)</type>
          <declname>file_writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compress data. This function depends on the value of legacy_idb, so it is not completely thread safe. However, legacy_idb does not change its value. <simplesect kind="return"><para><ref refid="group___p_k_z__" kindref="compound">Compression error codes</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="compress_8hpp_1a9c8779d6e43ec04f2981d6e05399d7e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export zip_inflate</definition>
        <argsstring>(void *ud, ssize_t(idaapi *file_reader)(void *ud, void *buf, size_t size), ssize_t(idaapi *file_writer)(void *ud, const void *buf, size_t size))</argsstring>
        <name>zip_inflate</name>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref>(idaapi *)(void *ud, void *buf, size_t size)</type>
          <declname>file_reader</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref>(idaapi *)(void *ud, const void *buf, size_t size)</type>
          <declname>file_writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uncompress data. This function depends on the value of legacy_idb, so it is not completely thread safe. However, legacy_idb does not change its value. <simplesect kind="return"><para><ref refid="group___p_k_z__" kindref="compound">Compression error codes</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="compress_8hpp_1a4abd99f6311a5b4ff9d43b21567716f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export process_zipfile</definition>
        <argsstring>(const char *zipfile, int(idaapi *callback)(void *ud, qoff64_t offset, int method, uint64 csize, uint64 ucsize, uint32 attributes, const char *filename), void *ud=NULL)</argsstring>
        <name>process_zipfile</name>
        <param>
          <type>const char *</type>
          <declname>zipfile</declname>
        </param>
        <param>
          <type>int(idaapi *)(void *ud, <ref refid="pro_8h_1a42ae75d34f73b9e691bd16aaddb897e5" kindref="member">qoff64_t</ref> offset, int method, <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> csize, <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> ucsize, <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> attributes, const char *filename)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Process zip file and enumerate all files stored in it <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>zipfile</parametername>
</parameternamelist>
<parameterdescription>
<para>name of zip file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback for each file. params:<itemizedlist>
<listitem><para>ud: user data</para></listitem><listitem><para>offset: offset in the zip file</para></listitem><listitem><para>method: compression method (<ref refid="group__compression__methods" kindref="compound">Compression methods</ref>)</para></listitem><listitem><para>csize: compressed size</para></listitem><listitem><para>ucsize: uncompressed size</para></listitem><listitem><para>attributes: file attributes </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>user data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___p_k_z__" kindref="compound">Compression error codes</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="compress_8hpp_1a0a3a003e66df14004eebfb6a8e9abcfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export process_zip_linput</definition>
        <argsstring>(linput_t *li, int(idaapi *callback)(void *ud, qoff64_t offset, int method, uint64 csize, uint64 ucsize, uint32 attributes, const char *filename), void *ud=NULL)</argsstring>
        <name>process_zip_linput</name>
        <param>
          <type>linput_t *</type>
          <declname>li</declname>
        </param>
        <param>
          <type>int(idaapi *)(void *ud, <ref refid="pro_8h_1a42ae75d34f73b9e691bd16aaddb897e5" kindref="member">qoff64_t</ref> offset, int method, <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> csize, <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> ucsize, <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> attributes, const char *filename)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Process zip file and enumerate all files stored in it <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>li</parametername>
</parameternamelist>
<parameterdescription>
<para>input file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback for each file. params:<itemizedlist>
<listitem><para>ud: user data</para></listitem><listitem><para>offset: offset in the zip file</para></listitem><listitem><para>method: compression method (<ref refid="group__compression__methods" kindref="compound">Compression methods</ref>)</para></listitem><listitem><para>csize: compressed size</para></listitem><listitem><para>ucsize: uncompressed size</para></listitem><listitem><para>attributes: file attributes </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>user data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___p_k_z__" kindref="compound">Compression error codes</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="compress_8hpp_1a454bcaa6aef4c06cf33b29f5058b29d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> int ida_export</type>
        <definition>idaman THREAD_SAFE int ida_export process_zipfile_entry</definition>
        <argsstring>(const char *zipfile, const char *entry, int(idaapi *callback)(void *ud, qoff64_t offset, int method, uint64 csize, uint64 ucsize, uint32 attributes, const char *filename), void *ud=NULL, bool case_sensitive=true)</argsstring>
        <name>process_zipfile_entry</name>
        <param>
          <type>const char *</type>
          <declname>zipfile</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>entry</declname>
        </param>
        <param>
          <type>int(idaapi *)(void *ud, <ref refid="pro_8h_1a42ae75d34f73b9e691bd16aaddb897e5" kindref="member">qoff64_t</ref> offset, int method, <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> csize, <ref refid="pro_8h_1a2f5563986d7f95e4fad5876c17d9cdda" kindref="member">uint64</ref> ucsize, <ref refid="pro_8h_1a1134b580f8da4de94ca6b1de4d37975e" kindref="member">uint32</ref> attributes, const char *filename)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search for specified entry in zip file, and calls the callback with it, if found. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>zipfile</parametername>
</parameternamelist>
<parameterdescription>
<para>name of zip file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entry</parametername>
</parameternamelist>
<parameterdescription>
<para>entry in zip file. E.g., &quot;path/to/entry.dat&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callback for each file. params:<itemizedlist>
<listitem><para>ud: user data</para></listitem><listitem><para>offset: offset in the zip file</para></listitem><listitem><para>method: compression method (<ref refid="group__compression__methods" kindref="compound">Compression methods</ref>)</para></listitem><listitem><para>csize: compressed size</para></listitem><listitem><para>ucsize: uncompressed size</para></listitem><listitem><para>attributes: file attributes </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ud</parametername>
</parameternamelist>
<parameterdescription>
<para>user data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>case_sensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>should the search be case sensitive? </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group___p_k_z__" kindref="compound">Compression error codes</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="compress_8hpp_1afbf33e6f219123fb0a782572c9efc883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>idaman <ref refid="pro_8h_1acb0b22a01885ebdb9ac572343bbc4dab" kindref="member">THREAD_SAFE</ref> linput_t *ida_export</type>
        <definition>idaman THREAD_SAFE linput_t* ida_export create_zip_linput</definition>
        <argsstring>(linput_t *in, ssize_t insize=-1, linput_close_code_t loc=LOC_CLOSE)</argsstring>
        <name>create_zip_linput</name>
        <param>
          <type>linput_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="pro_8h_1ab65ed42d67e6c517c746ff2a6a187016" kindref="member">ssize_t</ref></type>
          <declname>insize</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="compress_8hpp_1aa4b9b015580aa8ac2beaf0afaf277b7b" kindref="member">linput_close_code_t</ref></type>
          <declname>loc</declname>
          <defval><ref refid="compress_8hpp_1aa4b9b015580aa8ac2beaf0afaf277b7baad6af6ef31dd1cc8e937121d62fe8ddc" kindref="member">LOC_CLOSE</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a linput to read a compressed input stream <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>linput with compressed data, seeked to the stream beginning </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>insize</parametername>
</parameternamelist>
<parameterdescription>
<para>size of compressed data. -1 - unknown </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>what to do upon closing the resulting linput </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>linput that can be used to read uncompressed data. NULL if any error (no more linput descriptors). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp" line="167" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Data compression functions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/compress.hpp"/>
  </compounddef>
</doxygen>
