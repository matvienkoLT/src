<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="structjanitor__t" kind="struct" language="C++" prot="public">
    <compoundname>janitor_t</compoundname>
    <includes refid="pro_8h" local="no">pro.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Loader Input Source</header>
      <description><para>Starting with v4.8 IDA can load and run remote files. In order to do that, we replace the FILE* in the loader modules with an abstract input source (linput_t). The source might be linked to a local or remote file. </para></description>
      <memberdef kind="function" id="structjanitor__t_1ad18f0020fc7e438ef9bd67b2cacc79d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>linput_janitor_t::~janitor_t</definition>
        <argsstring>()</argsstring>
        <name>~janitor_t</name>
        <briefdescription>
<para>Free the linput_t. </para>        </briefdescription>
        <detaileddescription>
<para>We provide no implementation for this function, you should provide specialized implementation yourself </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3216" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/fpro.h" bodystart="175" bodyend="178"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structjanitor__t_1a02a5097319d8651deb474c5dbb9c92e3" prot="protected" static="no" mutable="no">
        <type>T &amp;</type>
        <definition>T&amp; janitor_t&lt; T &gt;::resource</definition>
        <argsstring></argsstring>
        <name>resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3219" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structjanitor__t_1ae3f3224e10ae8266ee8ea7084c017251" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>janitor_t&lt; T &gt;::janitor_t</definition>
        <argsstring>(T &amp;r)</argsstring>
        <name>janitor_t</name>
        <param>
          <type>T &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3215" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Resource janitor to facilitate use of the RAII idiom. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/pro.h" line="3214" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/pro.h" bodystart="3213" bodyend="3220"/>
    <listofallmembers>
      <member refid="structjanitor__t_1ae3f3224e10ae8266ee8ea7084c017251" prot="public" virt="non-virtual"><scope>janitor_t</scope><name>janitor_t</name></member>
      <member refid="structjanitor__t_1a02a5097319d8651deb474c5dbb9c92e3" prot="protected" virt="non-virtual"><scope>janitor_t</scope><name>resource</name></member>
      <member refid="structjanitor__t_1ad18f0020fc7e438ef9bd67b2cacc79d2" prot="public" virt="non-virtual"><scope>janitor_t</scope><name>~janitor_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
