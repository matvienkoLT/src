<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classvmclass" kind="class" language="C++" prot="public">
    <compoundname>vmclass</compoundname>
    <basecompoundref refid="class_v_m" prot="public" virt="non-virtual">VM</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>type</declname>
        <defname>type</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classvmclass_1af8b9a96bbe083220e6c5be05ddf92e56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>type *</type>
        <definition>type* vmclass&lt; type &gt;::vread</definition>
        <argsstring>(vm_pagenum_t num)</argsstring>
        <name>vread</name>
        <param>
          <type>vm_pagenum_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="236" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classvmclass_1ac9af65428c090acf1666cbdf7733d70a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>type *</type>
        <definition>type* vmclass&lt; type &gt;::valloc</definition>
        <argsstring>(vm_pagenum_t num)</argsstring>
        <name>valloc</name>
        <param>
          <type>vm_pagenum_t</type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="237" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classvmclass_1a20e969f88e204824252b0c30a986b156" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vmclass&lt; type &gt;::vwrite</definition>
        <argsstring>(type *buffer)</argsstring>
        <name>vwrite</name>
        <param>
          <type>type *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="238" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classvmclass_1a15692c45c2d3263569143d932036ea62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vmclass&lt; type &gt;::vfree</definition>
        <argsstring>(type *buffer)</argsstring>
        <name>vfree</name>
        <param>
          <type>type *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="239" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classvmclass_1a5dad61f991aeb584ded2977d91a14eb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vmclass&lt; type &gt;::lock</definition>
        <argsstring>(type *buffer)</argsstring>
        <name>lock</name>
        <param>
          <type>type *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="240" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classvmclass_1ade68f3a08fae0d1a7f745e7d1bb00f3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vmclass&lt; type &gt;::unlock</definition>
        <argsstring>(type *buffer)</argsstring>
        <name>unlock</name>
        <param>
          <type>type *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="241" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classvmclass_1a0644201910512d4bea4e51c9bcf333be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vm_pagenum_t</type>
        <definition>vm_pagenum_t vmclass&lt; type &gt;::pagenum</definition>
        <argsstring>(type *buffer)</argsstring>
        <name>pagenum</name>
        <param>
          <type>type *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="242" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classvmclass_1a3518afd27677b5f07217373764898015" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void vmclass&lt; type &gt;::setpage</definition>
        <argsstring>(type *buffer, vm_pagenum_t n)</argsstring>
        <name>setpage</name>
        <param>
          <type>type *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>vm_pagenum_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="243" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classvmclass_1abf23b0d667857d092dbc6104fcc580b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool vmclass&lt; type &gt;::swap</definition>
        <argsstring>(type *buf1, type *buf2)</argsstring>
        <name>swap</name>
        <param>
          <type>type *</type>
          <declname>buf1</declname>
        </param>
        <param>
          <type>type *</type>
          <declname>buf2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="244" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classvmclass_1ae6cc539c8c55e48882656d44f6a928fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>linput_t *</type>
        <definition>linput_t* vmclass&lt; type &gt;::make_linput</definition>
        <argsstring>(int32 blksize=0)</argsstring>
        <name>make_linput</name>
        <param>
          <type><ref refid="pro_8h_1a56f1a81c92849566ae864511088eb7e8" kindref="member">int32</ref></type>
          <declname>blksize</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="245" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="245" bodyend="245"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3867">
        <label>vmclass&lt; type &gt;</label>
        <link refid="classvmclass"/>
        <childnode refid="3868" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3868">
        <label>VM</label>
        <link refid="class_v_m"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3869">
        <label>vmclass&lt; type &gt;</label>
        <link refid="classvmclass"/>
        <childnode refid="3870" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3870">
        <label>VM</label>
        <link refid="class_v_m"/>
      </node>
    </collaborationgraph>
    <location file="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" line="234" column="1" bodyfile="obj/x64_linux_gcc_32_opt/idasdk/vm.hpp" bodystart="233" bodyend="246"/>
    <listofallmembers>
      <member refid="class_v_m_1afb93f068de5f548c054865b56f3219ef" prot="public" virt="non-virtual"><scope>vmclass</scope><name>check_hash</name></member>
      <member refid="class_v_m_1a4fe913901b8f572d92ac72004bb45a14" prot="public" virt="non-virtual"><scope>vmclass</scope><name>exchange_bytes</name></member>
      <member refid="class_v_m_1a12776a5caae68fe751c1abfaf07d4dd8" prot="public" virt="non-virtual"><scope>vmclass</scope><name>exchange_pages</name></member>
      <member refid="class_v_m_1afd8bf5c839b33bb7bf0dfb67a5ea99da" prot="public" virt="non-virtual"><scope>vmclass</scope><name>file</name></member>
      <member refid="class_v_m_1a3cea07169f129c9aba34924235762615" prot="public" virt="non-virtual"><scope>vmclass</scope><name>fill_bytes</name></member>
      <member refid="class_v_m_1aaf2655b475afbb47ad533e850ba677bc" prot="public" virt="non-virtual"><scope>vmclass</scope><name>inspect_area</name></member>
      <member refid="class_v_m_1a3c759a23ba307930fc2cd8781ef5d20f" prot="public" virt="non-virtual"><scope>vmclass</scope><name>linkTo</name></member>
      <member refid="classvmclass_1a5dad61f991aeb584ded2977d91a14eb0" prot="public" virt="non-virtual"><scope>vmclass</scope><name>lock</name></member>
      <member refid="class_v_m_1a2fc82c5b0cbc5e6a300bdc2b96ec193d" prot="public" virt="non-virtual" ambiguityscope="VM::"><scope>vmclass</scope><name>lock</name></member>
      <member refid="class_v_m_1affb6be07e185a7550a553f47d1fe0313" prot="protected" virt="non-virtual" ambiguityscope="VM::"><scope>vmclass</scope><name>lock</name></member>
      <member refid="classvmclass_1ae6cc539c8c55e48882656d44f6a928fa" prot="public" virt="non-virtual"><scope>vmclass</scope><name>make_linput</name></member>
      <member refid="class_v_m_1a27b6a5dac54b2f7a90bd79262b80daf8" prot="public" virt="non-virtual"><scope>vmclass</scope><name>modify_area</name></member>
      <member refid="class_v_m_1a5c81bb6e8ecb2c77d60b9b6c4d37eebf" prot="public" virt="non-virtual"><scope>vmclass</scope><name>move_bytes</name></member>
      <member refid="class_v_m_1a77d51e5af5b65d463e7f08c87e7b6d4b" prot="public" virt="non-virtual"><scope>vmclass</scope><name>PageFromOff</name></member>
      <member refid="classvmclass_1a0644201910512d4bea4e51c9bcf333be" prot="public" virt="non-virtual"><scope>vmclass</scope><name>pagenum</name></member>
      <member refid="class_v_m_1a6d23f669e8c334587579c7ab822d3498" prot="protected" virt="non-virtual" ambiguityscope="VM::"><scope>vmclass</scope><name>pagenum</name></member>
      <member refid="class_v_m_1a04bd962e0215665fd1819a978aac593d" prot="public" virt="non-virtual"><scope>vmclass</scope><name>PageRem</name></member>
      <member refid="class_v_m_1a46fb3b0a18986a85fbac25df2e7fc22b" prot="public" virt="non-virtual"><scope>vmclass</scope><name>PageSize</name></member>
      <member refid="class_v_m_1a5454ee68e5ca009c5db4c7974070f2d0" prot="public" virt="non-virtual"><scope>vmclass</scope><name>read_bytes</name></member>
      <member refid="classvmclass_1a3518afd27677b5f07217373764898015" prot="public" virt="non-virtual"><scope>vmclass</scope><name>setpage</name></member>
      <member refid="class_v_m_1ad9080027d24f531de21b4b78f72339e6" prot="protected" virt="non-virtual" ambiguityscope="VM::"><scope>vmclass</scope><name>setpage</name></member>
      <member refid="classvmclass_1abf23b0d667857d092dbc6104fcc580b0" prot="public" virt="non-virtual"><scope>vmclass</scope><name>swap</name></member>
      <member refid="class_v_m_1a81c123ba369ac90050de8e6277f9ece4" prot="protected" virt="non-virtual" ambiguityscope="VM::"><scope>vmclass</scope><name>swap</name></member>
      <member refid="classvmclass_1ade68f3a08fae0d1a7f745e7d1bb00f3e" prot="public" virt="non-virtual"><scope>vmclass</scope><name>unlock</name></member>
      <member refid="class_v_m_1a6622ae4291e39819db34c2cb7ca48d8e" prot="public" virt="non-virtual" ambiguityscope="VM::"><scope>vmclass</scope><name>unlock</name></member>
      <member refid="class_v_m_1ad98511d426b9b798e75ae207f3112fb7" prot="protected" virt="non-virtual" ambiguityscope="VM::"><scope>vmclass</scope><name>unlock</name></member>
      <member refid="classvmclass_1ac9af65428c090acf1666cbdf7733d70a" prot="public" virt="non-virtual"><scope>vmclass</scope><name>valloc</name></member>
      <member refid="class_v_m_1a2a7f4932e704c2f38e55fe82c91a2609" prot="public" virt="non-virtual"><scope>vmclass</scope><name>vchsize64</name></member>
      <member refid="class_v_m_1a3638856935316f1368ec2a8e21971aec" prot="public" virt="non-virtual"><scope>vmclass</scope><name>vclose</name></member>
      <member refid="class_v_m_1acf514de00e25f15001eea33a5d69eca1" prot="public" virt="non-virtual"><scope>vmclass</scope><name>vflush</name></member>
      <member refid="classvmclass_1a15692c45c2d3263569143d932036ea62" prot="public" virt="non-virtual"><scope>vmclass</scope><name>vfree</name></member>
      <member refid="class_v_m_1ab1645628349360ce338954bd0ea49cea" prot="protected" virt="non-virtual" ambiguityscope="VM::"><scope>vmclass</scope><name>vfree</name></member>
      <member refid="class_v_m_1a3502d27cf6a670f277221e8e6ac8b869" prot="public" virt="non-virtual"><scope>vmclass</scope><name>VM</name></member>
      <member refid="classvmclass_1af8b9a96bbe083220e6c5be05ddf92e56" prot="public" virt="non-virtual"><scope>vmclass</scope><name>vread</name></member>
      <member refid="class_v_m_1a8b191991b40eb6a0a2fde5f04dc9aca2" prot="public" virt="non-virtual"><scope>vmclass</scope><name>vsize64</name></member>
      <member refid="classvmclass_1a20e969f88e204824252b0c30a986b156" prot="public" virt="non-virtual"><scope>vmclass</scope><name>vwrite</name></member>
      <member refid="class_v_m_1a24b4b350550c563f6445e0320101abc2" prot="protected" virt="non-virtual" ambiguityscope="VM::"><scope>vmclass</scope><name>vwrite</name></member>
      <member refid="class_v_m_1ad972aacd6925382c68f59472f5aa302c" prot="public" virt="non-virtual"><scope>vmclass</scope><name>write_bytes</name></member>
      <member refid="class_v_m_1afd22a970a44757f4b53c8c77a8fa1e71" prot="public" virt="non-virtual"><scope>vmclass</scope><name>~VM</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
